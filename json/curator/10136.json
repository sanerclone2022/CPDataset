[{"authorTime":"2019-02-13 23:52:48","codes":[{"authorDate":"2019-02-13 23:52:48","commitOrder":1,"curCode":"    public void testBasic() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        TestRetryPolicy retryPolicy = new TestRetryPolicy();\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryPolicy, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);  \r\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n\n        synchronized(listener)  \r\n        {\n            listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);   \r\n            listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.LOST);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n        }\n        retryTiming.multiple(2).sleep();\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n\n        retryPolicy.isRetrying = false; \r\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n    }\n","date":"2019-02-13 23:52:48","endLine":113,"groupId":"1172","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/5c/80a9a519521df4325726a074fb55ff2b596b4d.src","preCode":"    public void testBasic() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        TestRetryPolicy retryPolicy = new TestRetryPolicy();\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryPolicy, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);  \r\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n\n        synchronized(listener)  \r\n        {\n            listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);   \r\n            listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.LOST);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n        }\n        retryTiming.multiple(2).sleep();\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n\n        retryPolicy.isRetrying = false; \r\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/state/TestCircuitBreakingConnectionStateListener.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2019-02-13 23:52:48","commitOrder":1,"curCode":"    public void testSuspendedToLostRatcheting() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        RetryPolicy retryInfinite = new RetryForever(Integer.MAX_VALUE);\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryInfinite, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        Assert.assertFalse(listener.isOpen());\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(listener.isOpen());\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n    }\n","date":"2019-02-13 23:52:48","endLine":226,"groupId":"1208","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSuspendedToLostRatcheting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/5c/80a9a519521df4325726a074fb55ff2b596b4d.src","preCode":"    public void testSuspendedToLostRatcheting() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        RetryPolicy retryInfinite = new RetryForever(Integer.MAX_VALUE);\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryInfinite, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        Assert.assertFalse(listener.isOpen());\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(listener.isOpen());\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/state/TestCircuitBreakingConnectionStateListener.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"}],"commitId":"48bd7670af41e1f5d33f77467c9ed54a73a2210e","commitMessage":"@@@Merge branch 'CURATOR-505'\n","date":"2019-02-13 23:52:48","modifiedFileCount":"8","status":"B","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testBasic() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        TestRetryPolicy retryPolicy = new TestRetryPolicy();\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryPolicy, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);  \r\n        assertTrue(recordingListener.stateChanges.isEmpty());\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n\n        synchronized(listener)  \r\n        {\n            listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);   \r\n            listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.LOST);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n        }\n        retryTiming.multiple(2).sleep();\n        assertTrue(recordingListener.stateChanges.isEmpty());\n\n        retryPolicy.isRetrying = false; \r\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n    }\n","date":"2020-10-20 21:18:25","endLine":115,"groupId":"10136","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/61/c8da8ae2b734e9d43be1058c549d7897e64230.src","preCode":"    public void testBasic() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        TestRetryPolicy retryPolicy = new TestRetryPolicy();\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryPolicy, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);  \r\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n\n        synchronized(listener)  \r\n        {\n            listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);   \r\n            listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n            listener.stateChanged(dummyClient, ConnectionState.LOST);   \r\n            listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);   \r\n        }\n        retryTiming.multiple(2).sleep();\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n\n        retryPolicy.isRetrying = false; \r\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/state/TestCircuitBreakingConnectionStateListener.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testSuspendedToLostRatcheting() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        RetryPolicy retryInfinite = new RetryForever(Integer.MAX_VALUE);\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryInfinite, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        assertFalse(listener.isOpen());\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        assertTrue(listener.isOpen());\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        assertTrue(recordingListener.stateChanges.isEmpty());\n        assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n        assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        assertTrue(recordingListener.stateChanges.isEmpty());\n        assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        assertTrue(recordingListener.stateChanges.isEmpty());\n        assertTrue(listener.isOpen());\n    }\n","date":"2020-10-20 21:18:25","endLine":228,"groupId":"10136","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSuspendedToLostRatcheting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/61/c8da8ae2b734e9d43be1058c549d7897e64230.src","preCode":"    public void testSuspendedToLostRatcheting() throws Exception\n    {\n        RecordingListener recordingListener = new RecordingListener();\n        RetryPolicy retryInfinite = new RetryForever(Integer.MAX_VALUE);\n        CircuitBreakingConnectionStateListener listener = new CircuitBreakingConnectionStateListener(dummyClient, recordingListener, retryInfinite, service);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        Assert.assertFalse(listener.isOpen());\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.RECONNECTED);\n\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(listener.isOpen());\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.SUSPENDED);\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertEquals(timing.takeFromQueue(recordingListener.stateChanges), ConnectionState.LOST);\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.RECONNECTED);\n        listener.stateChanged(dummyClient, ConnectionState.READ_ONLY);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        listener.stateChanged(dummyClient, ConnectionState.SUSPENDED);\n        listener.stateChanged(dummyClient, ConnectionState.LOST);\n        Assert.assertTrue(recordingListener.stateChanges.isEmpty());\n        Assert.assertTrue(listener.isOpen());\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/state/TestCircuitBreakingConnectionStateListener.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
