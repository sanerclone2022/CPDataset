[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    private void getInitialQueues() throws Exception\n    {\n        List<String>        children = client.getChildren().forPath(queuePath);\n        for ( String child : children )\n        {\n            String              queuePath = ZKPaths.makePath(this.queuePath, child);\n            addNewQueueIfNeeded(queuePath);\n        }\n\n        if ( children.size() == 0 )\n        {\n            addNewQueueIfNeeded(null);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":219,"groupId":"36","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getInitialQueues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/c4bf39baa68df13d2dc76f222f2838638fbe84.src","preCode":"    private void getInitialQueues() throws Exception\n    {\n        List<String>        children = client.getChildren().forPath(queuePath);\n        for ( String child : children )\n        {\n            String              queuePath = ZKPaths.makePath(this.queuePath, child);\n            addNewQueueIfNeeded(queuePath);\n        }\n\n        if ( children.size() == 0 )\n        {\n            addNewQueueIfNeeded(null);\n        }\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/queue/QueueSharder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    private void checkThreshold()\n    {\n        try\n        {\n            boolean             addAQueue = false;\n            int                 size = 0;\n            List<String>        children = client.getChildren().forPath(queuePath);\n            for ( String child : children )\n            {\n                String  queuePath = ZKPaths.makePath(this.queuePath, child);\n                addNewQueueIfNeeded(queuePath);\n\n                Stat    stat = client.checkExists().forPath(queuePath);\n                if ( stat.getNumChildren() >= policies.getNewQueueThreshold() )\n                {\n                    if ( preferredQueues.contains(queuePath) )  \r\n                    {\n                        size = stat.getNumChildren();\n                        addAQueue = true;\n                        preferredQueues.remove(queuePath);\n                    }\n                }\n                else if ( stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2) )\n                {\n                    preferredQueues.add(queuePath);\n                }\n            }\n\n            if ( addAQueue && leaderLatch.hasLeadership() )\n            {\n                if ( queues.size() < policies.getMaxQueues() )\n                {\n                    log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\", size, policies.getNewQueueThreshold()));\n\n                    addNewQueueIfNeeded(null);\n                }\n                else\n                {\n                    log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\", policies.getMaxQueues()));\n                }\n            }\n        }\n        catch ( Exception e )\n        {\n            log.error(\"Checking queue counts against threshold\", e);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":285,"groupId":"36","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/c4bf39baa68df13d2dc76f222f2838638fbe84.src","preCode":"    private void checkThreshold()\n    {\n        try\n        {\n            boolean             addAQueue = false;\n            int                 size = 0;\n            List<String>        children = client.getChildren().forPath(queuePath);\n            for ( String child : children )\n            {\n                String  queuePath = ZKPaths.makePath(this.queuePath, child);\n                addNewQueueIfNeeded(queuePath);\n\n                Stat    stat = client.checkExists().forPath(queuePath);\n                if ( stat.getNumChildren() >= policies.getNewQueueThreshold() )\n                {\n                    if ( preferredQueues.contains(queuePath) )  \r\n                    {\n                        size = stat.getNumChildren();\n                        addAQueue = true;\n                        preferredQueues.remove(queuePath);\n                    }\n                }\n                else if ( stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2) )\n                {\n                    preferredQueues.add(queuePath);\n                }\n            }\n\n            if ( addAQueue && leaderLatch.hasLeadership() )\n            {\n                if ( queues.size() < policies.getMaxQueues() )\n                {\n                    log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\", size, policies.getNewQueueThreshold()));\n\n                    addNewQueueIfNeeded(null);\n                }\n                else\n                {\n                    log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\", policies.getMaxQueues()));\n                }\n            }\n        }\n        catch ( Exception e )\n        {\n            log.error(\"Checking queue counts against threshold\", e);\n        }\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/queue/QueueSharder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2014-03-31 02:28:51","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":2,"curCode":"    private void getInitialQueues() throws Exception\n    {\n        List<String>        children = client.getChildren().forPath(queuePath);\n        for ( String child : children )\n        {\n            String              queuePath = ZKPaths.makePath(this.queuePath, child);\n            addNewQueueIfNeeded(queuePath);\n        }\n\n        if ( children.size() == 0 )\n        {\n            addNewQueueIfNeeded(null);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":219,"groupId":"36","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getInitialQueues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/c4bf39baa68df13d2dc76f222f2838638fbe84.src","preCode":"    private void getInitialQueues() throws Exception\n    {\n        List<String>        children = client.getChildren().forPath(queuePath);\n        for ( String child : children )\n        {\n            String              queuePath = ZKPaths.makePath(this.queuePath, child);\n            addNewQueueIfNeeded(queuePath);\n        }\n\n        if ( children.size() == 0 )\n        {\n            addNewQueueIfNeeded(null);\n        }\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/queue/QueueSharder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"N"},{"authorDate":"2014-03-31 02:28:51","commitOrder":2,"curCode":"    private void checkThreshold()\n    {\n        try\n        {\n            boolean             addAQueueIfLeader = false;\n            int                 size = 0;\n            List<String>        children = client.getChildren().forPath(queuePath);\n            for ( String child : children )\n            {\n                String  queuePath = ZKPaths.makePath(this.queuePath, child);\n                addNewQueueIfNeeded(queuePath);\n\n                Stat    stat = client.checkExists().forPath(queuePath);\n                if ( stat.getNumChildren() >= policies.getNewQueueThreshold() )\n                {\n                    size = stat.getNumChildren();\n                    addAQueueIfLeader = true;\n                    preferredQueues.remove(queuePath);\n                }\n                else if ( stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2) )\n                {\n                    preferredQueues.add(queuePath);\n                }\n            }\n\n            if ( addAQueueIfLeader && leaderLatch.hasLeadership() )\n            {\n                if ( queues.size() < policies.getMaxQueues() )\n                {\n                    log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\", size, policies.getNewQueueThreshold()));\n\n                    addNewQueueIfNeeded(null);\n                }\n                else\n                {\n                    log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\", policies.getMaxQueues()));\n                }\n            }\n        }\n        catch ( Exception e )\n        {\n            log.error(\"Checking queue counts against threshold\", e);\n        }\n    }\n","date":"2014-03-31 02:28:51","endLine":284,"groupId":"975","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2d/bd484044af3e1af03bbfaa31b302c338fab1e9.src","preCode":"    private void checkThreshold()\n    {\n        try\n        {\n            boolean             addAQueue = false;\n            int                 size = 0;\n            List<String>        children = client.getChildren().forPath(queuePath);\n            for ( String child : children )\n            {\n                String  queuePath = ZKPaths.makePath(this.queuePath, child);\n                addNewQueueIfNeeded(queuePath);\n\n                Stat    stat = client.checkExists().forPath(queuePath);\n                if ( stat.getNumChildren() >= policies.getNewQueueThreshold() )\n                {\n                    if ( preferredQueues.contains(queuePath) )  \r\n                    {\n                        size = stat.getNumChildren();\n                        addAQueue = true;\n                        preferredQueues.remove(queuePath);\n                    }\n                }\n                else if ( stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2) )\n                {\n                    preferredQueues.add(queuePath);\n                }\n            }\n\n            if ( addAQueue && leaderLatch.hasLeadership() )\n            {\n                if ( queues.size() < policies.getMaxQueues() )\n                {\n                    log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\", size, policies.getNewQueueThreshold()));\n\n                    addNewQueueIfNeeded(null);\n                }\n                else\n                {\n                    log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\", policies.getMaxQueues()));\n                }\n            }\n        }\n        catch ( Exception e )\n        {\n            log.error(\"Checking queue counts against threshold\", e);\n        }\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/queue/QueueSharder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"d19aff765cd1b1f611408810b30b00b5bc51e8cf","commitMessage":"@@@Removed 'optimization' to prevent extraneous queue creation. I don't understand what it was supposed to do and it seems unnecessary. It's also the cause of the test failing.\n","date":"2014-03-31 02:28:51","modifiedFileCount":"2","status":"M","submitter":"randgalt"},{"authorTime":"2016-01-18 06:40:52","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":3,"curCode":"    private void getInitialQueues() throws Exception\n    {\n        List<String>        children = client.getChildren().forPath(queuePath);\n        for ( String child : children )\n        {\n            String              queuePath = ZKPaths.makePath(this.queuePath, child);\n            addNewQueueIfNeeded(queuePath);\n        }\n\n        if ( children.size() == 0 )\n        {\n            addNewQueueIfNeeded(null);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":219,"groupId":"10263","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getInitialQueues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/c4bf39baa68df13d2dc76f222f2838638fbe84.src","preCode":"    private void getInitialQueues() throws Exception\n    {\n        List<String>        children = client.getChildren().forPath(queuePath);\n        for ( String child : children )\n        {\n            String              queuePath = ZKPaths.makePath(this.queuePath, child);\n            addNewQueueIfNeeded(queuePath);\n        }\n\n        if ( children.size() == 0 )\n        {\n            addNewQueueIfNeeded(null);\n        }\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/queue/QueueSharder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"N"},{"authorDate":"2016-01-18 06:40:52","commitOrder":3,"curCode":"    private void checkThreshold()\n    {\n        try\n        {\n            boolean             addAQueueIfLeader = false;\n            int                 size = 0;\n            List<String>        children = client.getChildren().forPath(queuePath);\n            for ( String child : children )\n            {\n                String  queuePath = ZKPaths.makePath(this.queuePath, child);\n                addNewQueueIfNeeded(queuePath);\n\n                Stat    stat = client.checkExists().forPath(queuePath);\n                if ( stat.getNumChildren() >= policies.getNewQueueThreshold() )\n                {\n                    size = stat.getNumChildren();\n                    addAQueueIfLeader = true;\n                    preferredQueues.remove(queuePath);\n                }\n                else if ( stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2) )\n                {\n                    preferredQueues.add(queuePath);\n                }\n            }\n\n            if ( addAQueueIfLeader && leaderLatch.hasLeadership() )\n            {\n                if ( queues.size() < policies.getMaxQueues() )\n                {\n                    log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\", size, policies.getNewQueueThreshold()));\n\n                    addNewQueueIfNeeded(null);\n                }\n                else\n                {\n                    log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\", policies.getMaxQueues()));\n                }\n            }\n        }\n        catch ( Exception e )\n        {\n            ThreadUtils.checkInterrupted(e);\n            log.error(\"Checking queue counts against threshold\", e);\n        }\n    }\n","date":"2016-01-18 06:40:52","endLine":288,"groupId":"10263","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"checkThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/3c/d0cdbebcada40ca238c432ff020497bf1a78d4.src","preCode":"    private void checkThreshold()\n    {\n        try\n        {\n            boolean             addAQueueIfLeader = false;\n            int                 size = 0;\n            List<String>        children = client.getChildren().forPath(queuePath);\n            for ( String child : children )\n            {\n                String  queuePath = ZKPaths.makePath(this.queuePath, child);\n                addNewQueueIfNeeded(queuePath);\n\n                Stat    stat = client.checkExists().forPath(queuePath);\n                if ( stat.getNumChildren() >= policies.getNewQueueThreshold() )\n                {\n                    size = stat.getNumChildren();\n                    addAQueueIfLeader = true;\n                    preferredQueues.remove(queuePath);\n                }\n                else if ( stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2) )\n                {\n                    preferredQueues.add(queuePath);\n                }\n            }\n\n            if ( addAQueueIfLeader && leaderLatch.hasLeadership() )\n            {\n                if ( queues.size() < policies.getMaxQueues() )\n                {\n                    log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\", size, policies.getNewQueueThreshold()));\n\n                    addNewQueueIfNeeded(null);\n                }\n                else\n                {\n                    log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\", policies.getMaxQueues()));\n                }\n            }\n        }\n        catch ( Exception e )\n        {\n            log.error(\"Checking queue counts against threshold\", e);\n        }\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/queue/QueueSharder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"9a03ea93937af047e8ad13c2e3e3559520abfb0a","commitMessage":"@@@Merge branch 'master' into CURATOR-3.0\n\nConflicts:\n\tcurator-client/src/main/java/org/apache/curator/RetryLoop.java\n\tcurator-framework/src/main/java/org/apache/curator/framework/imps/FailedDeleteManager.java\n\tcurator-framework/src/main/java/org/apache/curator/framework/imps/OperationAndData.java\n\tcurator-framework/src/main/java/org/apache/curator/framework/state/ConnectionStateManager.java\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2.java\n\tcurator-recipes/src/test/java/org/apache/curator/framework/client/TestResetConnectionWithBackgroundFailure.java\n\tcurator-test/src/main/java/org/apache/curator/test/TestingZooKeeperMain.java\n","date":"2016-01-18 06:40:52","modifiedFileCount":"47","status":"M","submitter":"randgalt"}]
