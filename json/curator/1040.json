[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        int                 serverPort = server.getPort();\n        File                tempDirectory = server.getTempDirectory();\n\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server = new TestingServer(serverPort, tempDirectory);\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":111,"groupId":"775","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRetryLoopWithFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/b50f9633b8e0bc989077478aba151ad52e359a.src","preCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        int                 serverPort = server.getPort();\n        File                tempDirectory = server.getTempDirectory();\n\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server = new TestingServer(serverPort, tempDirectory);\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":147,"groupId":"2069","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRetryLoop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/b50f9633b8e0bc989077478aba151ad52e359a.src","preCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2014-06-18 12:01:35","commitOrder":2,"curCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        int                 serverPort = server.getPort();\n        File                tempDirectory = server.getTempDirectory();\n\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server.restart();\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2014-06-18 12:01:35","endLine":113,"groupId":"1779","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRetryLoopWithFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/0f587fb3c426648bb3274935226f96b710b99d.src","preCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        int                 serverPort = server.getPort();\n        File                tempDirectory = server.getTempDirectory();\n\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server = new TestingServer(serverPort, tempDirectory);\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2013-03-08 06:54:59","commitOrder":2,"curCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":147,"groupId":"2069","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRetryLoop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/b50f9633b8e0bc989077478aba151ad52e359a.src","preCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"}],"commitId":"2337b64fc5a1cfbbcbe462560cb0a8d2fef22c0a","commitMessage":"@@@Merge branch 'CURATOR-114' of github.com:cammckenzie/curator into CURATOR-114\n","date":"2014-06-18 12:01:35","modifiedFileCount":"11","status":"M","submitter":"randgalt"},{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2014-06-18 12:07:43","commitOrder":3,"curCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server.restart();\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2014-06-18 12:07:43","endLine":108,"groupId":"1779","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRetryLoopWithFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/0f/a9020bbff5e2714d713fc46735e165816eaa13.src","preCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        int                 serverPort = server.getPort();\n        File                tempDirectory = server.getTempDirectory();\n\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server.restart();\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2013-03-08 06:54:59","commitOrder":3,"curCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":147,"groupId":"2069","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRetryLoop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/b50f9633b8e0bc989077478aba151ad52e359a.src","preCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"}],"commitId":"95893ad37da229d91973bd428ebf19f17cb8a9d8","commitMessage":"@@@removed some dead code (left over port/dirs)\n","date":"2014-06-18 12:07:43","modifiedFileCount":"6","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":4,"curCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server.restart();\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":117,"groupId":"1040","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testRetryLoopWithFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/04/71a75f3a617a67341118c6f95b293a5cefa3e8.src","preCode":"    public void     testRetryLoopWithFailure() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 5000, 5000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            outer: while ( retryLoop.shouldContinue()  )\n            {\n                ++loopCount;\n                switch ( loopCount )\n                {\n                    case 1:\n                    {\n                        server.stop();\n                        break;\n                    }\n\n                    case 2:\n                    {\n                        server.restart();\n                        break;\n                    }\n\n                    case 3:\n                    case 4:\n                    {\n                        \r\n                        break;\n                    }\n\n                    default:\n                    {\n                        Assert.fail();\n                        break outer;\n                    }\n                }\n\n                try\n                {\n                    client.blockUntilConnectedOrTimedOut();\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount >= 2);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":4,"curCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":153,"groupId":"1040","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testRetryLoop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/04/71a75f3a617a67341118c6f95b293a5cefa3e8.src","preCode":"    public void     testRetryLoop() throws Exception\n    {\n        CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(), 10000, 10000, null, new RetryOneTime(1));\n        client.start();\n        try\n        {\n            int         loopCount = 0;\n            RetryLoop   retryLoop = client.newRetryLoop();\n            while ( retryLoop.shouldContinue()  )\n            {\n                if ( ++loopCount > 2 )\n                {\n                    Assert.fail();\n                    break;\n                }\n\n                try\n                {\n                    client.getZooKeeper().create(\"/test\", new byte[]{1,2,3}, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n                    retryLoop.markComplete();\n                }\n                catch ( Exception e )\n                {\n                    retryLoop.takeException(e);\n                }\n            }\n\n            Assert.assertTrue(loopCount > 0);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-client/src/test/java/org/apache/curator/TestRetryLoop.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
