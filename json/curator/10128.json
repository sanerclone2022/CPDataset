[{"authorTime":"2015-08-18 10:13:37","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":1,"curCode":"    public void testBasicNamespace2() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":85,"groupId":"2035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicNamespace2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/e2/0c45020bfe8d27a37f0e1989bc8742eacae1a0.src","preCode":"    public void testBasicNamespace2() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2015-08-18 10:13:37","commitOrder":1,"curCode":"    public void testBasicNamespace3() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client.usingNamespace(\"lakjsf\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":104,"groupId":"2035","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicNamespace3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/e2/0c45020bfe8d27a37f0e1989bc8742eacae1a0.src","preCode":"    public void testBasicNamespace3() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client.usingNamespace(\"lakjsf\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"d5d12c88b075fd1fc51a29412b3c08918cceb983","commitMessage":"@@@Merge 'CURATOR-217' into CURATOR-3.0\n","date":"2015-08-18 10:13:37","modifiedFileCount":"40","status":"B","submitter":"Scott Blum"},{"authorTime":"2016-05-27 05:59:08","codes":[{"authorDate":"2016-05-27 05:59:08","commitOrder":2,"curCode":"    public void testBasicNamespace2() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-27 05:59:08","endLine":353,"groupId":"10128","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicNamespace2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/9c/405a2d8c356e3c45b1112f8c585049f77fc21f.src","preCode":"    public void testBasicNamespace2() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":337,"status":"M"},{"authorDate":"2016-05-27 05:59:08","commitOrder":2,"curCode":"    public void testBasicNamespace3() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client.usingNamespace(\"lakjsf\"));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-27 05:59:08","endLine":372,"groupId":"10128","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicNamespace3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/9c/405a2d8c356e3c45b1112f8c585049f77fc21f.src","preCode":"    public void testBasicNamespace3() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.builder()\n            .connectString(server.getConnectString())\n            .retryPolicy(new RetryOneTime(1))\n            .namespace(\"hey\")\n            .build();\n        try\n        {\n            client.start();\n            internalTryBasic(client.usingNamespace(\"lakjsf\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"M"}],"commitId":"f59f23c703815317d4ef1d39e2b815e402d1559b","commitMessage":"@@@Reworked WatcherRemovalManager. It now stores watchers only on successful operations. This is more like how ZK does it.\nAlso.  exists watcher must be stored when there is a NoNode result.\n","date":"2016-05-27 05:59:08","modifiedFileCount":"11","status":"M","submitter":"randgalt"}]
