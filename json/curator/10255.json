[{"authorTime":"2016-01-19 07:12:18","codes":[{"authorDate":"2016-01-19 07:12:18","commitOrder":4,"curCode":"    public void testLockACLs() throws Exception\n    {\n        CuratorFramework client = createClient(new TestLockACLsProvider());\n        try\n        {\n            client.create().forPath(\"/foo\");\n            Assert.assertNotNull(client.checkExists().forPath(\"/foo\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/foo\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/foo\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/foo\").get(0).getId().getId());\n\n            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, \"/bar\");\n            InterProcessMutex writeLock = lock.writeLock();\n            writeLock.acquire();\n            Assert.assertNotNull(client.checkExists().forPath(\"/bar\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/bar\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/bar\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/bar\").get(0).getId().getId());\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-01-19 07:12:18","endLine":80,"groupId":"1769","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLockACLs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/0f/a95cf3e36a8bee81beab175557951805f9e01c.src","preCode":"    public void testLockACLs() throws Exception\n    {\n        CuratorFramework client = createClient(new TestLockACLsProvider());\n        try\n        {\n            client.create().forPath(\"/foo\");\n            Assert.assertNotNull(client.checkExists().forPath(\"/foo\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/foo\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/foo\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/foo\").get(0).getId().getId());\n\n            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, \"/bar\");\n            InterProcessMutex writeLock = lock.writeLock();\n            writeLock.acquire();\n            Assert.assertNotNull(client.checkExists().forPath(\"/bar\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/bar\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/bar\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/bar\").get(0).getId().getId());\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"MB"},{"authorDate":"2016-01-19 07:12:18","commitOrder":4,"curCode":"    public void testACLsCreatingParents() throws Exception\n    {\n        CuratorFramework client = createClient(new TestACLsCreatingParentsProvider());\n        try\n        {\n            client.create().creatingParentsIfNeeded().forPath(\"/parent/foo\");\n            Assert.assertEquals(ZooDefs.Perms.CREATE, client.getACL().forPath(\"/parent\").get(0).getPerms());\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/parent/foo\").get(0).getPerms());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2016-01-19 07:12:18","endLine":96,"groupId":"1771","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testACLsCreatingParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/0f/a95cf3e36a8bee81beab175557951805f9e01c.src","preCode":"    public void testACLsCreatingParents() throws Exception\n    {\n        CuratorFramework client = createClient(new TestACLsCreatingParentsProvider());\n        try\n        {\n            client.create().creatingParentsIfNeeded().forPath(\"/parent/foo\");\n            Assert.assertEquals(ZooDefs.Perms.CREATE, client.getACL().forPath(\"/parent\").get(0).getPerms());\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/parent/foo\").get(0).getPerms());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"d26c38dbaf545505b70ab3e841f2b962cc409b45","commitMessage":"@@@Merge branch 'CURATOR-3.0' into CURATOR-290\n","date":"2016-01-19 07:12:18","modifiedFileCount":"2","status":"M","submitter":"randgalt"},{"authorTime":"2019-09-29 19:18:06","codes":[{"authorDate":"2016-01-19 07:12:18","commitOrder":5,"curCode":"    public void testLockACLs() throws Exception\n    {\n        CuratorFramework client = createClient(new TestLockACLsProvider());\n        try\n        {\n            client.create().forPath(\"/foo\");\n            Assert.assertNotNull(client.checkExists().forPath(\"/foo\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/foo\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/foo\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/foo\").get(0).getId().getId());\n\n            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, \"/bar\");\n            InterProcessMutex writeLock = lock.writeLock();\n            writeLock.acquire();\n            Assert.assertNotNull(client.checkExists().forPath(\"/bar\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/bar\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/bar\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/bar\").get(0).getId().getId());\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-01-19 07:12:18","endLine":80,"groupId":"1769","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLockACLs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/0f/a95cf3e36a8bee81beab175557951805f9e01c.src","preCode":"    public void testLockACLs() throws Exception\n    {\n        CuratorFramework client = createClient(new TestLockACLsProvider());\n        try\n        {\n            client.create().forPath(\"/foo\");\n            Assert.assertNotNull(client.checkExists().forPath(\"/foo\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/foo\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/foo\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/foo\").get(0).getId().getId());\n\n            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, \"/bar\");\n            InterProcessMutex writeLock = lock.writeLock();\n            writeLock.acquire();\n            Assert.assertNotNull(client.checkExists().forPath(\"/bar\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/bar\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/bar\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/bar\").get(0).getId().getId());\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"},{"authorDate":"2019-09-29 19:18:06","commitOrder":5,"curCode":"    public void testACLsCreatingParents() throws Exception\n    {\n        CuratorFramework client = createClient(new TestACLsCreatingParentsProvider());\n        try\n        {\n            client.create().creatingParentsIfNeeded().forPath(\"/parent/foo\");\n            Assert.assertEquals(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, client.getACL().forPath(\"/parent\").get(0).getPerms());\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/parent/foo\").get(0).getPerms());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2019-09-29 19:18:06","endLine":96,"groupId":"1771","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testACLsCreatingParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/36/76d6f19108b58c9781a577af5c063de9d7b7e0.src","preCode":"    public void testACLsCreatingParents() throws Exception\n    {\n        CuratorFramework client = createClient(new TestACLsCreatingParentsProvider());\n        try\n        {\n            client.create().creatingParentsIfNeeded().forPath(\"/parent/foo\");\n            Assert.assertEquals(ZooDefs.Perms.CREATE, client.getACL().forPath(\"/parent\").get(0).getPerms());\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/parent/foo\").get(0).getPerms());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"f17e3e6af1d0a27f462e220b65e24b936e323002","commitMessage":"@@@Merge pull request #327 from apache/CURATOR-543-fix-testLockACLs-due-to-ZOOKEEPER-1392\n\nCURATOR-543 - ZOOKEEPER-1392 broke TestLockACLs","date":"2019-09-29 19:18:06","modifiedFileCount":"1","status":"M","submitter":"Shay Shimony"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testLockACLs() throws Exception\n    {\n        CuratorFramework client = createClient(new TestLockACLsProvider());\n        try\n        {\n            client.create().forPath(\"/foo\");\n            assertNotNull(client.checkExists().forPath(\"/foo\"));\n            assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/foo\").get(0).getPerms());\n            assertEquals(\"ip\", client.getACL().forPath(\"/foo\").get(0).getId().getScheme());\n            assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/foo\").get(0).getId().getId());\n\n            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, \"/bar\");\n            InterProcessMutex writeLock = lock.writeLock();\n            writeLock.acquire();\n            assertNotNull(client.checkExists().forPath(\"/bar\"));\n            assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/bar\").get(0).getPerms());\n            assertEquals(\"ip\", client.getACL().forPath(\"/bar\").get(0).getId().getScheme());\n            assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/bar\").get(0).getId().getId());\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":83,"groupId":"10255","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testLockACLs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f1/10a97d65ec77777c7b80b3e700dfa6895150a6.src","preCode":"    public void testLockACLs() throws Exception\n    {\n        CuratorFramework client = createClient(new TestLockACLsProvider());\n        try\n        {\n            client.create().forPath(\"/foo\");\n            Assert.assertNotNull(client.checkExists().forPath(\"/foo\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/foo\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/foo\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/foo\").get(0).getId().getId());\n\n            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, \"/bar\");\n            InterProcessMutex writeLock = lock.writeLock();\n            writeLock.acquire();\n            Assert.assertNotNull(client.checkExists().forPath(\"/bar\"));\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/bar\").get(0).getPerms());\n            Assert.assertEquals(\"ip\", client.getACL().forPath(\"/bar\").get(0).getId().getScheme());\n            Assert.assertEquals(\"127.0.0.1\", client.getACL().forPath(\"/bar\").get(0).getId().getId());\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testACLsCreatingParents() throws Exception\n    {\n        CuratorFramework client = createClient(new TestACLsCreatingParentsProvider());\n        try\n        {\n            client.create().creatingParentsIfNeeded().forPath(\"/parent/foo\");\n            assertEquals(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, client.getACL().forPath(\"/parent\").get(0).getPerms());\n            assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/parent/foo\").get(0).getPerms());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":99,"groupId":"10255","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testACLsCreatingParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f1/10a97d65ec77777c7b80b3e700dfa6895150a6.src","preCode":"    public void testACLsCreatingParents() throws Exception\n    {\n        CuratorFramework client = createClient(new TestACLsCreatingParentsProvider());\n        try\n        {\n            client.create().creatingParentsIfNeeded().forPath(\"/parent/foo\");\n            Assert.assertEquals(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, client.getACL().forPath(\"/parent\").get(0).getPerms());\n            Assert.assertEquals(ZooDefs.Perms.ALL, client.getACL().forPath(\"/parent/foo\").get(0).getPerms());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
