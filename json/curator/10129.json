[{"authorTime":"2015-08-18 10:13:37","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":1,"curCode":"    public void testTriggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(new Timing().awaitLatch(latch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":171,"groupId":"438","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTriggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/e2/0c45020bfe8d27a37f0e1989bc8742eacae1a0.src","preCode":"    public void testTriggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(new Timing().awaitLatch(latch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"},{"authorDate":"2015-08-18 10:13:37","commitOrder":1,"curCode":"    public void testResetFromWatcher() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch createdLatch = new CountDownLatch(1);\n            final CountDownLatch deletedLatch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        try\n                        {\n                            removerClient.checkExists().usingWatcher(this).forPath(\"/yo\");\n                        }\n                        catch ( Exception e )\n                        {\n                            e.printStackTrace();\n                        }\n                        createdLatch.countDown();\n                    }\n                    else if ( event.getType() == Event.EventType.NodeDeleted )\n                    {\n                        deletedLatch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(createdLatch));\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n\n            removerClient.delete().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(deletedLatch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":227,"groupId":"1566","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testResetFromWatcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/e2/0c45020bfe8d27a37f0e1989bc8742eacae1a0.src","preCode":"    public void testResetFromWatcher() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch createdLatch = new CountDownLatch(1);\n            final CountDownLatch deletedLatch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        try\n                        {\n                            removerClient.checkExists().usingWatcher(this).forPath(\"/yo\");\n                        }\n                        catch ( Exception e )\n                        {\n                            e.printStackTrace();\n                        }\n                        createdLatch.countDown();\n                    }\n                    else if ( event.getType() == Event.EventType.NodeDeleted )\n                    {\n                        deletedLatch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(createdLatch));\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n\n            removerClient.delete().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(deletedLatch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"}],"commitId":"d5d12c88b075fd1fc51a29412b3c08918cceb983","commitMessage":"@@@Merge 'CURATOR-217' into CURATOR-3.0\n","date":"2015-08-18 10:13:37","modifiedFileCount":"40","status":"B","submitter":"Scott Blum"},{"authorTime":"2016-05-27 05:59:08","codes":[{"authorDate":"2016-05-27 05:59:08","commitOrder":2,"curCode":"    public void testTriggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(new Timing().awaitLatch(latch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-27 05:59:08","endLine":441,"groupId":"438","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTriggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/9c/405a2d8c356e3c45b1112f8c585049f77fc21f.src","preCode":"    public void testTriggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(new Timing().awaitLatch(latch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":407,"status":"M"},{"authorDate":"2016-05-27 05:59:08","commitOrder":2,"curCode":"    public void testResetFromWatcher() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch createdLatch = new CountDownLatch(1);\n            final CountDownLatch deletedLatch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        try\n                        {\n                            removerClient.checkExists().usingWatcher(this).forPath(\"/yo\");\n                        }\n                        catch ( Exception e )\n                        {\n                            e.printStackTrace();\n                        }\n                        createdLatch.countDown();\n                    }\n                    else if ( event.getType() == Event.EventType.NodeDeleted )\n                    {\n                        deletedLatch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(createdLatch));\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n\n            removerClient.delete().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(deletedLatch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-27 05:59:08","endLine":497,"groupId":"1566","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testResetFromWatcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/9c/405a2d8c356e3c45b1112f8c585049f77fc21f.src","preCode":"    public void testResetFromWatcher() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch createdLatch = new CountDownLatch(1);\n            final CountDownLatch deletedLatch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        try\n                        {\n                            removerClient.checkExists().usingWatcher(this).forPath(\"/yo\");\n                        }\n                        catch ( Exception e )\n                        {\n                            e.printStackTrace();\n                        }\n                        createdLatch.countDown();\n                    }\n                    else if ( event.getType() == Event.EventType.NodeDeleted )\n                    {\n                        deletedLatch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(createdLatch));\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n\n            removerClient.delete().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(deletedLatch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"}],"commitId":"f59f23c703815317d4ef1d39e2b815e402d1559b","commitMessage":"@@@Reworked WatcherRemovalManager. It now stores watchers only on successful operations. This is more like how ZK does it.\nAlso.  exists watcher must be stored when there is a NoNode result.\n","date":"2016-05-27 05:59:08","modifiedFileCount":"11","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":3,"curCode":"    public void testTriggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            assertTrue(new Timing().awaitLatch(latch));\n\n            assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":445,"groupId":"10129","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testTriggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c6/ac16cd8b041f8abeb77a26790d5b950a3d8de4.src","preCode":"    public void testTriggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(new Timing().awaitLatch(latch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":3,"curCode":"    public void testResetFromWatcher() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch createdLatch = new CountDownLatch(1);\n            final CountDownLatch deletedLatch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        try\n                        {\n                            removerClient.checkExists().usingWatcher(this).forPath(\"/yo\");\n                        }\n                        catch ( Exception e )\n                        {\n                            e.printStackTrace();\n                        }\n                        createdLatch.countDown();\n                    }\n                    else if ( event.getType() == Event.EventType.NodeDeleted )\n                    {\n                        deletedLatch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            assertTrue(timing.awaitLatch(createdLatch));\n            assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n\n            removerClient.delete().forPath(\"/yo\");\n\n            assertTrue(timing.awaitLatch(deletedLatch));\n\n            assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":501,"groupId":"10129","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testResetFromWatcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c6/ac16cd8b041f8abeb77a26790d5b950a3d8de4.src","preCode":"    public void testResetFromWatcher() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n\n            final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n\n            final CountDownLatch createdLatch = new CountDownLatch(1);\n            final CountDownLatch deletedLatch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    if ( event.getType() == Event.EventType.NodeCreated )\n                    {\n                        try\n                        {\n                            removerClient.checkExists().usingWatcher(this).forPath(\"/yo\");\n                        }\n                        catch ( Exception e )\n                        {\n                            e.printStackTrace();\n                        }\n                        createdLatch.countDown();\n                    }\n                    else if ( event.getType() == Event.EventType.NodeDeleted )\n                    {\n                        deletedLatch.countDown();\n                    }\n                }\n            };\n\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\");\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n            removerClient.create().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(createdLatch));\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 1);\n\n            removerClient.delete().forPath(\"/yo\");\n\n            Assert.assertTrue(timing.awaitLatch(deletedLatch));\n\n            Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(), 0);\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":448,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
