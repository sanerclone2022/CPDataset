[{"authorTime":"2018-05-21 22:06:21","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":5,"curCode":"    public void testSimple() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            InterProcessSemaphoreV2 semaphore = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            Assert.assertNotNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n            Assert.assertNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":471,"groupId":"1063","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/3b/a75d8fab9a06839205e5c85b97d85c16220d26.src","preCode":"    public void testSimple() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            InterProcessSemaphoreV2 semaphore = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            Assert.assertNotNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n            Assert.assertNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"NB"},{"authorDate":"2018-05-21 22:06:21","commitOrder":5,"curCode":"    public void testInterruptAcquire() throws Exception\n    {\n        \r\n        final Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            final InterProcessSemaphoreV2 s1 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s2 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s3 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            \n            final CountDownLatch debugWaitLatch = s2.debugWaitLatch = new CountDownLatch(1);\n            \n            \r\n            Lease lease = s1.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertNotNull(lease);\n            \n            \r\n            Future<Object> handle = Executors.newSingleThreadExecutor().submit(new Callable<Object>() {\n                \n                @Override\n                public Object call() throws Exception {\n                    s2.acquire();\n                    return null;\n                }\n            });\n\n            \r\n            Assert.assertTrue(timing.awaitLatch(debugWaitLatch));\n            \n            \r\n            handle.cancel(true);\n            \n            \r\n            timing.sleepABit();\n            Assert.assertEquals(client.getChildren().forPath(\"/test/leases\").size(), 1);\n            \n            \r\n            s1.returnLease(lease);\n            Assert.assertNotNull(s3.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2018-05-21 22:06:21","endLine":829,"groupId":"551","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInterruptAcquire","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/50/f6bce838e8a8d4c6b248c3c3b08534ca154467.src","preCode":"    public void testInterruptAcquire() throws Exception\n    {\n        \r\n        final Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            final InterProcessSemaphoreV2 s1 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s2 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s3 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            \n            final CountDownLatch debugWaitLatch = s2.debugWaitLatch = new CountDownLatch(1);\n            \n            \r\n            Lease lease = s1.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertNotNull(lease);\n            \n            \r\n            Future<Object> handle = Executors.newSingleThreadExecutor().submit(new Callable<Object>() {\n                \n                @Override\n                public Object call() throws Exception {\n                    s2.acquire();\n                    return null;\n                }\n            });\n\n            \r\n            Assert.assertTrue(timing.awaitLatch(debugWaitLatch));\n            \n            \r\n            handle.cancel(true);\n            \n            \r\n            timing.sleepABit();\n            Assert.assertEquals(client.getChildren().forPath(\"/test/leases\").size(), 1);\n            \n            \r\n            s1.returnLease(lease);\n            Assert.assertNotNull(s3.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":783,"status":"B"}],"commitId":"9383aa3e91b1e01743ec2cff20f5fd68a66b83c1","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/curator\n","date":"2018-05-21 22:06:21","modifiedFileCount":"3","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testSimple() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            InterProcessSemaphoreV2 semaphore = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            assertNotNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n            assertNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":603,"groupId":"10247","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ed/d649b0209dbc2aedd625c4fe3b10fbe00d5a2a.src","preCode":"    public void testSimple() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            InterProcessSemaphoreV2 semaphore = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            Assert.assertNotNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n            Assert.assertNull(semaphore.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":588,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testInterruptAcquire() throws Exception\n    {\n        \r\n        final Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            final InterProcessSemaphoreV2 s1 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s2 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s3 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            \n            final CountDownLatch debugWaitLatch = s2.debugWaitLatch = new CountDownLatch(1);\n            \n            \r\n            Lease lease = s1.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertNotNull(lease);\n            \n            \r\n            Future<Object> handle = Executors.newSingleThreadExecutor().submit(new Callable<Object>() {\n                \n                @Override\n                public Object call() throws Exception {\n                    s2.acquire();\n                    return null;\n                }\n            });\n\n            \r\n            assertTrue(timing.awaitLatch(debugWaitLatch));\n            \n            \r\n            handle.cancel(true);\n            \n            \r\n            timing.sleepABit();\n            assertEquals(client.getChildren().forPath(\"/test/leases\").size(), 1);\n            \n            \r\n            s1.returnLease(lease);\n            assertNotNull(s3.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":786,"groupId":"10247","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testInterruptAcquire","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ed/d649b0209dbc2aedd625c4fe3b10fbe00d5a2a.src","preCode":"    public void testInterruptAcquire() throws Exception\n    {\n        \r\n        final Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            final InterProcessSemaphoreV2 s1 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s2 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            final InterProcessSemaphoreV2 s3 = new InterProcessSemaphoreV2(client, \"/test\", 1);\n            \n            final CountDownLatch debugWaitLatch = s2.debugWaitLatch = new CountDownLatch(1);\n            \n            \r\n            Lease lease = s1.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertNotNull(lease);\n            \n            \r\n            Future<Object> handle = Executors.newSingleThreadExecutor().submit(new Callable<Object>() {\n                \n                @Override\n                public Object call() throws Exception {\n                    s2.acquire();\n                    return null;\n                }\n            });\n\n            \r\n            Assert.assertTrue(timing.awaitLatch(debugWaitLatch));\n            \n            \r\n            handle.cancel(true);\n            \n            \r\n            timing.sleepABit();\n            Assert.assertEquals(client.getChildren().forPath(\"/test/leases\").size(), 1);\n            \n            \r\n            s1.returnLease(lease);\n            Assert.assertNotNull(s3.acquire(timing.forWaiting().seconds(), TimeUnit.SECONDS));\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":740,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
