[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2013-03-08 06:54:59","endLine":265,"groupId":"922","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/52/747e3d1fffa0a4b497c5952c2730cf83cfa119.src","preCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetDataBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2013-03-08 06:54:59","endLine":165,"groupId":"922","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/48/45d91af4d8b93524da4cdb1504081c5408188d.src","preCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2016-05-20 03:02:00","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":2,"curCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2013-03-08 06:54:59","endLine":265,"groupId":"922","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/52/747e3d1fffa0a4b497c5952c2730cf83cfa119.src","preCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetDataBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"N"},{"authorDate":"2016-05-20 03:02:00","commitOrder":2,"curCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2016-05-20 03:02:00","endLine":182,"groupId":"922","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalList<ACL>aclList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/adfe221c2f7b3c9c180c46df18db5b82d1fcab.src","preCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"63a0d4550ebfaa2e29ddf719f8bfe9696cffc5ae","commitMessage":"@@@Merge branch 'CURATOR-322' into CURATOR-3.0\n","date":"2016-05-20 03:02:00","modifiedFileCount":"18","status":"M","submitter":"randgalt"},{"authorTime":"2016-10-28 23:05:52","codes":[{"authorDate":"2016-10-28 23:05:52","commitOrder":3,"curCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.setRequestBytesLength(data).setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","date":"2016-10-28 23:05:52","endLine":289,"groupId":"922","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/32/31be54b029946290f6fbd04f2b7dacdc327f2d.src","preCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetDataBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2016-10-28 23:05:52","commitOrder":3,"curCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","date":"2016-10-28 23:05:52","endLine":182,"groupId":"922","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalList<ACL>aclList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/73/8e82ff8b6166c2978a25ea0c6d5c7ea0f918fb.src","preCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"786d69587d183250b4108a9e18898ad4b2e94659","commitMessage":"@@@Merge branch 'CURATOR-3.0' into CURATOR-351\n","date":"2016-10-28 23:05:52","modifiedFileCount":"22","status":"M","submitter":"randgalt"},{"authorTime":"2016-10-28 23:05:52","codes":[{"authorDate":"2020-12-15 08:26:12","commitOrder":4,"curCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    if ( failBeforeNextSetForTesting )\n                    {\n                        failBeforeNextSetForTesting = false;\n                        throw new KeeperException.ConnectionLossException();\n                    }\n\n                    Stat localResultStat = null;\n                    try\n                    {\n                        localResultStat = client.getZooKeeper().setData(path, data, version);\n                    }\n                    catch ( KeeperException.BadVersionException e )\n                    {\n                        if ( !idempotent )\n                        {\n                            throw e;\n                        }\n\n                        Stat getStat = new Stat();\n\n                        \r\n                        if ( failNextIdempotentCheckForTesting )\n                        {\n                            failNextIdempotentCheckForTesting = false;\n                            throw new KeeperException.ConnectionLossException();\n                        }\n\n                        byte[] existingData = client.getZooKeeper().getData(path, false, getStat);\n                        if ( idempotentSetMatches(getStat.getVersion(), data, existingData) )\n                        {\n                            localResultStat = getStat;\n                        }\n                        else\n                        {\n                            throw e;\n                        }\n                    }\n\n                    if ( failNextSetForTesting )\n                    {\n                        failNextSetForTesting = false;\n                        throw new KeeperException.ConnectionLossException();\n                    }\n                    return localResultStat;\n                }\n            }\n        );\n        trace.setRequestBytesLength(data).setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","date":"2021-02-18 23:20:15","endLine":438,"groupId":"10146","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"pathInForeground","params":"(finalStringpath@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ef/87f6ec4daa214b72dab4e99df0b30c049db9f1.src","preCode":"    private Stat pathInForeground(final String path, final byte[] data) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetDataBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setData(path, data, version);\n                }\n            }\n        );\n        trace.setRequestBytesLength(data).setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetDataBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"},{"authorDate":"2016-10-28 23:05:52","commitOrder":4,"curCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","date":"2016-10-28 23:05:52","endLine":182,"groupId":"10146","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalList<ACL>aclList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/73/8e82ff8b6166c2978a25ea0c6d5c7ea0f918fb.src","preCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"}],"commitId":"d5666ab9ca22f45b905d6ffbf2b33fa30b38e15e","commitMessage":"@@@CURATOR-584: Added fault tolerant idempotent Create.  SetData and Delete operations\n","date":"2021-02-18 23:20:15","modifiedFileCount":"10","status":"M","submitter":"Josh Slocum"}]
