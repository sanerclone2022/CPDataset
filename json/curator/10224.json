[{"authorTime":"2016-12-09 23:07:11","codes":[{"authorDate":"2016-12-09 23:07:11","commitOrder":2,"curCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 100, new byte[0]))\n            {\n                node.start();\n                node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS);\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(110);  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","date":"2016-12-09 23:07:11","endLine":64,"groupId":"1249","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/e5/221039eabb2876c3f5ad96d91c3b484ebeb593.src","preCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 100, new byte[0]))\n            {\n                node.start();\n                node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS);\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(110);  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"MB"},{"authorDate":"2016-12-09 23:07:11","commitOrder":2,"curCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 10, new byte[0]))\n            {\n                node.start();\n                node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS);\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(10);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","date":"2016-12-09 23:07:11","endLine":88,"groupId":"772","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testForcedDeleteOfTouchNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/e5/221039eabb2876c3f5ad96d91c3b484ebeb593.src","preCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 10, new byte[0]))\n            {\n                node.start();\n                node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS);\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(10);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"a9cbdd31d44872d5fb0831f1b883431abe4e6994","commitMessage":"@@@more testing\n","date":"2016-12-09 23:07:11","modifiedFileCount":"1","status":"M","submitter":"randgalt"},{"authorTime":"2017-04-18 09:26:59","codes":[{"authorDate":"2017-04-18 09:26:59","commitOrder":3,"curCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 100, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(110);  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","date":"2017-04-18 09:26:59","endLine":82,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/f5cc005d0439836b21e12ae481418ace176939.src","preCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 100, new byte[0]))\n            {\n                node.start();\n                node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS);\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(110);  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2017-04-18 09:26:59","commitOrder":3,"curCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 10, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(10);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","date":"2017-04-18 09:26:59","endLine":106,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testForcedDeleteOfTouchNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/f5cc005d0439836b21e12ae481418ace176939.src","preCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 10, new byte[0]))\n            {\n                node.start();\n                node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS);\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(10);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"b84d351a5f3c44ab5450c690b462388cb0a90697","commitMessage":"@@@assertTrue for node.waitForInitialCreate\n","date":"2017-04-18 09:26:59","modifiedFileCount":"1","status":"M","submitter":"randgalt"},{"authorTime":"2017-07-11 03:40:20","codes":[{"authorDate":"2017-07-11 03:40:20","commitOrder":4,"curCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", ttlMs, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 5; ++i )\n                {\n                    Thread.sleep(ttlMs + (ttlMs / 2));  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","date":"2017-07-11 03:40:20","endLine":83,"groupId":"842","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/57/3a867c3e0c418ad32cacb87a886b56796b983b.src","preCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 100, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(110);  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-07-11 03:40:20","commitOrder":4,"curCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", ttlMs, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 5; ++i )\n                {\n                    Thread.sleep(ttlMs);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","date":"2017-07-11 03:40:20","endLine":107,"groupId":"843","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testForcedDeleteOfTouchNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/57/3a867c3e0c418ad32cacb87a886b56796b983b.src","preCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", 10, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 10; ++i )\n                {\n                    Thread.sleep(10);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"4ad1fb8e5867648e311200edbba773b203c546ad","commitMessage":"@@@Must use timing for ttls so that Jenkins can have appropriate values\n","date":"2017-07-11 03:40:20","modifiedFileCount":"1","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", ttlMs, new byte[0]))\n            {\n                node.start();\n                assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 5; ++i )\n                {\n                    Thread.sleep(ttlMs + (ttlMs / 2));  \r\n                    assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":94,"groupId":"10224","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/04/0bb055a2a7a903e96658b96022f36a17a4e93a.src","preCode":"    public void testBasic() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", ttlMs, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 5; ++i )\n                {\n                    Thread.sleep(ttlMs + (ttlMs / 2));  \r\n                    Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n                }\n            }\n            Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test\"));\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", ttlMs, new byte[0]))\n            {\n                node.start();\n                assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 5; ++i )\n                {\n                    Thread.sleep(ttlMs);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":118,"groupId":"10224","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testForcedDeleteOfTouchNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/04/0bb055a2a7a903e96658b96022f36a17a4e93a.src","preCode":"    public void testForcedDeleteOfTouchNode() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (PersistentTtlNode node = new PersistentTtlNode(client, \"/test\", ttlMs, new byte[0]))\n            {\n                node.start();\n                Assert.assertTrue(node.waitForInitialCreate(timing.session(), TimeUnit.MILLISECONDS));\n\n                for ( int i = 0; i < 5; ++i )\n                {\n                    Thread.sleep(ttlMs);\n                    client.delete().quietly().forPath(ZKPaths.makePath(\"test\", PersistentTtlNode.DEFAULT_CHILD_NODE_NAME));\n                }\n\n                timing.sleepABit();\n                Assert.assertNotNull(client.checkExists().forPath(\"/test\"));\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
