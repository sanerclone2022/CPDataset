[{"authorTime":"2016-05-27 05:59:08","codes":[{"authorDate":"2016-05-27 05:59:08","commitOrder":1,"curCode":"    public void testSameWatcherDifferentPaths1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/d/e/f\");\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/d/e/f\");\n\n            Timing timing = new Timing();\n            Assert.assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-27 05:59:08","endLine":72,"groupId":"422","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSameWatcherDifferentPaths1Triggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/9c/405a2d8c356e3c45b1112f8c585049f77fc21f.src","preCode":"    public void testSameWatcherDifferentPaths1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/d/e/f\");\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/d/e/f\");\n\n            Timing timing = new Timing();\n            Assert.assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2016-05-27 05:59:08","commitOrder":1,"curCode":"    public void testSameWatcherDifferentKinds1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.getData().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.setData().forPath(\"/a/b/c\", \"new\".getBytes());\n\n            Timing timing = new Timing();\n            Assert.assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-27 05:59:08","endLine":134,"groupId":"425","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSameWatcherDifferentKinds1Triggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/9c/405a2d8c356e3c45b1112f8c585049f77fc21f.src","preCode":"    public void testSameWatcherDifferentKinds1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.getData().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.setData().forPath(\"/a/b/c\", \"new\".getBytes());\n\n            Timing timing = new Timing();\n            Assert.assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"f59f23c703815317d4ef1d39e2b815e402d1559b","commitMessage":"@@@Reworked WatcherRemovalManager. It now stores watchers only on successful operations. This is more like how ZK does it.\nAlso.  exists watcher must be stored when there is a NoNode result.\n","date":"2016-05-27 05:59:08","modifiedFileCount":"11","status":"B","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testSameWatcherDifferentPaths1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/d/e/f\");\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/d/e/f\");\n\n            Timing timing = new Timing();\n            assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":76,"groupId":"10124","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSameWatcherDifferentPaths1Triggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c6/ac16cd8b041f8abeb77a26790d5b950a3d8de4.src","preCode":"    public void testSameWatcherDifferentPaths1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/d/e/f\");\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/d/e/f\");\n\n            Timing timing = new Timing();\n            Assert.assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testSameWatcherDifferentKinds1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.getData().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.setData().forPath(\"/a/b/c\", \"new\".getBytes());\n\n            Timing timing = new Timing();\n            assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":138,"groupId":"10124","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSameWatcherDifferentKinds1Triggered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c6/ac16cd8b041f8abeb77a26790d5b950a3d8de4.src","preCode":"    public void testSameWatcherDifferentKinds1Triggered() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework();\n            final CountDownLatch latch = new CountDownLatch(1);\n            Watcher watcher = new Watcher()\n            {\n                @Override\n                public void process(WatchedEvent event)\n                {\n                    latch.countDown();\n                }\n            };\n\n            removerClient.create().creatingParentsIfNeeded().forPath(\"/a/b/c\");\n            removerClient.checkExists().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.getData().usingWatcher(watcher).forPath(\"/a/b/c\");\n            removerClient.setData().forPath(\"/a/b/c\", \"new\".getBytes());\n\n            Timing timing = new Timing();\n            Assert.assertTrue(timing.awaitLatch(latch));\n            timing.sleepABit();\n\n            removerClient.removeWatchers();\n        }\n        finally\n        {\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
