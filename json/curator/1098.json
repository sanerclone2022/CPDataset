[{"authorTime":"2014-06-18 07:02:55","codes":[{"authorDate":"2014-06-18 07:02:55","commitOrder":1,"curCode":"    public void testBlockUntilConnectedConnectTimeout()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n            Assert.assertFalse(client.blockUntilConnected(5, TimeUnit.SECONDS), \"Connected\");\n        }\n        catch ( InterruptedException e )\n        {\n            Assert.fail(\"Unexpected interruption\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-06-18 07:02:55","endLine":189,"groupId":"642","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBlockUntilConnectedConnectTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f6/49afb0cf4fb59a6061e04d7e2f60715149c16b.src","preCode":"    public void testBlockUntilConnectedConnectTimeout()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n            Assert.assertFalse(client.blockUntilConnected(5, TimeUnit.SECONDS), \"Connected\");\n        }\n        catch ( InterruptedException e )\n        {\n            Assert.fail(\"Unexpected interruption\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestBlockUntilConnected.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"},{"authorDate":"2014-06-18 07:02:55","commitOrder":1,"curCode":"    public void testBlockUntilConnectedInterrupt()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        final CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n\n            final Thread threadToInterrupt = Thread.currentThread();\n\n            Timer timer = new Timer();\n            timer.schedule(new TimerTask()\n            {\n\n                @Override\n                public void run()\n                {\n                    threadToInterrupt.interrupt();\n                }\n            }, 3000);\n\n            client.blockUntilConnected(5, TimeUnit.SECONDS);\n            Assert.fail(\"Expected interruption did not occur\");\n        }\n        catch ( InterruptedException e )\n        {\n            \r\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-06-18 07:02:55","endLine":234,"groupId":"1362","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBlockUntilConnectedInterrupt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f6/49afb0cf4fb59a6061e04d7e2f60715149c16b.src","preCode":"    public void testBlockUntilConnectedInterrupt()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        final CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n\n            final Thread threadToInterrupt = Thread.currentThread();\n\n            Timer timer = new Timer();\n            timer.schedule(new TimerTask()\n            {\n\n                @Override\n                public void run()\n                {\n                    threadToInterrupt.interrupt();\n                }\n            }, 3000);\n\n            client.blockUntilConnected(5, TimeUnit.SECONDS);\n            Assert.fail(\"Expected interruption did not occur\");\n        }\n        catch ( InterruptedException e )\n        {\n            \r\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestBlockUntilConnected.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"}],"commitId":"5d7d0c7f1430dde06cef8800bca3f035dd707c0d","commitMessage":"@@@Merge branch 'CURATOR-110'\n","date":"2014-06-18 07:02:55","modifiedFileCount":"7","status":"B","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testBlockUntilConnectedConnectTimeout()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n            assertFalse(client.blockUntilConnected(5, TimeUnit.SECONDS), \"Connected\");\n        }\n        catch ( InterruptedException e )\n        {\n            fail(\"Unexpected interruption\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":194,"groupId":"1098","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBlockUntilConnectedConnectTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7c/5091bf683b59c89cdf3fa7727d80019369eaf5.src","preCode":"    public void testBlockUntilConnectedConnectTimeout()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n            Assert.assertFalse(client.blockUntilConnected(5, TimeUnit.SECONDS), \"Connected\");\n        }\n        catch ( InterruptedException e )\n        {\n            Assert.fail(\"Unexpected interruption\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestBlockUntilConnected.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testBlockUntilConnectedInterrupt()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        final CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n\n            final Thread threadToInterrupt = Thread.currentThread();\n\n            Timer timer = new Timer();\n            timer.schedule(new TimerTask()\n            {\n\n                @Override\n                public void run()\n                {\n                    threadToInterrupt.interrupt();\n                }\n            }, 3000);\n\n            client.blockUntilConnected(5, TimeUnit.SECONDS);\n            fail(\"Expected interruption did not occur\");\n        }\n        catch ( InterruptedException e )\n        {\n            \r\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":239,"groupId":"1098","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBlockUntilConnectedInterrupt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7c/5091bf683b59c89cdf3fa7727d80019369eaf5.src","preCode":"    public void testBlockUntilConnectedInterrupt()\n    {\n        \r\n        CloseableUtils.closeQuietly(server);\n\n        final CuratorFramework client = CuratorFrameworkFactory.builder().\n            connectString(server.getConnectString()).\n            retryPolicy(new RetryOneTime(1)).\n            build();\n\n        try\n        {\n            client.start();\n\n            final Thread threadToInterrupt = Thread.currentThread();\n\n            Timer timer = new Timer();\n            timer.schedule(new TimerTask()\n            {\n\n                @Override\n                public void run()\n                {\n                    threadToInterrupt.interrupt();\n                }\n            }, 3000);\n\n            client.blockUntilConnected(5, TimeUnit.SECONDS);\n            Assert.fail(\"Expected interruption did not occur\");\n        }\n        catch ( InterruptedException e )\n        {\n            \r\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestBlockUntilConnected.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
