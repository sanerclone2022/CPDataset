[{"authorTime":"2016-02-03 05:48:37","codes":[{"authorDate":"2016-02-03 05:48:37","commitOrder":1,"curCode":"    public void testQuickClose() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2016-02-03 05:48:37","endLine":84,"groupId":"1289","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuickClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7e/922a0e268c32b6ca0fa0bff416279b96a688e2.src","preCode":"    public void testQuickClose() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2016-02-03 05:48:37","commitOrder":1,"curCode":"    public void testQuickCloseNodeExists() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().creatingParentsIfNeeded().forPath(\"/test/one/two\");\n\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2016-02-03 05:48:37","endLine":108,"groupId":"1793","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuickCloseNodeExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7e/922a0e268c32b6ca0fa0bff416279b96a688e2.src","preCode":"    public void testQuickCloseNodeExists() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().creatingParentsIfNeeded().forPath(\"/test/one/two\");\n\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"4e4072b08be2da21a656bd6a328ffbfb2efa6906","commitMessage":"@@@Merge branch 'master' into CURATOR-3.0\n\nConflicts:\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentNode.java\n","date":"2016-02-03 05:48:37","modifiedFileCount":"2","status":"B","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testQuickClose() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":123,"groupId":"10223","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuickClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/62/0c9ccdb02d861f4dab0c4a9498ca59572ed57d.src","preCode":"    public void testQuickClose() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testQuickCloseNodeExists() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().creatingParentsIfNeeded().forPath(\"/test/one/two\");\n\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":147,"groupId":"10223","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuickCloseNodeExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/62/0c9ccdb02d861f4dab0c4a9498ca59572ed57d.src","preCode":"    public void testQuickCloseNodeExists() throws Exception\n    {\n        Timing timing = new Timing();\n        PersistentNode pen = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().creatingParentsIfNeeded().forPath(\"/test/one/two\");\n\n            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, \"/test/one/two\", new byte[0]);\n            pen.start();\n            pen.close();\n            timing.sleepABit();\n            Assert.assertNull(client.checkExists().forPath(\"/test/one/two\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(pen);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
