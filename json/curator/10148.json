[{"authorTime":"2015-08-18 01:01:21","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":2,"curCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2013-03-08 06:54:59","endLine":165,"groupId":"922","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/48/45d91af4d8b93524da4cdb1504081c5408188d.src","preCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"NB"},{"authorDate":"2015-08-18 01:01:21","commitOrder":2,"curCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher());\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","date":"2015-08-18 01:01:21","endLine":234,"groupId":"1917","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForegroundStandard","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/34/5bcf5b1b2210b50b9e25033fb473fa823bf993.src","preCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher());\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/ExistsBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"}],"commitId":"44ee8547ef3563823c89ac9d8570a0df1b33a0a8","commitMessage":"@@@Merge 'master' into CURATOR-3.0\n","date":"2015-08-18 01:01:21","modifiedFileCount":"51","status":"M","submitter":"Scott Blum"},{"authorTime":"2015-08-18 10:13:37","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":3,"curCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2013-03-08 06:54:59","endLine":165,"groupId":"922","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/48/45d91af4d8b93524da4cdb1504081c5408188d.src","preCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"N"},{"authorDate":"2015-08-18 10:13:37","commitOrder":3,"curCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(client, path));\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","date":"2015-08-18 10:13:37","endLine":234,"groupId":"1917","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForegroundStandard","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/a6/316ac86434484b77ce03659d5d6dfd6c029196.src","preCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher());\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/ExistsBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"}],"commitId":"d5d12c88b075fd1fc51a29412b3c08918cceb983","commitMessage":"@@@Merge 'CURATOR-217' into CURATOR-3.0\n","date":"2015-08-18 10:13:37","modifiedFileCount":"40","status":"M","submitter":"Scott Blum"},{"authorTime":"2016-04-21 09:12:31","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":4,"curCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2013-03-08 06:54:59","endLine":165,"groupId":"922","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/48/45d91af4d8b93524da4cdb1504081c5408188d.src","preCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"N"},{"authorDate":"2016-04-21 09:12:31","commitOrder":4,"curCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = watching.callWithRetry\n        (\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","date":"2016-04-21 09:12:31","endLine":241,"groupId":"298","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForegroundStandard","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ce/ad1688daca4e73e37d67fe2dd22e1b10c76e48.src","preCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(client, path));\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/ExistsBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"}],"commitId":"b1d2198a75d6e01b48789635ba648bedc542c439","commitMessage":"@@@If there's an exeption.  retries exceeded.  etc..  the watcher was still being stored in WatcherRemovealManager thus causing it to be incorrectly removed. This fix removes the watch from the WatcherRemovalmanager on exceptions.  retries exceeded.  etc.\n","date":"2016-04-21 09:12:31","modifiedFileCount":"20","status":"M","submitter":"randgalt"},{"authorTime":"2016-04-21 09:12:31","codes":[{"authorDate":"2016-05-20 03:02:00","commitOrder":5,"curCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2016-05-20 03:02:00","endLine":182,"groupId":"922","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalList<ACL>aclList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/adfe221c2f7b3c9c180c46df18db5b82d1fcab.src","preCode":"    private Stat pathInForeground(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, acling.getAclList(path), version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2016-04-21 09:12:31","commitOrder":5,"curCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = watching.callWithRetry\n        (\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","date":"2016-04-21 09:12:31","endLine":241,"groupId":"298","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForegroundStandard","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ce/ad1688daca4e73e37d67fe2dd22e1b10c76e48.src","preCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = watching.callWithRetry\n        (\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/ExistsBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"N"}],"commitId":"63a0d4550ebfaa2e29ddf719f8bfe9696cffc5ae","commitMessage":"@@@Merge branch 'CURATOR-322' into CURATOR-3.0\n","date":"2016-05-20 03:02:00","modifiedFileCount":"18","status":"M","submitter":"randgalt"},{"authorTime":"2016-05-27 05:59:08","codes":[{"authorDate":"2016-05-20 03:02:00","commitOrder":6,"curCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","date":"2016-05-20 03:02:00","endLine":182,"groupId":"922","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalList<ACL>aclList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/44/adfe221c2f7b3c9c180c46df18db5b82d1fcab.src","preCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"},{"authorDate":"2016-05-27 05:59:08","commitOrder":6,"curCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                        int rc = (returnStat != null) ? KeeperException.NoNodeException.Code.OK.intValue() : KeeperException.NoNodeException.Code.NONODE.intValue();\n                        watching.commitWatcher(rc, true);\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","date":"2016-05-27 05:59:08","endLine":250,"groupId":"1917","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForegroundStandard","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/96/0b5778d7342415534351455f8e1ec69ae55fc7.src","preCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = watching.callWithRetry\n        (\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/ExistsBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"f59f23c703815317d4ef1d39e2b815e402d1559b","commitMessage":"@@@Reworked WatcherRemovalManager. It now stores watchers only on successful operations. This is more like how ZK does it.\nAlso.  exists watcher must be stored when there is a NoNode result.\n","date":"2016-05-27 05:59:08","modifiedFileCount":"11","status":"M","submitter":"randgalt"},{"authorTime":"2016-10-28 23:05:52","codes":[{"authorDate":"2016-10-28 23:05:52","commitOrder":7,"curCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.setPath(path).setStat(resultStat).commit();\n        return resultStat;\n    }\n","date":"2016-10-28 23:05:52","endLine":182,"groupId":"10148","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"pathInForeground","params":"(finalStringpath@finalList<ACL>aclList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/73/8e82ff8b6166c2978a25ea0c6d5c7ea0f918fb.src","preCode":"    private Stat pathInForeground(final String path, final List<ACL> aclList) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"SetACLBuilderImpl-Foreground\");\n        Stat        resultStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    return client.getZooKeeper().setACL(path, aclList, version);\n                }\n            }\n        );\n        trace.commit();\n        return resultStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/SetACLBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2016-10-28 23:05:52","commitOrder":7,"curCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        OperationTrace   trace = client.getZookeeperClient().startAdvancedTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                        int rc = (returnStat != null) ? KeeperException.NoNodeException.Code.OK.intValue() : KeeperException.NoNodeException.Code.NONODE.intValue();\n                        watching.commitWatcher(rc, true);\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.setPath(path).setWithWatcher(watching.hasWatcher()).setStat(returnStat).commit();\n        return returnStat;\n    }\n","date":"2016-10-28 23:05:52","endLine":250,"groupId":"10148","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"pathInForegroundStandard","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/05/8ac5d09da3b26887a1b0ac62b62c7428d23f8a.src","preCode":"    private Stat pathInForegroundStandard(final String path) throws Exception\n    {\n        TimeTrace   trace = client.getZookeeperClient().startTracer(\"ExistsBuilderImpl-Foreground\");\n        Stat        returnStat = RetryLoop.callWithRetry\n        (\n            client.getZookeeperClient(),\n            new Callable<Stat>()\n            {\n                @Override\n                public Stat call() throws Exception\n                {\n                    Stat    returnStat;\n                    if ( watching.isWatched() )\n                    {\n                        returnStat = client.getZooKeeper().exists(path, true);\n                    }\n                    else\n                    {\n                        returnStat = client.getZooKeeper().exists(path, watching.getWatcher(path));\n                        int rc = (returnStat != null) ? KeeperException.NoNodeException.Code.OK.intValue() : KeeperException.NoNodeException.Code.NONODE.intValue();\n                        watching.commitWatcher(rc, true);\n                    }\n                    return returnStat;\n                }\n            }\n        );\n        trace.commit();\n        return returnStat;\n    }\n","realPath":"curator-framework/src/main/java/org/apache/curator/framework/imps/ExistsBuilderImpl.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"786d69587d183250b4108a9e18898ad4b2e94659","commitMessage":"@@@Merge branch 'CURATOR-3.0' into CURATOR-351\n","date":"2016-10-28 23:05:52","modifiedFileCount":"22","status":"M","submitter":"randgalt"}]
