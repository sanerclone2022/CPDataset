[{"authorTime":"2018-12-11 01:28:01","codes":[{"authorDate":"2016-01-19 04:57:02","commitOrder":7,"curCode":"    public void testBasics() throws Exception\n    {\n        client.create().forPath(\"/test\");\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/t\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/test/o\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/onely\"));\n\n        client.setData().forPath(\"/test/one\", \"sup!\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_UPDATED, \"/test/one\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"sup!\");\n\n        client.delete().forPath(\"/test/one\");\n        assertEvent(TreeCacheEvent.Type.NODE_REMOVED, \"/test/one\", \"sup!\".getBytes());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n\n        assertNoMoreEvents();\n    }\n","date":"2016-01-19 04:57:02","endLine":465,"groupId":"1544","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/17/3fcd7bba1280ec6e8ff79ff91c8715053d4942.src","preCode":"    public void testBasics() throws Exception\n    {\n        client.create().forPath(\"/test\");\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/t\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/test/o\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/onely\"));\n\n        client.setData().forPath(\"/test/one\", \"sup!\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_UPDATED, \"/test/one\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"sup!\");\n\n        client.delete().forPath(\"/test/one\");\n        assertEvent(TreeCacheEvent.Type.NODE_REMOVED, \"/test/one\", \"sup!\".getBytes());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"NB"},{"authorDate":"2018-12-11 01:28:01","commitOrder":7,"curCode":"    public void testBasicsWithNoZkWatches() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").disableZkWatches(true));\n\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/test/o\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/onely\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/t\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        assertNoMoreEvents();\n    }\n","date":"2018-12-11 01:28:01","endLine":493,"groupId":"348","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicsWithNoZkWatches","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/76/2bdd8d58924c492d43ad0f3d207f590d035975.src","preCode":"    public void testBasicsWithNoZkWatches() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").disableZkWatches(true));\n\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/test/o\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/onely\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/t\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":471,"status":"B"}],"commitId":"2a9f04aa3eb0f7d0a97e5810afa22feb58a84f06","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/curator\n","date":"2018-12-11 01:28:01","modifiedFileCount":"3","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":8,"curCode":"    public void testBasics() throws Exception\n    {\n        client.create().forPath(\"/test\");\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n        assertNull(cache.getCurrentChildren(\"/t\"));\n        assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        assertNull(cache.getCurrentChildren(\"/test/o\"));\n        assertNull(cache.getCurrentChildren(\"/test/onely\"));\n\n        client.setData().forPath(\"/test/one\", \"sup!\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_UPDATED, \"/test/one\");\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"sup!\");\n\n        client.delete().forPath(\"/test/one\");\n        assertEvent(TreeCacheEvent.Type.NODE_REMOVED, \"/test/one\", \"sup!\".getBytes());\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n\n        assertNoMoreEvents();\n    }\n","date":"2020-10-20 21:18:25","endLine":471,"groupId":"10242","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2b/9e491c6adc58eff08832d74ffdd2bb2a551452.src","preCode":"    public void testBasics() throws Exception\n    {\n        client.create().forPath(\"/test\");\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/t\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/test/o\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/onely\"));\n\n        client.setData().forPath(\"/test/one\", \"sup!\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_UPDATED, \"/test/one\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"sup!\");\n\n        client.delete().forPath(\"/test/one\");\n        assertEvent(TreeCacheEvent.Type.NODE_REMOVED, \"/test/one\", \"sup!\".getBytes());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of());\n\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":8,"curCode":"    public void testBasicsWithNoZkWatches() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").disableZkWatches(true));\n\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        assertNull(cache.getCurrentChildren(\"/test/o\"));\n        assertNull(cache.getCurrentChildren(\"/test/onely\"));\n        assertNull(cache.getCurrentChildren(\"/t\"));\n        assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        assertNoMoreEvents();\n    }\n","date":"2020-10-20 21:18:25","endLine":495,"groupId":"10242","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBasicsWithNoZkWatches","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2b/9e491c6adc58eff08832d74ffdd2bb2a551452.src","preCode":"    public void testBasicsWithNoZkWatches() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").disableZkWatches(true));\n\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentChildren(\"/test/o\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/onely\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/t\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/testing\"));\n\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
