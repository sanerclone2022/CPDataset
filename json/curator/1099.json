[{"authorTime":"2017-05-17 06:27:56","codes":[{"authorDate":"2017-05-17 06:27:56","commitOrder":1,"curCode":"    public void  testExistsWithParentsWithAclApplyToParents() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            assertNull(client.checkExists().creatingParentsIfNeeded().withACL(acl).forPath(path));\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            Assert.assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            Assert.assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2017-07-19 07:55:05","endLine":68,"groupId":"905","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExistsWithParentsWithAclApplyToParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/85/57e6424377f7534c35516588746dd9e08b416c.src","preCode":"    public void  testExistsWithParentsWithAclApplyToParents() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            assertNull(client.checkExists().creatingParentsIfNeeded().withACL(acl).forPath(path));\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            Assert.assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            Assert.assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestExistsBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2017-05-17 06:27:56","commitOrder":1,"curCode":"    public void  testExistsWithParentsWithAclApplyToParentsInBackground() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n            final CountDownLatch latch = new CountDownLatch(1);\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    latch.countDown();\n                }\n            };\n            client.checkExists().creatingParentsIfNeeded().withACL(acl).inBackground(callback).forPath(path);\n            Assert.assertTrue(latch.await(2000, TimeUnit.MILLISECONDS), \"Callback not invoked\");\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            Assert.assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            Assert.assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2017-07-19 07:55:05","endLine":99,"groupId":"905","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExistsWithParentsWithAclApplyToParentsInBackground","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/85/57e6424377f7534c35516588746dd9e08b416c.src","preCode":"    public void  testExistsWithParentsWithAclApplyToParentsInBackground() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n            final CountDownLatch latch = new CountDownLatch(1);\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    latch.countDown();\n                }\n            };\n            client.checkExists().creatingParentsIfNeeded().withACL(acl).inBackground(callback).forPath(path);\n            Assert.assertTrue(latch.await(2000, TimeUnit.MILLISECONDS), \"Callback not invoked\");\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            Assert.assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            Assert.assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestExistsBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"7e611bd1c7bbdea3f220af0a17d12bdf1b49b8c0","commitMessage":"@@@CURATOR-362 - Use provided ACL when creating parent directories\n\nCURATOR-362 - Cover case when no ACL list is provided to CreateBuilder\n\nCURATOR-362 - Use provided ACL for creating parents in background operation\n\nCURATOR-362 - Use provided ACL for creating parents in background operation\n","date":"2017-07-19 07:55:05","modifiedFileCount":"8","status":"B","submitter":"szekizoli"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void  testExistsWithParentsWithAclApplyToParents() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            assertNull(client.checkExists().creatingParentsIfNeeded().withACL(acl).forPath(path));\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":68,"groupId":"1099","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testExistsWithParentsWithAclApplyToParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/54/704ab48ea6b6e218bc084bcaed7b412a148dc2.src","preCode":"    public void  testExistsWithParentsWithAclApplyToParents() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            assertNull(client.checkExists().creatingParentsIfNeeded().withACL(acl).forPath(path));\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            Assert.assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            Assert.assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestExistsBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void  testExistsWithParentsWithAclApplyToParentsInBackground() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n            final CountDownLatch latch = new CountDownLatch(1);\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    latch.countDown();\n                }\n            };\n            client.checkExists().creatingParentsIfNeeded().withACL(acl).inBackground(callback).forPath(path);\n            assertTrue(latch.await(2000, TimeUnit.MILLISECONDS), \"Callback not invoked\");\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":99,"groupId":"1099","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testExistsWithParentsWithAclApplyToParentsInBackground","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/54/704ab48ea6b6e218bc084bcaed7b412a148dc2.src","preCode":"    public void  testExistsWithParentsWithAclApplyToParentsInBackground() throws Exception\n    {\n        CuratorFramework client = createClient(new DefaultACLProvider());\n        try\n        {\n            client.start();\n            final CountDownLatch latch = new CountDownLatch(1);\n            String path = \"/bar/foo/test\";\n            List<ACL> acl = Collections.singletonList(new ACL(ZooDefs.Perms.CREATE | ZooDefs.Perms.READ, ANYONE_ID_UNSAFE));\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    latch.countDown();\n                }\n            };\n            client.checkExists().creatingParentsIfNeeded().withACL(acl).inBackground(callback).forPath(path);\n            Assert.assertTrue(latch.await(2000, TimeUnit.MILLISECONDS), \"Callback not invoked\");\n            List<ACL> actual_bar = client.getACL().forPath(\"/bar\");\n            Assert.assertEquals(actual_bar, acl);\n            List<ACL> actual_bar_foo = client.getACL().forPath(\"/bar/foo\");\n            Assert.assertEquals(actual_bar_foo, acl);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestExistsBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
