[{"authorTime":"2014-08-01 14:00:52","codes":[{"authorDate":"2014-07-15 08:38:07","commitOrder":3,"curCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","date":"2014-08-01 06:04:58","endLine":169,"groupId":"1328","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsyncInitialPopulation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/29/22d40dea8f4eb65c705880e7bf682d79548403.src","preCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"NB"},{"authorDate":"2014-08-01 14:00:52","commitOrder":3,"curCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = new TreeCache(client.usingNamespace(\"outer\"), \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","date":"2014-08-01 14:00:52","endLine":119,"groupId":"1196","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f3/5d24d12c604f07d0a44db3859a699702e27582.src","preCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = new TreeCache(client.usingNamespace(\"outer\"), \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"MB"}],"commitId":"f4743336e09fa4f487b95bf72b2877c789371202","commitMessage":"@@@Added more extensive testing.\n","date":"2014-08-01 14:00:52","modifiedFileCount":"3","status":"M","submitter":"Scott Blum"},{"authorTime":"2014-08-07 10:03:44","codes":[{"authorDate":"2014-08-07 10:03:44","commitOrder":4,"curCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = new MyTreeCache(client, \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","date":"2014-08-07 10:03:44","endLine":82,"groupId":"1194","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsyncInitialPopulation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/33/d08b0a08142cc05d013269d3728a357e7b4342.src","preCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2014-08-07 10:03:44","commitOrder":4,"curCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = new MyTreeCache(client.usingNamespace(\"outer\"), \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","date":"2014-08-07 10:03:44","endLine":122,"groupId":"1196","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/33/d08b0a08142cc05d013269d3728a357e7b4342.src","preCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = new TreeCache(client.usingNamespace(\"outer\"), \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"74497c0d23c0eeeadee47dec6b3da116e05480b6","commitMessage":"@@@Style tweaks.\n","date":"2014-08-07 10:03:44","modifiedFileCount":"3","status":"M","submitter":"Scott Blum"},{"authorTime":"2014-10-07 07:52:02","codes":[{"authorDate":"2014-10-07 07:52:02","commitOrder":5,"curCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","date":"2014-10-07 07:52:02","endLine":82,"groupId":"750","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsyncInitialPopulation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4f/3d914f4686924e305c378845431cb9b2b34554.src","preCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = new MyTreeCache(client, \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2014-10-07 07:52:02","commitOrder":5,"curCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = newTreeCacheWithListeners(client.usingNamespace(\"outer\"), \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","date":"2014-10-07 07:52:02","endLine":122,"groupId":"916","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4f/3d914f4686924e305c378845431cb9b2b34554.src","preCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = new MyTreeCache(client.usingNamespace(\"outer\"), \"/test\", true);\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"861ba15b71c83e6d69d4128c793209882f93d92f","commitMessage":"@@@Merge branch 'CURATOR-144'\n\n* CURATOR-144:\n  TreeCache.getUnhandledErrorListenable() non-public\n  Address feedback\n  Fix formatting; remove MyTreeCache; error listener\n  Add precondition checks.\n  CURATOR-144: TreeCache.Builder to configure advanced options\n","date":"2014-10-07 07:52:02","modifiedFileCount":"5","status":"M","submitter":"Scott Blum"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2014-10-07 07:52:02","commitOrder":6,"curCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","date":"2014-10-07 07:52:02","endLine":82,"groupId":"10236","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsyncInitialPopulation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4f/3d914f4686924e305c378845431cb9b2b34554.src","preCode":"    public void testAsyncInitialPopulation() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/one\", \"hey there\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"},{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = newTreeCacheWithListeners(client.usingNamespace(\"outer\"), \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","date":"2020-10-20 21:18:25","endLine":290,"groupId":"10236","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testWithNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2b/9e491c6adc58eff08832d74ffdd2bb2a551452.src","preCode":"    public void testWithNamespace() throws Exception\n    {\n        client.create().forPath(\"/outer\");\n        client.create().forPath(\"/outer/foo\");\n        client.create().forPath(\"/outer/test\");\n        client.create().forPath(\"/outer/test/one\", \"hey there\".getBytes());\n\n        cache = newTreeCacheWithListeners(client.usingNamespace(\"outer\"), \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/one\");\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"one\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/one\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(new String(cache.getCurrentData(\"/test/one\").getData()), \"hey there\");\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
