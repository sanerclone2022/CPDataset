[{"authorTime":"2015-08-13 05:30:01","codes":[{"authorDate":"2015-08-13 05:30:01","commitOrder":1,"curCode":"    public void     testCheckVersion() throws Exception\n    {\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat        stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            try\n            {\n                client.inTransaction()\n                    .check().withVersion(stat.getVersion() + 1).forPath(\"/foo\") \r\n                .and()\n                    .create().forPath(\"/bar\")\n                .and()\n                    .commit();\n\n                Assert.fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n            \n            Assert.assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-13 05:30:01","endLine":71,"groupId":"2","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCheckVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f0/147d55616f266ee80010998816222c3fdc2c9a.src","preCode":"    public void     testCheckVersion() throws Exception\n    {\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat        stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            try\n            {\n                client.inTransaction()\n                    .check().withVersion(stat.getVersion() + 1).forPath(\"/foo\") \r\n                .and()\n                    .create().forPath(\"/bar\")\n                .and()\n                    .commit();\n\n                Assert.fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n            \n            Assert.assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2015-08-13 05:30:01","commitOrder":1,"curCode":"    public void testCheckVersion() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            CuratorOp statOp = client.transactionOp().check().withVersion(stat.getVersion() + 1).forPath(\"/foo\");\n            CuratorOp createOp = client.transactionOp().create().forPath(\"/bar\");\n            try\n            {\n                client.transaction().forOperations(statOp, createOp);\n                Assert.fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n\n            Assert.assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-13 05:30:01","endLine":74,"groupId":"1773","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ea/f94f8dff934e300bf93610b700a377644dd499.src","preCode":"    public void testCheckVersion() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            CuratorOp statOp = client.transactionOp().check().withVersion(stat.getVersion() + 1).forPath(\"/foo\");\n            CuratorOp createOp = client.transactionOp().create().forPath(\"/bar\");\n            try\n            {\n                client.transaction().forOperations(statOp, createOp);\n                Assert.fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n\n            Assert.assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"8c8d7ec2ba24cf192db7cd0a738924a2ec538e09","commitMessage":"@@@Merge branch 'CURATOR-215' into CURATOR-3.0\n","date":"2015-08-13 05:30:01","modifiedFileCount":"27","status":"B","submitter":"Scott Blum"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void     testCheckVersion() throws Exception\n    {\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat        stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            try\n            {\n                client.inTransaction()\n                    .check().withVersion(stat.getVersion() + 1).forPath(\"/foo\") \r\n                .and()\n                    .create().forPath(\"/bar\")\n                .and()\n                    .commit();\n\n                fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n\n            assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":80,"groupId":"1062","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCheckVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7f/d3f53a60ae4dd6d60fbce0c3c72d9d5c1a2733.src","preCode":"    public void     testCheckVersion() throws Exception\n    {\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat        stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            try\n            {\n                client.inTransaction()\n                    .check().withVersion(stat.getVersion() + 1).forPath(\"/foo\") \r\n                .and()\n                    .create().forPath(\"/bar\")\n                .and()\n                    .commit();\n\n                Assert.fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n\n            Assert.assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testCheckVersion() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            CuratorOp statOp = client.transactionOp().check().withVersion(stat.getVersion() + 1).forPath(\"/foo\");\n            CuratorOp createOp = client.transactionOp().create().forPath(\"/bar\");\n            try\n            {\n                client.transaction().forOperations(statOp, createOp);\n                fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n\n            assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":116,"groupId":"1062","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCheckVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c4/144f0156e039ca82017f36055f9393fc66d53c.src","preCode":"    public void testCheckVersion() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/foo\");\n            Stat stat = client.setData().forPath(\"/foo\", \"new\".getBytes());  \r\n\n            CuratorOp statOp = client.transactionOp().check().withVersion(stat.getVersion() + 1).forPath(\"/foo\");\n            CuratorOp createOp = client.transactionOp().create().forPath(\"/bar\");\n            try\n            {\n                client.transaction().forOperations(statOp, createOp);\n                Assert.fail();\n            }\n            catch ( KeeperException.BadVersionException correct )\n            {\n                \r\n            }\n\n            Assert.assertNull(client.checkExists().forPath(\"/bar\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
