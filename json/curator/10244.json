[{"authorTime":"2020-03-30 04:33:13","codes":[{"authorDate":"2020-03-30 04:33:13","commitOrder":1,"curCode":"    public void testEmptyTree() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/base/test\"))\n            {\n                treeCache.start();\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Assert.assertFalse(iterator.hasNext());\n                Assert.assertEquals(treeCache.size(), 0);\n            }\n        }\n    }\n","date":"2020-04-09 11:17:11","endLine":161,"groupId":"454","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmptyTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2d/8dbb30380977289416122f02980949faf65985.src","preCode":"    public void testEmptyTree() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/base/test\"))\n            {\n                treeCache.start();\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Assert.assertFalse(iterator.hasNext());\n                Assert.assertEquals(treeCache.size(), 0);\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCacheIteratorAndSize.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2020-03-30 04:33:13","commitOrder":1,"curCode":"    public void testWithDeletedNodes() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/foo\"))\n            {\n                treeCache.start();\n\n                client.create().forPath(\"/foo\");\n                client.create().forPath(\"/foo/a1\");\n                client.create().forPath(\"/foo/a2\");\n                client.create().forPath(\"/foo/a2/a2.1\");\n                client.create().forPath(\"/foo/a2/a2.2\");\n                client.create().forPath(\"/foo/a3\");\n                client.create().forPath(\"/foo/a3/a3.1\");\n                client.create().forPath(\"/foo/a3/a3.2\");\n\n                client.delete().forPath(\"/foo/a2/a2.2\");\n                client.delete().forPath(\"/foo/a3/a3.1\");\n\n                timing.sleepABit(); \r\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Set<String> paths = new HashSet<>();\n                while ( iterator.hasNext() )\n                {\n                    ChildData next = iterator.next();\n                    paths.add(next.getPath());\n                }\n\n                Assert.assertEquals(paths, Sets.newHashSet(\"/foo\", \"/foo/a1\", \"/foo/a2\", \"/foo/a2/a2.1\", \"/foo/a3\", \"/foo/a3/a3.2\"));\n                Assert.assertEquals(treeCache.size(), 6);\n            }\n        }\n    }\n","date":"2020-04-09 11:17:11","endLine":200,"groupId":"454","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithDeletedNodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2d/8dbb30380977289416122f02980949faf65985.src","preCode":"    public void testWithDeletedNodes() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/foo\"))\n            {\n                treeCache.start();\n\n                client.create().forPath(\"/foo\");\n                client.create().forPath(\"/foo/a1\");\n                client.create().forPath(\"/foo/a2\");\n                client.create().forPath(\"/foo/a2/a2.1\");\n                client.create().forPath(\"/foo/a2/a2.2\");\n                client.create().forPath(\"/foo/a3\");\n                client.create().forPath(\"/foo/a3/a3.1\");\n                client.create().forPath(\"/foo/a3/a3.2\");\n\n                client.delete().forPath(\"/foo/a2/a2.2\");\n                client.delete().forPath(\"/foo/a3/a3.1\");\n\n                timing.sleepABit(); \r\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Set<String> paths = new HashSet<>();\n                while ( iterator.hasNext() )\n                {\n                    ChildData next = iterator.next();\n                    paths.add(next.getPath());\n                }\n\n                Assert.assertEquals(paths, Sets.newHashSet(\"/foo\", \"/foo/a1\", \"/foo/a2\", \"/foo/a2/a2.1\", \"/foo/a3\", \"/foo/a3/a3.2\"));\n                Assert.assertEquals(treeCache.size(), 6);\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCacheIteratorAndSize.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"844c0ad36340b695b2784489c078cfd78522143c","commitMessage":"@@@CURATOR-549\n\nThe next phase of this issue will implement a bridge cache that bridges TreeCache for pre 3.6 SK and CuratorCache for ZK 3.6+. That bridge will need this TreeCache iterator.\n","date":"2020-04-09 11:17:11","modifiedFileCount":"4","status":"B","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testEmptyTree() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/base/test\"))\n            {\n                treeCache.start();\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                assertFalse(iterator.hasNext());\n                assertEquals(treeCache.size(), 0);\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":165,"groupId":"10244","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testEmptyTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/a0/daae32e163ac435cb318183e546e7f5558840a.src","preCode":"    public void testEmptyTree() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/base/test\"))\n            {\n                treeCache.start();\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Assert.assertFalse(iterator.hasNext());\n                Assert.assertEquals(treeCache.size(), 0);\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCacheIteratorAndSize.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testWithDeletedNodes() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/foo\"))\n            {\n                treeCache.start();\n\n                client.create().forPath(\"/foo\");\n                client.create().forPath(\"/foo/a1\");\n                client.create().forPath(\"/foo/a2\");\n                client.create().forPath(\"/foo/a2/a2.1\");\n                client.create().forPath(\"/foo/a2/a2.2\");\n                client.create().forPath(\"/foo/a3\");\n                client.create().forPath(\"/foo/a3/a3.1\");\n                client.create().forPath(\"/foo/a3/a3.2\");\n\n                client.delete().forPath(\"/foo/a2/a2.2\");\n                client.delete().forPath(\"/foo/a3/a3.1\");\n\n                timing.sleepABit(); \r\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Set<String> paths = new HashSet<>();\n                while ( iterator.hasNext() )\n                {\n                    ChildData next = iterator.next();\n                    paths.add(next.getPath());\n                }\n\n                assertEquals(paths, Sets.newHashSet(\"/foo\", \"/foo/a1\", \"/foo/a2\", \"/foo/a2/a2.1\", \"/foo/a3\", \"/foo/a3/a3.2\"));\n                assertEquals(treeCache.size(), 6);\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":204,"groupId":"10244","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testWithDeletedNodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/a0/daae32e163ac435cb318183e546e7f5558840a.src","preCode":"    public void testWithDeletedNodes() throws Exception\n    {\n        try (CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1)))\n        {\n            client.start();\n\n            try (TreeCache treeCache = new TreeCache(client, \"/foo\"))\n            {\n                treeCache.start();\n\n                client.create().forPath(\"/foo\");\n                client.create().forPath(\"/foo/a1\");\n                client.create().forPath(\"/foo/a2\");\n                client.create().forPath(\"/foo/a2/a2.1\");\n                client.create().forPath(\"/foo/a2/a2.2\");\n                client.create().forPath(\"/foo/a3\");\n                client.create().forPath(\"/foo/a3/a3.1\");\n                client.create().forPath(\"/foo/a3/a3.2\");\n\n                client.delete().forPath(\"/foo/a2/a2.2\");\n                client.delete().forPath(\"/foo/a3/a3.1\");\n\n                timing.sleepABit(); \r\n\n                Iterator<ChildData> iterator = treeCache.iterator();\n                Set<String> paths = new HashSet<>();\n                while ( iterator.hasNext() )\n                {\n                    ChildData next = iterator.next();\n                    paths.add(next.getPath());\n                }\n\n                Assert.assertEquals(paths, Sets.newHashSet(\"/foo\", \"/foo/a1\", \"/foo/a2\", \"/foo/a2/a2.1\", \"/foo/a3\", \"/foo/a3/a3.2\"));\n                Assert.assertEquals(treeCache.size(), 6);\n            }\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCacheIteratorAndSize.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
