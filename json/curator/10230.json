[{"authorTime":"2014-10-21 04:06:24","codes":[{"authorDate":"2014-10-07 07:52:02","commitOrder":5,"curCode":"    public void testStartup() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2/sub\", \"two-sub\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of(\"sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","date":"2014-10-07 07:52:02","endLine":56,"groupId":"1636","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4f/3d914f4686924e305c378845431cb9b2b34554.src","preCode":"    public void testStartup() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2/sub\", \"two-sub\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of(\"sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"NB"},{"authorDate":"2014-10-21 04:06:24","commitOrder":5,"curCode":"    public void testDepth1() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").setMaxDepth(1));\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentData(\"/test/2/sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/2/sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","date":"2014-10-21 04:06:24","endLine":115,"groupId":"1109","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDepth1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/bf/d051ab09bc8ba53ef11a738f1d63668c2b03c7.src","preCode":"    public void testDepth1() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").setMaxDepth(1));\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentData(\"/test/2/sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/2/sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"b9fb9ffd50cb1528fbbaa71802d9d0fb2bf0c2b2","commitMessage":"@@@Merge branch 'CURATOR-145'\n\n* CURATOR-145:\n  Add a deeper TreeCache test with maxDepth.\n  Clarify TreeCache.Builder.setMaxDepth() doc.\n  CURATOR-145: TreeCache should implement maxDepth\n","date":"2014-10-21 04:06:24","modifiedFileCount":"4","status":"M","submitter":"Scott Blum"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testStartup() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2/sub\", \"two-sub\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of(\"sub\"));\n        assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","date":"2020-10-20 21:18:25","endLine":105,"groupId":"10230","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2b/9e491c6adc58eff08832d74ffdd2bb2a551452.src","preCode":"    public void testStartup() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = newTreeCacheWithListeners(client, \"/test\");\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2/sub\", \"two-sub\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of(\"sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testDepth1() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").setMaxDepth(1));\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of());\n        assertNull(cache.getCurrentData(\"/test/2/sub\"));\n        assertNull(cache.getCurrentChildren(\"/test/2/sub\"));\n        assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","date":"2020-10-20 21:18:25","endLine":196,"groupId":"10230","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDepth1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2b/9e491c6adc58eff08832d74ffdd2bb2a551452.src","preCode":"    public void testDepth1() throws Exception\n    {\n        client.create().forPath(\"/test\");\n        client.create().forPath(\"/test/1\", \"one\".getBytes());\n        client.create().forPath(\"/test/2\", \"two\".getBytes());\n        client.create().forPath(\"/test/3\", \"three\".getBytes());\n        client.create().forPath(\"/test/2/sub\", \"two-sub\".getBytes());\n\n        cache = buildWithListeners(TreeCache.newBuilder(client, \"/test\").setMaxDepth(1));\n        cache.start();\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test\");\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/1\", \"one\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/2\", \"two\".getBytes());\n        assertEvent(TreeCacheEvent.Type.NODE_ADDED, \"/test/3\", \"three\".getBytes());\n        assertEvent(TreeCacheEvent.Type.INITIALIZED);\n        assertNoMoreEvents();\n\n        Assert.assertEquals(cache.getCurrentChildren(\"/test\").keySet(), ImmutableSet.of(\"1\", \"2\", \"3\"));\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/1\").keySet(), ImmutableSet.of());\n        Assert.assertEquals(cache.getCurrentChildren(\"/test/2\").keySet(), ImmutableSet.of());\n        Assert.assertNull(cache.getCurrentData(\"/test/2/sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/2/sub\"));\n        Assert.assertNull(cache.getCurrentChildren(\"/test/non_exist\"));\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
