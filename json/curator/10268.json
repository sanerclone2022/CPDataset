[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    client.delete().guaranteed().forPath(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return client.getData().forPath(path);\n            }\n        };\n    }\n","date":"2013-03-08 06:54:59","endLine":375,"groupId":"1676","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeLease","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ed/4f782a59fdeb14be111fc1821924b444fb196f.src","preCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    client.delete().guaranteed().forPath(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return client.getData().forPath(path);\n            }\n        };\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    internals.releaseLock(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return internals.getClient().getData().forPath(path);\n            }\n        };\n    }\n","date":"2013-03-08 06:54:59","endLine":282,"groupId":"1604","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeLease","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c3/df47654b37032ecdeb0d204733e644669c73b3.src","preCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    internals.releaseLock(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return internals.getClient().getData().forPath(path);\n            }\n        };\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2016-01-18 06:40:52","codes":[{"authorDate":"2016-01-18 06:40:52","commitOrder":2,"curCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    client.delete().guaranteed().forPath(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    ThreadUtils.checkInterrupted(e);\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return client.getData().forPath(path);\n            }\n        };\n    }\n","date":"2016-01-18 06:40:52","endLine":436,"groupId":"1676","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeLease","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/36/dbff450d71d37ca42921b6bf749478dec790ae.src","preCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    client.delete().guaranteed().forPath(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return client.getData().forPath(path);\n            }\n        };\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"M"},{"authorDate":"2016-01-18 06:40:52","commitOrder":2,"curCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    internals.releaseLock(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    ThreadUtils.checkInterrupted(e);\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return internals.getClient().getData().forPath(path);\n            }\n        };\n    }\n","date":"2016-01-18 06:40:52","endLine":291,"groupId":"58","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeLease","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4d/1f064841389558dbec525590b99cc2a3f6b849.src","preCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    internals.releaseLock(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return internals.getClient().getData().forPath(path);\n            }\n        };\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"}],"commitId":"9a03ea93937af047e8ad13c2e3e3559520abfb0a","commitMessage":"@@@Merge branch 'master' into CURATOR-3.0\n\nConflicts:\n\tcurator-client/src/main/java/org/apache/curator/RetryLoop.java\n\tcurator-framework/src/main/java/org/apache/curator/framework/imps/FailedDeleteManager.java\n\tcurator-framework/src/main/java/org/apache/curator/framework/imps/OperationAndData.java\n\tcurator-framework/src/main/java/org/apache/curator/framework/state/ConnectionStateManager.java\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2.java\n\tcurator-recipes/src/test/java/org/apache/curator/framework/client/TestResetConnectionWithBackgroundFailure.java\n\tcurator-test/src/main/java/org/apache/curator/test/TestingZooKeeperMain.java\n","date":"2016-01-18 06:40:52","modifiedFileCount":"47","status":"M","submitter":"randgalt"},{"authorTime":"2017-04-03 23:54:50","codes":[{"authorDate":"2017-04-03 23:54:50","commitOrder":3,"curCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    client.delete().guaranteed().forPath(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    ThreadUtils.checkInterrupted(e);\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return client.getData().forPath(path);\n            }\n\n            @Override\n            public String getNodeName() {\n                return ZKPaths.getNodeFromPath(path);\n            }\n        };\n    }\n","date":"2017-04-03 23:54:50","endLine":469,"groupId":"10268","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"makeLease","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7b/c98f5a74808936033a3e441f96bf15b4ac86e3.src","preCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    client.delete().guaranteed().forPath(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    ThreadUtils.checkInterrupted(e);\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return client.getData().forPath(path);\n            }\n        };\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"M"},{"authorDate":"2017-04-03 23:54:50","commitOrder":3,"curCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    internals.releaseLock(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    ThreadUtils.checkInterrupted(e);\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return internals.getClient().getData().forPath(path);\n            }\n\n            @Override\n            public String getNodeName() {\n                return ZKPaths.getNodeFromPath(path);\n            }\n        };\n    }\n","date":"2017-04-03 23:54:50","endLine":297,"groupId":"10268","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"makeLease","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/2e/6db02a0beb9ea49960c695af68861843928f63.src","preCode":"    private Lease makeLease(final String path)\n    {\n        return new Lease()\n        {\n            @Override\n            public void close() throws IOException\n            {\n                try\n                {\n                    internals.releaseLock(path);\n                }\n                catch ( KeeperException.NoNodeException e )\n                {\n                    log.warn(\"Lease already released\", e);\n                }\n                catch ( Exception e )\n                {\n                    ThreadUtils.checkInterrupted(e);\n                    throw new IOException(e);\n                }\n            }\n\n            @Override\n            public byte[] getData() throws Exception\n            {\n                return internals.getClient().getData().forPath(path);\n            }\n        };\n    }\n","realPath":"curator-recipes/src/main/java/org/apache/curator/framework/recipes/locks/InterProcessSemaphore.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"1826b66d72f6e543a57aaf5f3acc3cd9ca6e965d","commitMessage":"@@@Merge branch 'CURATOR-3.0' into CURATOR-351\n","date":"2017-04-03 23:54:50","modifiedFileCount":"45","status":"M","submitter":"randgalt"}]
