[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":95,"groupId":"1886","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLostSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/42/6071a0a8bd4ca4208ace8d9cb90f7fca73e531.src","preCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":221,"groupId":"1886","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespaceAndLostSessionAlt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/42/6071a0a8bd4ca4208ace8d9cb90f7fca73e531.src","preCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2014-02-04 02:55:50","codes":[{"authorDate":"2014-02-04 02:55:50","commitOrder":2,"curCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":95,"groupId":"1886","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLostSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/fa/272853086daeb233eedf9c9f1e98af38cca585.src","preCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2014-02-04 02:55:50","commitOrder":2,"curCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":221,"groupId":"1886","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespaceAndLostSessionAlt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/fa/272853086daeb233eedf9c9f1e98af38cca585.src","preCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"863eaee2f11fe930601c3da3bce386263fb552c4","commitMessage":"@@@CURATOR-85 - Guava no longer has closeQuietly(). This change adds the implementation internally to Curator\n","date":"2014-02-04 02:55:50","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2014-06-18 12:01:35","codes":[{"authorDate":"2014-06-18 12:01:35","commitOrder":3,"curCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-06-18 12:01:35","endLine":96,"groupId":"1886","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLostSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/0e/66f0e932d8537ced8ee89b02a7d521729903a3.src","preCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2014-06-18 12:01:35","commitOrder":3,"curCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-06-18 12:01:35","endLine":222,"groupId":"1886","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespaceAndLostSessionAlt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/0e/66f0e932d8537ced8ee89b02a7d521729903a3.src","preCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server = new TestingServer(server.getPort(), server.getTempDirectory());\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"2337b64fc5a1cfbbcbe462560cb0a8d2fef22c0a","commitMessage":"@@@Merge branch 'CURATOR-114' of github.com:cammckenzie/curator into CURATOR-114\n","date":"2014-06-18 12:01:35","modifiedFileCount":"11","status":"M","submitter":"randgalt"},{"authorTime":"2017-05-30 19:45:55","codes":[{"authorDate":"2017-05-30 19:45:55","commitOrder":4,"curCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2017-05-30 19:46:33","endLine":99,"groupId":"1886","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLostSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/50/692d2f79e1656808894ba52053916a8e7f9240.src","preCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2017-05-30 19:45:55","commitOrder":4,"curCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2017-05-30 19:46:33","endLine":225,"groupId":"1886","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithNamespaceAndLostSessionAlt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/50/692d2f79e1656808894ba52053916a8e7f9240.src","preCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"3ee1fdb809996a3bd07809fdbac6c66b3dc9fd94","commitMessage":"@@@Closes #221\n\nSquashed commit of the following:\n\ncommit 82712183bb06534f470055624913682bc71fe3b2\nMerge: e31b0736 df2e447b\nAuthor: randgalt <randgalt@apache.org>\nDate:   Tue May 30 06:45:15 2017 -0500\n\n    Merge branch 'master' into CURATOR-411\n\ncommit e31b0736d9356de390798a59c2c41aa1e2e8bd56\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 29 14:03:41 2017 -0500\n\n    disable testNewMembers until it's better understood\n\ncommit d4f15297d3594b80b94cf686210999f9c141d5b4\nAuthor: randgalt <randgalt@apache.org>\nDate:   Sun May 28 09:10:38 2017 -0500\n\n    In testNewMembers the smallCluster wasn't getting closed at the end of the test.\n\ncommit 9403703ad94d6d2e54d4cf393a24affab130f2d1\nAuthor: randgalt <randgalt@apache.org>\nDate:   Sun May 28 09:10:16 2017 -0500\n\n    changed exceptions to logging. This is test code\n\ncommit a0ab8772ca89a07dcc298705c06d18c73d218242\nAuthor: randgalt <randgalt@apache.org>\nDate:   Thu May 11 10:23:34 2017 +0200\n\n    Allow KeeperException.SessionExpiredException on all the tests\n\ncommit 5e97d0f3c53a403b898381e0a90cc0d0b8375c3f\nAuthor: randgalt <randgalt@apache.org>\nDate:   Thu May 11 00:39:40 2017 +0200\n\n    In testNewMembers.  make sure client connects to one of the nodes in the small cluster to avoid connection loss exceptions\n\ncommit 96cecb2bbeec6e2deeac2e74188f83d2d0744b65\nAuthor: randgalt <randgalt@apache.org>\nDate:   Wed May 10 13:38:32 2017 +0200\n\n    KeeperException.SessionExpiredException is also valid for testWithNamespaceAndLostSessionAlt\n\ncommit 51eaa426e681c6521b0e313d822d524a9d4efbe1\nAuthor: randgalt <randgalt@apache.org>\nDate:   Wed May 10 13:33:05 2017 +0200\n\n    Only change from 5 to 4 to avoid flaky test\n\ncommit fb972db618eec11d350fc490010b014b8e3523fc\nAuthor: randgalt <randgalt@apache.org>\nDate:   Wed May 10 13:32:52 2017 +0200\n\n    don't clear quorumPeer as it might cause an NPE\n\ncommit 88d56219e3be026e453a5ef254bee3771d5b018b\nAuthor: randgalt <randgalt@apache.org>\nDate:   Tue May 9 12:40:50 2017 +0200\n\n    disable testMissedDelete() for now\n\ncommit 27ddd8c90042ca7abc667edb63504d081a1ca1b4\nAuthor: randgalt <randgalt@apache.org>\nDate:   Tue May 9 10:50:35 2017 +0200\n\n    overload setState() to avoid bogus log message\n\ncommit 70588f92e3dc7162f1e0df12ad0c09c92ab86b32\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 8 23:51:25 2017 +0200\n\n    extend BaseClassForTests so that retries occur\n\ncommit 4813b7924ecb6f0a2c4836e3e167e220a35f5314\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 8 23:29:49 2017 +0200\n\n    Turn off JMX logging\n\ncommit 3fa5143d6692bb18dba0d21a28328de032482d6f\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 8 19:43:16 2017 +0200\n\n    connection string cannot be empty\n\ncommit 0d1aa7ed1f3fef2b9cdb1e3a7f15d6e6ae85dac0\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 8 19:37:06 2017 +0200\n\n    Have to call setReconfigEnabled(true) and set the super-user Auth to get reconfig to work\n\ncommit 5407746c37c6ee08bbefe6632e25f5790226180c\nMerge: 872bfb02 32a7755b\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 8 06:15:40 2017 +0200\n\n    Merge branch 'master' into CURATOR-411\n\ncommit 872bfb0285dc4807d873b9ee2707b0f6044747f6\nAuthor: randgalt <randgalt@apache.org>\nDate:   Mon May 8 06:01:45 2017 +0200\n\n    Added a method to Timing to take from a queue with timeouts and applied it to tests that needed it\n","date":"2017-05-30 19:46:33","modifiedFileCount":"14","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                fail();\n            }\n            catch ( KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e )\n            {\n                \r\n            }\n            assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":104,"groupId":"10132","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testLostSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4c/e804a49ed34313a93822f841d5eef8733588d2.src","preCode":"    public void     testLostSession() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new ExponentialBackoffRetry(100, 3));\n        try\n        {\n            client.start();\n\n            client.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            client.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                client.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(client.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                fail();\n            }\n            catch ( KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e )\n            {\n                \r\n            }\n            assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":230,"groupId":"10132","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testWithNamespaceAndLostSessionAlt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/4c/e804a49ed34313a93822f841d5eef8733588d2.src","preCode":"    public void     testWithNamespaceAndLostSessionAlt() throws Exception\n    {\n        Timing                  timing = new Timing();\n        CuratorFramework        client = CuratorFrameworkFactory.builder().connectString(server.getConnectString())\n            .sessionTimeoutMs(timing.session())\n            .connectionTimeoutMs(timing.connection())\n            .retryPolicy(new ExponentialBackoffRetry(100, 3))\n            .build();\n        try\n        {\n            client.start();\n\n            CuratorFramework        namespaceClient = client.usingNamespace(\"foo\");\n            namespaceClient.create().forPath(\"/test-me\");\n\n            final CountDownLatch            latch = new CountDownLatch(1);\n            final Semaphore                 semaphore = new Semaphore(0);\n            ConnectionStateListener         listener = new ConnectionStateListener()\n            {\n                @Override\n                public void stateChanged(CuratorFramework client, ConnectionState newState)\n                {\n                    if ( (newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED) )\n                    {\n                        semaphore.release();\n                    }\n                    else if ( newState == ConnectionState.RECONNECTED )\n                    {\n                        latch.countDown();\n                    }\n                }\n            };\n            namespaceClient.getConnectionStateListenable().addListener(listener);\n            server.stop();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n            try\n            {\n                namespaceClient.delete().guaranteed().forPath(\"/test-me\");\n                Assert.fail();\n            }\n            catch ( KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e )\n            {\n                \r\n            }\n            Assert.assertTrue(timing.acquireSemaphore(semaphore));\n\n            timing.sleepABit();\n\n            server.restart();\n            Assert.assertTrue(timing.awaitLatch(latch));\n\n            timing.sleepABit();\n\n            Assert.assertNull(namespaceClient.checkExists().forPath(\"/test-me\"));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
