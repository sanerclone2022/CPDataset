[{"authorTime":"2011-01-05 09:58:41","codes":[{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareSelectTwoSetsOfAuthorsProc(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectTwoSetsOfAuthors\", new StaticSqlSource(config,\"{call selectTwoSetsOfAuthors(?,?)}\"), SqlCommandType.SELECT)\n        .statementType(StatementType.CALLABLE)\n        .parameterMap(new ParameterMap.Builder(\n            config, \"defaultParameterMap\", Author.class,\n            new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id1\", registry.getTypeHandler(int.class)).build());\n                add(new ParameterMapping.Builder(config, \"id2\", registry.getTypeHandler(int.class)).build());\n              }\n            }).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            ResultMap map = new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build();\n            add(map);\n            add(map);\n          }\n        }).build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":229,"groupId":"1417","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSelectTwoSetsOfAuthorsProc","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareSelectTwoSetsOfAuthorsProc(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectTwoSetsOfAuthors\", new StaticSqlSource(config,\"{call selectTwoSetsOfAuthors(?,?)}\"), SqlCommandType.SELECT)\n        .statementType(StatementType.CALLABLE)\n        .parameterMap(new ParameterMap.Builder(\n            config, \"defaultParameterMap\", Author.class,\n            new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id1\", registry.getTypeHandler(int.class)).build());\n                add(new ParameterMapping.Builder(config, \"id2\", registry.getTypeHandler(int.class)).build());\n              }\n            }).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            ResultMap map = new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build();\n            add(map);\n            add(map);\n          }\n        }).build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"B"},{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement createSelectAuthorWithIDof99MappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectAuthor\", new StaticSqlSource(config,\"SELECT * FROM author WHERE id = 99\"), SqlCommandType.SELECT)\n        .statementType(StatementType.STATEMENT)\n        .parameterMap(new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>()).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build());\n          }\n        }).build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":315,"groupId":"926","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSelectAuthorWithIDof99MappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement createSelectAuthorWithIDof99MappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectAuthor\", new StaticSqlSource(config,\"SELECT * FROM author WHERE id = 99\"), SqlCommandType.SELECT)\n        .statementType(StatementType.STATEMENT)\n        .parameterMap(new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>()).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build());\n          }\n        }).build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"B"}],"commitId":"2fe69c949eaaf4591241a69573c054dc87478f79","commitMessage":"@@@Fix for http://code.google.com/p/mybatis/issues/detail?id=84 .  http://code.google.com/p/mybatis/issues/detail?id=83 .  and http://code.google.com/p/mybatis/issues/detail?id=81  - add keycolumn attribute.  and some doc fixes\n","date":"2011-01-05 09:58:41","modifiedFileCount":"6","status":"B","submitter":"Jeff Butler"},{"authorTime":"2019-01-20 20:20:45","codes":[{"authorDate":"2011-01-05 09:58:41","commitOrder":2,"curCode":"  public static MappedStatement prepareSelectTwoSetsOfAuthorsProc(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectTwoSetsOfAuthors\", new StaticSqlSource(config,\"{call selectTwoSetsOfAuthors(?,?)}\"), SqlCommandType.SELECT)\n        .statementType(StatementType.CALLABLE)\n        .parameterMap(new ParameterMap.Builder(\n            config, \"defaultParameterMap\", Author.class,\n            new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id1\", registry.getTypeHandler(int.class)).build());\n                add(new ParameterMapping.Builder(config, \"id2\", registry.getTypeHandler(int.class)).build());\n              }\n            }).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            ResultMap map = new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build();\n            add(map);\n            add(map);\n          }\n        }).build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":229,"groupId":"1417","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSelectTwoSetsOfAuthorsProc","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareSelectTwoSetsOfAuthorsProc(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectTwoSetsOfAuthors\", new StaticSqlSource(config,\"{call selectTwoSetsOfAuthors(?,?)}\"), SqlCommandType.SELECT)\n        .statementType(StatementType.CALLABLE)\n        .parameterMap(new ParameterMap.Builder(\n            config, \"defaultParameterMap\", Author.class,\n            new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id1\", registry.getTypeHandler(int.class)).build());\n                add(new ParameterMapping.Builder(config, \"id2\", registry.getTypeHandler(int.class)).build());\n              }\n            }).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            ResultMap map = new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build();\n            add(map);\n            add(map);\n          }\n        }).build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"N"},{"authorDate":"2019-01-20 20:20:45","commitOrder":2,"curCode":"  public static MappedStatement createSelectAuthorWithIDof99MappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectAuthor\", new StaticSqlSource(config,\"SELECT * FROM author WHERE id = 99\"), SqlCommandType.SELECT)\n        .statementType(StatementType.STATEMENT)\n        .parameterMap(new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<>()).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build());\n          }\n        }).build();\n    return ms;\n  }\n","date":"2019-01-20 20:20:45","endLine":347,"groupId":"926","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSelectAuthorWithIDof99MappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fc/8b4bd1faecdbb01935cc637bbc6a5e42467aba.src","preCode":"  public static MappedStatement createSelectAuthorWithIDof99MappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectAuthor\", new StaticSqlSource(config,\"SELECT * FROM author WHERE id = 99\"), SqlCommandType.SELECT)\n        .statementType(StatementType.STATEMENT)\n        .parameterMap(new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>()).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build());\n          }\n        }).build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"}],"commitId":"090013dc35b7912e478ebcb751e0f5ab35830b91","commitMessage":"@@@Merge pull request #1454 from kazuki43zoo/polish\n\nChange to use the diamond operator","date":"2019-01-20 20:20:45","modifiedFileCount":"58","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  static MappedStatement prepareSelectTwoSetsOfAuthorsProc(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    return new MappedStatement.Builder(config, \"selectTwoSetsOfAuthors\", new StaticSqlSource(config,\"{call selectTwoSetsOfAuthors(?,?)}\"), SqlCommandType.SELECT)\n        .statementType(StatementType.CALLABLE)\n        .parameterMap(new ParameterMap.Builder(\n            config, \"defaultParameterMap\", Author.class,\n            new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id1\", registry.getTypeHandler(int.class)).build());\n                add(new ParameterMapping.Builder(config, \"id2\", registry.getTypeHandler(int.class)).build());\n              }\n            }).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            ResultMap map = new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build();\n            add(map);\n            add(map);\n          }\n        }).build();\n  }\n","date":"2019-01-23 20:49:49","endLine":255,"groupId":"10736","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSelectTwoSetsOfAuthorsProc","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareSelectTwoSetsOfAuthorsProc(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectTwoSetsOfAuthors\", new StaticSqlSource(config,\"{call selectTwoSetsOfAuthors(?,?)}\"), SqlCommandType.SELECT)\n        .statementType(StatementType.CALLABLE)\n        .parameterMap(new ParameterMap.Builder(\n            config, \"defaultParameterMap\", Author.class,\n            new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id1\", registry.getTypeHandler(int.class)).build());\n                add(new ParameterMapping.Builder(config, \"id2\", registry.getTypeHandler(int.class)).build());\n              }\n            }).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            ResultMap map = new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build();\n            add(map);\n            add(map);\n          }\n        }).build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  static MappedStatement createSelectAuthorWithIDof99MappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    return new MappedStatement.Builder(config, \"selectAuthor\", new StaticSqlSource(config,\"SELECT * FROM author WHERE id = 99\"), SqlCommandType.SELECT)\n        .statementType(StatementType.STATEMENT)\n        .parameterMap(new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<>()).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build());\n          }\n        }).build();\n  }\n","date":"2019-01-23 20:49:49","endLine":335,"groupId":"10736","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createSelectAuthorWithIDof99MappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement createSelectAuthorWithIDof99MappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"selectAuthor\", new StaticSqlSource(config,\"SELECT * FROM author WHERE id = 99\"), SqlCommandType.SELECT)\n        .statementType(StatementType.STATEMENT)\n        .parameterMap(new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<>()).build())\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(new ResultMap.Builder(config, \"defaultResultMap\", Author.class, new ArrayList<ResultMapping>() {\n              {\n                add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class)).build());\n                add(new ResultMapping.Builder(config, \"username\", \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"password\", \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"email\", \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ResultMapping.Builder(config, \"bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n              }\n            }).build());\n          }\n        }).build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
