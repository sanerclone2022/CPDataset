[{"authorTime":"2011-12-09 08:03:24","codes":[{"authorDate":"2011-12-09 08:03:24","commitOrder":1,"curCode":"  public void shouldGetReadablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = MetaObject.forObject(rich);\n    String[] readables = meta.getGetterNames();\n    assertEquals(5, readables.length);\n    for (String readable : readables) {\n      assertTrue(meta.hasGetter(readable));\n      assertTrue(meta.hasGetter(\"richType.\" + readable));\n    }\n    assertTrue(meta.hasGetter(\"richType\"));\n  }\n","date":"2011-12-09 08:03:24","endLine":132,"groupId":"363","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetReadablePropertyNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e9/0d3c36043712fde1ed69daf01bbd7f3c86cca2.src","preCode":"  public void shouldGetReadablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = MetaObject.forObject(rich);\n    String[] readables = meta.getGetterNames();\n    assertEquals(5, readables.length);\n    for (String readable : readables) {\n      assertTrue(meta.hasGetter(readable));\n      assertTrue(meta.hasGetter(\"richType.\" + readable));\n    }\n    assertTrue(meta.hasGetter(\"richType\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2011-12-09 08:03:24","commitOrder":1,"curCode":"  public void shouldGetWriteablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = MetaObject.forObject(rich);\n    String[] writeables = meta.getSetterNames();\n    assertEquals(5, writeables.length);\n    for (String writeable : writeables) {\n      assertTrue(meta.hasSetter(writeable));\n      assertTrue(meta.hasSetter(\"richType.\" + writeable));\n    }\n    assertTrue(meta.hasSetter(\"richType\"));\n  }\n","date":"2011-12-09 08:03:24","endLine":145,"groupId":"363","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetWriteablePropertyNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e9/0d3c36043712fde1ed69daf01bbd7f3c86cca2.src","preCode":"  public void shouldGetWriteablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = MetaObject.forObject(rich);\n    String[] writeables = meta.getSetterNames();\n    assertEquals(5, writeables.length);\n    for (String writeable : writeables) {\n      assertTrue(meta.hasSetter(writeable));\n      assertTrue(meta.hasSetter(\"richType.\" + writeable));\n    }\n    assertTrue(meta.hasSetter(\"richType\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"e8cc000886bd21814f8ac91fc3dfc5c2104afa98","commitMessage":"@@@added lincese headers\n","date":"2011-12-09 08:03:24","modifiedFileCount":"769","status":"B","submitter":"Simone Tripodi"},{"authorTime":"2012-07-24 00:04:35","codes":[{"authorDate":"2012-07-24 00:04:35","commitOrder":2,"curCode":"  public void shouldGetReadablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = SystemMetaObject.forObject(rich);\n    String[] readables = meta.getGetterNames();\n    assertEquals(5, readables.length);\n    for (String readable : readables) {\n      assertTrue(meta.hasGetter(readable));\n      assertTrue(meta.hasGetter(\"richType.\" + readable));\n    }\n    assertTrue(meta.hasGetter(\"richType\"));\n  }\n","date":"2012-07-24 00:04:35","endLine":134,"groupId":"363","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetReadablePropertyNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2e/e12cae5e626213b58c430f4808c44618fd2a91.src","preCode":"  public void shouldGetReadablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = MetaObject.forObject(rich);\n    String[] readables = meta.getGetterNames();\n    assertEquals(5, readables.length);\n    for (String readable : readables) {\n      assertTrue(meta.hasGetter(readable));\n      assertTrue(meta.hasGetter(\"richType.\" + readable));\n    }\n    assertTrue(meta.hasGetter(\"richType\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2012-07-24 00:04:35","commitOrder":2,"curCode":"  public void shouldGetWriteablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = SystemMetaObject.forObject(rich);\n    String[] writeables = meta.getSetterNames();\n    assertEquals(5, writeables.length);\n    for (String writeable : writeables) {\n      assertTrue(meta.hasSetter(writeable));\n      assertTrue(meta.hasSetter(\"richType.\" + writeable));\n    }\n    assertTrue(meta.hasSetter(\"richType\"));\n  }\n","date":"2012-07-24 00:04:35","endLine":147,"groupId":"363","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetWriteablePropertyNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2e/e12cae5e626213b58c430f4808c44618fd2a91.src","preCode":"  public void shouldGetWriteablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = MetaObject.forObject(rich);\n    String[] writeables = meta.getSetterNames();\n    assertEquals(5, writeables.length);\n    for (String writeable : writeables) {\n      assertTrue(meta.hasSetter(writeable));\n      assertTrue(meta.hasSetter(\"richType.\" + writeable));\n    }\n    assertTrue(meta.hasSetter(\"richType\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"f2669ce50b49ef791874d75d2626a95c277c0ee0","commitMessage":"@@@ObjectFactory usage consistency. http://code.google.com/p/mybatis/issues/detail?id=631 \n","date":"2012-07-24 00:04:35","modifiedFileCount":"19","status":"M","submitter":"Frank Mart?nez"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldGetReadablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = SystemMetaObject.forObject(rich);\n    String[] readables = meta.getGetterNames();\n    assertEquals(5, readables.length);\n    for (String readable : readables) {\n      assertTrue(meta.hasGetter(readable));\n      assertTrue(meta.hasGetter(\"richType.\" + readable));\n    }\n    assertTrue(meta.hasGetter(\"richType\"));\n  }\n","date":"2019-01-23 20:49:49","endLine":134,"groupId":"105","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetReadablePropertyNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/cd/a00b90399b0160b31f09da5ee9841cd2f7084d.src","preCode":"  public void shouldGetReadablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = SystemMetaObject.forObject(rich);\n    String[] readables = meta.getGetterNames();\n    assertEquals(5, readables.length);\n    for (String readable : readables) {\n      assertTrue(meta.hasGetter(readable));\n      assertTrue(meta.hasGetter(\"richType.\" + readable));\n    }\n    assertTrue(meta.hasGetter(\"richType\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldGetWriteablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = SystemMetaObject.forObject(rich);\n    String[] writeables = meta.getSetterNames();\n    assertEquals(5, writeables.length);\n    for (String writeable : writeables) {\n      assertTrue(meta.hasSetter(writeable));\n      assertTrue(meta.hasSetter(\"richType.\" + writeable));\n    }\n    assertTrue(meta.hasSetter(\"richType\"));\n  }\n","date":"2019-01-23 20:49:49","endLine":147,"groupId":"105","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetWriteablePropertyNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/cd/a00b90399b0160b31f09da5ee9841cd2f7084d.src","preCode":"  public void shouldGetWriteablePropertyNames() {\n    RichType rich = new RichType();\n    MetaObject meta = SystemMetaObject.forObject(rich);\n    String[] writeables = meta.getSetterNames();\n    assertEquals(5, writeables.length);\n    for (String writeable : writeables) {\n      assertTrue(meta.hasSetter(writeable));\n      assertTrue(meta.hasSetter(\"richType.\" + writeable));\n    }\n    assertTrue(meta.hasSetter(\"richType\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
