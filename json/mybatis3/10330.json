[{"authorTime":"2010-11-01 01:25:39","codes":[{"authorDate":"2010-09-05 22:21:04","commitOrder":2,"curCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    final SqlSession session = factory.openSession();\n    \n    PostMapper mapper = session.getMapper(PostMapper.class);\n    List<AnnoPost> posts = mapper.getPosts(101);\n\n\n    assertEquals(3,posts.size());\n    assertEquals(3,posts.get(0).getTags().size());\n    assertEquals(1,posts.get(1).getTags().size());\n    assertEquals(0,posts.get(2).getTags().size());\n\n    session.close();\n\n  }\n","date":"2010-09-05 22:21:04","endLine":37,"groupId":"1982","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMessageForEmptyDatabase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/4e/d56dc855bf8ac9e6a2297cece9487a409b3d15.src","preCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    final SqlSession session = factory.openSession();\n    \n    PostMapper mapper = session.getMapper(PostMapper.class);\n    List<AnnoPost> posts = mapper.getPosts(101);\n\n\n    assertEquals(3,posts.size());\n    assertEquals(3,posts.get(0).getTags().size());\n    assertEquals(1,posts.get(1).getTags().size());\n    assertEquals(0,posts.get(2).getTags().size());\n\n    session.close();\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/manyanno/ManyAnnoTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"NB"},{"authorDate":"2010-11-01 01:25:39","commitOrder":2,"curCode":"  public void shouldfindThreeSpecificPosts() throws Exception {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    } finally {\n      session.close();\n    }\n  }\n","date":"2010-11-01 01:25:39","endLine":82,"groupId":"690","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldfindThreeSpecificPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/95/a8f67de3f90d271ea60572792424fc757eff86.src","preCode":"  public void shouldfindThreeSpecificPosts() throws Exception {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"50afa69602774c3582f28e6bf54f53808fa07a1e","commitMessage":"@@@Added selectMap functionality for selecting Maps of results keyed by a property\n","date":"2010-11-01 01:25:39","modifiedFileCount":"8","status":"M","submitter":"Clinton Begin"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2010-09-05 22:21:04","commitOrder":3,"curCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    final SqlSession session = factory.openSession();\n    \n    PostMapper mapper = session.getMapper(PostMapper.class);\n    List<AnnoPost> posts = mapper.getPosts(101);\n\n\n    assertEquals(3,posts.size());\n    assertEquals(3,posts.get(0).getTags().size());\n    assertEquals(1,posts.get(1).getTags().size());\n    assertEquals(0,posts.get(2).getTags().size());\n\n    session.close();\n\n  }\n","date":"2010-09-05 22:21:04","endLine":37,"groupId":"1982","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMessageForEmptyDatabase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/4e/d56dc855bf8ac9e6a2297cece9487a409b3d15.src","preCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    final SqlSession session = factory.openSession();\n    \n    PostMapper mapper = session.getMapper(PostMapper.class);\n    List<AnnoPost> posts = mapper.getPosts(101);\n\n\n    assertEquals(3,posts.size());\n    assertEquals(3,posts.get(0).getTags().size());\n    assertEquals(1,posts.get(1).getTags().size());\n    assertEquals(0,posts.get(2).getTags().size());\n\n    session.close();\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/manyanno/ManyAnnoTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"N"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void shouldfindThreeSpecificPosts() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":132,"groupId":"690","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldfindThreeSpecificPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fa/76a34254424e23cd2d0bd6bdb2cc03ee77681e.src","preCode":"  public void shouldfindThreeSpecificPosts() throws Exception {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 21:34:51","commitOrder":4,"curCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    try (SqlSession session = factory.openSession()) {\n\n      PostMapper mapper = session.getMapper(PostMapper.class);\n      List<AnnoPost> posts = mapper.getPosts(101);\n\n\n      assertEquals(3, posts.size());\n      assertEquals(3, posts.get(0).getTags().size());\n      assertEquals(1, posts.get(1).getTags().size());\n      assertEquals(0, posts.get(2).getTags().size());\n    }\n  }\n","date":"2018-05-03 21:34:51","endLine":50,"groupId":"1982","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMessageForEmptyDatabase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/22/829fd04c9b1c4790eab37348cd0a755ee90c55.src","preCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    final SqlSession session = factory.openSession();\n    \n    PostMapper mapper = session.getMapper(PostMapper.class);\n    List<AnnoPost> posts = mapper.getPosts(101);\n\n\n    assertEquals(3,posts.size());\n    assertEquals(3,posts.get(0).getTags().size());\n    assertEquals(1,posts.get(1).getTags().size());\n    assertEquals(0,posts.get(2).getTags().size());\n\n    session.close();\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/manyanno/ManyAnnoTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  public void shouldfindThreeSpecificPosts() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":132,"groupId":"690","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldfindThreeSpecificPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fa/76a34254424e23cd2d0bd6bdb2cc03ee77681e.src","preCode":"  public void shouldfindThreeSpecificPosts() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"N"}],"commitId":"d5f024c6256b5deb9d79dc8b35ebd825e47e679c","commitMessage":"@@@Merge pull request #1270 from kazuki43zoo/try-with-resources\n\nChange to use try-with-resources on test","date":"2018-05-03 21:34:51","modifiedFileCount":"150","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    try (SqlSession session = factory.openSession()) {\n\n      PostMapper mapper = session.getMapper(PostMapper.class);\n      List<AnnoPost> posts = mapper.getPosts(101);\n\n\n      assertEquals(3, posts.size());\n      assertEquals(3, posts.get(0).getTags().size());\n      assertEquals(1, posts.get(1).getTags().size());\n      assertEquals(0, posts.get(2).getTags().size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":50,"groupId":"10330","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMessageForEmptyDatabase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/cd/9553a77acba4342643b4a77cda253a6c78c0f8.src","preCode":"  public void testGetMessageForEmptyDatabase() throws Exception {\n    final Environment environment = new Environment(\"test\", new JdbcTransactionFactory(), BaseDataTest.createBlogDataSource());\n    final Configuration config = new Configuration(environment);\n    config.addMapper(PostMapper.class);\n    final SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(config);\n    try (SqlSession session = factory.openSession()) {\n\n      PostMapper mapper = session.getMapper(PostMapper.class);\n      List<AnnoPost> posts = mapper.getPosts(101);\n\n\n      assertEquals(3, posts.size());\n      assertEquals(3, posts.get(0).getTags().size());\n      assertEquals(1, posts.get(1).getTags().size());\n      assertEquals(0, posts.get(2).getTags().size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/manyanno/ManyAnnoTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void shouldFindThreeSpecificPosts() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":129,"groupId":"10330","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFindThreeSpecificPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/63/aa65df5668722e788754d9795bcd84541d81fa.src","preCode":"  public void shouldfindThreeSpecificPosts() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundAuthorMapper mapper = session.getMapper(BoundAuthorMapper.class);\n      List<Post> posts = mapper.findThreeSpecificPosts(1, new RowBounds(1, 1), 3, 5);\n      assertEquals(1, posts.size());\n      assertEquals(3, posts.get(0).getId());\n      session.rollback();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
