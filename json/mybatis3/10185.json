[{"authorTime":"2014-04-21 01:24:02","codes":[{"authorDate":"2011-01-01 03:44:45","commitOrder":3,"curCode":"    public void testLoadLazyImmutablePOJO() {\n        final SqlSession session = factory.openSession();\n        try {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        } finally {\n            session.close();\n        }\n    }\n","date":"2011-01-01 03:44:45","endLine":77,"groupId":"1475","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadLazyImmutablePOJO","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/64/e377b33cd77c0615f02d878eaf20f1a39e0ee0.src","preCode":"    public void testLoadLazyImmutablePOJO() {\n        final SqlSession session = factory.openSession();\n        try {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        } finally {\n            session.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/lazy_immutable/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"NB"},{"authorDate":"2014-04-21 01:24:02","commitOrder":3,"curCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    final SqlSession session = factory.openSession();\n    try {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getId());\n      assertEquals(POJO_DESCRIPTION, pojo.getDescription());\n    } finally {\n      session.close();\n    }\n  }\n","date":"2014-04-21 01:24:02","endLine":81,"groupId":"1475","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldLoadImmutablePOJOBySignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5b/476d29fbda238d25fa3e2532acec81e1ac3859.src","preCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    final SqlSession session = factory.openSession();\n    try {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getId());\n      assertEquals(POJO_DESCRIPTION, pojo.getDescription());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/immutable_constructor/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"089e37026f737339e8f0405a5e833d520082da1d","commitMessage":"@@@Test failure if no matching constructor is found. Related to #184.","date":"2014-04-21 01:24:02","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2016-11-12 21:47:31","codes":[{"authorDate":"2011-01-01 03:44:45","commitOrder":4,"curCode":"    public void testLoadLazyImmutablePOJO() {\n        final SqlSession session = factory.openSession();\n        try {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        } finally {\n            session.close();\n        }\n    }\n","date":"2011-01-01 03:44:45","endLine":77,"groupId":"1475","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadLazyImmutablePOJO","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/64/e377b33cd77c0615f02d878eaf20f1a39e0ee0.src","preCode":"    public void testLoadLazyImmutablePOJO() {\n        final SqlSession session = factory.openSession();\n        try {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        } finally {\n            session.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/lazy_immutable/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2016-11-12 21:47:31","commitOrder":4,"curCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    final SqlSession session = factory.openSession();\n    try {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    } finally {\n      session.close();\n    }\n  }\n","date":"2016-11-12 21:47:31","endLine":81,"groupId":"1475","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldLoadImmutablePOJOBySignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f8/c8a3eafcea8c76e0eb83f71c1ca73cbe5ce939.src","preCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    final SqlSession session = factory.openSession();\n    try {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getId());\n      assertEquals(POJO_DESCRIPTION, pojo.getDescription());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/immutable_constructor/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"222b3f9b7a7335592f3dae88adea96d50099e4e1","commitMessage":"@@@Merge pull request #833 from kazuki43zoo/fix-auto-mapping-using-constructor-args\n\nFix auto mapping using constructor args","date":"2016-11-12 21:47:31","modifiedFileCount":"3","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":5,"curCode":"    public void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        }\n    }\n","date":"2018-05-03 14:04:04","endLine":76,"groupId":"1475","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadLazyImmutablePOJO","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/57/fdc395be915bc3c0b7d5894b0357cf0a1f0d75.src","preCode":"    public void testLoadLazyImmutablePOJO() {\n        final SqlSession session = factory.openSession();\n        try {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        } finally {\n            session.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/lazy_immutable/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":5,"curCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":78,"groupId":"1475","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldLoadImmutablePOJOBySignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/de/697c9c6737dbe49765bacd99380db96fe50218.src","preCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    final SqlSession session = factory.openSession();\n    try {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/immutable_constructor/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":6,"curCode":"    public void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(pojo.getDescription(), \"Description should not be null.\");\n            assertFalse(pojo.getDescription().length() == 0, \"Description should not be empty.\");\n        }\n    }\n","date":"2019-01-07 09:04:39","endLine":56,"groupId":"1475","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadLazyImmutablePOJO","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/25/8a6868297d6d8449dff55350f21f9370538f56.src","preCode":"    public void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(\"Description should not be null.\", pojo.getDescription());\n            assertFalse(\"Description should not be empty.\", pojo.getDescription().length() == 0);\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/lazy_immutable/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":6,"curCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":78,"groupId":"1475","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldLoadImmutablePOJOBySignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/de/697c9c6737dbe49765bacd99380db96fe50218.src","preCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/immutable_constructor/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":7,"curCode":"    void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(pojo.getDescription(), \"Description should not be null.\");\n            assertFalse(pojo.getDescription().length() == 0, \"Description should not be empty.\");\n        }\n    }\n","date":"2019-01-23 20:49:49","endLine":56,"groupId":"1475","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadLazyImmutablePOJO","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e4/a503611d1dc32667a73339b4b376ad81b8d3cf.src","preCode":"    public void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(pojo.getDescription(), \"Description should not be null.\");\n            assertFalse(pojo.getDescription().length() == 0, \"Description should not be empty.\");\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/lazy_immutable/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":7,"curCode":"  void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":59,"groupId":"1475","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldLoadImmutablePOJOBySignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/23/c3c52dd84208ccf350946d0ae4aa388be7b466.src","preCode":"  public void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/immutable_constructor/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-06-27 07:56:01","commitOrder":8,"curCode":"    void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(pojo.getDescription(), \"Description should not be null.\");\n          assertNotEquals(0, pojo.getDescription().length(), \"Description should not be empty.\");\n        }\n    }\n","date":"2019-06-27 07:56:01","endLine":56,"groupId":"10185","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadLazyImmutablePOJO","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e7/f9585ef83271d35c836bc270786024e10a717a.src","preCode":"    void testLoadLazyImmutablePOJO() {\n        try (SqlSession session = factory.openSession()) {\n            final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n            final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n            assertEquals(POJO_ID, pojo.getId());\n            assertNotNull(pojo.getDescription(), \"Description should not be null.\");\n            assertFalse(pojo.getDescription().length() == 0, \"Description should not be empty.\");\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/lazy_immutable/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":8,"curCode":"  void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":59,"groupId":"10185","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldLoadImmutablePOJOBySignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/23/c3c52dd84208ccf350946d0ae4aa388be7b466.src","preCode":"  void shouldLoadImmutablePOJOBySignature() {\n    try (SqlSession session = factory.openSession()) {\n      final ImmutablePOJOMapper mapper = session.getMapper(ImmutablePOJOMapper.class);\n      final ImmutablePOJO pojo = mapper.getImmutablePOJO(POJO_ID);\n\n      assertEquals(POJO_ID, pojo.getImmutableId());\n      assertEquals(POJO_DESCRIPTION, pojo.getImmutableDescription());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/immutable_constructor/ImmutablePOJOTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"}],"commitId":"b9742dd4ab8588c9340e3072f45422b932f9f89e","commitMessage":"@@@Merge pull request #1583 from slievrly/junit\n\nsimplify junit","date":"2019-06-27 07:56:01","modifiedFileCount":"4","status":"M","submitter":"Jeremy Landis"}]
