[{"authorTime":"2011-11-25 13:53:27","codes":[{"authorDate":"2011-11-25 13:53:27","commitOrder":1,"curCode":"  public void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2011-11-25 13:53:27","endLine":362,"groupId":"2017","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFetchOneOrphanedPostWithNoBlog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/63/63e2e00399b44f5e2e2432dbd786aba6e9ddc3.src","preCode":"  public void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":343,"status":"B"},{"authorDate":"2011-11-25 13:53:27","commitOrder":1,"curCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2011-11-25 13:53:27","endLine":385,"groupId":"1168","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFetchPostWithBlogWithCompositeKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/63/63e2e00399b44f5e2e2432dbd786aba6e9ddc3.src","preCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":365,"status":"B"}],"commitId":"29ce8784eb0b9537bd0cfa476cd1826c8e9b910a","commitMessage":"@@@http://code.google.com/p/mybatis/issues/detail?id=382  (feature). Moves connection retrieval to Transaction. Transaction delays connection retrieval till getConnection() is called.\nUpdated also Spring so MyBatis lazy loads get connections from Spring TX Manager\n\n","date":"2011-11-25 13:53:27","modifiedFileCount":"20","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2014-03-03 01:03:15","codes":[{"authorDate":"2014-03-03 01:03:15","commitOrder":2,"curCode":"  public void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-03 01:03:15","endLine":371,"groupId":"2017","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFetchOneOrphanedPostWithNoBlog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/e98cc172941afb6d87887362a9aa816ff27181.src","preCode":"  public void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"},{"authorDate":"2014-03-03 01:03:15","commitOrder":2,"curCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-03 01:03:15","endLine":393,"groupId":"1168","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFetchPostWithBlogWithCompositeKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/e98cc172941afb6d87887362a9aa816ff27181.src","preCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"M"}],"commitId":"4db88a95e8d673f6f500a2c8936245cf084a2c3a","commitMessage":"@@@Speeding up tests","date":"2014-03-03 01:03:15","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-03-03 01:03:15","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":373,"groupId":"2017","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFetchOneOrphanedPostWithNoBlog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0a/d4226963d47c942c402ee08a0e8b871a60697d.src","preCode":"  public void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2014-03-03 01:03:15","commitOrder":3,"curCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-03 01:03:15","endLine":393,"groupId":"1168","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFetchPostWithBlogWithCompositeKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/e98cc172941afb6d87887362a9aa816ff27181.src","preCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"N"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2020-03-14 23:29:33","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":373,"groupId":"10744","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFetchOneOrphanedPostWithNoBlog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0a/d4226963d47c942c402ee08a0e8b871a60697d.src","preCode":"  void shouldFetchOneOrphanedPostWithNoBlog() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareComplexSelectBlogMappedStatement(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 5, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      executor.rollback(true);\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNull(post.getBlog());\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"N"},{"authorDate":"2020-03-14 23:29:33","commitOrder":4,"curCode":"  void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2020-03-14 23:29:33","endLine":395,"groupId":"10744","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFetchPostWithBlogWithCompositeKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/09/e7997c847959d1b320ee14f6e76fcbd782d96d.src","preCode":"  public void shouldFetchPostWithBlogWithCompositeKey() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectBlog = ExecutorTestHelper.prepareSelectBlogByIdAndAuthor(config);\n      MappedStatement selectPost = ExecutorTestHelper.prepareSelectPostWithBlogByAuthorMappedStatement(config);\n      config.addMappedStatement(selectBlog);\n      config.addMappedStatement(selectPost);\n      List<Post> posts = executor.query(selectPost, 2, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      executor.flushStatements();\n      assertEquals(1, posts.size());\n      Post post = posts.get(0);\n      assertNotNull(post.getBlog());\n      assertEquals(101, post.getBlog().getAuthor().getId());\n      executor.rollback(true);\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"M"}],"commitId":"42818bf7c2d43455abe3df5d5940be2324cdc271","commitMessage":"@@@Remove unnecessary public access modifier in tests\n","date":"2020-03-14 23:29:33","modifiedFileCount":"19","status":"M","submitter":"Kazuki Shimizu"}]
