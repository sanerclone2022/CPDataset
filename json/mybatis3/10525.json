[{"authorTime":"2018-11-04 15:52:14","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":6,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":89,"groupId":"47","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/61/2cac54f421cbe01e21297dd4b6dc66c2fa8ebf.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"NB"},{"authorDate":"2018-11-04 15:52:14","commitOrder":6,"curCode":"  public void shouldGetAllCarsAndDetectAssociationType() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsAndDetectAssociationType();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","date":"2018-11-04 15:54:52","endLine":96,"groupId":"563","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsAndDetectAssociationType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/14/4ace8c0aff2a853b8b8f2984b443893ac63533.src","preCode":"  public void shouldGetAllCarsAndDetectAssociationType() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsAndDetectAssociationType();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"5e1bcbaf6f3aba3f763aafe6690a0c35accce1c3","commitMessage":"@@@Merge pull request #1383 from berniegp/berniegp/1381\n\nA failing test case for #1381 .\n","date":"2018-11-04 15:54:52","modifiedFileCount":"2","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":7,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assertions.assertEquals(1, cars.size());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":81,"groupId":"47","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/40/693fcb44673cf3add8cf4fcdf63599fe46bb21.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":7,"curCode":"  public void shouldGetAllCarsAndDetectAssociationType() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsAndDetectAssociationType();\n      Assertions.assertEquals(4, cars.size());\n      Assertions.assertEquals(\"VW\", cars.get(0).getType());\n      Assertions.assertNotNull(cars.get(0).getEngine());\n      Assertions.assertNull(cars.get(0).getBrakes());\n      Assertions.assertEquals(\"Opel\", cars.get(1).getType());\n      Assertions.assertNull(cars.get(1).getEngine());\n      Assertions.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":96,"groupId":"2532","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsAndDetectAssociationType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/40/693fcb44673cf3add8cf4fcdf63599fe46bb21.src","preCode":"  public void shouldGetAllCarsAndDetectAssociationType() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsAndDetectAssociationType();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":8,"curCode":"  void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assertions.assertEquals(1, cars.size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":81,"groupId":"10525","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b9/75319cef254502a60399ead4b6c0c1378d1db3.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assertions.assertEquals(1, cars.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":8,"curCode":"  void shouldGetAllCarsAndDetectAssociationType() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsAndDetectAssociationType();\n      Assertions.assertEquals(4, cars.size());\n      Assertions.assertEquals(\"VW\", cars.get(0).getType());\n      Assertions.assertNotNull(cars.get(0).getEngine());\n      Assertions.assertNull(cars.get(0).getBrakes());\n      Assertions.assertEquals(\"Opel\", cars.get(1).getType());\n      Assertions.assertNull(cars.get(1).getEngine());\n      Assertions.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":96,"groupId":"10525","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsAndDetectAssociationType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b9/75319cef254502a60399ead4b6c0c1378d1db3.src","preCode":"  public void shouldGetAllCarsAndDetectAssociationType() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsAndDetectAssociationType();\n      Assertions.assertEquals(4, cars.size());\n      Assertions.assertEquals(\"VW\", cars.get(0).getType());\n      Assertions.assertNotNull(cars.get(0).getEngine());\n      Assertions.assertNull(cars.get(0).getBrakes());\n      Assertions.assertEquals(\"Opel\", cars.get(1).getType());\n      Assertions.assertNull(cars.get(1).getEngine());\n      Assertions.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
