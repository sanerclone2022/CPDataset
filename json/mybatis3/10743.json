[{"authorTime":"2014-03-02 23:51:44","codes":[{"authorDate":"2014-03-02 23:51:44","commitOrder":1,"curCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      connection.rollback();\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-02 23:51:44","endLine":263,"groupId":"529","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectDiscriminatedPost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d1/365f8631a4bf36ab32bd603876b78f564f40fd.src","preCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      connection.rollback();\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"},{"authorDate":"2014-03-02 23:51:44","commitOrder":1,"curCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      connection.rollback();\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-02 23:51:44","endLine":286,"groupId":"529","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelect2DiscriminatedPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d1/365f8631a4bf36ab32bd603876b78f564f40fd.src","preCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      connection.rollback();\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"B"}],"commitId":"9060fb608c65c9df4f083c2c6227db3a7e5a8321","commitMessage":"@@@Cleaning tests","date":"2014-03-02 23:51:44","modifiedFileCount":"4","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2014-03-03 01:03:15","codes":[{"authorDate":"2014-03-03 01:03:15","commitOrder":2,"curCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-03 01:03:15","endLine":259,"groupId":"2481","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectDiscriminatedPost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/e98cc172941afb6d87887362a9aa816ff27181.src","preCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      connection.rollback();\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2014-03-03 01:03:15","commitOrder":2,"curCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-03 01:03:15","endLine":280,"groupId":"2482","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelect2DiscriminatedPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/e98cc172941afb6d87887362a9aa816ff27181.src","preCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n    DataSource ds = createBlogDataSource();\n    Connection connection = ds.getConnection();\n    Executor executor = createExecutor(new JdbcTransaction(connection));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      connection.rollback();\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"}],"commitId":"4db88a95e8d673f6f500a2c8936245cf084a2c3a","commitMessage":"@@@Speeding up tests","date":"2014-03-03 01:03:15","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-03-03 01:03:15","codes":[{"authorDate":"2014-03-07 02:34:01","commitOrder":3,"curCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.close(false);\n    }\n  }\n","date":"2014-03-07 02:37:16","endLine":258,"groupId":"2481","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectDiscriminatedPost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/1e/7da3db609643bacf6166da62a92ab884ba609c.src","preCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2014-03-03 01:03:15","commitOrder":3,"curCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2014-03-03 01:03:15","endLine":280,"groupId":"2482","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelect2DiscriminatedPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/e98cc172941afb6d87887362a9aa816ff27181.src","preCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n    \n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"N"}],"commitId":"074cef5563ff25429e08ed1a01298eaade18746c","commitMessage":"@@@Closes #152. Indentation for nested selects logging","date":"2014-03-07 02:37:16","modifiedFileCount":"7","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldSelectDiscriminatedPost() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.close(false);\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":260,"groupId":"10743","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectDiscriminatedPost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0a/d4226963d47c942c402ee08a0e8b871a60697d.src","preCode":"  public void shouldSelectDiscriminatedPost() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER);\n      assertEquals(5, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldSelect2DiscriminatedPosts() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":281,"groupId":"10743","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelect2DiscriminatedPosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0a/d4226963d47c942c402ee08a0e8b871a60697d.src","preCode":"  public void shouldSelect2DiscriminatedPosts() throws Exception {\n\n    Executor executor = createExecutor(new JdbcTransaction(ds, null, false));\n    try {\n      MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config);\n      List<Map<String,String>> products = executor.query(selectStatement, null, new RowBounds(2, 2), Executor.NO_RESULT_HANDLER);\n      assertEquals(2, products.size());\n      for (Map<String,String> m : products) {\n        if (\"IMAGES\".equals(m.get(\"SECTION\"))) {\n          assertNull(m.get(\"subject\"));\n        } else {\n          assertNotNull(m.get(\"subject\"));\n        }\n      }\n    } finally {\n      executor.rollback(true);\n      executor.close(false);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/BaseExecutorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
