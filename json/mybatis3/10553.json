[{"authorTime":"2015-08-05 06:04:30","codes":[{"authorDate":"2015-08-05 06:04:30","commitOrder":1,"curCode":"    public void testCursorMultipleHasNextCall() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        Mapper mapper = sqlSession.getMapper(Mapper.class);\n        Cursor<User> usersCursor = mapper.getAllUsers();\n\n        try {\n            Iterator<User> iterator = usersCursor.iterator();\n\n            Assert.assertEquals(-1, usersCursor.getCurrentIndex());\n\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            \r\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2015-08-05 06:04:30","endLine":201,"groupId":"1652","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCursorMultipleHasNextCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/45/1a1c0990a2e55d5b24062a1f2295ca2850dc0a.src","preCode":"    public void testCursorMultipleHasNextCall() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        Mapper mapper = sqlSession.getMapper(Mapper.class);\n        Cursor<User> usersCursor = mapper.getAllUsers();\n\n        try {\n            Iterator<User> iterator = usersCursor.iterator();\n\n            Assert.assertEquals(-1, usersCursor.getCurrentIndex());\n\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            \r\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"},{"authorDate":"2015-08-05 06:04:30","commitOrder":1,"curCode":"    public void testCursorMultipleIteratorCall() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        Mapper mapper = sqlSession.getMapper(Mapper.class);\n        Cursor<User> usersCursor = mapper.getAllUsers();\n\n        Iterator<User> iterator2 = null;\n        try {\n            Iterator<User> iterator = usersCursor.iterator();\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            iterator2 = usersCursor.iterator();\n            iterator2.hasNext();\n            Assert.fail(\"We should have failed since calling iterator several times is not allowed\");\n        } catch (IllegalStateException e) {\n            Assert.assertNull(\"iterator2 should be null\", iterator2);\n            return;\n        } finally {\n            sqlSession.close();\n        }\n        Assert.fail(\"Should have returned earlier\");\n    }\n","date":"2015-08-05 06:04:30","endLine":226,"groupId":"212","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCursorMultipleIteratorCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/45/1a1c0990a2e55d5b24062a1f2295ca2850dc0a.src","preCode":"    public void testCursorMultipleIteratorCall() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        Mapper mapper = sqlSession.getMapper(Mapper.class);\n        Cursor<User> usersCursor = mapper.getAllUsers();\n\n        Iterator<User> iterator2 = null;\n        try {\n            Iterator<User> iterator = usersCursor.iterator();\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            iterator2 = usersCursor.iterator();\n            iterator2.hasNext();\n            Assert.fail(\"We should have failed since calling iterator several times is not allowed\");\n        } catch (IllegalStateException e) {\n            Assert.assertNull(\"iterator2 should be null\", iterator2);\n            return;\n        } finally {\n            sqlSession.close();\n        }\n        Assert.fail(\"Should have returned earlier\");\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"4acb171a18e4025042c38f870f7c169dc3583e36","commitMessage":"@@@Merge pull request #455 from gdarmont/pr-cursor-tests\n\nAdded more tests to enhance reliability of Cursor implementation","date":"2015-08-05 06:04:30","modifiedFileCount":"3","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":2,"curCode":"    public void testCursorMultipleHasNextCall() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            Mapper mapper = sqlSession.getMapper(Mapper.class);\n            Cursor<User> usersCursor = mapper.getAllUsers();\n\n            Iterator<User> iterator = usersCursor.iterator();\n\n            Assert.assertEquals(-1, usersCursor.getCurrentIndex());\n\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            \r\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n        }\n    }\n","date":"2018-05-03 14:04:04","endLine":248,"groupId":"1652","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCursorMultipleHasNextCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7f/192387b745c42509da175a1a48127bde2570e8.src","preCode":"    public void testCursorMultipleHasNextCall() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        Mapper mapper = sqlSession.getMapper(Mapper.class);\n        Cursor<User> usersCursor = mapper.getAllUsers();\n\n        try {\n            Iterator<User> iterator = usersCursor.iterator();\n\n            Assert.assertEquals(-1, usersCursor.getCurrentIndex());\n\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            Assert.assertTrue(iterator.hasNext());\n            \r\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":2,"curCode":"    public void testCursorMultipleIteratorCall() {\n        Iterator<User> iterator2 = null;\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            Mapper mapper = sqlSession.getMapper(Mapper.class);\n            Cursor<User> usersCursor = mapper.getAllUsers();\n\n            Iterator<User> iterator = usersCursor.iterator();\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            iterator2 = usersCursor.iterator();\n            iterator2.hasNext();\n            Assert.fail(\"We should have failed since calling iterator several times is not allowed\");\n        } catch (IllegalStateException e) {\n            Assert.assertNull(\"iterator2 should be null\", iterator2);\n            return;\n        }\n        Assert.fail(\"Should have returned earlier\");\n    }\n","date":"2018-05-03 14:04:04","endLine":270,"groupId":"403","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCursorMultipleIteratorCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7f/192387b745c42509da175a1a48127bde2570e8.src","preCode":"    public void testCursorMultipleIteratorCall() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        Mapper mapper = sqlSession.getMapper(Mapper.class);\n        Cursor<User> usersCursor = mapper.getAllUsers();\n\n        Iterator<User> iterator2 = null;\n        try {\n            Iterator<User> iterator = usersCursor.iterator();\n            User user = iterator.next();\n            Assert.assertEquals(\"User1\", user.getName());\n            Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n            iterator2 = usersCursor.iterator();\n            iterator2.hasNext();\n            Assert.fail(\"We should have failed since calling iterator several times is not allowed\");\n        } catch (IllegalStateException e) {\n            Assert.assertNull(\"iterator2 should be null\", iterator2);\n            return;\n        } finally {\n            sqlSession.close();\n        }\n        Assert.fail(\"Should have returned earlier\");\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":3,"curCode":"  public void testCursorMultipleHasNextCall() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n\n      Assertions.assertEquals(-1, usersCursor.getCurrentIndex());\n\n      User user = iterator.next();\n      Assertions.assertEquals(\"User1\", user.getName());\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n\n      Assertions.assertTrue(iterator.hasNext());\n      Assertions.assertTrue(iterator.hasNext());\n      Assertions.assertTrue(iterator.hasNext());\n      \r\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":235,"groupId":"1190","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCursorMultipleHasNextCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d2/f6c4d772c58805d8fe0685ffa0a3b1ab3ce4ac.src","preCode":"  public void testCursorMultipleHasNextCall() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n\n      Assert.assertEquals(-1, usersCursor.getCurrentIndex());\n\n      User user = iterator.next();\n      Assert.assertEquals(\"User1\", user.getName());\n      Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n      Assert.assertTrue(iterator.hasNext());\n      Assert.assertTrue(iterator.hasNext());\n      Assert.assertTrue(iterator.hasNext());\n      \r\n      Assert.assertEquals(0, usersCursor.getCurrentIndex());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":3,"curCode":"  public void testCursorMultipleIteratorCall() {\n    Iterator<User> iterator2 = null;\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n      User user = iterator.next();\n      Assertions.assertEquals(\"User1\", user.getName());\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n\n      iterator2 = usersCursor.iterator();\n      iterator2.hasNext();\n      Assertions.fail(\"We should have failed since calling iterator several times is not allowed\");\n    } catch (IllegalStateException e) {\n      Assertions.assertNull(iterator2, \"iterator2 should be null\");\n      return;\n    }\n    Assertions.fail(\"Should have returned earlier\");\n  }\n","date":"2019-01-07 09:04:39","endLine":257,"groupId":"1191","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCursorMultipleIteratorCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d2/f6c4d772c58805d8fe0685ffa0a3b1ab3ce4ac.src","preCode":"  public void testCursorMultipleIteratorCall() {\n    Iterator<User> iterator2 = null;\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n      User user = iterator.next();\n      Assert.assertEquals(\"User1\", user.getName());\n      Assert.assertEquals(0, usersCursor.getCurrentIndex());\n\n      iterator2 = usersCursor.iterator();\n      iterator2.hasNext();\n      Assert.fail(\"We should have failed since calling iterator several times is not allowed\");\n    } catch (IllegalStateException e) {\n      Assert.assertNull(\"iterator2 should be null\", iterator2);\n      return;\n    }\n    Assert.fail(\"Should have returned earlier\");\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void testCursorMultipleHasNextCall() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n\n      Assertions.assertEquals(-1, usersCursor.getCurrentIndex());\n\n      User user = iterator.next();\n      Assertions.assertEquals(\"User1\", user.getName());\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n\n      Assertions.assertTrue(iterator.hasNext());\n      Assertions.assertTrue(iterator.hasNext());\n      Assertions.assertTrue(iterator.hasNext());\n      \r\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":235,"groupId":"10553","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCursorMultipleHasNextCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b6/3b4f939a03370bf3d8c43d634eafd0ac202806.src","preCode":"  public void testCursorMultipleHasNextCall() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n\n      Assertions.assertEquals(-1, usersCursor.getCurrentIndex());\n\n      User user = iterator.next();\n      Assertions.assertEquals(\"User1\", user.getName());\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n\n      Assertions.assertTrue(iterator.hasNext());\n      Assertions.assertTrue(iterator.hasNext());\n      Assertions.assertTrue(iterator.hasNext());\n      \r\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void testCursorMultipleIteratorCall() {\n    Iterator<User> iterator2 = null;\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n      User user = iterator.next();\n      Assertions.assertEquals(\"User1\", user.getName());\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n\n      iterator2 = usersCursor.iterator();\n      iterator2.hasNext();\n      Assertions.fail(\"We should have failed since calling iterator several times is not allowed\");\n    } catch (IllegalStateException e) {\n      Assertions.assertNull(iterator2, \"iterator2 should be null\");\n      return;\n    }\n    Assertions.fail(\"Should have returned earlier\");\n  }\n","date":"2019-01-23 20:49:49","endLine":257,"groupId":"10553","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCursorMultipleIteratorCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b6/3b4f939a03370bf3d8c43d634eafd0ac202806.src","preCode":"  public void testCursorMultipleIteratorCall() {\n    Iterator<User> iterator2 = null;\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Cursor<User> usersCursor = mapper.getAllUsers();\n\n      Iterator<User> iterator = usersCursor.iterator();\n      User user = iterator.next();\n      Assertions.assertEquals(\"User1\", user.getName());\n      Assertions.assertEquals(0, usersCursor.getCurrentIndex());\n\n      iterator2 = usersCursor.iterator();\n      iterator2.hasNext();\n      Assertions.fail(\"We should have failed since calling iterator several times is not allowed\");\n    } catch (IllegalStateException e) {\n      Assertions.assertNull(iterator2, \"iterator2 should be null\");\n      return;\n    }\n    Assertions.fail(\"Should have returned earlier\");\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cursor_simple/CursorSimpleTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
