[{"authorTime":"2016-11-27 23:51:54","codes":[{"authorDate":"2016-11-27 23:51:54","commitOrder":1,"curCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assert.assertThat(cache.getName(), Is.is(\"default\"));\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assert.assertThat(mapper.ping(), Is.is(\"Hello\"));\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","date":"2016-11-27 23:51:54","endLine":61,"groupId":"1605","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"applyDefaultValueOnAnnotationMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d7/0660b7b27e4fe736c6ec419b8f09ad7a40de93.src","preCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assert.assertThat(cache.getName(), Is.is(\"default\"));\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assert.assertThat(mapper.ping(), Is.is(\"Hello\"));\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2016-11-27 23:51:54","commitOrder":1,"curCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assert.assertThat(cache.getName(), Is.is(\"default\"));\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assert.assertThat(mapper.ping(), Is.is(\"Hello\"));\n      Assert.assertThat(mapper.selectOne(), Is.is(\"1\"));\n      Assert.assertThat(mapper.selectFromVariable(), Is.is(\"9999\"));\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","date":"2016-11-27 23:51:54","endLine":60,"groupId":"1605","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"applyDefaultValueOnXmlMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/52/b79f5a463f04694a2e970ae31b3530a9f0fef2.src","preCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assert.assertThat(cache.getName(), Is.is(\"default\"));\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assert.assertThat(mapper.ping(), Is.is(\"Hello\"));\n      Assert.assertThat(mapper.selectOne(), Is.is(\"1\"));\n      Assert.assertThat(mapper.selectFromVariable(), Is.is(\"9999\"));\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/XmlMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"ec3e2594578f66d69fafeae48508d5172da0cfab","commitMessage":"@@@Merge pull request #853 from kazuki43zoo/allow-default-value-on-placeholder\n\nAllow to specify a default value on placeholder","date":"2016-11-27 23:51:54","modifiedFileCount":"1","status":"B","submitter":"Kazuki Shimizu"},{"authorTime":"2017-04-17 08:43:56","codes":[{"authorDate":"2017-04-17 08:43:56","commitOrder":2,"curCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","date":"2017-04-17 08:43:56","endLine":60,"groupId":"1326","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"applyDefaultValueOnAnnotationMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9e/1cc59663a7aeffcd5e318a28d97ead5315075b.src","preCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assert.assertThat(cache.getName(), Is.is(\"default\"));\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assert.assertThat(mapper.ping(), Is.is(\"Hello\"));\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2017-04-17 08:43:56","commitOrder":2,"curCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","date":"2017-04-17 08:43:56","endLine":59,"groupId":"1326","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"applyDefaultValueOnXmlMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e6/f709dd3df673e227a19f3a8b785028d3ce5924.src","preCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assert.assertThat(cache.getName(), Is.is(\"default\"));\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assert.assertThat(mapper.ping(), Is.is(\"Hello\"));\n      Assert.assertThat(mapper.selectOne(), Is.is(\"1\"));\n      Assert.assertThat(mapper.selectFromVariable(), Is.is(\"9999\"));\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/XmlMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"32bf5f811e72399b0f0880106b53907b832ac00a","commitMessage":"@@@Merge pull request #977 from hazendaz/master\n\n[ci] Use assertj/fluent exceptions for cleaner unit testing","date":"2017-04-17 08:43:56","modifiedFileCount":"34","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }\n","date":"2018-05-03 14:04:04","endLine":56,"groupId":"927","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"applyDefaultValueOnAnnotationMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f0/b27fd5400806949b2fad7e05281bf088016982.src","preCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n    }\n\n  }\n","date":"2018-05-03 14:04:04","endLine":55,"groupId":"927","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"applyDefaultValueOnXmlMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/22/4d116c4d5d9eb826dc5bb7277af7cc1fce69e2.src","preCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/XmlMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }\n","date":"2018-05-03 14:04:04","endLine":56,"groupId":"927","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"applyDefaultValueOnAnnotationMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f0/b27fd5400806949b2fad7e05281bf088016982.src","preCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n    }\n\n  }\n","date":"2019-01-23 20:49:49","endLine":55,"groupId":"927","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"applyDefaultValueOnXmlMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/70/2eac215d273f8b71c08f566281bd2812f8f3c2.src","preCode":"  public void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/XmlMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2020-03-14 23:29:33","commitOrder":5,"curCode":"  void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }\n","date":"2020-03-14 23:29:33","endLine":56,"groupId":"10328","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"applyDefaultValueOnAnnotationMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/db/800df847c55e1ed71dc762b83bf0636b1fed9c.src","preCode":"  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n    }\n\n  }\n","date":"2019-01-23 20:49:49","endLine":55,"groupId":"10328","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"applyDefaultValueOnXmlMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/70/2eac215d273f8b71c08f566281bd2812f8f3c2.src","preCode":"  void applyDefaultValueOnXmlMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(XmlMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(XmlMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n      Assertions.assertThat(mapper.selectOne()).isEqualTo(\"1\");\n      Assertions.assertThat(mapper.selectFromVariable()).isEqualTo(\"9999\");\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/XmlMapperTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"}],"commitId":"42818bf7c2d43455abe3df5d5940be2324cdc271","commitMessage":"@@@Remove unnecessary public access modifier in tests\n","date":"2020-03-14 23:29:33","modifiedFileCount":"19","status":"M","submitter":"Kazuki Shimizu"}]
