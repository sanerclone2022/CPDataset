[{"authorTime":"2011-01-05 09:58:41","codes":[{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new Jdbc3KeyGenerator(null))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":74,"groupId":"508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new Jdbc3KeyGenerator(null))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":638,"groupId":"844","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithBeforeAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"B"}],"commitId":"2fe69c949eaaf4591241a69573c054dc87478f79","commitMessage":"@@@Fix for http://code.google.com/p/mybatis/issues/detail?id=84 .  http://code.google.com/p/mybatis/issues/detail?id=83 .  and http://code.google.com/p/mybatis/issues/detail?id=81  - add keycolumn attribute.  and some doc fixes\n","date":"2011-01-05 09:58:41","modifiedFileCount":"6","status":"B","submitter":"Jeff Butler"},{"authorTime":"2011-01-05 09:58:41","codes":[{"authorDate":"2012-01-29 16:31:59","commitOrder":2,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new Jdbc3KeyGenerator())\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2012-01-29 16:31:59","endLine":89,"groupId":"508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a2/a55e1559a60635c480f8e3b480da8de38693d9.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new Jdbc3KeyGenerator(null))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2011-01-05 09:58:41","commitOrder":2,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":638,"groupId":"844","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithBeforeAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"N"}],"commitId":"c012ffbd04aff191290cc4850ccfc35499ae876e","commitMessage":"@@@key generation refactor \n","date":"2012-01-29 16:31:59","modifiedFileCount":"10","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2011-01-05 09:58:41","codes":[{"authorDate":"2017-01-03 20:14:36","commitOrder":3,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(Jdbc3KeyGenerator.INSTANCE)\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2017-01-03 20:14:36","endLine":108,"groupId":"508","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ad/377b83dd3291af68ef13e514ac638167b005e7.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new Jdbc3KeyGenerator())\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2011-01-05 09:58:41","commitOrder":3,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2011-01-05 09:58:41","endLine":638,"groupId":"844","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithBeforeAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"N"}],"commitId":"7232c7e7a7ac9bd0bb1b05f479ead61e1ff9554a","commitMessage":"@@@Improve to share Jdbc3KeyGenerator and NoKeyGenerator instance\nfix gh-882\n","date":"2017-01-03 20:14:36","modifiedFileCount":"6","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-20 20:20:45","codes":[{"authorDate":"2017-01-03 20:14:36","commitOrder":4,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(Jdbc3KeyGenerator.INSTANCE)\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2017-01-03 20:14:36","endLine":108,"groupId":"508","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ad/377b83dd3291af68ef13e514ac638167b005e7.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(Jdbc3KeyGenerator.INSTANCE)\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"},{"authorDate":"2019-01-20 20:20:45","commitOrder":4,"curCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","date":"2019-01-20 20:20:45","endLine":670,"groupId":"844","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithBeforeAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fc/8b4bd1faecdbb01935cc637bbc6a5e42467aba.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<ResultMapping>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":639,"status":"M"}],"commitId":"090013dc35b7912e478ebcb751e0f5ab35830b91","commitMessage":"@@@Merge pull request #1454 from kazuki43zoo/polish\n\nChange to use the diamond operator","date":"2019-01-20 20:20:45","modifiedFileCount":"58","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    return new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(Jdbc3KeyGenerator.INSTANCE)\n        .keyProperty(\"id\")\n        .build();\n  }\n","date":"2019-01-23 20:49:49","endLine":106,"groupId":"10726","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new StaticSqlSource(config,\"INSERT INTO author (username,password,email,bio,favourite_section) values(?,?,?,?,?)\"), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(Jdbc3KeyGenerator.INSTANCE)\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    return new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n  }\n","date":"2019-01-23 20:49:49","endLine":657,"groupId":"10726","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareInsertAuthorMappedStatementWithBeforeAutoKey","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareInsertAuthorMappedStatementWithBeforeAutoKey(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final ResultMap rm = new ResultMap.Builder(config, \"keyResultMap\", Integer.class, new ArrayList<>())\n        .build();\n\n    MappedStatement kms = new MappedStatement.Builder(config, \"insertAuthor!selectKey\", new StaticSqlSource(config,\"SELECT 123456 as id FROM SYSIBM.SYSDUMMY1\"), SqlCommandType.SELECT)\n        .keyProperty(\"id\")\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(rm);\n          }\n        })\n        .build();\n    config.addMappedStatement(kms);\n    MappedStatement ms = new MappedStatement.Builder(config, \"insertAuthor\", new DynamicSqlSource(config, new TextSqlNode(\"INSERT INTO author (id,username,password,email,bio,favourite_section) values(#{id},#{username},#{password},#{email},#{bio:VARCHAR},#{favouriteSection})\")), SqlCommandType.INSERT)\n        .parameterMap(\n            new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class, new ArrayList<ParameterMapping>() {\n              {\n                add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(Integer.class)).build());\n                add(new ParameterMapping.Builder(config, \"username\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"password\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"email\", registry.getTypeHandler(String.class)).build());\n                add(new ParameterMapping.Builder(config, \"bio\", registry.getTypeHandler(String.class)).jdbcType(JdbcType.VARCHAR).build());\n                add(new ParameterMapping.Builder(config, \"favouriteSection\", registry.getTypeHandler(Section.class)).jdbcType(JdbcType.VARCHAR).build());\n              }\n            }).build())\n        .cache(authorCache)\n        .keyGenerator(new SelectKeyGenerator(kms, true))\n        .keyProperty(\"id\")\n        .build();\n    return ms;\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":627,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
