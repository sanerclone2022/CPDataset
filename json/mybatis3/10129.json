[{"authorTime":"2013-03-25 20:24:28","codes":[{"authorDate":"2013-03-25 20:24:28","commitOrder":1,"curCode":"  public void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assert.assertEquals(4, result.size());\n    Assert.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assert.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assert.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assert.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","date":"2013-03-25 20:24:28","endLine":89,"groupId":"691","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"expressionWithManyAttributes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8b/bb8d2943f0dabff8352f14839b060e1b95a6a0.src","preCode":"  public void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assert.assertEquals(4, result.size());\n    Assert.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assert.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assert.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assert.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2013-03-25 20:24:28","commitOrder":1,"curCode":"  public void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assert.assertEquals(4, result.size());\n    Assert.assertEquals(\"user name\", result.get(\"property\"));\n    Assert.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assert.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assert.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","date":"2013-03-25 20:24:28","endLine":109,"groupId":"691","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"simplePropertyWithSpaceAndManyAttributes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8b/bb8d2943f0dabff8352f14839b060e1b95a6a0.src","preCode":"  public void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assert.assertEquals(4, result.size());\n    Assert.assertEquals(\"user name\", result.get(\"property\"));\n    Assert.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assert.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assert.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"89e208218be062a82e196d303825fe991ff395cf","commitMessage":"@@@ParameterExpressionParser refactored","date":"2013-03-25 20:24:28","modifiedFileCount":"2","status":"B","submitter":"eduardo"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":2,"curCode":"  public void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","date":"2019-01-07 09:04:39","endLine":95,"groupId":"1552","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"expressionWithManyAttributes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/13/ee15a2a0cfeb40086a8ba6259845ae7b98cbca.src","preCode":"  public void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assert.assertEquals(4, result.size());\n    Assert.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assert.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assert.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assert.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":2,"curCode":"  public void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"user name\", result.get(\"property\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","date":"2019-01-07 09:04:39","endLine":115,"groupId":"1552","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"simplePropertyWithSpaceAndManyAttributes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/13/ee15a2a0cfeb40086a8ba6259845ae7b98cbca.src","preCode":"  public void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assert.assertEquals(4, result.size());\n    Assert.assertEquals(\"user name\", result.get(\"property\"));\n    Assert.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assert.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assert.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","date":"2019-01-23 20:49:49","endLine":96,"groupId":"10129","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"expressionWithManyAttributes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/bd/80859ab6314e1250b77d98335aa76a9ce878be.src","preCode":"  public void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"user name\", result.get(\"property\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","date":"2019-01-23 20:49:49","endLine":116,"groupId":"10129","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"simplePropertyWithSpaceAndManyAttributes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/bd/80859ab6314e1250b77d98335aa76a9ce878be.src","preCode":"  public void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"user name\", result.get(\"property\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
