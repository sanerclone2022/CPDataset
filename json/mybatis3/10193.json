[{"authorTime":"2016-03-08 02:31:53","codes":[{"authorDate":"2016-03-08 11:54:51","commitOrder":2,"curCode":"  public void shouldPickSameTypeHandlerMappedToDifferentJdbcTypes() throws Exception {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, JdbcType.BIGINT, ProductIdTypeHandler.class);\n    addMapper();\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(2), product.getId().getValue());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-03-08 11:54:51","endLine":160,"groupId":"1798","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldPickSameTypeHandlerMappedToDifferentJdbcTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e0/b8233453a7395ebacb0657535b3a0fe5c4b343.src","preCode":"  public void shouldPickSameTypeHandlerMappedToDifferentJdbcTypes() throws Exception {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, JdbcType.BIGINT, ProductIdTypeHandler.class);\n    addMapper();\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(2), product.getId().getValue());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/typehandler/TypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2016-03-08 02:31:53","commitOrder":2,"curCode":"  public void shouldPickHandlerForNull() throws Exception {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, null, ConstantProductIdTypeHandler.class);\n    \r\n    \r\n    addMapper();\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(999), product.getId().getValue());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-03-08 02:31:53","endLine":169,"groupId":"1798","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPickHandlerForNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/97/b940ad7e8c361160a0934164ca1018f0e1a996.src","preCode":"  public void shouldPickHandlerForNull() throws Exception {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, null, ConstantProductIdTypeHandler.class);\n    \r\n    \r\n    addMapper();\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(999), product.getId().getValue());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/typehandler/TypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"NB"}],"commitId":"e3b4b0c686155b68df40af88e938a0e066ed1474","commitMessage":"@@@Correction to the previous commit.\n","date":"2016-03-08 11:54:51","modifiedFileCount":"2","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void shouldPickSameTypeHandlerMappedToDifferentJdbcTypes() {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, JdbcType.BIGINT, ProductIdTypeHandler.class);\n    addMapper();\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(2), product.getId().getValue());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":140,"groupId":"776","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldPickSameTypeHandlerMappedToDifferentJdbcTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/18/9ac72c4bb9bef70a105407babb1ac01d6ecc6e.src","preCode":"  public void shouldPickSameTypeHandlerMappedToDifferentJdbcTypes() throws Exception {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, JdbcType.BIGINT, ProductIdTypeHandler.class);\n    addMapper();\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(2), product.getId().getValue());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/typehandler/TypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void shouldPickHandlerForNull() {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, null, ConstantProductIdTypeHandler.class);\n    \r\n    \r\n    addMapper();\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(999), product.getId().getValue());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":161,"groupId":"776","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPickHandlerForNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/18/9ac72c4bb9bef70a105407babb1ac01d6ecc6e.src","preCode":"  public void shouldPickHandlerForNull() throws Exception {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, null, ConstantProductIdTypeHandler.class);\n    \r\n    \r\n    addMapper();\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(999), product.getId().getValue());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/typehandler/TypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldPickSameTypeHandlerMappedToDifferentJdbcTypes() {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, JdbcType.BIGINT, ProductIdTypeHandler.class);\n    addMapper();\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(2), product.getId().getValue());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":133,"groupId":"10193","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldPickSameTypeHandlerMappedToDifferentJdbcTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b7/510ac5de39729669d0cc7dc289975626b7f002.src","preCode":"  public void shouldPickSameTypeHandlerMappedToDifferentJdbcTypes() {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, JdbcType.BIGINT, ProductIdTypeHandler.class);\n    addMapper();\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(2), product.getId().getValue());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/typehandler/TypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldPickHandlerForNull() {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, null, ConstantProductIdTypeHandler.class);\n    \r\n    \r\n    addMapper();\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(999), product.getId().getValue());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":154,"groupId":"10193","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPickHandlerForNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b7/510ac5de39729669d0cc7dc289975626b7f002.src","preCode":"  public void shouldPickHandlerForNull() {\n    sqlSessionFactory.getConfiguration().getTypeHandlerRegistry().register(ProductId.class, null, ConstantProductIdTypeHandler.class);\n    \r\n    \r\n    addMapper();\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Product product = mapper.getProductByNameXml(\"iPad\");\n      assertEquals(Integer.valueOf(999), product.getId().getValue());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/typehandler/TypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
