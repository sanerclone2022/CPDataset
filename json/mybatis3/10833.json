[{"authorTime":"2011-09-08 14:02:36","codes":[{"authorDate":"2011-09-08 14:02:36","commitOrder":1,"curCode":"  private Object getBeanProperty(PropertyTokenizer prop, Object object) {\n    try {\n      Invoker method = metaClass.getGetInvoker(prop.getName());\n      try {\n        return method.invoke(object, NO_ARGUMENTS);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not get property '\" + prop.getName() + \"' from \" + object + \".  Cause: \" + t.toString(), t);\n    }\n  }\n","date":"2011-09-08 14:02:36","endLine":145,"groupId":"2190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getBeanProperty","params":"(PropertyTokenizerprop@Objectobject)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/08/e129f61ee33f5fa667a0ef846f80c754806b72.src","preCode":"  private Object getBeanProperty(PropertyTokenizer prop, Object object) {\n    try {\n      Invoker method = metaClass.getGetInvoker(prop.getName());\n      try {\n        return method.invoke(object, NO_ARGUMENTS);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not get property '\" + prop.getName() + \"' from \" + object + \".  Cause: \" + t.toString(), t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2011-09-08 14:02:36","commitOrder":1,"curCode":"  private void setBeanProperty(PropertyTokenizer prop, Object object, Object value) {\n    try {\n      Invoker method = metaClass.getSetInvoker(prop.getName());\n      Object[] params = {value};\n      try {\n        method.invoke(object, params);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not set property '\" + prop.getName() + \"' of '\" + object + \"' with value '\" + value + \"' Cause: \" + t.toString(), t);\n    }\n  }\n","date":"2011-09-08 14:02:36","endLine":159,"groupId":"1678","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setBeanProperty","params":"(PropertyTokenizerprop@Objectobject@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/08/e129f61ee33f5fa667a0ef846f80c754806b72.src","preCode":"  private void setBeanProperty(PropertyTokenizer prop, Object object, Object value) {\n    try {\n      Invoker method = metaClass.getSetInvoker(prop.getName());\n      Object[] params = {value};\n      try {\n        method.invoke(object, params);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not set property '\" + prop.getName() + \"' of '\" + object + \"' with value '\" + value + \"' Cause: \" + t.toString(), t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"}],"commitId":"f02526874863e25b18515a8a7c786b33b3da67c7","commitMessage":"@@@http://code.google.com/p/mybatis/issues/detail?id=43 . Maps keys are wrong when using mapUnderscoreToCamelCase=true\n","date":"2011-09-08 14:02:36","modifiedFileCount":"6","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2012-02-25 02:13:33","codes":[{"authorDate":"2012-02-25 02:13:33","commitOrder":2,"curCode":"  private Object getBeanProperty(PropertyTokenizer prop, Object object) {\n    try {\n      Invoker method = metaClass.getGetInvoker(prop.getName());\n      try {\n        return method.invoke(object, NO_ARGUMENTS);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not get property '\" + prop.getName() + \"' from \" + object.getClass() + \".  Cause: \" + t.toString(), t);\n    }\n  }\n","date":"2012-02-25 02:13:33","endLine":162,"groupId":"10833","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getBeanProperty","params":"(PropertyTokenizerprop@Objectobject)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/08/76c24befaa1a383e8c6234bee7a5bac82f14b5.src","preCode":"  private Object getBeanProperty(PropertyTokenizer prop, Object object) {\n    try {\n      Invoker method = metaClass.getGetInvoker(prop.getName());\n      try {\n        return method.invoke(object, NO_ARGUMENTS);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not get property '\" + prop.getName() + \"' from \" + object + \".  Cause: \" + t.toString(), t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2012-02-25 02:13:33","commitOrder":2,"curCode":"  private void setBeanProperty(PropertyTokenizer prop, Object object, Object value) {\n    try {\n      Invoker method = metaClass.getSetInvoker(prop.getName());\n      Object[] params = {value};\n      try {\n        method.invoke(object, params);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not set property '\" + prop.getName() + \"' of '\" + object.getClass() + \"' with value '\" + value + \"' Cause: \" + t.toString(), t);\n    }\n  }\n","date":"2012-02-25 02:13:33","endLine":176,"groupId":"10833","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setBeanProperty","params":"(PropertyTokenizerprop@Objectobject@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/08/76c24befaa1a383e8c6234bee7a5bac82f14b5.src","preCode":"  private void setBeanProperty(PropertyTokenizer prop, Object object, Object value) {\n    try {\n      Invoker method = metaClass.getSetInvoker(prop.getName());\n      Object[] params = {value};\n      try {\n        method.invoke(object, params);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not set property '\" + prop.getName() + \"' of '\" + object + \"' with value '\" + value + \"' Cause: \" + t.toString(), t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"0593f4bf688ca52a5f0b55bfd8439e90d6a2b1f8","commitMessage":"@@@a better text for exception (avoid calling object.toString)\n","date":"2012-02-25 02:13:33","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"}]
