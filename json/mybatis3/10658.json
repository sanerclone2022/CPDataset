[{"authorTime":"2015-03-28 05:46:37","codes":[{"authorDate":"2015-03-28 05:46:37","commitOrder":1,"curCode":"  public void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assert.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assert.assertTrue(\"Expected TypedException\", e instanceof TypeException);\n      Assert.assertTrue(\"Parameter index is in exception\", e.getMessage().contains(\"parameter #1\"));\n    }\n  }\n","date":"2015-03-28 05:46:37","endLine":87,"groupId":"2156","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setParameterWithNonNullParameterThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/33/3d5009dbdef824cd7c6ec67197ff1d034e6511.src","preCode":"  public void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assert.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assert.assertTrue(\"Expected TypedException\", e instanceof TypeException);\n      Assert.assertTrue(\"Parameter index is in exception\", e.getMessage().contains(\"parameter #1\"));\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2015-03-28 05:46:37","commitOrder":1,"curCode":"  public void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assert.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assert.assertTrue(\"Expected ResultMapException\", e instanceof ResultMapException);\n      Assert.assertTrue(\"column index is not in exception\", e.getMessage().contains(\"column #1\"));\n    }\n  }\n","date":"2015-03-28 05:46:37","endLine":123,"groupId":"746","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getResultWithCallableStatementAndColumnIndexThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/33/3d5009dbdef824cd7c6ec67197ff1d034e6511.src","preCode":"  public void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assert.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assert.assertTrue(\"Expected ResultMapException\", e instanceof ResultMapException);\n      Assert.assertTrue(\"column index is not in exception\", e.getMessage().contains(\"column #1\"));\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"3acb2de17bd7f1c28728bb93eec3953030363e6c","commitMessage":"@@@Merge pull request #379 from ryanlamore/descriptive-error-messages\n\nAdded better error reporting to help debug issues with mapper files","date":"2015-03-28 05:46:37","modifiedFileCount":"8","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":2,"curCode":"  public void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":114,"groupId":"1566","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setParameterWithNonNullParameterThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/23/1a7b3aa486b65954fb33f58f84e548fdcc7884.src","preCode":"  public void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assert.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assert.assertTrue(\"Expected TypedException\", e instanceof TypeException);\n      Assert.assertTrue(\"Parameter index is in exception\", e.getMessage().contains(\"parameter #1\"));\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":2,"curCode":"  public void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":150,"groupId":"1665","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getResultWithCallableStatementAndColumnIndexThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/23/1a7b3aa486b65954fb33f58f84e548fdcc7884.src","preCode":"  public void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assert.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assert.assertTrue(\"Expected ResultMapException\", e instanceof ResultMapException);\n      Assert.assertTrue(\"column index is not in exception\", e.getMessage().contains(\"column #1\"));\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":113,"groupId":"10658","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setParameterWithNonNullParameterThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2c/ae1a1696dd19589cac5098365d9ef3da10f2c9.src","preCode":"  public void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler)TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":149,"groupId":"10658","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getResultWithCallableStatementAndColumnIndexThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2c/ae1a1696dd19589cac5098365d9ef3da10f2c9.src","preCode":"  public void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
