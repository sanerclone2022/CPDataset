[{"authorTime":"2013-04-20 17:24:42","codes":[{"authorDate":"2013-04-20 17:24:42","commitOrder":1,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final Object nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null && nestedQueryCacheObject instanceof List) {\n        value = resultExtractor.extractObjectFromList((List<Object>) nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","date":"2013-04-20 17:24:42","endLine":595,"groupId":"2095","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/ecbaf02136f7a7341a21fddd78cee990293bbe.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final Object nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null && nestedQueryCacheObject instanceof List) {\n        value = resultExtractor.extractObjectFromList((List<Object>) nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"B"},{"authorDate":"2013-04-20 17:24:42","commitOrder":1,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = OMIT;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final Object nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null && nestedQueryCacheObject instanceof List) {\n        value = resultExtractor.extractObjectFromList((List<Object>) nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2013-04-20 17:24:42","endLine":625,"groupId":"2095","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/ecbaf02136f7a7341a21fddd78cee990293bbe.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = OMIT;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final Object nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null && nestedQueryCacheObject instanceof List) {\n        value = resultExtractor.extractObjectFromList((List<Object>) nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"B"}],"commitId":"fd344450951edc351e0a8adf0eba2e2cb64f42cd","commitMessage":"@@@Merge branch 'master' of https://github.com/emacarron/mybatis-3\n","date":"2013-04-20 17:24:42","modifiedFileCount":"13","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2013-04-21 14:24:01","codes":[{"authorDate":"2013-04-21 14:24:01","commitOrder":2,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","date":"2013-04-21 14:24:01","endLine":594,"groupId":"170","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6b/4b0f85fa66b05688a9620aecf71023ac8666f4.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final Object nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null && nestedQueryCacheObject instanceof List) {\n        value = resultExtractor.extractObjectFromList((List<Object>) nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"M"},{"authorDate":"2013-04-21 14:24:01","commitOrder":2,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = OMIT;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2013-04-21 14:24:01","endLine":623,"groupId":"1641","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6b/4b0f85fa66b05688a9620aecf71023ac8666f4.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = OMIT;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final Object nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null && nestedQueryCacheObject instanceof List) {\n        value = resultExtractor.extractObjectFromList((List<Object>) nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"M"}],"commitId":"dbbcfd77173b9b1add8bc039ca5e91faad94f866","commitMessage":"@@@Minor refactor and doc updates","date":"2013-04-21 14:24:01","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2013-04-21 17:03:09","codes":[{"authorDate":"2013-04-21 14:24:01","commitOrder":3,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","date":"2013-04-21 14:24:01","endLine":594,"groupId":"170","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6b/4b0f85fa66b05688a9620aecf71023ac8666f4.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"N"},{"authorDate":"2013-04-21 17:03:09","commitOrder":3,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = NO_VALUE;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2013-04-21 17:03:09","endLine":624,"groupId":"1641","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/3c/eabbfb361e485b005fd2c0ac6705032eb0d075.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = OMIT;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":597,"status":"M"}],"commitId":"47a136eeb79e13b70e1c51d405bfb3ce82a82d4b","commitMessage":"@@@minor style refactors","date":"2013-04-21 17:03:09","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-02-27 23:52:11","codes":[{"authorDate":"2014-02-27 23:52:11","commitOrder":4,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","date":"2014-02-27 23:52:11","endLine":590,"groupId":"2095","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7d/e8d29b29ae1d69aa83f213dab8645d15ff2bd1.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        value = resultLoader.loadResult();\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"M"},{"authorDate":"2014-02-27 23:52:11","commitOrder":4,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = NO_VALUE;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2014-02-27 23:52:11","endLine":616,"groupId":"741","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7d/e8d29b29ae1d69aa83f213dab8645d15ff2bd1.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = NO_VALUE;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      final List<Object> nestedQueryCacheObject = getNestedQueryCacheObject(nestedQuery, key);\n      if (nestedQueryCacheObject != null) {\n        value = resultExtractor.extractObjectFromList(nestedQueryCacheObject, targetType);\n      } else if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"}],"commitId":"3a09d6a146b0a99f4ee7fb5d50efe72dcd840b90","commitMessage":"@@@Fix for issue #47. Use 2nd level cache for nested queries.","date":"2014-02-27 23:52:11","modifiedFileCount":"8","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-03-07 02:37:13","codes":[{"authorDate":"2014-02-27 23:52:11","commitOrder":5,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","date":"2014-02-27 23:52:11","endLine":590,"groupId":"2095","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7d/e8d29b29ae1d69aa83f213dab8645d15ff2bd1.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"N"},{"authorDate":"2014-03-07 02:37:13","commitOrder":5,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = NO_VALUE;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (propertyMapping.isLazy()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2014-03-07 02:37:16","endLine":612,"groupId":"741","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/21/328db222f884b512e41c19a7d5dbd4983c192b.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = NO_VALUE;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (configuration.isLazyLoadingEnabled()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":588,"status":"M"}],"commitId":"21076984d45f7ccfd97d69844d8213405656fbdd","commitMessage":"@@@Fixes ##149. Selective Lazy Loading.","date":"2014-03-07 02:37:16","modifiedFileCount":"9","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-12-23 03:05:07","codes":[{"authorDate":"2014-02-27 23:52:11","commitOrder":6,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","date":"2014-02-27 23:52:11","endLine":590,"groupId":"2095","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7d/e8d29b29ae1d69aa83f213dab8645d15ff2bd1.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"N"},{"authorDate":"2014-12-23 03:05:07","commitOrder":6,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n        value = DEFERED;\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (propertyMapping.isLazy()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n          value = DEFERED;\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2014-12-23 03:05:07","endLine":673,"groupId":"170","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/08/3d2c86ef1979b8c2daa07bb8094d56ad13bdf3.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = NO_VALUE;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (propertyMapping.isLazy()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":647,"status":"M"}],"commitId":"b7896469fa5d96a2d7ae901f59ecde0d5de61bdb","commitMessage":"@@@Fixes #307. Create an instance when all the values for an object are\nnull but there is at least one defered value.","date":"2014-12-23 03:05:07","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-12-24 11:18:11","codes":[{"authorDate":"2014-02-27 23:52:11","commitOrder":7,"curCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","date":"2014-02-27 23:52:11","endLine":590,"groupId":"10849","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getNestedQueryConstructorValue","params":"(ResultSetrs@ResultMappingconstructorMapping@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7d/e8d29b29ae1d69aa83f213dab8645d15ff2bd1.src","preCode":"  private Object getNestedQueryConstructorValue(ResultSet rs, ResultMapping constructorMapping, String columnPrefix) throws SQLException {\n    final String nestedQueryId = constructorMapping.getNestedQueryId();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, constructorMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = constructorMapping.getJavaType();\n      final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n      value = resultLoader.loadResult();\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"N"},{"authorDate":"2018-12-24 11:18:11","commitOrder":7,"curCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n        value = DEFERRED;\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (propertyMapping.isLazy()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n          value = DEFERRED;\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","date":"2018-12-24 11:18:11","endLine":762,"groupId":"10849","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedQueryMappingValue","params":"(ResultSetrs@MetaObjectmetaResultObject@ResultMappingpropertyMapping@ResultLoaderMaplazyLoader@StringcolumnPrefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/81/44756fa0e0fe32eabcc12637ac96ed16f113a3.src","preCode":"  private Object getNestedQueryMappingValue(ResultSet rs, MetaObject metaResultObject, ResultMapping propertyMapping, ResultLoaderMap lazyLoader, String columnPrefix)\n      throws SQLException {\n    final String nestedQueryId = propertyMapping.getNestedQueryId();\n    final String property = propertyMapping.getProperty();\n    final MappedStatement nestedQuery = configuration.getMappedStatement(nestedQueryId);\n    final Class<?> nestedQueryParameterType = nestedQuery.getParameterMap().getType();\n    final Object nestedQueryParameterObject = prepareParameterForNestedQuery(rs, propertyMapping, nestedQueryParameterType, columnPrefix);\n    Object value = null;\n    if (nestedQueryParameterObject != null) {\n      final BoundSql nestedBoundSql = nestedQuery.getBoundSql(nestedQueryParameterObject);\n      final CacheKey key = executor.createCacheKey(nestedQuery, nestedQueryParameterObject, RowBounds.DEFAULT, nestedBoundSql);\n      final Class<?> targetType = propertyMapping.getJavaType();\n      if (executor.isCached(nestedQuery, key)) {\n        executor.deferLoad(nestedQuery, metaResultObject, property, key, targetType);\n        value = DEFERED;\n      } else {\n        final ResultLoader resultLoader = new ResultLoader(configuration, executor, nestedQuery, nestedQueryParameterObject, targetType, key, nestedBoundSql);\n        if (propertyMapping.isLazy()) {\n          lazyLoader.addLoader(property, metaResultObject, resultLoader);\n          value = DEFERED;\n        } else {\n          value = resultLoader.loadResult();\n        }\n      }\n    }\n    return value;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":736,"status":"M"}],"commitId":"0cfb21b3af77787d08d9ab042f9c7d1313e7b8e6","commitMessage":"@@@Merge pull request #1411 from kezhenxu94/optimization/typo\n\nfix typo","date":"2018-12-24 11:18:11","modifiedFileCount":"1","status":"M","submitter":"Kazuki Shimizu"}]
