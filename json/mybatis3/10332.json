[{"authorTime":"2011-10-26 03:52:20","codes":[{"authorDate":"2011-10-26 03:52:20","commitOrder":2,"curCode":"    public void testShouldFlushLocalSessionCacheOnQueryForList() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE);\n        try {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            List<Person> people = personMapper.selectAllFlush();\n            updateDatabase(sqlSession.getConnection());\n            people = personMapper.selectAllFlush();\n            assertEquals(\"Simone\", people.get(0).getFirstName());\n            sqlSession.commit();        \n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2011-10-26 03:52:20","endLine":94,"groupId":"2515","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testShouldFlushLocalSessionCacheOnQueryForList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9a/2f6723edaffe27c79bf0b89967d608a92bfd57.src","preCode":"    public void testShouldFlushLocalSessionCacheOnQueryForList() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE);\n        try {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            List<Person> people = personMapper.selectAllFlush();\n            updateDatabase(sqlSession.getConnection());\n            people = personMapper.selectAllFlush();\n            assertEquals(\"Simone\", people.get(0).getFirstName());\n            sqlSession.commit();        \n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/force_flush_on_select/ForceFlushOnSelectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"MB"},{"authorDate":"2011-10-26 03:52:20","commitOrder":2,"curCode":"    public void testShouldNotFlushLocalSessionCacheOnQueryForList() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE);\n        try {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            List<Person> people = personMapper.selectAllNoFlush();\n            updateDatabase(sqlSession.getConnection());\n            people = personMapper.selectAllNoFlush();\n            assertEquals(\"John\", people.get(0).getFirstName());\n            sqlSession.commit();        \n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2011-10-26 03:52:20","endLine":109,"groupId":"2515","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testShouldNotFlushLocalSessionCacheOnQueryForList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9a/2f6723edaffe27c79bf0b89967d608a92bfd57.src","preCode":"    public void testShouldNotFlushLocalSessionCacheOnQueryForList() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE);\n        try {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            List<Person> people = personMapper.selectAllNoFlush();\n            updateDatabase(sqlSession.getConnection());\n            people = personMapper.selectAllNoFlush();\n            assertEquals(\"John\", people.get(0).getFirstName());\n            sqlSession.commit();        \n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/force_flush_on_select/ForceFlushOnSelectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"0947a78c602a8967397dffd20d637eae2c7199b5","commitMessage":"@@@[mybatis] more tests for closed http://code.google.com/p/mybatis/issues/detail?id=126 \n","date":"2011-10-26 03:52:20","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void testShouldFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE)) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllFlush();\n      assertEquals(\"Simone\", people.get(0).getFirstName());\n      sqlSession.commit();\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":101,"groupId":"2515","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testShouldFlushLocalSessionCacheOnQueryForList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e1/85d2bc2157489ac7c4dc6f5beea4542eca681c.src","preCode":"  public void testShouldFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE);\n    try {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllFlush();\n      assertEquals(\"Simone\", people.get(0).getFirstName());\n      sqlSession.commit();\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/force_flush_on_select/ForceFlushOnSelectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void testShouldNotFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE)) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllNoFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllNoFlush();\n      assertEquals(\"John\", people.get(0).getFirstName());\n      sqlSession.commit();\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":113,"groupId":"2515","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testShouldNotFlushLocalSessionCacheOnQueryForList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e1/85d2bc2157489ac7c4dc6f5beea4542eca681c.src","preCode":"  public void testShouldNotFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE);\n    try {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllNoFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllNoFlush();\n      assertEquals(\"John\", people.get(0).getFirstName());\n      sqlSession.commit();\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/force_flush_on_select/ForceFlushOnSelectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void testShouldFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE)) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllFlush();\n      assertEquals(\"Simone\", people.get(0).getFirstName());\n      sqlSession.commit();\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":84,"groupId":"10332","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testShouldFlushLocalSessionCacheOnQueryForList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d0/e0bed907b2fe8c7d74006e6102ae6846c43a81.src","preCode":"  public void testShouldFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE)) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllFlush();\n      assertEquals(\"Simone\", people.get(0).getFirstName());\n      sqlSession.commit();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/force_flush_on_select/ForceFlushOnSelectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void testShouldNotFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE)) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllNoFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllNoFlush();\n      assertEquals(\"John\", people.get(0).getFirstName());\n      sqlSession.commit();\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":96,"groupId":"10332","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testShouldNotFlushLocalSessionCacheOnQueryForList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d0/e0bed907b2fe8c7d74006e6102ae6846c43a81.src","preCode":"  public void testShouldNotFlushLocalSessionCacheOnQueryForList() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.SIMPLE)) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      List<Person> people = personMapper.selectAllNoFlush();\n      updateDatabase(sqlSession.getConnection());\n      people = personMapper.selectAllNoFlush();\n      assertEquals(\"John\", people.get(0).getFirstName());\n      sqlSession.commit();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/force_flush_on_select/ForceFlushOnSelectTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
