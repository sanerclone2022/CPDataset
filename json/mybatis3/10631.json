[{"authorTime":"2018-08-16 22:36:38","codes":[{"authorDate":"2018-08-16 22:36:38","commitOrder":1,"curCode":"  public void shouldFailIfKeyPropertyIsInvalid_NoParamName() throws Exception {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithoutParamName(country, Integer.valueOf(1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not determine which parameter to assign generated keys to. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","date":"2018-08-16 22:36:38","endLine":226,"groupId":"901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFailIfKeyPropertyIsInvalid_NoParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/61/8713a8c0c4549508cad134b1fbee952f0f95ea.src","preCode":"  public void shouldFailIfKeyPropertyIsInvalid_NoParamName() throws Exception {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithoutParamName(country, Integer.valueOf(1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not determine which parameter to assign generated keys to. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/keygen/Jdbc3KeyGeneratorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"B"},{"authorDate":"2018-08-16 22:36:38","commitOrder":1,"curCode":"  public void shouldFailIfKeyPropertyIsInvalid_WrongParamName() throws Exception {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithWrongParamName(country, Integer.valueOf(1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not find parameter 'bogus'. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [bogus.id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","date":"2018-08-16 22:36:38","endLine":243,"groupId":"901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFailIfKeyPropertyIsInvalid_WrongParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/61/8713a8c0c4549508cad134b1fbee952f0f95ea.src","preCode":"  public void shouldFailIfKeyPropertyIsInvalid_WrongParamName() throws Exception {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithWrongParamName(country, Integer.valueOf(1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not find parameter 'bogus'. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [bogus.id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/keygen/Jdbc3KeyGeneratorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"B"}],"commitId":"f44dcefa9b05a071e82a8623010567f18b6e1d78","commitMessage":"@@@Merge pull request #1249 from harawata/multi-row-insert-improvement-2\n\nRemove parameter name restriction when assigning keys generated by multi-row insert.","date":"2018-08-16 22:36:38","modifiedFileCount":"3","status":"B","submitter":"Iwao AVE!"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  void shouldFailIfKeyPropertyIsInvalid_NoParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithoutParamName(country, 1);\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not determine which parameter to assign generated keys to. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":226,"groupId":"956","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFailIfKeyPropertyIsInvalid_NoParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9b/4fb9cfb2c0cc5f7b2b31d994b5999e990a02fb.src","preCode":"  public void shouldFailIfKeyPropertyIsInvalid_NoParamName() throws Exception {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithoutParamName(country, Integer.valueOf(1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not determine which parameter to assign generated keys to. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/keygen/Jdbc3KeyGeneratorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  void shouldFailIfKeyPropertyIsInvalid_WrongParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithWrongParamName(country, 1);\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not find parameter 'bogus'. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [bogus.id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":243,"groupId":"956","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFailIfKeyPropertyIsInvalid_WrongParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9b/4fb9cfb2c0cc5f7b2b31d994b5999e990a02fb.src","preCode":"  public void shouldFailIfKeyPropertyIsInvalid_WrongParamName() throws Exception {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithWrongParamName(country, Integer.valueOf(1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not find parameter 'bogus'. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [bogus.id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/keygen/Jdbc3KeyGeneratorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-11-12 23:07:00","codes":[{"authorDate":"2019-11-12 23:07:00","commitOrder":3,"curCode":"  void shouldFailIfKeyPropertyIsInvalid_NoParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(() -> mapper.insertMultiParams_keyPropertyWithoutParamName(country, 1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not determine which parameter to assign generated keys to. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","date":"2019-11-12 23:07:00","endLine":298,"groupId":"10631","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFailIfKeyPropertyIsInvalid_NoParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/af/7bbd0cb66eacda141479e6ae356cbcd969433c.src","preCode":"  void shouldFailIfKeyPropertyIsInvalid_NoParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithoutParamName(country, 1);\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not determine which parameter to assign generated keys to. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/keygen/Jdbc3KeyGeneratorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2019-11-12 23:07:00","commitOrder":3,"curCode":"  void shouldFailIfKeyPropertyIsInvalid_WrongParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(() -> mapper.insertMultiParams_keyPropertyWithWrongParamName(country, 1));\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not find parameter 'bogus'. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [bogus.id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","date":"2019-11-12 23:07:00","endLine":315,"groupId":"10631","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFailIfKeyPropertyIsInvalid_WrongParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/af/7bbd0cb66eacda141479e6ae356cbcd969433c.src","preCode":"  void shouldFailIfKeyPropertyIsInvalid_WrongParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      try {\n        CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);\n        Country country = new Country(\"China\", \"CN\");\n        when(mapper).insertMultiParams_keyPropertyWithWrongParamName(country, 1);\n        then(caughtException()).isInstanceOf(PersistenceException.class).hasMessageContaining(\n            \"Could not find parameter 'bogus'. \"\n                + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n                + \"Specified key properties are [bogus.id] and available parameters are [\");\n      } finally {\n        sqlSession.rollback();\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/keygen/Jdbc3KeyGeneratorTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"}],"commitId":"5dda40baca8c8ffde889ddbd77a4deefbf92dc1d","commitMessage":"@@@Merge pull request #1741 from kazuki43zoo/gh-1736\n\nBump catch-exception from 1.4.6 to 2.0","date":"2019-11-12 23:07:00","modifiedFileCount":"12","status":"M","submitter":"Kazuki Shimizu"}]
