[{"authorTime":"2010-12-07 09:49:30","codes":[{"authorDate":"2011-02-15 03:09:58","commitOrder":3,"curCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      SameIdPersonMapper personMapper = sqlSession.getMapper(SameIdPersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      SameIdPetMapper petMapper = sqlSession.getMapper(SameIdPetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2011-02-15 03:09:58","endLine":53,"groupId":"1123","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCrossReference","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8c/abb6dedaa2b7a0c3df3cbee19852a5c5a6c0ca.src","preCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      SameIdPersonMapper personMapper = sqlSession.getMapper(SameIdPersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      SameIdPetMapper petMapper = sqlSession.getMapper(SameIdPetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/SameIdTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2010-12-07 09:49:30","commitOrder":3,"curCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      PetMapper petMapper = sqlSession.getMapper(PetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2010-12-07 09:49:30","endLine":83,"groupId":"1123","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCrossReference","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/3f/a370b44b18a8c7a4e61e3e674725951158f1bc.src","preCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      PetMapper petMapper = sqlSession.getMapper(PetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"NB"}],"commitId":"3111a254357877c3629e7f7791b941a68114439a","commitMessage":"@@@Fixed http://code.google.com/p/mybatis/issues/detail?id=180 . Modified StrictMap so that statements/fragments cannot be references by their short name when a long name is specified.\n","date":"2011-02-15 03:09:58","modifiedFileCount":"2","status":"M","submitter":"Christian Poitras"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SameIdPersonMapper personMapper = sqlSession.getMapper(SameIdPersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      SameIdPetMapper petMapper = sqlSession.getMapper(SameIdPetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":65,"groupId":"10210","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCrossReference","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/16/badb62586db37be662a26a1a74f4497aed43c5.src","preCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      SameIdPersonMapper personMapper = sqlSession.getMapper(SameIdPersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      SameIdPetMapper petMapper = sqlSession.getMapper(SameIdPetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/SameIdTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      PetMapper petMapper = sqlSession.getMapper(PetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":108,"groupId":"10210","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCrossReference","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6c/ee6421795770370dfa4303bc04766eca5a37dd.src","preCode":"  private void testCrossReference(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer)2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      PetMapper petMapper = sqlSession.getMapper(PetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"}]
