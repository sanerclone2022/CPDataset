[{"authorTime":"2016-01-28 00:36:30","codes":[{"authorDate":"2016-01-28 00:36:30","commitOrder":1,"curCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    SqlSession sqlSession1 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession1.close();\n    }\n\n    SqlSession sqlSession2 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    } finally {\n      sqlSession2.close();\n    }\n\n    SqlSession sqlSession3 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findAll().size());\n    } finally {\n      sqlSession3.close();\n    }\n  }\n","date":"2016-01-28 00:41:24","endLine":211,"groupId":"2258","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInsertWithOptionsFlushesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8c/84a81233c85c9bbe7b9f399e5e8edb9d76ab62.src","preCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    SqlSession sqlSession1 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession1.close();\n    }\n\n    SqlSession sqlSession2 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    } finally {\n      sqlSession2.close();\n    }\n\n    SqlSession sqlSession3 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findAll().size());\n    } finally {\n      sqlSession3.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"},{"authorDate":"2016-01-28 00:36:30","commitOrder":1,"curCode":"  public void shouldApplyFlushCacheOptions() {\n    SqlSession sqlSession1 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession1.close();\n    }\n\n    SqlSession sqlSession2 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    } finally {\n      sqlSession2.close();\n    }\n\n    SqlSession sqlSession3 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession3.close();\n    }\n\n    SqlSession sqlSession4 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findWithFlushCache().size());\n    } finally {\n      sqlSession4.close();\n    }\n  }\n","date":"2016-01-28 00:41:24","endLine":262,"groupId":"1895","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldApplyFlushCacheOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8c/84a81233c85c9bbe7b9f399e5e8edb9d76ab62.src","preCode":"  public void shouldApplyFlushCacheOptions() {\n    SqlSession sqlSession1 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession1.close();\n    }\n\n    SqlSession sqlSession2 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    } finally {\n      sqlSession2.close();\n    }\n\n    SqlSession sqlSession3 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession3.close();\n    }\n\n    SqlSession sqlSession4 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findWithFlushCache().size());\n    } finally {\n      sqlSession4.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"B"}],"commitId":"283d91e195d6d7286ce03765c4ace82639101f78","commitMessage":"@@@fixes #405 Changed the type of flushCache in @Options from boolean to enum FlushCachePolicy.\n","date":"2016-01-28 00:41:24","modifiedFileCount":"4","status":"B","submitter":"Iwao AVE!"},{"authorTime":"2018-05-03 21:34:51","codes":[{"authorDate":"2018-05-03 21:34:51","commitOrder":2,"curCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findAll().size());\n    }\n  }\n","date":"2018-05-03 21:34:51","endLine":180,"groupId":"133","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInsertWithOptionsFlushesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/25/1a9232e9f90fb73c5e33e2dba2bac71737dc13.src","preCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    SqlSession sqlSession1 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession1.close();\n    }\n\n    SqlSession sqlSession2 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    } finally {\n      sqlSession2.close();\n    }\n\n    SqlSession sqlSession3 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findAll().size());\n    } finally {\n      sqlSession3.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2018-05-03 21:34:51","commitOrder":2,"curCode":"  public void shouldApplyFlushCacheOptions() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findWithFlushCache().size());\n    }\n  }\n","date":"2018-05-03 21:34:51","endLine":219,"groupId":"133","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldApplyFlushCacheOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/25/1a9232e9f90fb73c5e33e2dba2bac71737dc13.src","preCode":"  public void shouldApplyFlushCacheOptions() {\n    SqlSession sqlSession1 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession1.close();\n    }\n\n    SqlSession sqlSession2 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    } finally {\n      sqlSession2.close();\n    }\n\n    SqlSession sqlSession3 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    } finally {\n      sqlSession3.close();\n    }\n\n    SqlSession sqlSession4 = sqlSessionFactory.openSession(true);\n    try {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findWithFlushCache().size());\n    } finally {\n      sqlSession4.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"d5f024c6256b5deb9d79dc8b35ebd825e47e679c","commitMessage":"@@@Merge pull request #1270 from kazuki43zoo/try-with-resources\n\nChange to use try-with-resources on test","date":"2018-05-03 21:34:51","modifiedFileCount":"150","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":3,"curCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findAll().size());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":180,"groupId":"131","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInsertWithOptionsFlushesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/88bba32d393c2e9f3dd4539b6d6f5763ac9683.src","preCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findAll().size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":3,"curCode":"  public void shouldApplyFlushCacheOptions() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findWithFlushCache().size());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":219,"groupId":"133","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldApplyFlushCacheOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/88bba32d393c2e9f3dd4539b6d6f5763ac9683.src","preCode":"  public void shouldApplyFlushCacheOptions() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assert.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assert.assertEquals(3, pm.findWithFlushCache().size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldInsertWithOptionsFlushesCache() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findAll().size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":180,"groupId":"10404","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInsertWithOptionsFlushesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/55/678dadcb3ab77f52352a01a9d4d10179d846db.src","preCode":"  public void shouldInsertWithOptionsFlushesCache() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findAll().size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void shouldApplyFlushCacheOptions() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findWithFlushCache().size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":219,"groupId":"10404","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldApplyFlushCacheOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/55/678dadcb3ab77f52352a01a9d4d10179d846db.src","preCode":"  public void shouldApplyFlushCacheOptions() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findWithFlushCache().size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
