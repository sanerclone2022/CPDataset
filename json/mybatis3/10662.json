[{"authorTime":"2016-04-22 02:32:43","codes":[{"authorDate":"2016-04-22 02:32:43","commitOrder":1,"curCode":"  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getArray(1)).thenReturn(mockArray);\n    when(rs.wasNull()).thenReturn(false);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(rs, 1));\n  }\n","date":"2016-04-22 02:32:43","endLine":70,"groupId":"1666","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetResultFromResultSetByPosition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5c/69097cb8de777e000139df2ccfd8ee1f0c24db.src","preCode":"  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getArray(1)).thenReturn(mockArray);\n    when(rs.wasNull()).thenReturn(false);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(rs, 1));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/ArrayTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2016-04-22 02:32:43","commitOrder":1,"curCode":"  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getArray(1)).thenReturn(mockArray);\n    when(cs.wasNull()).thenReturn(false);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(cs, 1));\n  }\n","date":"2016-04-22 02:32:43","endLine":88,"groupId":"1666","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetResultFromCallableStatement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5c/69097cb8de777e000139df2ccfd8ee1f0c24db.src","preCode":"  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getArray(1)).thenReturn(mockArray);\n    when(cs.wasNull()).thenReturn(false);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(cs, 1));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/ArrayTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"46c9e07804ddc644d96153864bd86cc7ddb6029f","commitMessage":"@@@Merge pull request #651 from kazuki43zoo/add-testcases-for-typehandlers\n\nAdd test cases for TypeHandlers","date":"2016-04-22 02:32:43","modifiedFileCount":"0","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2019-01-04 20:48:40","codes":[{"authorDate":"2019-01-04 20:48:40","commitOrder":2,"curCode":"  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getArray(1)).thenReturn(mockArray);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(rs, 1));\n    verify(mockArray).free();\n  }\n","date":"2019-01-04 21:00:03","endLine":67,"groupId":"10662","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetResultFromResultSetByPosition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/88/2090ad0f36755f635374a9efd16d971473cbe7.src","preCode":"  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getArray(1)).thenReturn(mockArray);\n    when(rs.wasNull()).thenReturn(false);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(rs, 1));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/ArrayTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-01-04 20:48:40","commitOrder":2,"curCode":"  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getArray(1)).thenReturn(mockArray);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(cs, 1));\n    verify(mockArray).free();\n  }\n","date":"2019-01-04 21:00:03","endLine":84,"groupId":"10662","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetResultFromCallableStatement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/88/2090ad0f36755f635374a9efd16d971473cbe7.src","preCode":"  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getArray(1)).thenReturn(mockArray);\n    when(cs.wasNull()).thenReturn(false);\n    String[] stringArray = new String[]{\"a\", \"b\"};\n    when(mockArray.getArray()).thenReturn(stringArray);\n    assertEquals(stringArray, TYPE_HANDLER.getResult(cs, 1));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/ArrayTypeHandlerTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"179d3153fbad861ffc0406b111c3e09c231cddc8","commitMessage":"@@@fixes #1427 ArrayTypeHandler should call java.sql.Array#free().\n","date":"2019-01-04 21:00:03","modifiedFileCount":"2","status":"M","submitter":"Iwao AVE!"}]
