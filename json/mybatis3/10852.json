[{"authorTime":"2012-02-13 13:53:35","codes":[{"authorDate":"2010-11-06 13:03:14","commitOrder":2,"curCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = MetaObject.forObject(cachedParameter);\n        final MetaObject metaParameter = MetaObject.forObject(parameter);\n        for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","date":"2010-11-06 13:03:14","endLine":210,"groupId":"2040","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleLocallyCachedOutputParameters","params":"(MappedStatementms@CacheKeykey@Objectparameter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/de/5421d41fce24b8c61346e112d81dbf02e91e51.src","preCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = MetaObject.forObject(cachedParameter);\n        final MetaObject metaParameter = MetaObject.forObject(parameter);\n        for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/BaseExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"NB"},{"authorDate":"2012-02-13 13:53:35","commitOrder":2,"curCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","date":"2012-02-13 13:53:35","endLine":129,"groupId":"524","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoOutParams","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/75/fe3b5eb054a6cf2904c39693d0113b705d659a.src","preCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/CachingExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"521f7834caddd6eacf109d00ab6fc5cc039d1268","commitMessage":"@@@temporary fix for http://code.google.com/p/mybatis/issues/detail?id=464 . Fail if an attempt is made to cache a procedure call with OUT params.\n","date":"2012-02-13 13:53:35","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2012-02-13 13:53:35","codes":[{"authorDate":"2012-02-13 17:50:18","commitOrder":3,"curCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = MetaObject.forObject(cachedParameter);\n        final MetaObject metaParameter = MetaObject.forObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","date":"2012-02-13 17:50:18","endLine":255,"groupId":"2230","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleLocallyCachedOutputParameters","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/1b/7aa0b01fde9645729c425fd02e49dd9f7218c1.src","preCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = MetaObject.forObject(cachedParameter);\n        final MetaObject metaParameter = MetaObject.forObject(parameter);\n        for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/BaseExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2012-02-13 13:53:35","commitOrder":3,"curCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","date":"2012-02-13 13:53:35","endLine":129,"groupId":"524","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoOutParams","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/75/fe3b5eb054a6cf2904c39693d0113b705d659a.src","preCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/CachingExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"749312cb60ebf1db541b20e1565c8cf38510175a","commitMessage":"@@@minor optimization.  avoid parsing the sql again\n","date":"2012-02-13 17:50:18","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2012-02-13 13:53:35","codes":[{"authorDate":"2012-07-24 00:04:35","commitOrder":4,"curCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = configuration.newMetaObject(cachedParameter);\n        final MetaObject metaParameter = configuration.newMetaObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","date":"2012-07-24 00:04:35","endLine":259,"groupId":"2531","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handleLocallyCachedOutputParameters","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/3c/deede5f0b9285d982f85799257493256644406.src","preCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = MetaObject.forObject(cachedParameter);\n        final MetaObject metaParameter = MetaObject.forObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/BaseExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"},{"authorDate":"2012-02-13 13:53:35","commitOrder":4,"curCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","date":"2012-02-13 13:53:35","endLine":129,"groupId":"524","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoOutParams","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/75/fe3b5eb054a6cf2904c39693d0113b705d659a.src","preCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/CachingExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"f2669ce50b49ef791874d75d2626a95c277c0ee0","commitMessage":"@@@ObjectFactory usage consistency. http://code.google.com/p/mybatis/issues/detail?id=631 \n","date":"2012-07-24 00:04:35","modifiedFileCount":"19","status":"M","submitter":"Frank Mart?nez"},{"authorTime":"2013-03-29 17:54:28","codes":[{"authorDate":"2012-07-24 00:04:35","commitOrder":5,"curCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = configuration.newMetaObject(cachedParameter);\n        final MetaObject metaParameter = configuration.newMetaObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","date":"2012-07-24 00:04:35","endLine":259,"groupId":"2531","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"handleLocallyCachedOutputParameters","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/3c/deede5f0b9285d982f85799257493256644406.src","preCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = configuration.newMetaObject(cachedParameter);\n        final MetaObject metaParameter = configuration.newMetaObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/BaseExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"N"},{"authorDate":"2013-03-29 17:54:28","commitOrder":5,"curCode":"  private void ensureNoOutParams(MappedStatement ms, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","date":"2013-03-29 17:54:28","endLine":137,"groupId":"2267","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoOutParams","params":"(MappedStatementms@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f7/cbff11c78ab4384f4b60960c062b6148e9ac7c.src","preCode":"  private void ensureNoOutParams(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : ms.getBoundSql(parameter).getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/CachingExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"6604246634827620cd2fcbf83d51b36840b5f3eb","commitMessage":"@@@Removed unused parameter and avoid calling getBoundSql","date":"2013-03-29 17:54:28","modifiedFileCount":"2","status":"M","submitter":"eduardo"},{"authorTime":"2017-10-01 11:40:17","codes":[{"authorDate":"2012-07-24 00:04:35","commitOrder":6,"curCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = configuration.newMetaObject(cachedParameter);\n        final MetaObject metaParameter = configuration.newMetaObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","date":"2012-07-24 00:04:35","endLine":259,"groupId":"10852","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"handleLocallyCachedOutputParameters","params":"(MappedStatementms@CacheKeykey@Objectparameter@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/3c/deede5f0b9285d982f85799257493256644406.src","preCode":"  private void handleLocallyCachedOutputParameters(MappedStatement ms, CacheKey key, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      final Object cachedParameter = localOutputParameterCache.getObject(key);\n      if (cachedParameter != null && parameter != null) {\n        final MetaObject metaCachedParameter = configuration.newMetaObject(cachedParameter);\n        final MetaObject metaParameter = configuration.newMetaObject(parameter);\n        for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n          if (parameterMapping.getMode() != ParameterMode.IN) {\n            final String parameterName = parameterMapping.getProperty();\n            final Object cachedValue = metaCachedParameter.getValue(parameterName);\n            metaParameter.setValue(parameterName, cachedValue);\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/BaseExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"N"},{"authorDate":"2017-10-01 11:40:17","commitOrder":6,"curCode":"  private void ensureNoOutParams(MappedStatement ms, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","date":"2017-10-01 11:40:17","endLine":142,"groupId":"10852","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoOutParams","params":"(MappedStatementms@BoundSqlboundSql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9c/9bd3ad98e69e11cc1b7366d093639b340f5579.src","preCode":"  private void ensureNoOutParams(MappedStatement ms, Object parameter, BoundSql boundSql) {\n    if (ms.getStatementType() == StatementType.CALLABLE) {\n      for (ParameterMapping parameterMapping : boundSql.getParameterMappings()) {\n        if (parameterMapping.getMode() != ParameterMode.IN) {\n          throw new ExecutorException(\"Caching stored procedures with OUT params is not supported.  Please configure useCache=false in \" + ms.getId() + \" statement.\");\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/CachingExecutor.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"f0d1b6f9bdbb98855186505d307274bf2741d700","commitMessage":"@@@Merge pull request #1108 from kazuki43zoo/fix-pmd-report\n\nFix some PMD reports","date":"2017-10-01 11:40:17","modifiedFileCount":"13","status":"M","submitter":"Jeremy Landis"}]
