[{"authorTime":"2010-11-26 22:34:28","codes":[{"authorDate":"2010-11-26 22:34:28","commitOrder":1,"curCode":"  private void testMultipleIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleIncludePersonMapper personMapper = sqlSession.getMapper(MultipleIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals(1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2010-11-26 22:34:28","endLine":45,"groupId":"1133","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleIncludes","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/1e/68fe6a3e0370da40784eedbd02fc0cbc276cfe.src","preCode":"  private void testMultipleIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleIncludePersonMapper personMapper = sqlSession.getMapper(MultipleIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals(1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/MultipleIncludeTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2010-11-26 22:34:28","commitOrder":1,"curCode":"  private void testMultipleReverseIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper(MultipleReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals(1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2010-11-26 22:34:28","endLine":45,"groupId":"1133","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleReverseIncludes","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e6/844b7b1af858af573da89ac6cf463dae2c9eaf.src","preCode":"  private void testMultipleReverseIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper(MultipleReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals(1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/MultipleReverseIncludeTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"}],"commitId":"44225b29b18a46fb12562c43812385dfb47bc30d","commitMessage":"@@@SQL Fragments can be included from XML files that were not parsed yet.\n","date":"2010-11-26 22:34:28","modifiedFileCount":"3","status":"B","submitter":"Christian Poitras"},{"authorTime":"2010-12-07 09:49:30","codes":[{"authorDate":"2010-12-07 09:49:30","commitOrder":2,"curCode":"  private void testMultipleIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleIncludePersonMapper personMapper = sqlSession.getMapper(MultipleIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2010-12-07 09:49:30","endLine":45,"groupId":"1123","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleIncludes","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/a407fefbb2959d4bbac7589bdf33ef68d2d3c6.src","preCode":"  private void testMultipleIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleIncludePersonMapper personMapper = sqlSession.getMapper(MultipleIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals(1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/MultipleIncludeTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2010-12-07 09:49:30","commitOrder":2,"curCode":"  private void testMultipleReverseIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper(MultipleReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2010-12-07 09:49:30","endLine":45,"groupId":"1123","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleReverseIncludes","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/77/618cef27d2a291eed2b03a7c60173ddbf04097.src","preCode":"  private void testMultipleReverseIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper(MultipleReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals(1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/MultipleReverseIncludeTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"501b3b78fbc39ac032fad056bc65044a1a1bdd69","commitMessage":"@@@Upgrade JUnit and fix a few tests.  Also fork the tests to keep the memory consumption down.\n","date":"2010-12-07 09:49:30","modifiedFileCount":"7","status":"M","submitter":"Jeff Butler"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  private void testMultipleIncludes(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MultipleIncludePersonMapper personMapper = sqlSession.getMapper(MultipleIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(\"John\", person.getName());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":56,"groupId":"10212","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleIncludes","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/79/992d6d68bba408688890eb3f812e406a8c6d49.src","preCode":"  private void testMultipleIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleIncludePersonMapper personMapper = sqlSession.getMapper(MultipleIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/MultipleIncludeTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  private void testMultipleReverseIncludes(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper(MultipleReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(\"John\", person.getName());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":56,"groupId":"10212","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleReverseIncludes","params":"(SqlSessionFactorysqlSessionFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/19/ce2dbc10fed14e0a2ac227de0583054ee37bb4.src","preCode":"  private void testMultipleReverseIncludes(SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper(MultipleReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer)1, person.getId());\n      assertEquals(\"John\", person.getName());\n\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/xml_external_ref/MultipleReverseIncludeTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"}]
