[{"authorTime":"2016-02-10 13:28:23","codes":[{"authorDate":"2016-02-10 13:28:23","commitOrder":1,"curCode":"  public void testReturn_Lv2CustomClass() throws Exception {\n    Class<?> clazz = Level2Mapper.class;\n    Method method = clazz.getMethod(\"selectCalculator\", Calculator.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType paramType = (ParameterizedType) result;\n    assertEquals(Calculator.class, paramType.getRawType());\n    assertEquals(1, paramType.getActualTypeArguments().length);\n    assertEquals(String.class, paramType.getActualTypeArguments()[0]);\n  }\n","date":"2016-02-10 19:22:59","endLine":147,"groupId":"389","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReturn_Lv2CustomClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/8962bde19af94934918dc74c0cfeee25f74724.src","preCode":"  public void testReturn_Lv2CustomClass() throws Exception {\n    Class<?> clazz = Level2Mapper.class;\n    Method method = clazz.getMethod(\"selectCalculator\", Calculator.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType paramType = (ParameterizedType) result;\n    assertEquals(Calculator.class, paramType.getRawType());\n    assertEquals(1, paramType.getActualTypeArguments().length);\n    assertEquals(String.class, paramType.getActualTypeArguments()[0]);\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/TypeParameterResolverTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2016-02-10 13:28:23","commitOrder":1,"curCode":"  public void testReturn_Lv1List() throws Exception {\n    Class<?> clazz = Level1Mapper.class;\n    Method method = clazz.getMethod(\"selectList\", Object.class, Object.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType type = (ParameterizedType) result;\n    assertEquals(List.class, type.getRawType());\n    assertEquals(1, type.getActualTypeArguments().length);\n    assertEquals(String.class, type.getActualTypeArguments()[0]);\n  }\n","date":"2016-02-10 19:22:59","endLine":189,"groupId":"389","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReturn_Lv1List","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/8962bde19af94934918dc74c0cfeee25f74724.src","preCode":"  public void testReturn_Lv1List() throws Exception {\n    Class<?> clazz = Level1Mapper.class;\n    Method method = clazz.getMethod(\"selectList\", Object.class, Object.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType type = (ParameterizedType) result;\n    assertEquals(List.class, type.getRawType());\n    assertEquals(1, type.getActualTypeArguments().length);\n    assertEquals(String.class, type.getActualTypeArguments()[0]);\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/TypeParameterResolverTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"}],"commitId":"3d8dbe1bfce659d210baebb74e8882deaab80848","commitMessage":"@@@fixes #321 The return type of a mapper method is not correctly resolved when it contains type parameters.\n","date":"2016-02-10 19:22:59","modifiedFileCount":"2","status":"B","submitter":"Iwao AVE!"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  void testReturn_Lv2CustomClass() throws Exception {\n    Class<?> clazz = Level2Mapper.class;\n    Method method = clazz.getMethod(\"selectCalculator\", Calculator.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType paramType = (ParameterizedType) result;\n    assertEquals(Calculator.class, paramType.getRawType());\n    assertEquals(1, paramType.getActualTypeArguments().length);\n    assertEquals(String.class, paramType.getActualTypeArguments()[0]);\n  }\n","date":"2019-01-23 20:49:49","endLine":163,"groupId":"1030","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReturn_Lv2CustomClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/13/8da9977a2b88c8ca193b69804cc0fca6eaa206.src","preCode":"  public void testReturn_Lv2CustomClass() throws Exception {\n    Class<?> clazz = Level2Mapper.class;\n    Method method = clazz.getMethod(\"selectCalculator\", Calculator.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType paramType = (ParameterizedType) result;\n    assertEquals(Calculator.class, paramType.getRawType());\n    assertEquals(1, paramType.getActualTypeArguments().length);\n    assertEquals(String.class, paramType.getActualTypeArguments()[0]);\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/TypeParameterResolverTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  void testReturn_Lv1List() throws Exception {\n    Class<?> clazz = Level1Mapper.class;\n    Method method = clazz.getMethod(\"selectList\", Object.class, Object.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType type = (ParameterizedType) result;\n    assertEquals(List.class, type.getRawType());\n    assertEquals(1, type.getActualTypeArguments().length);\n    assertEquals(String.class, type.getActualTypeArguments()[0]);\n  }\n","date":"2019-01-23 20:49:49","endLine":205,"groupId":"1030","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReturn_Lv1List","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/13/8da9977a2b88c8ca193b69804cc0fca6eaa206.src","preCode":"  public void testReturn_Lv1List() throws Exception {\n    Class<?> clazz = Level1Mapper.class;\n    Method method = clazz.getMethod(\"selectList\", Object.class, Object.class);\n    Type result = TypeParameterResolver.resolveReturnType(method, clazz);\n    assertTrue(result instanceof ParameterizedType);\n    ParameterizedType type = (ParameterizedType) result;\n    assertEquals(List.class, type.getRawType());\n    assertEquals(1, type.getActualTypeArguments().length);\n    assertEquals(String.class, type.getActualTypeArguments()[0]);\n  }\n","realPath":"src/test/java/org/apache/ibatis/reflection/TypeParameterResolverTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
