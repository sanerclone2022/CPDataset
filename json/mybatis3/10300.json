[{"authorTime":"2017-07-27 08:31:52","codes":[{"authorDate":"2017-07-27 08:31:52","commitOrder":1,"curCode":"  public String buildSelectByIdProviderContextOnly(ProviderContext context) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      WHERE(\"id = #{id}\");\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","date":"2017-07-27 08:31:52","endLine":163,"groupId":"2302","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildSelectByIdProviderContextOnly","params":"(ProviderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ea/2b766774f762a326f11addebe1abf20cf603d1.src","preCode":"  public String buildSelectByIdProviderContextOnly(ProviderContext context) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      WHERE(\"id = #{id}\");\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2017-07-27 08:31:52","commitOrder":1,"curCode":"  public String buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam(@Param(\"id\") final Integer id, ProviderContext context, @Param(\"name\") final String name) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      if (id != null) {\n        WHERE(\"id = #{id}\");\n      }\n      if (name != null) {\n        WHERE(\"name like #{name} || '%'\");\n      }\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","date":"2017-07-27 08:31:52","endLine":196,"groupId":"2302","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam","params":"(@Param(\"id\")finalIntegerid@ProviderContextcontext@@Param(\"name\")finalStringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ea/2b766774f762a326f11addebe1abf20cf603d1.src","preCode":"  public String buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam(@Param(\"id\") final Integer id, ProviderContext context, @Param(\"name\") final String name) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      if (id != null) {\n        WHERE(\"id = #{id}\");\n      }\n      if (name != null) {\n        WHERE(\"name like #{name} || '%'\");\n      }\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"}],"commitId":"45712f3a2c0dc0856e26f269be3427efd4e3261d","commitMessage":"@@@Merge pull request #1055 from kazuki43zoo/gh-1013_sqlprovider\n\nSupport ProviderContext on sql provider method","date":"2017-07-27 08:31:52","modifiedFileCount":"5","status":"B","submitter":"Kazuki Shimizu"},{"authorTime":"2017-07-27 08:31:52","codes":[{"authorDate":"2017-07-29 20:41:18","commitOrder":2,"curCode":"  public String buildSelectByIdProviderContextOnly(ProviderContext context) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      WHERE(\"id = #{id}\");\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = ${Constants.LOGICAL_DELETE_OFF}\");\n      }\n    }}.toString();\n  }\n","date":"2017-07-29 20:41:18","endLine":163,"groupId":"10300","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildSelectByIdProviderContextOnly","params":"(ProviderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/35/9badc4fc3600fbc8ae1ce5257150da9f265ddf.src","preCode":"  public String buildSelectByIdProviderContextOnly(ProviderContext context) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      WHERE(\"id = #{id}\");\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"},{"authorDate":"2017-07-27 08:31:52","commitOrder":2,"curCode":"  public String buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam(@Param(\"id\") final Integer id, ProviderContext context, @Param(\"name\") final String name) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      if (id != null) {\n        WHERE(\"id = #{id}\");\n      }\n      if (name != null) {\n        WHERE(\"name like #{name} || '%'\");\n      }\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","date":"2017-07-27 08:31:52","endLine":196,"groupId":"10300","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam","params":"(@Param(\"id\")finalIntegerid@ProviderContextcontext@@Param(\"name\")finalStringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ea/2b766774f762a326f11addebe1abf20cf603d1.src","preCode":"  public String buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam(@Param(\"id\") final Integer id, ProviderContext context, @Param(\"name\") final String name) {\n    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;\n    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();\n    return new SQL(){{\n      SELECT(\"*\");\n      FROM(tableName);\n      if (id != null) {\n        WHERE(\"id = #{id}\");\n      }\n      if (name != null) {\n        WHERE(\"name like #{name} || '%'\");\n      }\n      if (!containsLogicalDelete){\n        WHERE(\"logical_delete = false\");\n      }\n    }}.toString();\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"N"}],"commitId":"1af8f683fd5b86cec538ab0e96935291220994f6","commitMessage":"@@@Merge pull request #1061 from kazuki43zoo/gh-1057_allow-placeholder-on-sqlprovider\n\nAllow replacing configuration properties on ProviderSqlSource","date":"2017-07-29 20:41:18","modifiedFileCount":"2","status":"M","submitter":"Kazuki Shimizu"}]
