[{"authorTime":"2011-12-09 08:03:24","codes":[{"authorDate":"2011-12-09 08:03:24","commitOrder":1,"curCode":"  public void shouldConditionallyIncludeWhere() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE ID = ?\")), \"true\"\n        ));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2011-12-09 08:03:24","endLine":64,"groupId":"681","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConditionallyIncludeWhere","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2a/4e243e2f6b2406d14d0ca27b63d10f8aa6e85a.src","preCode":"  public void shouldConditionallyIncludeWhere() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE ID = ?\")), \"true\"\n        ));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2011-12-09 08:03:24","commitOrder":1,"curCode":"  public void shouldConditionallyChooseSecond() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE CATEGORY = 'NONE'\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new ChooseSqlNode(new ArrayList() {{\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = ?\")), \"false\"\n          ));\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'NONE'\")), \"true\"\n          ));\n        }}, mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'DEFAULT'\"))));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2011-12-09 08:03:24","endLine":120,"groupId":"685","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConditionallyChooseSecond","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2a/4e243e2f6b2406d14d0ca27b63d10f8aa6e85a.src","preCode":"  public void shouldConditionallyChooseSecond() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE CATEGORY = 'NONE'\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new ChooseSqlNode(new ArrayList() {{\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = ?\")), \"false\"\n          ));\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'NONE'\")), \"true\"\n          ));\n        }}, mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'DEFAULT'\"))));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"e8cc000886bd21814f8ac91fc3dfc5c2104afa98","commitMessage":"@@@added lincese headers\n","date":"2011-12-09 08:03:24","modifiedFileCount":"769","status":"B","submitter":"Simone Tripodi"},{"authorTime":"2012-06-06 05:17:13","codes":[{"authorDate":"2011-12-09 08:03:24","commitOrder":2,"curCode":"  public void shouldConditionallyIncludeWhere() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE ID = ?\")), \"true\"\n        ));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2011-12-09 08:03:24","endLine":64,"groupId":"681","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConditionallyIncludeWhere","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2a/4e243e2f6b2406d14d0ca27b63d10f8aa6e85a.src","preCode":"  public void shouldConditionallyIncludeWhere() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE ID = ?\")), \"true\"\n        ));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"},{"authorDate":"2012-06-06 05:17:13","commitOrder":2,"curCode":"  public void shouldConditionallyChooseSecond() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE CATEGORY = 'NONE'\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new ChooseSqlNode(new ArrayList<SqlNode>() {{\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = ?\")), \"false\"\n          ));\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'NONE'\")), \"true\"\n          ));\n        }}, mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'DEFAULT'\"))));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2012-06-06 05:17:13","endLine":131,"groupId":"685","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConditionallyChooseSecond","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/04/5043262b3d4be0ce97d1a2f3c27df9ad6e28de.src","preCode":"  public void shouldConditionallyChooseSecond() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE CATEGORY = 'NONE'\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new ChooseSqlNode(new ArrayList() {{\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = ?\")), \"false\"\n          ));\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'NONE'\")), \"true\"\n          ));\n        }}, mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'DEFAULT'\"))));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"e3ff256e1b44890e7ffaba7fbc18d672e60e59af","commitMessage":"@@@resolve a bunch of simple warnings\n","date":"2012-06-06 05:17:13","modifiedFileCount":"61","status":"M","submitter":"Jeff Butler"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldConditionallyIncludeWhere() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE ID = ?\")), \"true\"\n        ));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2019-01-23 20:49:49","endLine":77,"groupId":"1049","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConditionallyIncludeWhere","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6f/d3335db3f4a80d1f8fdd8ad2d3117b58c4b086.src","preCode":"  public void shouldConditionallyIncludeWhere() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE ID = ?\")), \"true\"\n        ));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldConditionallyChooseSecond() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE CATEGORY = 'NONE'\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new ChooseSqlNode(new ArrayList<SqlNode>() {{\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = ?\")), \"false\"\n          ));\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'NONE'\")), \"true\"\n          ));\n        }}, mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'DEFAULT'\"))));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2019-01-23 20:49:49","endLine":133,"groupId":"1049","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConditionallyChooseSecond","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6f/d3335db3f4a80d1f8fdd8ad2d3117b58c4b086.src","preCode":"  public void shouldConditionallyChooseSecond() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE CATEGORY = 'NONE'\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new ChooseSqlNode(new ArrayList<SqlNode>() {{\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = ?\")), \"false\"\n          ));\n          add(new IfSqlNode(mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'NONE'\")), \"true\"\n          ));\n        }}, mixedContents(new TextSqlNode(\"WHERE CATEGORY = 'DEFAULT'\"))));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
