[{"authorTime":"2016-04-16 03:58:11","codes":[{"authorDate":"2016-04-16 03:58:11","commitOrder":1,"curCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-04-16 03:58:11","endLine":207,"groupId":"1747","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetUsersByNameUsingMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/26/c324d9bbccd3bb4fe6d71183f8626dcd57a278.src","preCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"},{"authorDate":"2016-04-16 03:58:11","commitOrder":1,"curCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameWithParamName(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-04-16 03:58:11","endLine":224,"groupId":"1747","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetUsersByNameWithParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/26/c324d9bbccd3bb4fe6d71183f8626dcd57a278.src","preCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameWithParamName(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"B"}],"commitId":"2beff6b74e7fb2f65f956d8a53b09a286e213a00","commitMessage":"@@@Merge pull request #639 from kazuki43zoo/support-multiple-arguments-at-sqlprovider\n\nAllow multiple arguments at a Sql Provider method","date":"2016-04-16 03:58:11","modifiedFileCount":"4","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2016-04-16 04:21:55","codes":[{"authorDate":"2016-04-16 03:58:11","commitOrder":2,"curCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-04-16 03:58:11","endLine":207,"groupId":"1747","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetUsersByNameUsingMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/26/c324d9bbccd3bb4fe6d71183f8626dcd57a278.src","preCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"},{"authorDate":"2016-04-16 04:21:55","commitOrder":2,"curCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-04-16 04:21:55","endLine":258,"groupId":"1747","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetUsersByNameWithParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d3/3d89fc7cdfe5b9ac424e7a1412220ec5cfc216.src","preCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameWithParamName(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"98edf2d67927cdcd64002e6c7b83caccd8fc653d","commitMessage":"@@@Related to #639. Added failing test case and possible fix.","date":"2016-04-16 04:21:55","modifiedFileCount":"5","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2016-04-16 13:44:55","codes":[{"authorDate":"2016-04-16 03:58:11","commitOrder":3,"curCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-04-16 03:58:11","endLine":207,"groupId":"1747","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetUsersByNameUsingMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/26/c324d9bbccd3bb4fe6d71183f8626dcd57a278.src","preCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"},{"authorDate":"2016-04-16 13:44:55","commitOrder":3,"curCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(null);\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2016-04-16 13:44:55","endLine":275,"groupId":"1747","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetUsersByNameWithParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/37/4016741c07501ee3d80bf56028e4c6cd650284.src","preCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"683c9fe5ac1fea2e495f615f2664cdcb02c00af1","commitMessage":"@@@Merge pull request #641 from kazuki43zoo/fix-single-named-argument-at-sqlprovider\n\nFix single named argument at a sql provider method (related with #639)","date":"2016-04-16 13:44:55","modifiedFileCount":"3","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  public void shouldGetUsersByNameUsingMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":194,"groupId":"1747","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetUsersByNameUsingMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/11/49de2533464500de46d1f44bd99d8ef6c0a80b.src","preCode":"  public void shouldGetUsersByNameUsingMap() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  public void shouldGetUsersByNameWithParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(null);\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":246,"groupId":"1747","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetUsersByNameWithParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/11/49de2533464500de46d1f44bd99d8ef6c0a80b.src","preCode":"  public void shouldGetUsersByNameWithParamName() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(null);\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void shouldGetUsersByNameUsingMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":185,"groupId":"10276","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetUsersByNameUsingMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b5/7c86b7ab39a10c45cfed1eb497cdd5c5c54da8.src","preCode":"  public void shouldGetUsersByNameUsingMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersByNameUsingMap(\"User\", \"id DESC\");\n      assertEquals(4, users.size());\n      assertEquals(\"User4\", users.get(0).getName());\n      assertEquals(\"User3\", users.get(1).getName());\n      assertEquals(\"User2\", users.get(2).getName());\n      assertEquals(\"User1\", users.get(3).getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void shouldGetUsersByNameWithParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(null);\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":237,"groupId":"10276","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetUsersByNameWithParamName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b5/7c86b7ab39a10c45cfed1eb497cdd5c5c54da8.src","preCode":"  public void shouldGetUsersByNameWithParamName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(\"User\");\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n      {\n        List<User> users = mapper.getUsersByNameWithParamName(null);\n        assertEquals(4, users.size());\n        assertEquals(\"User4\", users.get(0).getName());\n        assertEquals(\"User3\", users.get(1).getName());\n        assertEquals(\"User2\", users.get(2).getName());\n        assertEquals(\"User1\", users.get(3).getName());\n      }\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
