[{"authorTime":"2012-03-21 10:54:36","codes":[{"authorDate":"2012-03-21 10:54:36","commitOrder":1,"curCode":"  public void shouldTrimWHEREANDWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   and\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2012-03-21 10:54:36","endLine":163,"groupId":"1180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldTrimWHEREANDWithCRLFForFirstCondition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/42/d6f426bd72f4863eba25f6317e58cd67dfba7a.src","preCode":"  public void shouldTrimWHEREANDWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   and\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"},{"authorDate":"2012-03-21 10:54:36","commitOrder":1,"curCode":"  public void shouldTrimWHEREORWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   or\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2012-03-21 10:54:36","endLine":189,"groupId":"1180","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldTrimWHEREORWithCRLFForFirstCondition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/42/d6f426bd72f4863eba25f6317e58cd67dfba7a.src","preCode":"  public void shouldTrimWHEREORWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   or\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"}],"commitId":"bd632947c647405bb60e503b7ad21deb136e7e6f","commitMessage":"@@@(fixes http://code.google.com/p/mybatis/issues/detail?id=526 ) In <where />.  preceding AND/OR is not removed when it's followed by CR or LF.\n","date":"2012-03-21 10:54:36","modifiedFileCount":"2","status":"B","submitter":"Iwao AVE!"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  void shouldTrimWHEREANDWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   and\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2019-01-23 20:49:49","endLine":174,"groupId":"1063","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldTrimWHEREANDWithCRLFForFirstCondition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6f/d3335db3f4a80d1f8fdd8ad2d3117b58c4b086.src","preCode":"  public void shouldTrimWHEREANDWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   and\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  void shouldTrimWHEREORWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   or\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","date":"2019-01-23 20:49:49","endLine":213,"groupId":"1063","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldTrimWHEREORWithCRLFForFirstCondition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6f/d3335db3f4a80d1f8fdd8ad2d3117b58c4b086.src","preCode":"  public void shouldTrimWHEREORWithCRLFForFirstCondition() throws Exception {\n    final String expected = \"SELECT * FROM BLOG WHERE \\r\\n ID = ?\";\n    DynamicSqlSource source = createDynamicSqlSource(\n        new TextSqlNode(\"SELECT * FROM BLOG\"),\n        new WhereSqlNode(new Configuration(),mixedContents(\n            new IfSqlNode(mixedContents(new TextSqlNode(\"   or\\r\\n ID = ?  \")), \"true\"\n                )\n            )));\n    BoundSql boundSql = source.getBoundSql(null);\n    assertEquals(expected, boundSql.getSql());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/xml/dynamic/DynamicSqlSourceTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
