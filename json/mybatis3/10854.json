[{"authorTime":"2013-04-16 03:09:39","codes":[{"authorDate":"2013-04-16 03:09:39","commitOrder":1,"curCode":"  private static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","date":"2013-04-16 03:09:39","endLine":92,"groupId":"281","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@MethodHandlercallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/da/9017fafaac10a653767191033c97257380e006.src","preCode":"  private static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/javassist/JavassistProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2013-04-16 03:09:39","commitOrder":1,"curCode":"  private static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","date":"2013-04-16 03:09:39","endLine":92,"groupId":"2508","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@Callbackcallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/dd/e40ef8b28c1d028355d2185db5993e02123f85.src","preCode":"  private static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/cglib/CglibProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"90550c611571a1533adcd8748f92124bc44b9a46","commitMessage":"@@@Merge branch 'master' of https://github.com/FrantaM/mybatis-3\n","date":"2013-04-16 03:09:39","modifiedFileCount":"7","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2014-09-21 14:15:38","codes":[{"authorDate":"2014-09-21 14:15:38","commitOrder":2,"curCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","date":"2014-09-21 14:15:38","endLine":98,"groupId":"281","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@MethodHandlercallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/bf/f9e8d09e027867e42f61637e7ef5305868887b.src","preCode":"  private static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/javassist/JavassistProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2014-09-21 14:15:38","commitOrder":2,"curCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","date":"2014-09-21 14:15:38","endLine":96,"groupId":"2508","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@Callbackcallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e1/1d1cb22de751069c42cdf3a35db05e0f3dcd6d.src","preCode":"  private static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/cglib/CglibProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"d3a073f3cb06cc3f3d9af087ceda6920b16f3a7b","commitMessage":"@@@Merge pull request #269 from hazendaz/master\n\nMore Sonar Corrections and Java 6 support","date":"2014-09-21 14:15:38","modifiedFileCount":"46","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2015-03-12 01:35:23","codes":[{"authorDate":"2015-03-12 01:35:23","commitOrder":3,"curCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","date":"2015-03-12 01:35:23","endLine":100,"groupId":"281","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@MethodHandlercallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/22/ccd1c9526e1fc3773e8f89156cd065fc9bef90.src","preCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/javassist/JavassistProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2015-03-12 01:35:23","commitOrder":3,"curCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","date":"2015-03-12 01:35:23","endLine":98,"groupId":"2508","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@Callbackcallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a5/ce625f62afb29706e1265cdd83f174e2f5b813.src","preCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/cglib/CglibProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"7544fba273ba9bd5d17c45831a2fc3f742b08295","commitMessage":"@@@Merge pull request #370 from kazuki43zoo/issues/369_isDebugEnabled\n\n#369: Modify to use the Log#isDebugEnabled()","date":"2015-03-12 01:35:23","modifiedFileCount":"8","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2016-04-23 11:54:15","codes":[{"authorDate":"2016-04-23 11:54:15","commitOrder":4,"curCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","date":"2016-04-23 11:54:15","endLine":100,"groupId":"506","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@MethodHandlercallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/4f/3a2be5c5b355159a89991595c64bd8387e949b.src","preCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced = null;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/javassist/JavassistProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2016-04-23 11:54:15","commitOrder":4,"curCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","date":"2016-04-23 11:54:15","endLine":98,"groupId":"906","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@Callbackcallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/69/a9c8855b23a461f68ddacfcfdbfc3b6dc5a79b.src","preCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced = null;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/cglib/CglibProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"004f8e2dd350e7543f386d6609936ea7fe1089bf","commitMessage":"@@@Merge pull request #653 from kazuki43zoo/polishing\n\nPolishing some code","date":"2016-04-23 11:54:15","modifiedFileCount":"14","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-12-10 01:38:33","codes":[{"authorDate":"2018-12-10 01:38:33","commitOrder":5,"curCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (LogHolder.log.isDebugEnabled()) {\n        LogHolder.log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","date":"2018-12-10 01:38:33","endLine":99,"groupId":"10854","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@MethodHandlercallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/60/3088dfa8dd8b8f29a5b530836f992d02a563e3.src","preCode":"  static Object crateProxy(Class<?> type, MethodHandler callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n\n    ProxyFactory enhancer = new ProxyFactory();\n    enhancer.setSuperclass(type);\n\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n\n    Object enhanced;\n    Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n    Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n    try {\n      enhanced = enhancer.create(typesArray, valuesArray);\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error creating lazy proxy.  Cause: \" + e, e);\n    }\n    ((Proxy) enhanced).setHandler(callback);\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/javassist/JavassistProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-12-10 01:38:33","commitOrder":5,"curCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (LogHolder.log.isDebugEnabled()) {\n        LogHolder.log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","date":"2018-12-10 01:38:33","endLine":97,"groupId":"10854","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"crateProxy","params":"(Class<?>type@Callbackcallback@List<Class<?>>constructorArgTypes@List<Object>constructorArgs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/46f0565ddd3a16e7cd3249cf72f1650b6c2434.src","preCode":"  static Object crateProxy(Class<?> type, Callback callback, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Enhancer enhancer = new Enhancer();\n    enhancer.setCallback(callback);\n    enhancer.setSuperclass(type);\n    try {\n      type.getDeclaredMethod(WRITE_REPLACE_METHOD);\n      \r\n      if (log.isDebugEnabled()) {\n        log.debug(WRITE_REPLACE_METHOD + \" method was found on bean \" + type + \", make sure it returns this\");\n      }\n    } catch (NoSuchMethodException e) {\n      enhancer.setInterfaces(new Class[]{WriteReplaceInterface.class});\n    } catch (SecurityException e) {\n      \r\n    }\n    Object enhanced;\n    if (constructorArgTypes.isEmpty()) {\n      enhanced = enhancer.create();\n    } else {\n      Class<?>[] typesArray = constructorArgTypes.toArray(new Class[constructorArgTypes.size()]);\n      Object[] valuesArray = constructorArgs.toArray(new Object[constructorArgs.size()]);\n      enhanced = enhancer.create(typesArray, valuesArray);\n    }\n    return enhanced;\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/loader/cglib/CglibProxyFactory.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"48d7787debf698ab24a07416ce26eca134980417","commitMessage":"@@@Merge pull request #1395 from kazuki43zoo/gh-1272\n\nFix log initialization timing on some class","date":"2018-12-10 01:38:33","modifiedFileCount":"5","status":"M","submitter":"Kazuki Shimizu"}]
