[{"authorTime":"2018-11-18 01:38:20","codes":[{"authorDate":"2018-11-18 01:38:20","commitOrder":1,"curCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assert.assertEquals(Integer.valueOf(1), user.getId());\n      Assert.assertEquals(\"User1\", user.getName());\n    }\n  }\n","date":"2018-11-18 01:38:20","endLine":55,"groupId":"88","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/94/015c8d0a23359d833cc61bb84b413749637c4e.src","preCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assert.assertEquals(Integer.valueOf(1), user.getId());\n      Assert.assertEquals(\"User1\", user.getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2018-11-18 01:38:20","commitOrder":1,"curCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assert.assertEquals(Integer.valueOf(1), user.getId());\n      Assert.assertEquals(\"User1\", user.getName());\n    }\n  }\n","date":"2018-11-18 01:38:20","endLine":55,"groupId":"88","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/df/c8c9943cf632e861d96e93f7480854fb22e836.src","preCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assert.assertEquals(Integer.valueOf(1), user.getId());\n      Assert.assertEquals(\"User1\", user.getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/resolution/cacherefs/CacheRefsTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"fa951224a008393a6e5e4e6df7268108ce80052f","commitMessage":"@@@Merge pull request #1389 from harawata/complex-mapper-resolution\n\nImprove complex mapper element resolution","date":"2018-11-18 01:38:20","modifiedFileCount":"2","status":"B","submitter":"Iwao AVE!"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":2,"curCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":55,"groupId":"71","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fe/84af4e69cb0d1f7461c01aa7c21bdd5f9218ee.src","preCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assert.assertEquals(Integer.valueOf(1), user.getId());\n      Assert.assertEquals(\"User1\", user.getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":2,"curCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":55,"groupId":"71","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0c/8fbd2ce4940c72b1fd0449c413a4df0042d9d4.src","preCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assert.assertEquals(Integer.valueOf(1), user.getId());\n      Assert.assertEquals(\"User1\", user.getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/resolution/cacherefs/CacheRefsTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":55,"groupId":"10260","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c4/a9faae113ed4e852c770126e0ee9ed2dd438f4.src","preCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":55,"groupId":"10260","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0c/b2fbd8be0c2d7e8e62b4026a871c869b2fafaf.src","preCode":"  public void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/resolution/cacherefs/CacheRefsTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
