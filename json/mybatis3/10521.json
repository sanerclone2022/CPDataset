[{"authorTime":"2012-11-02 04:48:38","codes":[{"authorDate":"2012-11-02 04:48:38","commitOrder":1,"curCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2012-11-02 04:48:38","endLine":63,"groupId":"563","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/54/d3640e77053886e7619ddc5aaaa7a0f45f7ab3.src","preCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2012-11-02 04:48:38","commitOrder":1,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n      Assert.assertEquals(2, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2012-11-02 04:48:38","endLine":77,"groupId":"818","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/54/d3640e77053886e7619ddc5aaaa7a0f45f7ab3.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n      Assert.assertEquals(2, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"af88f1deb3c8d3387e9a5d5f992e9a8196762ce4","commitMessage":"@@@Add simple association tests\n","date":"2012-11-02 04:48:38","modifiedFileCount":"0","status":"B","submitter":"Jeff Butler"},{"authorTime":"2013-01-20 16:57:13","codes":[{"authorDate":"2012-11-02 04:48:38","commitOrder":2,"curCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2012-11-02 04:48:38","endLine":63,"groupId":"563","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/54/d3640e77053886e7619ddc5aaaa7a0f45f7ab3.src","preCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2013-01-20 16:57:13","commitOrder":2,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    \n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n\r\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2013-01-20 16:57:13","endLine":81,"groupId":"818","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2d/33c5f5982af2d0b8aac7e7601f274195e345c6.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n      Assert.assertEquals(2, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"6988c6157f91b86b5c7f46cb3c61722a1c62b46e","commitMessage":"@@@http://code.google.com/p/mybatis/issues/detail?id=433 :\t3.0.5 not creating Java objects for all retrieved rows if mapper contains associations\n","date":"2013-01-20 16:57:13","modifiedFileCount":"4","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2013-01-22 05:51:06","codes":[{"authorDate":"2012-11-02 04:48:38","commitOrder":3,"curCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2012-11-02 04:48:38","endLine":63,"groupId":"563","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/54/d3640e77053886e7619ddc5aaaa7a0f45f7ab3.src","preCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2013-01-22 05:51:06","commitOrder":3,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    \n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n      Assert.assertEquals(2, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2013-01-22 05:51:06","endLine":81,"groupId":"818","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/82/b5687864d7c07ef51a9d30de84be88e8f54f00.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    \n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n\r\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"cc7a981acbe3d301fc21a941347ed369a610b6b1","commitMessage":"@@@better fix for http://code.google.com/p/mybatis/issues/detail?id=433 \n","date":"2013-01-22 05:51:06","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2013-01-25 03:01:12","codes":[{"authorDate":"2013-01-25 03:01:12","commitOrder":4,"curCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2013-01-25 03:01:12","endLine":69,"groupId":"563","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/9addfee55f8afbc7bbc4a1cf059a1eda396b0c.src","preCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2013-01-25 03:01:12","commitOrder":4,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","date":"2013-01-25 03:01:12","endLine":97,"groupId":"47","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/9addfee55f8afbc7bbc4a1cf059a1eda396b0c.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    \n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCarsNonUnique();\n      Assert.assertEquals(2, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"352f58f21042b62452947ca7fa782d77007e463d","commitMessage":"@@@Wrong fix for http://code.google.com/p/mybatis/issues/detail?id=433  and a test that shows why it does not work\n","date":"2013-01-25 03:01:12","modifiedFileCount":"4","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":5,"curCode":"  public void shouldGetAllCars() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":67,"groupId":"563","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/61/2cac54f421cbe01e21297dd4b6dc66c2fa8ebf.src","preCode":"  public void shouldGetAllCars() {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":5,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":89,"groupId":"47","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/61/2cac54f421cbe01e21297dd4b6dc66c2fa8ebf.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":6,"curCode":"  public void shouldGetAllCars() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assertions.assertEquals(4, cars.size());\n      Assertions.assertEquals(\"VW\", cars.get(0).getType());\n      Assertions.assertNotNull(cars.get(0).getEngine());\n      Assertions.assertNull(cars.get(0).getBrakes());\n      Assertions.assertEquals(\"Opel\", cars.get(1).getType());\n      Assertions.assertNull(cars.get(1).getEngine());\n      Assertions.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":59,"groupId":"2532","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/40/693fcb44673cf3add8cf4fcdf63599fe46bb21.src","preCode":"  public void shouldGetAllCars() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assert.assertEquals(4, cars.size());\n      Assert.assertEquals(\"VW\", cars.get(0).getType());\n      Assert.assertNotNull(cars.get(0).getEngine());\n      Assert.assertNull(cars.get(0).getBrakes());\n      Assert.assertEquals(\"Opel\", cars.get(1).getType());\n      Assert.assertNull(cars.get(1).getEngine());\n      Assert.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":6,"curCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assertions.assertEquals(1, cars.size());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":81,"groupId":"47","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/40/693fcb44673cf3add8cf4fcdf63599fe46bb21.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assert.assertEquals(1, cars.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":7,"curCode":"  void shouldGetAllCars() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assertions.assertEquals(4, cars.size());\n      Assertions.assertEquals(\"VW\", cars.get(0).getType());\n      Assertions.assertNotNull(cars.get(0).getEngine());\n      Assertions.assertNull(cars.get(0).getBrakes());\n      Assertions.assertEquals(\"Opel\", cars.get(1).getType());\n      Assertions.assertNull(cars.get(1).getEngine());\n      Assertions.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":59,"groupId":"10521","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetAllCars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b9/75319cef254502a60399ead4b6c0c1378d1db3.src","preCode":"  public void shouldGetAllCars() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars();\n      Assertions.assertEquals(4, cars.size());\n      Assertions.assertEquals(\"VW\", cars.get(0).getType());\n      Assertions.assertNotNull(cars.get(0).getEngine());\n      Assertions.assertNull(cars.get(0).getBrakes());\n      Assertions.assertEquals(\"Opel\", cars.get(1).getType());\n      Assertions.assertNull(cars.get(1).getEngine());\n      Assertions.assertNotNull(cars.get(1).getBrakes());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":7,"curCode":"  void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assertions.assertEquals(1, cars.size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":81,"groupId":"10521","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetAllCarsNonUnique","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b9/75319cef254502a60399ead4b6c0c1378d1db3.src","preCode":"  public void shouldGetAllCarsNonUnique() {\n    \r\n    \r\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Car> cars = mapper.getCars2();\n      Assertions.assertEquals(1, cars.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/associationtest/AssociationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
