[{"authorTime":"2011-12-09 08:03:24","codes":[{"authorDate":"2011-12-09 08:03:24","commitOrder":1,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2011-12-09 08:03:24","endLine":76,"groupId":"2328","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e6/b1a9baef9859db0463b977dbe4265d5c50a239.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2011-12-09 08:03:24","commitOrder":1,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          log.debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2011-12-09 08:03:24","endLine":87,"groupId":"1980","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d5/0d6629865d8cbdd60d0e062df52fb983ffd522.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          log.debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"e8cc000886bd21814f8ac91fc3dfc5c2104afa98","commitMessage":"@@@added lincese headers\n","date":"2011-12-09 08:03:24","modifiedFileCount":"769","status":"B","submitter":"Simone Tripodi"},{"authorTime":"2012-01-29 22:19:23","codes":[{"authorDate":"2012-01-29 22:19:23","commitOrder":2,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, this.statementLog);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, this.statementLog);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-29 22:19:23","endLine":78,"groupId":"1980","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b1/22ee62616124a27821ef113594336aabb7038a.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2012-01-29 22:19:23","commitOrder":2,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, this.statementLog);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, this.statementLog);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-29 22:19:23","endLine":88,"groupId":"1980","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f0/1e4e2ffe3db64b2ff95b0ed6e941fe7e14edb7.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          log.debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"152fade675a7107964c85b5cb15abae114bdce2b","commitMessage":"@@@selective logging + doc (http://code.google.com/p/mybatis/issues/detail?id=371 )\n","date":"2012-01-29 22:19:23","modifiedFileCount":"21","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2012-01-31 00:54:52","codes":[{"authorDate":"2012-01-31 00:54:52","commitOrder":3,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-31 00:54:52","endLine":77,"groupId":"377","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/70b3ad5f2c2d31e106eecb583265ff13c2baa7.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, this.statementLog);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, this.statementLog);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2012-01-31 00:54:52","commitOrder":3,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-31 00:54:52","endLine":88,"groupId":"304","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/35/f15bc0a1ee67773e99cd8c17e2563684bf2066.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, this.statementLog);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, this.statementLog);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"e07ad654513f66eda8c1dd8e98f12ce34795fcda","commitMessage":"@@@minor log refactor for performance\n","date":"2012-01-31 00:54:52","modifiedFileCount":"11","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2012-02-06 18:12:08","codes":[{"authorDate":"2012-01-31 00:54:52","commitOrder":4,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-31 00:54:52","endLine":77,"groupId":"377","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/70b3ad5f2c2d31e106eecb583265ff13c2baa7.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2012-02-06 18:12:08","commitOrder":4,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-02-06 18:12:08","endLine":85,"groupId":"304","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ac/a0470e818aaeed5d9db791c4993974129b416c.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace(sql));\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"47fa2c3d41d36ca20efe4657c14555c50e9b9451","commitMessage":"@@@log prepared statements before preparation http://code.google.com/p/mybatis/issues/detail?id=513 \n","date":"2012-02-06 18:12:08","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2013-04-24 12:48:41","codes":[{"authorDate":"2012-01-31 00:54:52","commitOrder":5,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-31 00:54:52","endLine":77,"groupId":"377","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/70b3ad5f2c2d31e106eecb583265ff13c2baa7.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2013-04-24 12:48:41","commitOrder":5,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"==>    Updates: \" + updateCount);\n        }\n        return updateCount;\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2013-04-24 12:48:41","endLine":88,"groupId":"304","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/4f/f259f468dc05d70ff5e6578ccd28485afe7553.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"78013df2f80aa31a0379f9cc011102038aa1aec7","commitMessage":"@@@Show update count in logs.","date":"2013-04-24 12:48:41","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2013-04-24 22:37:50","codes":[{"authorDate":"2012-01-31 00:54:52","commitOrder":6,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2012-01-31 00:54:52","endLine":77,"groupId":"377","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/70b3ad5f2c2d31e106eecb583265ff13c2baa7.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2013-04-24 22:37:50","commitOrder":6,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"<==    Updates: \" + updateCount);\n        }\n        return updateCount;\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2013-04-24 22:37:50","endLine":88,"groupId":"304","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/79/de7b6bf71e23f9f9cb7c3662175562301b54cf.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"==>    Updates: \" + updateCount);\n        }\n        return updateCount;\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"fdb13100870e9b6dfa11def6ea886e5b44c91187","commitMessage":"@@@wrong arrow directions!!","date":"2013-04-24 22:37:50","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-03-07 02:34:01","codes":[{"authorDate":"2014-03-07 02:34:01","commitOrder":7,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }    \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2014-03-07 02:37:16","endLine":76,"groupId":"489","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/97/81caf6f7aacb6b1ff8ab8b34ddf0271ed0e1fb.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==>  Executing: \" + removeBreakingWhitespace((String) params[0]));\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-03-07 02:34:01","commitOrder":7,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return null;\n        }\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2014-03-07 02:37:16","endLine":86,"groupId":"304","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/41/c22fad50349261f67d94e68929c8d42e51b8ad.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"==> Parameters: \" + getParameterValueString());\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, getStatementLog());\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, getStatementLog());\n        } else {\n          return null;\n        }\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"<==    Updates: \" + updateCount);\n        }\n        return updateCount;\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"074cef5563ff25429e08ed1a01298eaade18746c","commitMessage":"@@@Closes #152. Indentation for nested selects logging","date":"2014-03-07 02:37:16","modifiedFileCount":"7","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-09-22 22:39:36","codes":[{"authorDate":"2014-09-22 22:39:36","commitOrder":8,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }    \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2014-09-22 22:39:36","endLine":73,"groupId":"1160","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/21/cabdfb190999ea9fd402bf269e4319246e7fc4.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }    \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return null;\n        }\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2014-09-22 22:39:36","commitOrder":8,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2014-09-22 22:39:36","endLine":83,"groupId":"1611","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2d/45148b5936b714c6cbfd43c877798c5042e091.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          if (rs != null) {\n            return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n          } else {\n            return null;\n          }\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        if (rs != null) {\n          return ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return null;\n        }\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"c96745233054d2cc201309c219c03cf25a413f81","commitMessage":"@@@Merge pull request #270 from hazendaz/master\n\nLots of Sonar and Java 6 plus Pretty Readme","date":"2014-09-22 22:39:36","modifiedFileCount":"112","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-09-22 22:39:36","codes":[{"authorDate":"2016-04-06 12:57:43","commitOrder":9,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }    \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2016-04-06 12:57:43","endLine":68,"groupId":"1160","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/15/d0ac3331ebec1a827b0c846de15da9e2a58058.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }    \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"equals\".equals(method.getName())) {\n        Object ps = params[0];\n        return ps instanceof Proxy && proxy == ps;\n      } else if (\"hashCode\".equals(method.getName())) {\n        return proxy.hashCode();\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2014-09-22 22:39:36","commitOrder":9,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2014-09-22 22:39:36","endLine":83,"groupId":"1611","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2d/45148b5936b714c6cbfd43c877798c5042e091.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"}],"commitId":"527aadc61f04bc13f66d997b54c6fb0e2d92ff41","commitMessage":"@@@Fixes #625. Removed dead code.","date":"2016-04-06 12:57:43","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2014-09-22 22:39:36","codes":[{"authorDate":"2020-05-18 23:24:24","commitOrder":10,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeExtraWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2020-05-18 23:24:24","endLine":68,"groupId":"10835","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/72/7b01460e3db64fd9caf42a0ba7fdff9c32eb7e.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2014-09-22 22:39:36","commitOrder":10,"curCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","date":"2014-09-22 22:39:36","endLine":83,"groupId":"10835","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"invoke","params":"(Objectproxy@Methodmethod@Object[]params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2d/45148b5936b714c6cbfd43c877798c5042e091.src","preCode":"  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }          \n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\"Parameters: \" + getParameterValueString(), true);\n        }\n        clearColumnInfo();\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (SET_METHODS.contains(method.getName())) {\n        if (\"setNull\".equals(method.getName())) {\n          setColumn(params[0], null);\n        } else {\n          setColumn(params[0], params[1]);\n        }\n        return method.invoke(statement, params);\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else if (\"getUpdateCount\".equals(method.getName())) {\n        int updateCount = (Integer) method.invoke(statement, params);\n        if (updateCount != -1) {\n          debug(\"   Updates: \" + updateCount, false);\n        }\n        return updateCount;\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/logging/jdbc/PreparedStatementLogger.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"}],"commitId":"63785f20b43aacdb0402b43f9f05c720f40d6c1b","commitMessage":"@@@Merge pull request #1901 from elfhazard/feature/minifysql\n\nA new option `shrinkWhitespacesInSql` that removes extra whitespaces from SQL","date":"2020-05-18 23:24:24","modifiedFileCount":"8","status":"M","submitter":"Iwao AVE!"}]
