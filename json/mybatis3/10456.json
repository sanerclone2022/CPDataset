[{"authorTime":"2012-10-25 04:08:32","codes":[{"authorDate":"2010-12-08 03:39:18","commitOrder":3,"curCode":"    public void testInsertBlobThenSelectAll() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n            \n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAll();\n            \n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2010-12-08 03:39:18","endLine":75,"groupId":"1002","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertBlobThenSelectAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c8/5d568021753ca07dc43f8daa5e5c267d35fee4.src","preCode":"    public void testInsertBlobThenSelectAll() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n            \n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAll();\n            \n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"},{"authorDate":"2012-10-25 04:08:32","commitOrder":3,"curCode":"    public void testInsertBlobObjectsThenSelectAll() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2012-10-25 04:08:32","endLine":117,"groupId":"1003","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertBlobObjectsThenSelectAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ef/6131dfa3edbe6d32849825ea08083100e6ad3f.src","preCode":"    public void testInsertBlobObjectsThenSelectAll() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"76c832dae3c499b53db7f1b446ad18232c08274d","commitMessage":"@@@http://code.google.com/p/mybatis/issues/detail?id=619 : cannot set Byte array as constructor arg\n","date":"2012-10-25 04:08:32","modifiedFileCount":"4","status":"M","submitter":"Andrew Gustafson"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"    public void testInsertBlobThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n            \n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAll();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }\n","date":"2018-05-03 14:04:04","endLine":87,"groupId":"1002","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertBlobThenSelectAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/90/e84c4b8504d452e37522cd21091affb394e98b.src","preCode":"    public void testInsertBlobThenSelectAll() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n            \n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAll();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"    public void testInsertBlobObjectsThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }\n","date":"2018-05-03 14:04:04","endLine":111,"groupId":"1003","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertBlobObjectsThenSelectAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/90/e84c4b8504d452e37522cd21091affb394e98b.src","preCode":"    public void testInsertBlobObjectsThenSelectAll() {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"    void testInsertBlobThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAll();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }\n","date":"2019-01-23 20:49:49","endLine":67,"groupId":"10456","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertBlobThenSelectAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8a/52886292ff920595924dff913b01f6d20ccabf.src","preCode":"    public void testInsertBlobThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAll();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"    void testInsertBlobObjectsThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }\n","date":"2019-01-23 20:49:49","endLine":91,"groupId":"10456","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertBlobObjectsThenSelectAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8a/52886292ff920595924dff913b01f6d20ccabf.src","preCode":"    public void testInsertBlobObjectsThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            \r\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
