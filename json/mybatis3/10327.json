[{"authorTime":"2017-04-17 08:43:56","codes":[{"authorDate":"2017-04-17 08:43:56","commitOrder":2,"curCode":"  public void applyPropertyValueWhenCustomizeDefaultValueSeparator() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR, \"?:\");\n    props.setProperty(\"settings:jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db:name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName:hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory:name\", \"customObjectFactory\");\n    props.setProperty(\"cache:name\", \"customCache\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(CustomDefaultValueSeparatorMapper.class);\n\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n        .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n         .isEqualTo(\"customObjectFactory\");\n    Assertions.assertThat(cache.getName()).isEqualTo(\"customCache\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      CustomDefaultValueSeparatorMapper mapper = sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);\n      Assertions.assertThat(mapper.selectValue(\"3333\")).isEqualTo(\"3333\");\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","date":"2017-04-17 08:43:56","endLine":106,"groupId":"1609","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"applyPropertyValueWhenCustomizeDefaultValueSeparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ef/d67b5797320655fc4b751a73e18f8cb775591e.src","preCode":"  public void applyPropertyValueWhenCustomizeDefaultValueSeparator() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR, \"?:\");\n    props.setProperty(\"settings:jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db:name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName:hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory:name\", \"customObjectFactory\");\n    props.setProperty(\"cache:name\", \"customCache\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(CustomDefaultValueSeparatorMapper.class);\n\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n        .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n         .isEqualTo(\"customObjectFactory\");\n    Assertions.assertThat(cache.getName()).isEqualTo(\"customCache\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      CustomDefaultValueSeparatorMapper mapper = sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);\n      Assertions.assertThat(mapper.selectValue(\"3333\")).isEqualTo(\"3333\");\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/CustomizationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"MB"},{"authorDate":"2017-04-17 08:43:56","commitOrder":2,"curCode":"  public void applyPropertyValueOnXmlConfiguration() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"settings.jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db.name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName.hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n            .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n            .isEqualTo(\"custom\");\n\n  }\n","date":"2017-04-17 08:43:56","endLine":74,"groupId":"125","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"applyPropertyValueOnXmlConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/03/5efef8967c795064a63ff66b476468a9656560.src","preCode":"  public void applyPropertyValueOnXmlConfiguration() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"settings.jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db.name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName.hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n            .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n            .isEqualTo(\"custom\");\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/ConfigurationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"MB"}],"commitId":"32bf5f811e72399b0f0880106b53907b832ac00a","commitMessage":"@@@Merge pull request #977 from hazendaz/master\n\n[ci] Use assertj/fluent exceptions for cleaner unit testing","date":"2017-04-17 08:43:56","modifiedFileCount":"34","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2017-04-17 08:43:56","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void applyPropertyValueWhenCustomizeDefaultValueSeparator() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR, \"?:\");\n    props.setProperty(\"settings:jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db:name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName:hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory:name\", \"customObjectFactory\");\n    props.setProperty(\"cache:name\", \"customCache\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(CustomDefaultValueSeparatorMapper.class);\n\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n        .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n         .isEqualTo(\"customObjectFactory\");\n    Assertions.assertThat(cache.getName()).isEqualTo(\"customCache\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      CustomDefaultValueSeparatorMapper mapper = sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);\n      Assertions.assertThat(mapper.selectValue(\"3333\")).isEqualTo(\"3333\");\n    }\n\n  }\n","date":"2018-05-03 14:04:04","endLine":100,"groupId":"1609","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"applyPropertyValueWhenCustomizeDefaultValueSeparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c5/234cc75262bb5a4e2dd52fbd55c144b6b88136.src","preCode":"  public void applyPropertyValueWhenCustomizeDefaultValueSeparator() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR, \"?:\");\n    props.setProperty(\"settings:jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db:name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName:hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory:name\", \"customObjectFactory\");\n    props.setProperty(\"cache:name\", \"customCache\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(CustomDefaultValueSeparatorMapper.class);\n\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n        .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n         .isEqualTo(\"customObjectFactory\");\n    Assertions.assertThat(cache.getName()).isEqualTo(\"customCache\");\n\n    SqlSession sqlSession = factory.openSession();\n    try {\n      CustomDefaultValueSeparatorMapper mapper = sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);\n      Assertions.assertThat(mapper.selectValue(\"3333\")).isEqualTo(\"3333\");\n    } finally {\n      sqlSession.close();\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/CustomizationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2017-04-17 08:43:56","commitOrder":3,"curCode":"  public void applyPropertyValueOnXmlConfiguration() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"settings.jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db.name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName.hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n            .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n            .isEqualTo(\"custom\");\n\n  }\n","date":"2017-04-17 08:43:56","endLine":74,"groupId":"125","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"applyPropertyValueOnXmlConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/03/5efef8967c795064a63ff66b476468a9656560.src","preCode":"  public void applyPropertyValueOnXmlConfiguration() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"settings.jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db.name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName.hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n            .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n            .isEqualTo(\"custom\");\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/ConfigurationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void applyPropertyValueWhenCustomizeDefaultValueSeparator() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR, \"?:\");\n    props.setProperty(\"settings:jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db:name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName:hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory:name\", \"customObjectFactory\");\n    props.setProperty(\"cache:name\", \"customCache\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(CustomDefaultValueSeparatorMapper.class);\n\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n        .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n         .isEqualTo(\"customObjectFactory\");\n    Assertions.assertThat(cache.getName()).isEqualTo(\"customCache\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      CustomDefaultValueSeparatorMapper mapper = sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);\n      Assertions.assertThat(mapper.selectValue(\"3333\")).isEqualTo(\"3333\");\n    }\n\n  }\n","date":"2019-01-23 20:49:49","endLine":100,"groupId":"10327","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"applyPropertyValueWhenCustomizeDefaultValueSeparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/3c/c6c9c40dce54c214af4680a697745200d67cb1.src","preCode":"  public void applyPropertyValueWhenCustomizeDefaultValueSeparator() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(PropertyParser.KEY_DEFAULT_VALUE_SEPARATOR, \"?:\");\n    props.setProperty(\"settings:jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db:name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName:hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory:name\", \"customObjectFactory\");\n    props.setProperty(\"cache:name\", \"customCache\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config-custom-separator.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(CustomDefaultValueSeparatorMapper.class);\n\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(CustomDefaultValueSeparatorMapper.class.getName()));\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n        .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n         .isEqualTo(\"customObjectFactory\");\n    Assertions.assertThat(cache.getName()).isEqualTo(\"customCache\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      CustomDefaultValueSeparatorMapper mapper = sqlSession.getMapper(CustomDefaultValueSeparatorMapper.class);\n      Assertions.assertThat(mapper.selectValue(\"3333\")).isEqualTo(\"3333\");\n    }\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/CustomizationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":4,"curCode":"  void applyPropertyValueOnXmlConfiguration() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"settings.jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db.name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName.hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n            .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n            .isEqualTo(\"custom\");\n\n  }\n","date":"2019-01-23 20:49:49","endLine":74,"groupId":"10327","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"applyPropertyValueOnXmlConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/74/2026c2b6d5fc7487faef70c31be992866b4b4f.src","preCode":"  public void applyPropertyValueOnXmlConfiguration() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"settings.jdbcTypeForNull\", JdbcType.CHAR.name());\n    props.setProperty(\"db.name\", \"global_variables_defaults_custom\");\n    props.setProperty(\"productName.hsql\", \"Hsql\");\n    props.setProperty(\"objectFactory.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n\n    Assertions.assertThat(configuration.getJdbcTypeForNull()).isEqualTo(JdbcType.CHAR);\n    Assertions.assertThat(((UnpooledDataSource) configuration.getEnvironment().getDataSource()).getUrl())\n            .isEqualTo(\"jdbc:hsqldb:mem:global_variables_defaults_custom\");\n    Assertions.assertThat(configuration.getDatabaseId()).isNull();\n    Assertions.assertThat(((SupportClasses.CustomObjectFactory) configuration.getObjectFactory()).getProperties().getProperty(\"name\"))\n            .isEqualTo(\"custom\");\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/global_variables_defaults/ConfigurationTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
