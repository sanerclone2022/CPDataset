[{"authorTime":"2011-12-17 01:43:34","codes":[{"authorDate":"2011-12-17 01:43:34","commitOrder":1,"curCode":"  public void shouldRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new TypeHandler<List<URI>>() {\n\n    public void setParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n      throws SQLException {\n      \r\n    }\n\n    public List<URI> getResult( CallableStatement cs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    public List<URI> getResult( ResultSet rs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    public List<URI> getResult( ResultSet rs, String columnName )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    };\n\n    TypeReference<List<URI>> type = new TypeReference<List<URI>>(){};\n\n    typeHandlerRegistry.register(type, fakeHandler);\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(type));\n  }\n","date":"2011-12-17 01:43:34","endLine":79,"groupId":"1092","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRegisterAndRetrieveComplexTypeHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fd/8b2300fc48225b2bcee3b55dd9179061a84ee8.src","preCode":"  public void shouldRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new TypeHandler<List<URI>>() {\n\n    public void setParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n      throws SQLException {\n      \r\n    }\n\n    public List<URI> getResult( CallableStatement cs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    public List<URI> getResult( ResultSet rs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    public List<URI> getResult( ResultSet rs, String columnName )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    };\n\n    TypeReference<List<URI>> type = new TypeReference<List<URI>>(){};\n\n    typeHandlerRegistry.register(type, fakeHandler);\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(type));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/TypeHandlerRegistryTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2011-12-17 01:43:34","commitOrder":1,"curCode":"  public void shouldAutoRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new BaseTypeHandler<List<URI>>() {\n\n      @Override\n      public void setNonNullParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n        throws SQLException {\n        \r\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, String columnName )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( CallableStatement cs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n    };\n\n    typeHandlerRegistry.register(fakeHandler);\n\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(new TypeReference<List<URI>>(){}));\n  }\n","date":"2011-12-17 01:43:34","endLine":117,"groupId":"1093","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAutoRegisterAndRetrieveComplexTypeHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fd/8b2300fc48225b2bcee3b55dd9179061a84ee8.src","preCode":"  public void shouldAutoRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new BaseTypeHandler<List<URI>>() {\n\n      @Override\n      public void setNonNullParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n        throws SQLException {\n        \r\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, String columnName )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( CallableStatement cs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n    };\n\n    typeHandlerRegistry.register(fakeHandler);\n\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(new TypeReference<List<URI>>(){}));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/TypeHandlerRegistryTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"4430b30457b8b20089bed26c03434cd714157d45","commitMessage":"@@@Super Type Tokens and TypeHandlers in the Registry\n\nfixed broken type inferences in the builder due to generics upgrade\n","date":"2011-12-17 01:43:34","modifiedFileCount":"11","status":"B","submitter":"Simone Tripodi"},{"authorTime":"2011-12-17 01:43:34","codes":[{"authorDate":"2015-10-12 06:31:25","commitOrder":2,"curCode":"  public void shouldRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new TypeHandler<List<URI>>() {\n\n    @Override\n    public void setParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n      throws SQLException {\n      \r\n    }\n\n    @Override\n    public List<URI> getResult( CallableStatement cs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    @Override\n    public List<URI> getResult( ResultSet rs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    @Override\n    public List<URI> getResult( ResultSet rs, String columnName )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    };\n\n    TypeReference<List<URI>> type = new TypeReference<List<URI>>(){};\n\n    typeHandlerRegistry.register(type, fakeHandler);\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(type));\n  }\n","date":"2015-10-12 06:31:25","endLine":87,"groupId":"77","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRegisterAndRetrieveComplexTypeHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/77/bbb816b22880c1d824ef2967799d4338b71f05.src","preCode":"  public void shouldRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new TypeHandler<List<URI>>() {\n\n    public void setParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n      throws SQLException {\n      \r\n    }\n\n    public List<URI> getResult( CallableStatement cs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    public List<URI> getResult( ResultSet rs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    public List<URI> getResult( ResultSet rs, String columnName )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    };\n\n    TypeReference<List<URI>> type = new TypeReference<List<URI>>(){};\n\n    typeHandlerRegistry.register(type, fakeHandler);\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(type));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/TypeHandlerRegistryTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2011-12-17 01:43:34","commitOrder":2,"curCode":"  public void shouldAutoRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new BaseTypeHandler<List<URI>>() {\n\n      @Override\n      public void setNonNullParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n        throws SQLException {\n        \r\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, String columnName )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( CallableStatement cs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n    };\n\n    typeHandlerRegistry.register(fakeHandler);\n\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(new TypeReference<List<URI>>(){}));\n  }\n","date":"2011-12-17 01:43:34","endLine":117,"groupId":"1093","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAutoRegisterAndRetrieveComplexTypeHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fd/8b2300fc48225b2bcee3b55dd9179061a84ee8.src","preCode":"  public void shouldAutoRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new BaseTypeHandler<List<URI>>() {\n\n      @Override\n      public void setNonNullParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n        throws SQLException {\n        \r\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, String columnName )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( CallableStatement cs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n    };\n\n    typeHandlerRegistry.register(fakeHandler);\n\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(new TypeReference<List<URI>>(){}));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/TypeHandlerRegistryTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"8ca95e9a1e2c279d213adef39f0fd6f66eec5cf2","commitMessage":"@@@Merge pull request #489 from hazendaz/master\n\nAdded missing overrides and removed unused imports","date":"2015-10-12 06:31:25","modifiedFileCount":"79","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new TypeHandler<List<URI>>() {\n\n    @Override\n    public void setParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType ) {\n      \r\n    }\n\n    @Override\n    public List<URI> getResult( CallableStatement cs, int columnIndex ) {\n      \r\n      return null;\n    }\n\n    @Override\n    public List<URI> getResult( ResultSet rs, int columnIndex ) {\n      \r\n      return null;\n    }\n\n    @Override\n    public List<URI> getResult( ResultSet rs, String columnName ) {\n      \r\n      return null;\n    }\n\n    };\n\n    TypeReference<List<URI>> type = new TypeReference<List<URI>>(){};\n\n    typeHandlerRegistry.register(type, fakeHandler);\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(type));\n  }\n","date":"2019-01-23 20:49:49","endLine":87,"groupId":"10654","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRegisterAndRetrieveComplexTypeHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8d/988561ade05dee86b3abdb6bf7bb04b4e0bf6d.src","preCode":"  public void shouldRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new TypeHandler<List<URI>>() {\n\n    @Override\n    public void setParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n      throws SQLException {\n      \r\n    }\n\n    @Override\n    public List<URI> getResult( CallableStatement cs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    @Override\n    public List<URI> getResult( ResultSet rs, int columnIndex )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    @Override\n    public List<URI> getResult( ResultSet rs, String columnName )\n      throws SQLException {\n      \r\n      return null;\n    }\n\n    };\n\n    TypeReference<List<URI>> type = new TypeReference<List<URI>>(){};\n\n    typeHandlerRegistry.register(type, fakeHandler);\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(type));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/TypeHandlerRegistryTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldAutoRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new BaseTypeHandler<List<URI>>() {\n\n      @Override\n      public void setNonNullParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType ) {\n        \r\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, String columnName ) {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, int columnIndex ) {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( CallableStatement cs, int columnIndex ) {\n        \r\n        return null;\n      }\n\n    };\n\n    typeHandlerRegistry.register(fakeHandler);\n\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(new TypeReference<List<URI>>(){}));\n  }\n","date":"2019-01-23 20:49:49","endLine":121,"groupId":"10654","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAutoRegisterAndRetrieveComplexTypeHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8d/988561ade05dee86b3abdb6bf7bb04b4e0bf6d.src","preCode":"  public void shouldAutoRegisterAndRetrieveComplexTypeHandler() {\n    TypeHandler<List<URI>> fakeHandler = new BaseTypeHandler<List<URI>>() {\n\n      @Override\n      public void setNonNullParameter( PreparedStatement ps, int i, List<URI> parameter, JdbcType jdbcType )\n        throws SQLException {\n        \r\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, String columnName )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( ResultSet rs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n      @Override\n      public List<URI> getNullableResult( CallableStatement cs, int columnIndex )\n        throws SQLException {\n        \r\n        return null;\n      }\n\n    };\n\n    typeHandlerRegistry.register(fakeHandler);\n\n    assertSame(fakeHandler, typeHandlerRegistry.getTypeHandler(new TypeReference<List<URI>>(){}));\n  }\n","realPath":"src/test/java/org/apache/ibatis/type/TypeHandlerRegistryTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
