[{"authorTime":"2012-09-08 12:20:22","codes":[{"authorDate":"2012-09-08 12:20:22","commitOrder":1,"curCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      sqlClause(builder, \"JOIN\", join, \"\", \"\", \"\\nJOIN \");\n      sqlClause(builder, \"INNER JOIN\", innerJoin, \"\", \"\", \"\\nINNER JOIN \");\n      sqlClause(builder, \"OUTER JOIN\", outerJoin, \"\", \"\", \"\\nOUTER JOIN \");\n      sqlClause(builder, \"LEFT OUTER JOIN\", leftOuterJoin, \"\", \"\", \"\\nLEFT OUTER JOIN \");\n      sqlClause(builder, \"RIGHT OUTER JOIN\", rightOuterJoin, \"\", \"\", \"\\nRIGHT OUTER JOIN \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      return builder.toString();\n    }\n","date":"2012-09-08 12:20:22","endLine":238,"groupId":"1485","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"selectSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/65/477553a1dc9b0e4cb4265c010ef028483817eb.src","preCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      sqlClause(builder, \"JOIN\", join, \"\", \"\", \"\\nJOIN \");\n      sqlClause(builder, \"INNER JOIN\", innerJoin, \"\", \"\", \"\\nINNER JOIN \");\n      sqlClause(builder, \"OUTER JOIN\", outerJoin, \"\", \"\", \"\\nOUTER JOIN \");\n      sqlClause(builder, \"LEFT OUTER JOIN\", leftOuterJoin, \"\", \"\", \"\\nLEFT OUTER JOIN \");\n      sqlClause(builder, \"RIGHT OUTER JOIN\", rightOuterJoin, \"\", \"\", \"\\nRIGHT OUTER JOIN \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"B"},{"authorDate":"2012-09-08 12:20:22","commitOrder":1,"curCode":"    private String updateSQL(SafeAppendable builder) {\n\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      return builder.toString();\n    }\n","date":"2012-09-08 12:20:22","endLine":259,"groupId":"1670","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/65/477553a1dc9b0e4cb4265c010ef028483817eb.src","preCode":"    private String updateSQL(SafeAppendable builder) {\n\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"B"}],"commitId":"bf80183752aa8d6b20df4bc0b06abe0c5b5b4923","commitMessage":"@@@Implemented solution suggested by Adam Gent in his blog post: http://adamgent.com/post/30974973820/mybatis-sqlbuilder-rewritten .  as he was apparently horrified by the use of ThreadLocal.  As explained in the docs.  we were aware of the potential for this and the motivations.  but there's no reason why we can't offer both.\n","date":"2012-09-08 12:20:22","modifiedFileCount":"2","status":"B","submitter":"Clinton Begin"},{"authorTime":"2017-02-25 10:04:18","codes":[{"authorDate":"2017-02-25 10:04:18","commitOrder":2,"curCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      joins(builder);\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      return builder.toString();\n    }\n","date":"2017-02-25 10:04:18","endLine":372,"groupId":"49","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"selectSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/5a0c9b9946fa23d21ad33f341889dd336dca44.src","preCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      sqlClause(builder, \"JOIN\", join, \"\", \"\", \"\\nJOIN \");\n      sqlClause(builder, \"INNER JOIN\", innerJoin, \"\", \"\", \"\\nINNER JOIN \");\n      sqlClause(builder, \"OUTER JOIN\", outerJoin, \"\", \"\", \"\\nOUTER JOIN \");\n      sqlClause(builder, \"LEFT OUTER JOIN\", leftOuterJoin, \"\", \"\", \"\\nLEFT OUTER JOIN \");\n      sqlClause(builder, \"RIGHT OUTER JOIN\", rightOuterJoin, \"\", \"\", \"\\nRIGHT OUTER JOIN \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2017-02-25 10:04:18","commitOrder":2,"curCode":"    private String updateSQL(SafeAppendable builder) {\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      joins(builder);\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      return builder.toString();\n    }\n","date":"2017-02-25 10:04:18","endLine":401,"groupId":"1670","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/5a0c9b9946fa23d21ad33f341889dd336dca44.src","preCode":"    private String updateSQL(SafeAppendable builder) {\n\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":395,"status":"M"}],"commitId":"ed2cc17397601e9d48a0b4512259bbe8421ab763","commitMessage":"@@@Merge pull request #926 from h3adache/master\n\nFix for #903","date":"2017-02-25 10:04:18","modifiedFileCount":"2","status":"M","submitter":"Tim Chen"},{"authorTime":"2019-06-16 10:58:21","codes":[{"authorDate":"2019-06-16 10:58:21","commitOrder":3,"curCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      joins(builder);\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      if (limit != null) {\n        builder.append(\" LIMIT \").append(limit);\n      }\n      if (offset != null) {\n        builder.append(\" OFFSET \").append(offset);\n      }\n      return builder.toString();\n    }\n","date":"2019-06-16 10:58:21","endLine":428,"groupId":"49","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"selectSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f5/20af8661933dd4788476b85bb09708a20e0af5.src","preCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      joins(builder);\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"M"},{"authorDate":"2019-06-16 10:58:21","commitOrder":3,"curCode":"    private String updateSQL(SafeAppendable builder) {\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      joins(builder);\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      if (limit != null) {\n        builder.append(\" LIMIT \").append(limit);\n      }\n      return builder.toString();\n    }\n","date":"2019-06-16 10:58:21","endLine":463,"groupId":"1670","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"updateSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f5/20af8661933dd4788476b85bb09708a20e0af5.src","preCode":"    private String updateSQL(SafeAppendable builder) {\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      joins(builder);\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"}],"commitId":"528d923578b289c7f81f2396ba79dd7a3d58d3ea","commitMessage":"@@@Merge pull request #1521 from kazuki43zoo/gh-1518\n\nSupport LIMIT and OFFSET on SQL class","date":"2019-06-16 10:58:21","modifiedFileCount":"2","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-06-29 11:29:10","codes":[{"authorDate":"2019-06-29 11:29:10","commitOrder":4,"curCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      joins(builder);\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      limitingRowsStrategy.appendClause(builder, offset, limit);\n      return builder.toString();\n    }\n","date":"2019-06-29 11:29:10","endLine":528,"groupId":"10840","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"selectSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e1/d9ce1617b4ce8efd6fe7f2052c89915189450a.src","preCode":"    private String selectSQL(SafeAppendable builder) {\n      if (distinct) {\n        sqlClause(builder, \"SELECT DISTINCT\", select, \"\", \"\", \", \");\n      } else {\n        sqlClause(builder, \"SELECT\", select, \"\", \"\", \", \");\n      }\n\n      sqlClause(builder, \"FROM\", tables, \"\", \"\", \", \");\n      joins(builder);\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"GROUP BY\", groupBy, \"\", \"\", \", \");\n      sqlClause(builder, \"HAVING\", having, \"(\", \")\", \" AND \");\n      sqlClause(builder, \"ORDER BY\", orderBy, \"\", \"\", \", \");\n      if (limit != null) {\n        builder.append(\" LIMIT \").append(limit);\n      }\n      if (offset != null) {\n        builder.append(\" OFFSET \").append(offset);\n      }\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":513,"status":"M"},{"authorDate":"2019-06-29 11:29:10","commitOrder":4,"curCode":"    private String updateSQL(SafeAppendable builder) {\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      joins(builder);\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      limitingRowsStrategy.appendClause(builder, null, limit);\n      return builder.toString();\n    }\n","date":"2019-06-29 11:29:10","endLine":561,"groupId":"10840","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"updateSQL","params":"(SafeAppendablebuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e1/d9ce1617b4ce8efd6fe7f2052c89915189450a.src","preCode":"    private String updateSQL(SafeAppendable builder) {\n      sqlClause(builder, \"UPDATE\", tables, \"\", \"\", \"\");\n      joins(builder);\n      sqlClause(builder, \"SET\", sets, \"\", \"\", \", \");\n      sqlClause(builder, \"WHERE\", where, \"(\", \")\", \" AND \");\n      if (limit != null) {\n        builder.append(\" LIMIT \").append(limit);\n      }\n      return builder.toString();\n    }\n","realPath":"src/main/java/org/apache/ibatis/jdbc/AbstractSQL.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":554,"status":"M"}],"commitId":"21bda4df77139012e33ea85d364321e4ddd9733a","commitMessage":"@@@Merge pull request #1582 from kazuki43zoo/support-fetch-first\n\nSupport FETCH FIRST on SQL class","date":"2019-06-29 11:29:10","modifiedFileCount":"2","status":"M","submitter":"Kazuki Shimizu"}]
