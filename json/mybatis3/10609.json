[{"authorTime":"2011-04-19 10:06:55","codes":[{"authorDate":"2010-11-18 11:35:39","commitOrder":2,"curCode":"    public void testGetNamesWithArray() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n            \n            Array array = sqlSession.getConnection().createArrayOf(\"int\",\n                    new Integer[] {1, 2, 5});\n            \n            Map<String, Object> parms = new HashMap<String, Object>();\n            parms.put(\"ids\", array);\n            List<Name> names = spMapper.getNamesWithArray(parms);\n            Object[] returnedIds = (Object[])parms.get(\"returnedIds\");\n            assertEquals(4, returnedIds.length);\n            assertEquals(3, parms.get(\"requestedRows\"));\n            assertEquals(2, names.size());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2010-11-18 11:35:39","endLine":314,"groupId":"1219","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamesWithArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/61/ebdf1d67ac3be0480dc78e2ac0a7ff7cebc085.src","preCode":"    public void testGetNamesWithArray() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n            \n            Array array = sqlSession.getConnection().createArrayOf(\"int\",\n                    new Integer[] {1, 2, 5});\n            \n            Map<String, Object> parms = new HashMap<String, Object>();\n            parms.put(\"ids\", array);\n            List<Name> names = spMapper.getNamesWithArray(parms);\n            Object[] returnedIds = (Object[])parms.get(\"returnedIds\");\n            assertEquals(4, returnedIds.length);\n            assertEquals(3, parms.get(\"requestedRows\"));\n            assertEquals(2, names.size());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"NB"},{"authorDate":"2011-04-19 10:06:55","commitOrder":2,"curCode":"    public void testGetNamesWithArray_a2() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n            \n            Array array = sqlSession.getConnection().createArrayOf(\"int\",\n                    new Integer[] {1, 2, 5});\n            \n            Map<String, Object> parms = new HashMap<String, Object>();\n            parms.put(\"ids\", array);\n            List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n            Object[] returnedIds = (Object[])parms.get(\"returnedIds\");\n            assertEquals(4, returnedIds.length);\n            assertEquals(3, parms.get(\"requestedRows\"));\n            assertEquals(2, names.size());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","date":"2011-04-19 10:06:55","endLine":769,"groupId":"1219","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamesWithArray_a2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/bb/152bc83f1c17e974ca78b671b38a568b1b3e29.src","preCode":"    public void testGetNamesWithArray_a2() throws SQLException {\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        try {\n            SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n            \n            Array array = sqlSession.getConnection().createArrayOf(\"int\",\n                    new Integer[] {1, 2, 5});\n            \n            Map<String, Object> parms = new HashMap<String, Object>();\n            parms.put(\"ids\", array);\n            List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n            Object[] returnedIds = (Object[])parms.get(\"returnedIds\");\n            assertEquals(4, returnedIds.length);\n            assertEquals(3, parms.get(\"requestedRows\"));\n            assertEquals(2, names.size());\n        } finally {\n            sqlSession.close();\n        }\n    }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"B"}],"commitId":"1f548b6b3785656bc86172e9f3083729701abbc9","commitMessage":"@@@Lots of SP tests/examples with annotations\n","date":"2011-04-19 10:06:55","modifiedFileCount":"2","status":"M","submitter":"Jeff Butler"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void testGetNamesWithArray() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<String, Object>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArray(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":319,"groupId":"1219","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamesWithArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/80/f69c33315cd7e8f0f0c0d8dc6f3ad9f931aa45.src","preCode":"  public void testGetNamesWithArray() throws SQLException {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<String, Object>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArray(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void testGetNamesWithArray_a2() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<String, Object>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":702,"groupId":"1219","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamesWithArray_a2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/80/f69c33315cd7e8f0f0c0d8dc6f3ad9f931aa45.src","preCode":"  public void testGetNamesWithArray_a2() throws SQLException {\n    SqlSession sqlSession = sqlSessionFactory.openSession();\n    try {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<String, Object>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    } finally {\n      sqlSession.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-20 20:20:45","codes":[{"authorDate":"2019-01-20 20:20:45","commitOrder":4,"curCode":"  public void testGetNamesWithArray() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArray(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","date":"2019-01-20 20:20:45","endLine":303,"groupId":"837","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamesWithArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/1539fdabb310d0ad320f0b1158ff6166ce64fc.src","preCode":"  public void testGetNamesWithArray() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<String, Object>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArray(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"},{"authorDate":"2019-01-20 20:20:45","commitOrder":4,"curCode":"  public void testGetNamesWithArray_a2() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","date":"2019-01-20 20:20:45","endLine":686,"groupId":"849","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamesWithArray_a2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/1539fdabb310d0ad320f0b1158ff6166ce64fc.src","preCode":"  public void testGetNamesWithArray_a2() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<String, Object>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":672,"status":"M"}],"commitId":"090013dc35b7912e478ebcb751e0f5ab35830b91","commitMessage":"@@@Merge pull request #1454 from kazuki43zoo/polish\n\nChange to use the diamond operator","date":"2019-01-20 20:20:45","modifiedFileCount":"58","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void testGetNamesWithArray() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArray(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":303,"groupId":"10609","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamesWithArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/30/965e96e61be8f51c20ac4e755e9f39d5f1c9df.src","preCode":"  public void testGetNamesWithArray() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArray(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":5,"curCode":"  void testGetNamesWithArray_a2() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":686,"groupId":"10609","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamesWithArray_a2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/30/965e96e61be8f51c20ac4e755e9f39d5f1c9df.src","preCode":"  public void testGetNamesWithArray_a2() throws SQLException {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      SPMapper spMapper = sqlSession.getMapper(SPMapper.class);\n\n      Array array = sqlSession.getConnection().createArrayOf(\"int\", new Integer[] { 1, 2, 5 });\n\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"ids\", array);\n      List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms);\n      Object[] returnedIds = (Object[]) parms.get(\"returnedIds\");\n      assertEquals(4, returnedIds.length);\n      assertEquals(3, parms.get(\"requestedRows\"));\n      assertEquals(2, names.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/submitted/sptests/SPTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":672,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
