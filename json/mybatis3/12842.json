[{"authorTime":"2010-11-21 05:59:30","codes":[{"authorDate":"2010-11-02 12:18:00","commitOrder":3,"curCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass())\n        registerAlias(type.getSimpleName(), type);\n    }\n  }\n","date":"2010-11-02 12:18:00","endLine":102,"groupId":"1425","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@ClasssuperType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f3/9732cb1b254a59012930f0518c280d5b0c5387.src","preCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass())\n        registerAlias(type.getSimpleName(), type);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"NB"},{"authorDate":"2010-11-21 05:59:30","commitOrder":3,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    TypeHandler handler;\n    for (Class<?> type : handlerSet) {\n      @SuppressWarnings({\"unchecked\"})\n      Annotation annotation = type.getAnnotation(MappedTypes.class);\n      try {\n        handler = (TypeHandler) type.getConstructor().newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n      if (null != annotation) {\n        MappedTypes mappedType = (MappedTypes) annotation;\n        for (Class<?> handledType : mappedType.value()) {\n          register(handledType, handler);\n        }\n      }\n    }\n  }\n","date":"2010-11-21 05:59:30","endLine":178,"groupId":"1425","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0e/a8917a88f3323a151f027394c752bfecf17895.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    TypeHandler handler;\n    for (Class<?> type : handlerSet) {\n      @SuppressWarnings({\"unchecked\"})\n      Annotation annotation = type.getAnnotation(MappedTypes.class);\n      try {\n        handler = (TypeHandler) type.getConstructor().newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n      if (null != annotation) {\n        MappedTypes mappedType = (MappedTypes) annotation;\n        for (Class<?> handledType : mappedType.value()) {\n          register(handledType, handler);\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"70a4cd0cba1cdcb9e38a900a4e80423323c71e1e","commitMessage":"@@@made this class final and clean up a few compiler warnings.\nAlso converter the JDBC_TYPE_HANDLER_MAP to an EnumMap\n","date":"2010-11-21 05:59:30","modifiedFileCount":"1","status":"M","submitter":"Nathan Maves"},{"authorTime":"2011-05-11 02:06:24","codes":[{"authorDate":"2011-05-11 02:06:24","commitOrder":4,"curCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2011-05-11 02:06:24","endLine":110,"groupId":"1425","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@ClasssuperType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/24/f6633a8a3dccccb0b91420172c6387da68beb9.src","preCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass())\n        registerAlias(type.getSimpleName(), type);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2011-05-11 02:06:24","commitOrder":4,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    for (Class<?> type : handlerSet) {\n      try {\n        TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n        register(handler);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n    }\n  }\n","date":"2011-05-11 02:06:24","endLine":196,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7f/83d35b041ce35089ff28c08bcff3ee9faab46f.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    TypeHandler handler;\n    for (Class<?> type : handlerSet) {\n      @SuppressWarnings({\"unchecked\"})\n      Annotation annotation = type.getAnnotation(MappedTypes.class);\n      try {\n        handler = (TypeHandler) type.getConstructor().newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n      if (null != annotation) {\n        MappedTypes mappedType = (MappedTypes) annotation;\n        for (Class<?> handledType : mappedType.value()) {\n          register(handledType, handler);\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"3086caab51058387af21c8e438cce1bee72e3960","commitMessage":"@@@Enable adding type handlers and aliases with annotations (for MyBatis core && MyBatis-Spring). See http://code.google.com/p/mybatis/issues/detail?id=314 \n","date":"2011-05-11 02:06:24","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2011-05-11 02:06:24","codes":[{"authorDate":"2011-05-14 00:36:50","commitOrder":5,"curCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2011-05-14 00:36:50","endLine":110,"groupId":"1425","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@ClasssuperType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a7/815f305920c7ef2f6d7e19221ce7f548c98af9.src","preCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2011-05-11 02:06:24","commitOrder":5,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    for (Class<?> type : handlerSet) {\n      try {\n        TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n        register(handler);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n    }\n  }\n","date":"2011-05-11 02:06:24","endLine":196,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/7f/83d35b041ce35089ff28c08bcff3ee9faab46f.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    for (Class<?> type : handlerSet) {\n      try {\n        TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n        register(handler);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"N"}],"commitId":"dcbadd12416aa75a0654a42fb70552d0c3d86451","commitMessage":"@@@Thanks Jurrian. Interfaces and package-info.java are detected as beans.\n","date":"2011-05-14 00:36:50","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2011-05-26 15:39:42","codes":[{"authorDate":"2011-05-14 00:36:50","commitOrder":6,"curCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2011-05-14 00:36:50","endLine":110,"groupId":"1425","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@ClasssuperType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a7/815f305920c7ef2f6d7e19221ce7f548c98af9.src","preCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2011-05-26 15:39:42","commitOrder":6,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        try {\n          TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n          register(handler);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n        }\n      }\n    }\n  }\n","date":"2011-05-26 15:39:42","endLine":199,"groupId":"1287","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6d/e9e67af0dad7c131e0d6ca09f0dffabc086afc.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n\n    for (Class<?> type : handlerSet) {\n      try {\n        TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n        register(handler);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"0239eda4226d6e44d801f8693daa89eaf5108b17","commitMessage":"@@@also avoid package-info.  interfaces and abstract classes in type handler scanning\n","date":"2011-05-26 15:39:42","modifiedFileCount":"1","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2011-05-26 15:39:42","codes":[{"authorDate":"2011-09-11 03:27:56","commitOrder":7,"curCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2011-09-11 03:27:56","endLine":111,"groupId":"1915","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@Class<?>superType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/04/8294bdfee1b3cc9e269824cadb940b55db793b.src","preCode":"  public void registerAliases(String packageName, Class superType){\n    ResolverUtil<Class> resolverUtil = new ResolverUtil<Class>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class>> typeSet = resolverUtil.getClasses();\n    for(Class type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2011-05-26 15:39:42","commitOrder":7,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        try {\n          TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n          register(handler);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n        }\n      }\n    }\n  }\n","date":"2011-05-26 15:39:42","endLine":199,"groupId":"1287","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/6d/e9e67af0dad7c131e0d6ca09f0dffabc086afc.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        try {\n          TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n          register(handler);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"}],"commitId":"d47a20065999a4ae970705b7c53799ec9a1603a3","commitMessage":"@@@fix for http://code.google.com/p/mybatis/issues/detail?id=388 : Add generic types to TypeHandler\n","date":"2011-09-11 03:27:56","modifiedFileCount":"29","status":"M","submitter":"Simone Tripodi"},{"authorTime":"2011-11-07 07:46:01","codes":[{"authorDate":"2011-09-11 03:27:56","commitOrder":8,"curCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2011-09-11 03:27:56","endLine":111,"groupId":"1915","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@Class<?>superType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/04/8294bdfee1b3cc9e269824cadb940b55db793b.src","preCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"},{"authorDate":"2011-11-07 07:46:01","commitOrder":8,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        try {\n          TypeHandler<?> handler = (TypeHandler<?>) type.getConstructor().newInstance();\n          register(handler);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n        }\n      }\n    }\n  }\n","date":"2011-11-07 07:46:01","endLine":201,"groupId":"1287","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/e3/b13ab7f8050865d184c0ad629f0ce8ffad3d0c.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        try {\n          TypeHandler handler = (TypeHandler) type.getConstructor().newInstance();\n          register(handler);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"0ba05c755837b619a682845cf8dfe5ebb288f329","commitMessage":"@@@Fix for http://code.google.com/p/mybatis/issues/detail?id=431  - get generated key values by columnIndex\n","date":"2011-11-07 07:46:01","modifiedFileCount":"33","status":"M","submitter":"Jeff Butler"},{"authorTime":"2012-03-25 00:16:53","codes":[{"authorDate":"2011-09-11 03:27:56","commitOrder":9,"curCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2011-09-11 03:27:56","endLine":111,"groupId":"1915","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@Class<?>superType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/04/8294bdfee1b3cc9e269824cadb940b55db793b.src","preCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"},{"authorDate":"2012-03-25 00:16:53","commitOrder":9,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","date":"2012-03-25 00:16:53","endLine":339,"groupId":"1287","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f6/c74dd6c32b548001b4b8fc7c8824be98d0148a.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        try {\n          TypeHandler<?> handler = (TypeHandler<?>) type.getConstructor().newInstance();\n          register(handler);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Unable to find a usable constructor for \" + type, e);\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"}],"commitId":"34a61c81437fcf3b78dd907588a29bec63e927c6","commitMessage":"@@@fix for http://code.google.com/p/mybatis/issues/detail?id=552 . Custom TypeHandler for enum types\n","date":"2012-03-25 00:16:53","modifiedFileCount":"6","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2012-03-25 00:16:53","codes":[{"authorDate":"2013-03-10 14:28:28","commitOrder":10,"curCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2013-03-10 14:28:28","endLine":132,"groupId":"1915","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@Class<?>superType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/af/0b681d067cdea38b002fb3f46017970daaf47c.src","preCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2012-03-25 00:16:53","commitOrder":10,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","date":"2012-03-25 00:16:53","endLine":339,"groupId":"1287","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f6/c74dd6c32b548001b4b8fc7c8824be98d0148a.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"N"}],"commitId":"9910fd182dab98e0b505348fa1a0b112994c9e2d","commitMessage":"@@@Fix for issue #6. Skip member classes when scanning for aliases.","date":"2013-03-10 14:28:28","modifiedFileCount":"1","status":"M","submitter":"eduardo"},{"authorTime":"2018-05-16 03:43:33","codes":[{"authorDate":"2013-03-10 14:28:28","commitOrder":11,"curCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2013-03-10 14:28:28","endLine":132,"groupId":"1915","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@Class<?>superType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/af/0b681d067cdea38b002fb3f46017970daaf47c.src","preCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2018-05-16 03:43:33","commitOrder":11,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","date":"2018-05-16 03:43:33","endLine":458,"groupId":"1287","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c9/9ed3df76c2fb1bcbe55aa00ef16e36efc9e1f9.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":448,"status":"M"}],"commitId":"fd7fc5fc418e32917838e9c8c5f19798143b1ea1","commitMessage":"@@@Merge pull request #1277 from mybatis/pr-1240\n\nFix for #1240","date":"2018-05-16 03:43:33","modifiedFileCount":"6","status":"M","submitter":"Tim Chen"},{"authorTime":"2018-05-16 03:43:33","codes":[{"authorDate":"2018-05-26 12:45:57","commitOrder":12,"curCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","date":"2018-05-26 12:45:57","endLine":139,"groupId":"12842","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"registerAliases","params":"(StringpackageName@Class<?>superType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/48/a439315b881017d039c59e1d74b04a95517e22.src","preCode":"  public void registerAliases(String packageName, Class<?> superType){\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>();\n    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);\n    Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\n    for(Class<?> type : typeSet){\n      \r\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\n        registerAlias(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2018-05-16 03:43:33","commitOrder":12,"curCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","date":"2018-05-16 03:43:33","endLine":458,"groupId":"12842","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(StringpackageName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c9/9ed3df76c2fb1bcbe55aa00ef16e36efc9e1f9.src","preCode":"  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      \r\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":448,"status":"N"}],"commitId":"d74d0bd90be915a6fe18b6ab33c6e608606a3dd4","commitMessage":"@@@Merge pull request #1284 from wuwen5/minor-code-clean\n\nminor code clean-up.","date":"2018-05-26 12:45:57","modifiedFileCount":"70","status":"M","submitter":"Kazuki Shimizu"}]
