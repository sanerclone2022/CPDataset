[{"authorTime":"2011-12-09 08:03:24","codes":[{"authorDate":"2011-11-08 23:38:54","commitOrder":2,"curCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getKeyGenerator() instanceof Jdbc3KeyGenerator) {\n      Jdbc3KeyGenerator keyGen = (Jdbc3KeyGenerator) mappedStatement.getKeyGenerator();\n      String[] keyColumnNames = keyGen.getKeyColumnNames();\n      if (keyColumnNames == null) {\n        return connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);\n      } else {\n        return connection.prepareStatement(sql, keyColumnNames);\n      }\n    } else if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareStatement(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareStatement(sql);\n    }\n  }\n","date":"2011-11-08 23:38:54","endLine":58,"groupId":"1767","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"instantiateStatement","params":"(Connectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d4/3dead658b96bec5e64949ed4cefa294d0ae36b.src","preCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getKeyGenerator() instanceof Jdbc3KeyGenerator) {\n      Jdbc3KeyGenerator keyGen = (Jdbc3KeyGenerator) mappedStatement.getKeyGenerator();\n      String[] keyColumnNames = keyGen.getKeyColumnNames();\n      if (keyColumnNames == null) {\n        return connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);\n      } else {\n        return connection.prepareStatement(sql, keyColumnNames);\n      }\n    } else if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareStatement(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareStatement(sql);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/statement/PreparedStatementHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"NB"},{"authorDate":"2011-12-09 08:03:24","commitOrder":2,"curCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareCall(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareCall(sql);\n    }\n  }\n","date":"2011-12-09 08:03:24","endLine":70,"groupId":"1055","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"instantiateStatement","params":"(Connectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fc/bcd4697b228fdfe1e6e78bd23a0ff912ea03cb.src","preCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareCall(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareCall(sql);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/statement/CallableStatementHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"e8cc000886bd21814f8ac91fc3dfc5c2104afa98","commitMessage":"@@@added lincese headers\n","date":"2011-12-09 08:03:24","modifiedFileCount":"769","status":"M","submitter":"Simone Tripodi"},{"authorTime":"2011-12-09 08:03:24","codes":[{"authorDate":"2012-01-29 16:31:59","commitOrder":3,"curCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getKeyGenerator() instanceof Jdbc3KeyGenerator) {\n      String[] keyColumnNames = mappedStatement.getKeyColumns();\n      if (keyColumnNames == null) {\n        return connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);\n      } else {\n        return connection.prepareStatement(sql, keyColumnNames);\n      }\n    } else if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareStatement(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareStatement(sql);\n    }\n  }\n","date":"2012-01-29 16:31:59","endLine":75,"groupId":"1767","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"instantiateStatement","params":"(Connectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f3/cacd47823e531d7a20ab379c1491272ff09740.src","preCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getKeyGenerator() instanceof Jdbc3KeyGenerator) {\n      Jdbc3KeyGenerator keyGen = (Jdbc3KeyGenerator) mappedStatement.getKeyGenerator();\n      String[] keyColumnNames = keyGen.getKeyColumnNames();\n      if (keyColumnNames == null) {\n        return connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);\n      } else {\n        return connection.prepareStatement(sql, keyColumnNames);\n      }\n    } else if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareStatement(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareStatement(sql);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/statement/PreparedStatementHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2011-12-09 08:03:24","commitOrder":3,"curCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareCall(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareCall(sql);\n    }\n  }\n","date":"2011-12-09 08:03:24","endLine":70,"groupId":"1055","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"instantiateStatement","params":"(Connectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fc/bcd4697b228fdfe1e6e78bd23a0ff912ea03cb.src","preCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareCall(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareCall(sql);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/statement/CallableStatementHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"}],"commitId":"c012ffbd04aff191290cc4850ccfc35499ae876e","commitMessage":"@@@key generation refactor \n","date":"2012-01-29 16:31:59","modifiedFileCount":"10","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-09-08 00:51:47","codes":[{"authorDate":"2018-09-08 00:51:47","commitOrder":4,"curCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getKeyGenerator() instanceof Jdbc3KeyGenerator) {\n      String[] keyColumnNames = mappedStatement.getKeyColumns();\n      if (keyColumnNames == null) {\n        return connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);\n      } else {\n        return connection.prepareStatement(sql, keyColumnNames);\n      }\n    } else if (mappedStatement.getResultSetType() == ResultSetType.DEFAULT) {\n      return connection.prepareStatement(sql);\n    } else {\n      return connection.prepareStatement(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    }\n  }\n","date":"2018-09-08 00:51:47","endLine":90,"groupId":"10853","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"instantiateStatement","params":"(Connectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f7/ce1b9b685837fd4d525ef1fffb46268ef60f8c.src","preCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getKeyGenerator() instanceof Jdbc3KeyGenerator) {\n      String[] keyColumnNames = mappedStatement.getKeyColumns();\n      if (keyColumnNames == null) {\n        return connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);\n      } else {\n        return connection.prepareStatement(sql, keyColumnNames);\n      }\n    } else if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareStatement(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareStatement(sql);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/statement/PreparedStatementHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2018-09-08 00:51:47","commitOrder":4,"curCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getResultSetType() == ResultSetType.DEFAULT) {\n      return connection.prepareCall(sql);\n    } else {\n      return connection.prepareCall(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    }\n  }\n","date":"2018-09-08 00:51:47","endLine":91,"groupId":"10853","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"instantiateStatement","params":"(Connectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/85/9ed7e2342db93fd213ebd4ab08426272757cc8.src","preCode":"  protected Statement instantiateStatement(Connection connection) throws SQLException {\n    String sql = boundSql.getSql();\n    if (mappedStatement.getResultSetType() != null) {\n      return connection.prepareCall(sql, mappedStatement.getResultSetType().getValue(), ResultSet.CONCUR_READ_ONLY);\n    } else {\n      return connection.prepareCall(sql);\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/executor/statement/CallableStatementHandler.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"8efb2ccec75161fdf9dea7dc0c806e2b2b400149","commitMessage":"@@@Merge pull request #1344 from kazuki43zoo/gh-1334_resultSetType\n\nChange the default resultSetType to DEFAULT(same as unset) at annotation option","date":"2018-09-08 00:51:47","modifiedFileCount":"8","status":"M","submitter":"Kazuki Shimizu"}]
