[{"authorTime":"2011-12-02 02:19:50","codes":[{"authorDate":"2019-07-07 16:19:01","commitOrder":6,"curCode":"  void withOptions() {\n    Configuration configuration = new Configuration();\n    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);\n    builder.parse();\n\n    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptions\");\n    assertThat(mappedStatement.getFetchSize()).isEqualTo(200);\n    assertThat(mappedStatement.getTimeout()).isEqualTo(10);\n    assertThat(mappedStatement.getStatementType()).isEqualTo(StatementType.STATEMENT);\n    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n    assertThat(mappedStatement.isFlushCacheRequired()).isTrue();\n    assertThat(mappedStatement.isUseCache()).isFalse();\n    assertThat(mappedStatement.getResultSets()).containsExactly(\"resultSets\");\n\n    mappedStatement = configuration.getMappedStatement(\"insertWithOptions\");\n    assertThat(mappedStatement.getKeyGenerator()).isInstanceOf(Jdbc3KeyGenerator.class);\n    assertThat(mappedStatement.getKeyColumns()).containsExactly(\"key_column\");\n    assertThat(mappedStatement.getKeyProperties()).containsExactly(\"keyProperty\");\n  }\n","date":"2019-07-07 16:19:01","endLine":52,"groupId":"673","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/42/c0203abb1f59a223f133f5ebbb941c13a18192.src","preCode":"  void withOptions() {\n    Configuration configuration = new Configuration();\n    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);\n    builder.parse();\n\n    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptions\");\n    assertThat(mappedStatement.getFetchSize()).isEqualTo(200);\n    assertThat(mappedStatement.getTimeout()).isEqualTo(10);\n    assertThat(mappedStatement.getStatementType()).isEqualTo(StatementType.STATEMENT);\n    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n    assertThat(mappedStatement.isFlushCacheRequired()).isTrue();\n    assertThat(mappedStatement.isUseCache()).isFalse();\n    assertThat(mappedStatement.getResultSets()).containsExactly(\"resultSets\");\n\n    mappedStatement = configuration.getMappedStatement(\"insertWithOptions\");\n    assertThat(mappedStatement.getKeyGenerator()).isInstanceOf(Jdbc3KeyGenerator.class);\n    assertThat(mappedStatement.getKeyColumns()).containsExactly(\"key_column\");\n    assertThat(mappedStatement.getKeyProperties()).containsExactly(\"keyProperty\");\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2011-12-02 02:19:50","commitOrder":6,"curCode":"  private void mapperElement(XNode parent) throws Exception {\n    if (parent != null) {\n      for (XNode child : parent.getChildren()) {\n        if (\"package\".equals(child.getName())) {\n          String mapperPackage = child.getStringAttribute(\"name\");\n          configuration.addMappers(mapperPackage);\n        } else {\n          String resource = child.getStringAttribute(\"resource\");\n          String url = child.getStringAttribute(\"url\");\n          String mapperClass = child.getStringAttribute(\"class\");\n          if (resource != null && url == null && mapperClass == null) {\n            ErrorContext.instance().resource(resource);\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, resource, configuration.getSqlFragments());\n            mapperParser.parse();\n          } else if (resource == null && url != null && mapperClass == null) {\n            ErrorContext.instance().resource(url);\n            InputStream inputStream = Resources.getUrlAsStream(url);\n            XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, url, configuration.getSqlFragments());\n            mapperParser.parse();\n          } else if (resource == null && url == null && mapperClass != null) {\n            Class<?> mapperInterface = Resources.classForName(mapperClass);\n            configuration.addMapper(mapperInterface);\n          } else {\n            throw new BuilderException(\"A mapper element may only specify a url, resource or class, but not more than one.\");\n          }\n        }\n      }\n    }\n  }\n","date":"2011-12-02 02:19:50","endLine":308,"groupId":"1316","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mapperElement","params":"(XNodeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8c/30026b70f04cecd9c4f79c2a19e5019833a234.src","preCode":"  private void mapperElement(XNode parent) throws Exception {\n    if (parent != null) {\n      for (XNode child : parent.getChildren()) {\n        if (\"package\".equals(child.getName())) {\n          String mapperPackage = child.getStringAttribute(\"name\");\n          configuration.addMappers(mapperPackage);\n        } else {\n          String resource = child.getStringAttribute(\"resource\");\n          String url = child.getStringAttribute(\"url\");\n          String mapperClass = child.getStringAttribute(\"class\");\n          if (resource != null && url == null && mapperClass == null) {\n            ErrorContext.instance().resource(resource);\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, resource, configuration.getSqlFragments());\n            mapperParser.parse();\n          } else if (resource == null && url != null && mapperClass == null) {\n            ErrorContext.instance().resource(url);\n            InputStream inputStream = Resources.getUrlAsStream(url);\n            XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, url, configuration.getSqlFragments());\n            mapperParser.parse();\n          } else if (resource == null && url == null && mapperClass != null) {\n            Class<?> mapperInterface = Resources.classForName(mapperClass);\n            configuration.addMapper(mapperInterface);\n          } else {\n            throw new BuilderException(\"A mapper element may only specify a url, resource or class, but not more than one.\");\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/builder/xml/XMLConfigBuilder.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"NB"}],"commitId":"6e9e4c22a7cd450f65449dd72cf972344d492c8e","commitMessage":"@@@Merge pull request #1056 from kazuki43zoo/default-resultset-type\n\nAdd defaultResultSetType as global configuration","date":"2019-07-07 16:19:01","modifiedFileCount":"6","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2020-12-29 00:05:20","codes":[{"authorDate":"2019-07-07 16:19:01","commitOrder":7,"curCode":"  void withOptions() {\n    Configuration configuration = new Configuration();\n    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);\n    builder.parse();\n\n    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptions\");\n    assertThat(mappedStatement.getFetchSize()).isEqualTo(200);\n    assertThat(mappedStatement.getTimeout()).isEqualTo(10);\n    assertThat(mappedStatement.getStatementType()).isEqualTo(StatementType.STATEMENT);\n    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n    assertThat(mappedStatement.isFlushCacheRequired()).isTrue();\n    assertThat(mappedStatement.isUseCache()).isFalse();\n    assertThat(mappedStatement.getResultSets()).containsExactly(\"resultSets\");\n\n    mappedStatement = configuration.getMappedStatement(\"insertWithOptions\");\n    assertThat(mappedStatement.getKeyGenerator()).isInstanceOf(Jdbc3KeyGenerator.class);\n    assertThat(mappedStatement.getKeyColumns()).containsExactly(\"key_column\");\n    assertThat(mappedStatement.getKeyProperties()).containsExactly(\"keyProperty\");\n  }\n","date":"2019-07-07 16:19:01","endLine":52,"groupId":"1093","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"withOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/42/c0203abb1f59a223f133f5ebbb941c13a18192.src","preCode":"  void withOptions() {\n    Configuration configuration = new Configuration();\n    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);\n    builder.parse();\n\n    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptions\");\n    assertThat(mappedStatement.getFetchSize()).isEqualTo(200);\n    assertThat(mappedStatement.getTimeout()).isEqualTo(10);\n    assertThat(mappedStatement.getStatementType()).isEqualTo(StatementType.STATEMENT);\n    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n    assertThat(mappedStatement.isFlushCacheRequired()).isTrue();\n    assertThat(mappedStatement.isUseCache()).isFalse();\n    assertThat(mappedStatement.getResultSets()).containsExactly(\"resultSets\");\n\n    mappedStatement = configuration.getMappedStatement(\"insertWithOptions\");\n    assertThat(mappedStatement.getKeyGenerator()).isInstanceOf(Jdbc3KeyGenerator.class);\n    assertThat(mappedStatement.getKeyColumns()).containsExactly(\"key_column\");\n    assertThat(mappedStatement.getKeyProperties()).containsExactly(\"keyProperty\");\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"},{"authorDate":"2020-12-29 00:05:20","commitOrder":7,"curCode":"  private void mapperElement(XNode parent) throws Exception {\n    if (parent != null) {\n      for (XNode child : parent.getChildren()) {\n        if (\"package\".equals(child.getName())) {\n          String mapperPackage = child.getStringAttribute(\"name\");\n          configuration.addMappers(mapperPackage);\n        } else {\n          String resource = child.getStringAttribute(\"resource\");\n          String url = child.getStringAttribute(\"url\");\n          String mapperClass = child.getStringAttribute(\"class\");\n          if (resource != null && url == null && mapperClass == null) {\n            ErrorContext.instance().resource(resource);\n            try(InputStream inputStream = Resources.getResourceAsStream(resource)) {\n              XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, resource, configuration.getSqlFragments());\n              mapperParser.parse();\n            }\n          } else if (resource == null && url != null && mapperClass == null) {\n            ErrorContext.instance().resource(url);\n            try(InputStream inputStream = Resources.getUrlAsStream(url)){\n              XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, url, configuration.getSqlFragments());\n              mapperParser.parse();\n            }\n          } else if (resource == null && url == null && mapperClass != null) {\n            Class<?> mapperInterface = Resources.classForName(mapperClass);\n            configuration.addMapper(mapperInterface);\n          } else {\n            throw new BuilderException(\"A mapper element may only specify a url, resource or class, but not more than one.\");\n          }\n        }\n      }\n    }\n  }\n","date":"2020-12-29 00:05:20","endLine":394,"groupId":"1093","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mapperElement","params":"(XNodeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/bc/569265d11004ea93f7b2b410aed218bf664102.src","preCode":"  private void mapperElement(XNode parent) throws Exception {\n    if (parent != null) {\n      for (XNode child : parent.getChildren()) {\n        if (\"package\".equals(child.getName())) {\n          String mapperPackage = child.getStringAttribute(\"name\");\n          configuration.addMappers(mapperPackage);\n        } else {\n          String resource = child.getStringAttribute(\"resource\");\n          String url = child.getStringAttribute(\"url\");\n          String mapperClass = child.getStringAttribute(\"class\");\n          if (resource != null && url == null && mapperClass == null) {\n            ErrorContext.instance().resource(resource);\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, resource, configuration.getSqlFragments());\n            mapperParser.parse();\n          } else if (resource == null && url != null && mapperClass == null) {\n            ErrorContext.instance().resource(url);\n            InputStream inputStream = Resources.getUrlAsStream(url);\n            XMLMapperBuilder mapperParser = new XMLMapperBuilder(inputStream, configuration, url, configuration.getSqlFragments());\n            mapperParser.parse();\n          } else if (resource == null && url == null && mapperClass != null) {\n            Class<?> mapperInterface = Resources.classForName(mapperClass);\n            configuration.addMapper(mapperInterface);\n          } else {\n            throw new BuilderException(\"A mapper element may only specify a url, resource or class, but not more than one.\");\n          }\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/apache/ibatis/builder/xml/XMLConfigBuilder.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"}],"commitId":"5e2a954e4008705e649c245d38386b7f0ea90666","commitMessage":"@@@Merge pull request #2145 from sangyongchoi/input-stream-close\n\nchange to try with resources","date":"2020-12-29 00:05:20","modifiedFileCount":"1","status":"M","submitter":"Iwao AVE!"}]
