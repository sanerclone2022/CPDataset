[{"authorTime":"2011-01-05 09:58:41","codes":[{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareSelectPostMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"blog\", \"blog_id\", registry.getTypeHandler(int.class)).javaType(Blog.class).nestedQueryId(\"selectBlogById\").build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","date":"2011-01-05 09:58:41","endLine":529,"groupId":"247","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSelectPostMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareSelectPostMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"blog\", \"blog_id\", registry.getTypeHandler(int.class)).javaType(Blog.class).nestedQueryId(\"selectBlogById\").build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"B"},{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareSelectPostWithBlogByAuthorMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.author_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"postResultMap\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n\n        add(new ResultMapping.Builder(config, \"blog\").nestedQueryId(\"selectBlogByIdAndAuthor\").composites(new ArrayList<ResultMapping>() {\n          {\n            add(new ResultMapping.Builder(config, \"authorId\", \"author_id\", registry.getTypeHandler(int.class)).build());\n            add(new ResultMapping.Builder(config, \"blogId\", \"blog_id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","date":"2011-01-05 09:58:41","endLine":604,"groupId":"247","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSelectPostWithBlogByAuthorMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareSelectPostWithBlogByAuthorMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.author_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"postResultMap\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n\n        add(new ResultMapping.Builder(config, \"blog\").nestedQueryId(\"selectBlogByIdAndAuthor\").composites(new ArrayList<ResultMapping>() {\n          {\n            add(new ResultMapping.Builder(config, \"authorId\", \"author_id\", registry.getTypeHandler(int.class)).build());\n            add(new ResultMapping.Builder(config, \"blogId\", \"blog_id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":532,"status":"B"}],"commitId":"2fe69c949eaaf4591241a69573c054dc87478f79","commitMessage":"@@@Fix for http://code.google.com/p/mybatis/issues/detail?id=84 .  http://code.google.com/p/mybatis/issues/detail?id=83 .  and http://code.google.com/p/mybatis/issues/detail?id=81  - add keycolumn attribute.  and some doc fixes\n","date":"2011-01-05 09:58:41","modifiedFileCount":"6","status":"B","submitter":"Jeff Butler"},{"authorTime":"2012-06-06 05:17:13","codes":[{"authorDate":"2012-06-06 05:17:13","commitOrder":2,"curCode":"  public static MappedStatement prepareSelectPostMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"blog\", \"blog_id\", registry.getTypeHandler(int.class)).javaType(Blog.class).nestedQueryId(\"selectBlogById\").build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","date":"2012-06-06 05:17:13","endLine":542,"groupId":"247","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSelectPostMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a1/cc8fb7dd7027c3eb5188e2f5d37f8d573f85c1.src","preCode":"  public static MappedStatement prepareSelectPostMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"blog\", \"blog_id\", registry.getTypeHandler(int.class)).javaType(Blog.class).nestedQueryId(\"selectBlogById\").build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"},{"authorDate":"2012-06-06 05:17:13","commitOrder":2,"curCode":"  public static MappedStatement prepareSelectPostWithBlogByAuthorMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.author_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"postResultMap\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n\n        add(new ResultMapping.Builder(config, \"blog\").nestedQueryId(\"selectBlogByIdAndAuthor\").composites(new ArrayList<ResultMapping>() {\n          {\n            add(new ResultMapping.Builder(config, \"authorId\", \"author_id\", registry.getTypeHandler(int.class)).build());\n            add(new ResultMapping.Builder(config, \"blogId\", \"blog_id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","date":"2012-06-06 05:17:13","endLine":617,"groupId":"247","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSelectPostWithBlogByAuthorMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a1/cc8fb7dd7027c3eb5188e2f5d37f8d573f85c1.src","preCode":"  public static MappedStatement prepareSelectPostWithBlogByAuthorMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.author_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"postResultMap\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n\n        add(new ResultMapping.Builder(config, \"blog\").nestedQueryId(\"selectBlogByIdAndAuthor\").composites(new ArrayList<ResultMapping>() {\n          {\n            add(new ResultMapping.Builder(config, \"authorId\", \"author_id\", registry.getTypeHandler(int.class)).build());\n            add(new ResultMapping.Builder(config, \"blogId\", \"blog_id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"M"}],"commitId":"e3ff256e1b44890e7ffaba7fbc18d672e60e59af","commitMessage":"@@@resolve a bunch of simple warnings\n","date":"2012-06-06 05:17:13","modifiedFileCount":"61","status":"M","submitter":"Jeff Butler"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  static MappedStatement prepareSelectPostMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"blog\", \"blog_id\", registry.getTypeHandler(int.class)).javaType(Blog.class).nestedQueryId(\"selectBlogById\").build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","date":"2019-01-23 20:49:49","endLine":549,"groupId":"10738","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSelectPostMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareSelectPostMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"blog\", \"blog_id\", registry.getTypeHandler(int.class)).javaType(Blog.class).nestedQueryId(\"selectBlogById\").build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  static MappedStatement prepareSelectPostWithBlogByAuthorMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.author_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"postResultMap\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n\n        add(new ResultMapping.Builder(config, \"blog\").nestedQueryId(\"selectBlogByIdAndAuthor\").composites(new ArrayList<ResultMapping>() {\n          {\n            add(new ResultMapping.Builder(config, \"authorId\", \"author_id\", registry.getTypeHandler(int.class)).build());\n            add(new ResultMapping.Builder(config, \"blogId\", \"blog_id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","date":"2019-01-23 20:49:49","endLine":624,"groupId":"10738","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSelectPostWithBlogByAuthorMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareSelectPostWithBlogByAuthorMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT p.id, p.created_on, p.blog_id, p.author_id, p.section, p.subject, p.body, pt.tag_id,\" +\n        \" t.name as tag_name, c.id as comment_id, c.name as comment_name, c.comment\" +\n        \" FROM post p\" +\n        \" LEFT OUTER JOIN post_tag pt ON pt.post_id = p.id\" +\n        \" LEFT OUTER JOIN tag t ON pt.tag_id = t.id\" +\n        \" LEFT OUTER JOIN comment c ON c.post_id = p.id\" +\n        \" WHERE p.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Author.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap tagResultMap = new ResultMap.Builder(config, \"tagResultMap\", Tag.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"tag_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"tag_name\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    final ResultMap commentResultMap = new ResultMap.Builder(config, \"commentResultMap\", Comment.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"comment_id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"name\", \"comment_name\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"comment\", \"comment\", registry.getTypeHandler(String.class)).build());\n      }\n    }).build();\n    config.addResultMap(tagResultMap);\n    config.addResultMap(commentResultMap);\n    final ResultMap postResultMap = new ResultMap.Builder(config, \"postResultMap\", Post.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n\n        add(new ResultMapping.Builder(config, \"blog\").nestedQueryId(\"selectBlogByIdAndAuthor\").composites(new ArrayList<ResultMapping>() {\n          {\n            add(new ResultMapping.Builder(config, \"authorId\", \"author_id\", registry.getTypeHandler(int.class)).build());\n            add(new ResultMapping.Builder(config, \"blogId\", \"blog_id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build());\n        add(new ResultMapping.Builder(config, \"createdOn\", \"created_on\", registry.getTypeHandler(Date.class)).build());\n        add(new ResultMapping.Builder(config, \"section\", \"section\", registry.getTypeHandler(Section.class)).build());\n        add(new ResultMapping.Builder(config, \"subject\", \"subject\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"body\", \"body\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"tags\").nestedResultMapId(tagResultMap.getId()).build());\n        add(new ResultMapping.Builder(config, \"comments\").nestedResultMapId(commentResultMap.getId()).build());\n      }\n    }).build();\n\n\n    return new MappedStatement.Builder(config, \"selectPostsForBlog\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(postResultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
