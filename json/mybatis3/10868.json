[{"authorTime":"2015-07-12 06:07:37","codes":[{"authorDate":"2013-01-03 06:07:32","commitOrder":5,"curCode":"  private <E> Object executeForMany(SqlSession sqlSession, Object[] args) {\n    List<E> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.<E>selectList(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.<E>selectList(command.getName(), param);\n    }\n    \r\n    if (!method.getReturnType().isAssignableFrom(result.getClass())) {\n      if (method.getReturnType().isArray()) {\n        return convertToArray(result);\n      } else {\n        return convertToDeclaredCollection(sqlSession.getConfiguration(), result);\n      }\n    }\n    return result;\n  }\n","date":"2013-01-03 06:07:32","endLine":121,"groupId":"1839","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"executeForMany","params":"(SqlSessionsqlSession@Object[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/85/42b557406556de869585b2c9afcae14b4dbe3a.src","preCode":"  private <E> Object executeForMany(SqlSession sqlSession, Object[] args) {\n    List<E> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.<E>selectList(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.<E>selectList(command.getName(), param);\n    }\n    \r\n    if (!method.getReturnType().isAssignableFrom(result.getClass())) {\n      if (method.getReturnType().isArray()) {\n        return convertToArray(result);\n      } else {\n        return convertToDeclaredCollection(sqlSession.getConfiguration(), result);\n      }\n    }\n    return result;\n  }\n","realPath":"src/main/java/org/apache/ibatis/binding/MapperMethod.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"NB"},{"authorDate":"2015-07-12 06:07:37","commitOrder":5,"curCode":"  private <T> Cursor<T> executeForCursor(SqlSession sqlSession, Object[] args) {\n    Cursor<T> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.<T>selectCursor(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.<T>selectCursor(command.getName(), param);\n    }\n    return result;\n  }\n","date":"2015-07-12 06:07:37","endLine":148,"groupId":"138","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"executeForCursor","params":"(SqlSessionsqlSession@Object[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/69/526229260872b68d32d2b2849e7e01b31030c0.src","preCode":"  private <T> Cursor<T> executeForCursor(SqlSession sqlSession, Object[] args) {\n    Cursor<T> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.<T>selectCursor(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.<T>selectCursor(command.getName(), param);\n    }\n    return result;\n  }\n","realPath":"src/main/java/org/apache/ibatis/binding/MapperMethod.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"33c1e9f7a685052acb86e96706a566b119ed3774","commitMessage":"@@@Merge pull request #437 from gdarmont/pr-cursor\n\nCursor list implementation","date":"2015-07-12 06:07:37","modifiedFileCount":"19","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2019-02-03 23:47:56","codes":[{"authorDate":"2019-02-03 23:47:56","commitOrder":6,"curCode":"  private <E> Object executeForMany(SqlSession sqlSession, Object[] args) {\n    List<E> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.selectList(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.selectList(command.getName(), param);\n    }\n    \r\n    if (!method.getReturnType().isAssignableFrom(result.getClass())) {\n      if (method.getReturnType().isArray()) {\n        return convertToArray(result);\n      } else {\n        return convertToDeclaredCollection(sqlSession.getConfiguration(), result);\n      }\n    }\n    return result;\n  }\n","date":"2019-02-03 23:47:56","endLine":158,"groupId":"10868","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"executeForMany","params":"(SqlSessionsqlSession@Object[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ee/3216a2fc4436ba65dcf479ab9a33a1eb7321bd.src","preCode":"  private <E> Object executeForMany(SqlSession sqlSession, Object[] args) {\n    List<E> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.<E>selectList(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.<E>selectList(command.getName(), param);\n    }\n    \r\n    if (!method.getReturnType().isAssignableFrom(result.getClass())) {\n      if (method.getReturnType().isArray()) {\n        return convertToArray(result);\n      } else {\n        return convertToDeclaredCollection(sqlSession.getConfiguration(), result);\n      }\n    }\n    return result;\n  }\n","realPath":"src/main/java/org/apache/ibatis/binding/MapperMethod.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2019-02-03 23:47:56","commitOrder":6,"curCode":"  private <T> Cursor<T> executeForCursor(SqlSession sqlSession, Object[] args) {\n    Cursor<T> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.selectCursor(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.selectCursor(command.getName(), param);\n    }\n    return result;\n  }\n","date":"2019-02-03 23:47:56","endLine":170,"groupId":"10868","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"executeForCursor","params":"(SqlSessionsqlSession@Object[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ee/3216a2fc4436ba65dcf479ab9a33a1eb7321bd.src","preCode":"  private <T> Cursor<T> executeForCursor(SqlSession sqlSession, Object[] args) {\n    Cursor<T> result;\n    Object param = method.convertArgsToSqlCommandParam(args);\n    if (method.hasRowBounds()) {\n      RowBounds rowBounds = method.extractRowBounds(args);\n      result = sqlSession.<T>selectCursor(command.getName(), param, rowBounds);\n    } else {\n      result = sqlSession.<T>selectCursor(command.getName(), param);\n    }\n    return result;\n  }\n","realPath":"src/main/java/org/apache/ibatis/binding/MapperMethod.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"b69a02e5b718b68a14c5ceedc8ae27c55cfe0ac1","commitMessage":"@@@Merge pull request #1475 from kazuki43zoo/polish-type-argument\n\nRemove unnecessary explicit type arguments","date":"2019-02-03 23:47:56","modifiedFileCount":"6","status":"M","submitter":"Kazuki Shimizu"}]
