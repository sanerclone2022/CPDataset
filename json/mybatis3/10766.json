[{"authorTime":"2012-06-27 04:22:41","codes":[{"authorDate":"2012-06-27 04:22:41","commitOrder":1,"curCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<Class<?>>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<Object>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","date":"2012-06-27 04:22:41","endLine":86,"groupId":"850","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSerializeAProxyForABeanWithoutDefaultConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/91094887ee0f27288cb955febd33b85567d679.src","preCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<Class<?>>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<Object>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2012-06-27 04:22:41","commitOrder":1,"curCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<Class<?>>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<Object>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    ResultLoaderMap loader = new ResultLoaderMap();\n    loader.addLoader(\"id\", null, null);\n    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","date":"2012-06-27 04:22:41","endLine":110,"groupId":"850","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ed/91094887ee0f27288cb955febd33b85567d679.src","preCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<Class<?>>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<Object>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    ResultLoaderMap loader = new ResultLoaderMap();\n    loader.addLoader(\"id\", null, null);\n    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"ead6bc703ba7fdd615acd89d625d2571872a7f00","commitMessage":"@@@Fix for http://code.google.com/p/mybatis/issues/detail?id=594 . Support Javassist for lazy loading proxies.\n","date":"2012-06-27 04:22:41","modifiedFileCount":"3","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2019-01-20 20:20:45","codes":[{"authorDate":"2019-01-20 20:20:45","commitOrder":2,"curCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","date":"2019-01-20 20:20:45","endLine":81,"groupId":"662","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSerializeAProxyForABeanWithoutDefaultConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/64/2a127e4663d8bef922775ed793bb0af684499a.src","preCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<Class<?>>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<Object>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2019-01-20 20:20:45","commitOrder":2,"curCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    ResultLoaderMap loader = new ResultLoaderMap();\n    loader.addLoader(\"id\", null, null);\n    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","date":"2019-01-20 20:20:45","endLine":105,"groupId":"662","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/64/2a127e4663d8bef922775ed793bb0af684499a.src","preCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<Class<?>>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<Object>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    ResultLoaderMap loader = new ResultLoaderMap();\n    loader.addLoader(\"id\", null, null);\n    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"090013dc35b7912e478ebcb751e0f5ab35830b91","commitMessage":"@@@Merge pull request #1454 from kazuki43zoo/polish\n\nChange to use the diamond operator","date":"2019-01-20 20:20:45","modifiedFileCount":"58","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","date":"2019-01-23 20:49:49","endLine":81,"groupId":"10766","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSerializeAProxyForABeanWithoutDefaultConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2f/baeb53b823b8488da11faf6846041968ff3f2d.src","preCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    ResultLoaderMap loader = new ResultLoaderMap();\n    loader.addLoader(\"id\", null, null);\n    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","date":"2019-01-23 20:49:49","endLine":105,"groupId":"10766","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2f/baeb53b823b8488da11faf6846041968ff3f2d.src","preCode":"  public void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {\n    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);\n    ArrayList<Class<?>> argTypes = new ArrayList<>();\n    argTypes.add(Integer.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(String.class);\n    argTypes.add(Section.class);\n    ArrayList<Object> argValues = new ArrayList<>();\n    argValues.add(999);\n    argValues.add(\"someone\");\n    argValues.add(\"!@#@!#!@#\");\n    argValues.add(\"someone@somewhere.com\");\n    argValues.add(\"blah\");\n    argValues.add(Section.NEWS);\n    ResultLoaderMap loader = new ResultLoaderMap();\n    loader.addLoader(\"id\", null, null);\n    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);\n    Object proxy2 = deserialize(serialize((Serializable) proxy));\n    assertEquals(author, proxy2);\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
