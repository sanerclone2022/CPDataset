[{"authorTime":"2011-12-09 08:03:24","codes":[{"authorDate":"2010-10-30 22:56:49","commitOrder":2,"curCode":"  public void shouldFlushAllItemsOnDemand() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","date":"2010-10-30 22:56:49","endLine":60,"groupId":"1992","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFlushAllItemsOnDemand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/51/e8aeb4045cafa6c6e99e84f79be2c0567d4c3d.src","preCode":"  public void shouldFlushAllItemsOnDemand() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","realPath":"src/test/java/org/apache/ibatis/cache/SoftCacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"NB"},{"authorDate":"2011-12-09 08:03:24","commitOrder":2,"curCode":"  public void shouldFlushAllItemsOnDemand() {\n    Cache cache = new LruCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","date":"2011-12-09 08:03:24","endLine":58,"groupId":"1992","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFlushAllItemsOnDemand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/8a/f2e34c75b9b061605ad408c8fd292304c6920c.src","preCode":"  public void shouldFlushAllItemsOnDemand() {\n    Cache cache = new LruCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","realPath":"src/test/java/org/apache/ibatis/cache/LruCacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"e8cc000886bd21814f8ac91fc3dfc5c2104afa98","commitMessage":"@@@added lincese headers\n","date":"2011-12-09 08:03:24","modifiedFileCount":"769","status":"M","submitter":"Simone Tripodi"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldFlushAllItemsOnDemand() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","date":"2019-01-23 20:49:49","endLine":74,"groupId":"10691","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFlushAllItemsOnDemand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/cd/478b1e26ab8a7a23423dcff05b2f833c3626dc.src","preCode":"  public void shouldFlushAllItemsOnDemand() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","realPath":"src/test/java/org/apache/ibatis/cache/SoftCacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":3,"curCode":"  void shouldFlushAllItemsOnDemand() {\n    Cache cache = new LruCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","date":"2019-01-23 20:49:49","endLine":58,"groupId":"10691","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFlushAllItemsOnDemand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/bd/7a91a7d0d7ba0e0e9e8166ae1ebd7f3e3f0931.src","preCode":"  public void shouldFlushAllItemsOnDemand() {\n    Cache cache = new LruCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }\n","realPath":"src/test/java/org/apache/ibatis/cache/LruCacheTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
