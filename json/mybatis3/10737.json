[{"authorTime":"2011-01-05 09:58:41","codes":[{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareComplexSelectBlogMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config, \"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", int.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogById\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n  }\n","date":"2011-01-05 09:58:41","endLine":354,"groupId":"520","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareComplexSelectBlogMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareComplexSelectBlogMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config, \"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", int.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogById\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"},{"authorDate":"2011-01-05 09:58:41","commitOrder":1,"curCode":"  public static MappedStatement prepareSelectBlogByIdAndAuthor(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ? and a.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Map.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"blogId\", registry.getTypeHandler(int.class)).build());\n            add(new ParameterMapping.Builder(config, \"authorId\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogByIdAndAuthor\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n\n  }\n","date":"2011-01-05 09:58:41","endLine":395,"groupId":"520","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSelectBlogByIdAndAuthor","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5a/9c3492994ed646c8dc543b03daa040747d1041.src","preCode":"  public static MappedStatement prepareSelectBlogByIdAndAuthor(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ? and a.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Map.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"blogId\", registry.getTypeHandler(int.class)).build());\n            add(new ParameterMapping.Builder(config, \"authorId\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogByIdAndAuthor\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"B"}],"commitId":"2fe69c949eaaf4591241a69573c054dc87478f79","commitMessage":"@@@Fix for http://code.google.com/p/mybatis/issues/detail?id=84 .  http://code.google.com/p/mybatis/issues/detail?id=83 .  and http://code.google.com/p/mybatis/issues/detail?id=81  - add keycolumn attribute.  and some doc fixes\n","date":"2011-01-05 09:58:41","modifiedFileCount":"6","status":"B","submitter":"Jeff Butler"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  static MappedStatement prepareComplexSelectBlogMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config, \"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", int.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogById\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n  }\n","date":"2019-01-23 20:49:49","endLine":374,"groupId":"10737","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareComplexSelectBlogMappedStatement","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareComplexSelectBlogMappedStatement(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config, \"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", int.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"id\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogById\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":337,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":2,"curCode":"  static MappedStatement prepareSelectBlogByIdAndAuthor(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ? and a.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Map.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"blogId\", registry.getTypeHandler(int.class)).build());\n            add(new ParameterMapping.Builder(config, \"authorId\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogByIdAndAuthor\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n\n  }\n","date":"2019-01-23 20:49:49","endLine":415,"groupId":"10737","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSelectBlogByIdAndAuthor","params":"(finalConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/29/1e136531d34c3334c261a0d156ab9e998349b5.src","preCode":"  public static MappedStatement prepareSelectBlogByIdAndAuthor(final Configuration config) {\n    final TypeHandlerRegistry registry = config.getTypeHandlerRegistry();\n    final SqlSource sqlSource = new StaticSqlSource(config,\"SELECT b.id, b.author_id, b.title, a.username, a.password, a.email, a.bio\" +\n        \" FROM blog b\" +\n        \" INNER JOIN author a ON b.author_id = a.id\" +\n        \" WHERE b.id = ? and a.id = ?\");\n    final ParameterMap parameterMap = new ParameterMap.Builder(config, \"defaultParameterMap\", Map.class,\n        new ArrayList<ParameterMapping>() {\n          {\n            add(new ParameterMapping.Builder(config, \"blogId\", registry.getTypeHandler(int.class)).build());\n            add(new ParameterMapping.Builder(config, \"authorId\", registry.getTypeHandler(int.class)).build());\n          }\n        }).build();\n    final ResultMap resultMap = new ResultMap.Builder(config, \"defaultResultMap\", Blog.class, new ArrayList<ResultMapping>() {\n      {\n        add(new ResultMapping.Builder(config, \"id\", \"id\", registry.getTypeHandler(int.class))\n            .flags(new ArrayList<ResultFlag>() {\n              {\n                add(ResultFlag.ID);\n              }\n            }).build());\n        add(new ResultMapping.Builder(config, \"title\", \"title\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.id\", \"author_id\", registry.getTypeHandler(int.class)).build());\n        add(new ResultMapping.Builder(config, \"author.username\", \"username\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.password\", \"password\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.email\", \"email\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"author.bio\", \"bio\", registry.getTypeHandler(String.class)).build());\n        add(new ResultMapping.Builder(config, \"posts\", \"id\", registry.getTypeHandler(int.class)).javaType(List.class).nestedQueryId(\"selectPostsForBlog\").build());\n      }\n    }).build();\n\n    return new MappedStatement.Builder(config, \"selectBlogByIdAndAuthor\", sqlSource, SqlCommandType.SELECT)\n        .parameterMap(parameterMap)\n        .resultMaps(new ArrayList<ResultMap>() {\n          {\n            add(resultMap);\n          }\n        }).build();\n\n  }\n","realPath":"src/test/java/org/apache/ibatis/executor/ExecutorTestHelper.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
