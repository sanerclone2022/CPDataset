[{"authorTime":"2011-07-23 05:38:57","codes":[{"authorDate":"2013-11-23 04:19:57","commitOrder":2,"curCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    } finally {\n      session.close();\n    }\n  }\n","date":"2013-11-23 04:19:57","endLine":398,"groupId":"2460","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ee/dd6901cafefb6c5d5d9cb735f378c1ff1856e8.src","preCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":380,"status":"B"},{"authorDate":"2011-07-23 05:38:57","commitOrder":2,"curCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    } finally {\n      session.close();\n    }\n  }\n","date":"2011-07-23 05:38:57","endLine":342,"groupId":"240","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0c/3343084a090fe684723ecfc250e76656be0ff4.src","preCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"NB"}],"commitId":"8bfd5a27a6eab8c1200ab93769e7479972947dcc","commitMessage":"@@@Fixes #103. Property mappings were ignored when handling constructors.","date":"2013-11-23 04:19:57","modifiedFileCount":"3","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":354,"groupId":"2460","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fa/76a34254424e23cd2d0bd6bdb2cc03ee77681e.src","preCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":3,"curCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":381,"groupId":"240","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fa/76a34254424e23cd2d0bd6bdb2cc03ee77681e.src","preCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    SqlSession session = sqlSessionFactory.openSession();\n    try {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    } finally {\n      session.close();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"M"}],"commitId":"999a4424588dd4dcaeea9834fcd5d93231f098bc","commitMessage":"@@@Merge pull request #1268 from kazuki43zoo/use-auto-close-sqlsession-on-test\n\nReplace to auto-close instead of explicit close on test that using SqlSession","date":"2018-05-03 14:04:04","modifiedFileCount":"122","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2018-05-03 14:04:04","codes":[{"authorDate":"2018-10-31 22:11:35","commitOrder":4,"curCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      assertEquals(Section.NEWS, author.getFavouriteSection());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    }\n  }\n","date":"2018-10-31 22:11:35","endLine":391,"groupId":"2460","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/5d/598c40d2c25c6e933bba763cac49470e7a950e.src","preCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"M"},{"authorDate":"2018-05-03 14:04:04","commitOrder":4,"curCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    }\n  }\n","date":"2018-05-03 14:04:04","endLine":381,"groupId":"240","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/fa/76a34254424e23cd2d0bd6bdb2cc03ee77681e.src","preCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"315b1d8974c79d467ef47e6c039a2c5c2b80236f","commitMessage":"@@@fixes #1369 A correction in a test.\n","date":"2018-10-31 22:11:35","modifiedFileCount":"1","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2019-01-07 09:04:39","codes":[{"authorDate":"2019-01-07 09:04:39","commitOrder":5,"curCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(blog.getAuthor(), \"author should not be null\");\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      assertEquals(Section.NEWS, author.getFavouriteSection());\n      List<Post> posts = blog.getPosts();\n      assertTrue(posts != null, \"posts should not be empty\");\n      assertEquals(2, posts.size());\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":392,"groupId":"2460","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/60/233f911fccb55a4302a2223858a8bdf5dd413d.src","preCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      assertEquals(Section.NEWS, author.getFavouriteSection());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null);\n      assertEquals(2, posts.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"M"},{"authorDate":"2019-01-07 09:04:39","commitOrder":5,"curCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(blog.getAuthor(), \"author should not be null\");\n      List<Post> posts = blog.getPosts();\n      assertTrue(posts != null && !posts.isEmpty(), \"posts should not be empty\");\n    }\n  }\n","date":"2019-01-07 09:04:39","endLine":419,"groupId":"2004","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/60/233f911fccb55a4302a2223858a8bdf5dd413d.src","preCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(\"author should not be null\", blog.getAuthor());\n      List<Post> posts = blog.getPosts();\n      assertTrue(\"posts should not be empty\", posts != null && !posts.isEmpty());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"M"}],"commitId":"aad2e5b4507eb42263122ccc202a34ddd082eac5","commitMessage":"@@@Merge pull request #1428 from hazendaz/tests\n\n[tests] Upgrade test harness to junit 5 - Fixes #1425","date":"2019-01-07 09:04:39","modifiedFileCount":"293","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":6,"curCode":"  void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(blog.getAuthor(), \"author should not be null\");\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      assertEquals(Section.NEWS, author.getFavouriteSection());\n      List<Post> posts = blog.getPosts();\n      assertNotNull(posts, \"posts should not be empty\");\n      assertEquals(2, posts.size());\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":386,"groupId":"10817","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/63/aa65df5668722e788754d9795bcd84541d81fa.src","preCode":"  public void shouldExecuteBoundSelectBlogUsingConstructorWithResultMapAndProperties() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogUsingConstructorWithResultMapAndProperties(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(blog.getAuthor(), \"author should not be null\");\n      Author author = blog.getAuthor();\n      assertEquals(101, author.getId());\n      assertEquals(\"jim@ibatis.apache.org\", author.getEmail());\n      assertEquals(\"jim\", author.getUsername());\n      assertEquals(Section.NEWS, author.getFavouriteSection());\n      List<Post> posts = blog.getPosts();\n      assertTrue(posts != null, \"posts should not be empty\");\n      assertEquals(2, posts.size());\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":6,"curCode":"  void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(blog.getAuthor(), \"author should not be null\");\n      List<Post> posts = blog.getPosts();\n      assertTrue(posts != null && !posts.isEmpty(), \"posts should not be empty\");\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":413,"groupId":"10817","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/63/aa65df5668722e788754d9795bcd84541d81fa.src","preCode":"  public void shouldExecuteBoundSelectOneBlogStatementWithConstructorUsingXMLConfig() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      BoundBlogMapper mapper = session.getMapper(BoundBlogMapper.class);\n      Blog blog = mapper.selectBlogByIdUsingConstructor(1);\n      assertEquals(1, blog.getId());\n      assertEquals(\"Jim Business\", blog.getTitle());\n      assertNotNull(blog.getAuthor(), \"author should not be null\");\n      List<Post> posts = blog.getPosts();\n      assertTrue(posts != null && !posts.isEmpty(), \"posts should not be empty\");\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/binding/BindingTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":403,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"}]
