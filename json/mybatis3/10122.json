[{"authorTime":"2015-03-19 19:31:11","codes":[{"authorDate":"2015-03-19 19:31:11","commitOrder":1,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2015-03-19 19:31:11","endLine":80,"groupId":"1741","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d6/aefdf5225089abd8d3a8939d30a27f5d59b995.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2015-03-19 19:31:11","commitOrder":1,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","date":"2015-03-19 19:31:11","endLine":169,"groupId":"1743","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d6/aefdf5225089abd8d3a8939d30a27f5d59b995.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"B"}],"commitId":"7088e18046c980c9d55672c1ceccdd91cd241fd1","commitMessage":"@@@Merge pull request #377 from kazuki43zoo/issues/376_support-defaultFetchSize\n\n#376: Support the defaultFetchSize in config.xml","date":"2015-03-19 19:31:11","modifiedFileCount":"6","status":"B","submitter":"Eduardo Macarron"},{"authorTime":"2015-08-19 02:58:57","codes":[{"authorDate":"2015-03-19 19:31:11","commitOrder":2,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2015-03-19 19:31:11","endLine":80,"groupId":"1741","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/d6/aefdf5225089abd8d3a8939d30a27f5d59b995.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2015-08-19 02:58:57","commitOrder":2,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","date":"2015-08-19 02:58:57","endLine":171,"groupId":"1743","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/18/c7d3eaae7f44124e6c3b187e3fb7681b3ad0a6.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"7203a4084762275bd0793cc54accbf67d57b2483","commitMessage":"@@@#325 Added vfsImpl setting to make VFS implementation configurable.\n","date":"2015-08-19 02:58:57","modifiedFileCount":"3","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2016-02-26 22:32:51","codes":[{"authorDate":"2016-02-26 22:32:51","commitOrder":3,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2016-02-26 22:32:51","endLine":83,"groupId":"1741","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/26e3d2e5a3668bdc41931207cdfa5f4c73d83b.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2016-02-26 22:32:51","commitOrder":3,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","date":"2016-02-26 22:32:51","endLine":174,"groupId":"1743","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/26e3d2e5a3668bdc41931207cdfa5f4c73d83b.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"2f390a5ba91bc9d352bdf8205c69600161c16d94","commitMessage":"@@@Merge pull request #585 from kazuki43zoo/add-new-option-AutoMappingUnknownColumnBehavior\n\nAdd new option for specify the behavior when detects an unknown column of automatic mapping target","date":"2016-02-26 22:32:51","modifiedFileCount":"4","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2016-04-28 02:39:30","codes":[{"authorDate":"2016-02-26 22:32:51","commitOrder":4,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2016-02-26 22:32:51","endLine":83,"groupId":"1741","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/26e3d2e5a3668bdc41931207cdfa5f4c73d83b.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2016-04-28 02:39:30","commitOrder":4,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","date":"2016-04-28 02:39:30","endLine":227,"groupId":"1743","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/f9/0f392bc14c6ce8cb865aff3183ea93af35541e.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"023df8afb716f68fe6f3a3d1a1591eab57d767bc","commitMessage":"@@@Merge pull request #674 from kazuki43zoo/improve-tests-for-XMLConfigBuilder\n\nImprove and add tests for XMLConfigBuilder","date":"2016-04-28 02:39:30","modifiedFileCount":"4","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2016-04-28 13:04:35","codes":[{"authorDate":"2016-02-26 22:32:51","commitOrder":5,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2016-02-26 22:32:51","endLine":83,"groupId":"1741","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/47/26e3d2e5a3668bdc41931207cdfa5f4c73d83b.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2016-04-28 13:04:35","commitOrder":5,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","date":"2016-04-28 13:04:35","endLine":229,"groupId":"1743","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/0f/79b47b596a10092bede04d18a137e65037a4cc.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"7d010c171773688cbff37f57f47ab60e18e1e61a","commitMessage":"@@@Merge pull request #677 from kazuki43zoo/allow-customize-ReflectorFactory\n\nAllow customize a ReflectorFactory using mybatis configuration xml file #675","date":"2016-04-28 13:04:35","modifiedFileCount":"2","status":"M","submitter":"Eduardo Macarron"},{"authorTime":"2016-09-28 20:12:34","codes":[{"authorDate":"2016-09-28 20:12:34","commitOrder":6,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2016-09-28 20:12:34","endLine":102,"groupId":"1741","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b6/b7f4993433b1db380900eb70c6fe69e7c1c041.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2016-09-28 20:12:34","commitOrder":6,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","date":"2016-09-28 20:12:34","endLine":229,"groupId":"1743","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/b6/b7f4993433b1db380900eb70c6fe69e7c1c041.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanuageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"a2a31d33ee9f9b502fce82d437f509cebae89beb","commitMessage":"@@@Merge branch 'wssccc-wssccc-fix-typo'\n","date":"2016-09-28 20:12:34","modifiedFileCount":"3","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2016-11-09 03:41:01","codes":[{"authorDate":"2016-11-09 03:41:01","commitOrder":7,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(false));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n    assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","date":"2016-11-09 21:49:11","endLine":102,"groupId":"2378","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/34/a17dfe0f8f6aaf00aa07b9c6e01c2d0abcf4ea.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(true));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n    assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2016-11-09 03:41:01","commitOrder":7,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(true));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","date":"2016-11-09 21:49:11","endLine":229,"groupId":"1743","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/34/a17dfe0f8f6aaf00aa07b9c6e01c2d0abcf4ea.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(false));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"3e893f73d829ffa4b995c2f724432e05070e9e67","commitMessage":"@@@Change the default value of aggressiveLazyLoading to false. See the comments on #515 .\n","date":"2016-11-09 21:49:11","modifiedFileCount":"3","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2017-04-10 22:48:27","codes":[{"authorDate":"2017-04-10 22:48:27","commitOrder":8,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(false));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n    assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n    assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class), is(instanceOf(EnumTypeHandler.class)));\n  }\n","date":"2017-04-10 22:48:27","endLine":103,"groupId":"2378","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2a/b3e4ec479794796ab4b4ac018c47cceb4e9d35.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(false));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n    assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2017-04-10 22:48:27","commitOrder":8,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(true));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class), is(instanceOf(EnumOrdinalTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","date":"2017-04-10 22:48:27","endLine":231,"groupId":"1743","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/2a/b3e4ec479794796ab4b4ac018c47cceb4e9d35.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(true));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"deba3169af1db220ec703ef33de3709d24fb941b","commitMessage":"@@@Merge pull request #971 from kazuki43zoo/gh-970_allow-customize-default-enum-typehandler\n\nAllow to customize default typehandler for enum","date":"2017-04-10 22:48:27","modifiedFileCount":"4","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2017-04-17 08:43:56","codes":[{"authorDate":"2017-04-17 08:43:56","commitOrder":9,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n    assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n    assertThat(config.isCacheEnabled()).isTrue();\n    assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n    assertThat(config.isLazyLoadingEnabled()).isFalse();\n    assertThat(config.isAggressiveLazyLoading()).isFalse();\n    assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n    assertThat(config.isUseColumnLabel()).isTrue();\n    assertThat(config.isUseGeneratedKeys()).isFalse();\n    assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n    assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n    assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n    assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n    assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n    assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n    assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n    assertThat(config.isCallSettersOnNulls()).isFalse();\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n    assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    inputStream.close();\n  }\n","date":"2017-04-17 08:43:56","endLine":104,"groupId":"2158","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c2/81d2a092339a9010a849b1b3130169ac2d7dff.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.PARTIAL));\n    assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.NONE));\n    assertThat(config.isCacheEnabled(), is(true));\n    assertThat(config.getProxyFactory(), is(instanceOf(JavassistProxyFactory.class)));\n    assertThat(config.isLazyLoadingEnabled(), is(false));\n    assertThat(config.isAggressiveLazyLoading(), is(false));\n    assertThat(config.isMultipleResultSetsEnabled(), is(true));\n    assertThat(config.isUseColumnLabel(), is(true));\n    assertThat(config.isUseGeneratedKeys(), is(false));\n    assertThat(config.getDefaultExecutorType(), is(ExecutorType.SIMPLE));\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase(), is(false));\n    assertThat(config.isSafeRowBoundsEnabled(), is(false));\n    assertThat(config.getLocalCacheScope(), is(LocalCacheScope.SESSION));\n    assertThat(config.getJdbcTypeForNull(), is(JdbcType.OTHER));\n    assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\"))));\n    assertThat(config.isSafeResultHandlerEnabled(), is(true));\n    assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(XMLLanguageDriver.class)));\n    assertThat(config.isCallSettersOnNulls(), is(false));\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n    assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class), is(instanceOf(EnumTypeHandler.class)));\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2017-04-17 08:43:56","commitOrder":9,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n      inputStream.close();\n    }\n","date":"2017-04-17 08:43:56","endLine":232,"groupId":"2160","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/c2/81d2a092339a9010a849b1b3130169ac2d7dff.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior(), is(AutoMappingBehavior.NONE));\n      assertThat(config.getAutoMappingUnknownColumnBehavior(), is(AutoMappingUnknownColumnBehavior.WARNING));\n      assertThat(config.isCacheEnabled(), is(false));\n      assertThat(config.getProxyFactory(), is(instanceOf(CglibProxyFactory.class)));\n      assertThat(config.isLazyLoadingEnabled(), is(true));\n      assertThat(config.isAggressiveLazyLoading(), is(true));\n      assertThat(config.isMultipleResultSetsEnabled(), is(false));\n      assertThat(config.isUseColumnLabel(), is(false));\n      assertThat(config.isUseGeneratedKeys(), is(true));\n      assertThat(config.getDefaultExecutorType(), is(ExecutorType.BATCH));\n      assertThat(config.getDefaultStatementTimeout(), is(10));\n      assertThat(config.getDefaultFetchSize(), is(100));\n      assertThat(config.isMapUnderscoreToCamelCase(), is(true));\n      assertThat(config.isSafeRowBoundsEnabled(), is(true));\n      assertThat(config.getLocalCacheScope(), is(LocalCacheScope.STATEMENT));\n      assertThat(config.getJdbcTypeForNull(), is(JdbcType.NULL));\n      assertThat(config.getLazyLoadTriggerMethods(), is((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\"))));\n      assertThat(config.isSafeResultHandlerEnabled(), is(false));\n      assertThat(config.getDefaultScriptingLanguageInstance(), is(instanceOf(RawLanguageDriver.class)));\n      assertThat(config.isCallSettersOnNulls(), is(true));\n      assertThat(config.getLogPrefix(), is(\"mybatis_\"));\n      assertThat(config.getLogImpl().getName(), is(Slf4jImpl.class.getName()));\n      assertThat(config.getVfsImpl().getName(), is(JBoss6VFS.class.getName()));\n      assertThat(config.getConfigurationFactory().getName(), is(String.class.getName()));\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class), is(instanceOf(CustomIntegerTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class), is(instanceOf(CustomLongTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR), is(instanceOf(CustomStringTypeHandler.class)));\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class), is(instanceOf(EnumOrdinalTypeHandler.class)));\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size(), is(1));\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"), is(\"100\"));\n\n      assertThat(config.getObjectWrapperFactory(), is(instanceOf(CustomObjectWrapperFactory.class)));\n\n      assertThat(config.getReflectorFactory(), is(instanceOf(CustomReflectorFactory.class)));\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size(), is(1));\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\"), is(\"100\"));\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId(), is(\"development\"));\n      assertThat(environment.getDataSource(), is(instanceOf(UnpooledDataSource.class)));\n      assertThat(environment.getTransactionFactory(), is(instanceOf(JdbcTransactionFactory.class)));\n\n      assertThat(config.getDatabaseId(), is(\"derby\"));\n\n      assertThat(config.getMapperRegistry().getMappers().size(), is(4));\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class), is(true));\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class), is(true));\n\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"32bf5f811e72399b0f0880106b53907b832ac00a","commitMessage":"@@@Merge pull request #977 from hazendaz/master\n\n[ci] Use assertj/fluent exceptions for cleaner unit testing","date":"2017-04-17 08:43:56","modifiedFileCount":"34","status":"M","submitter":"Jeremy Landis"},{"authorTime":"2018-05-03 21:34:51","codes":[{"authorDate":"2018-05-03 21:34:51","commitOrder":10,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","date":"2018-05-03 21:34:51","endLine":104,"groupId":"2158","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a7/a8240168f90dc7925cfc9ca458a748beba686e.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    InputStream inputStream = Resources.getResourceAsStream(resource);\n    XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n    Configuration config = builder.parse();\n    assertNotNull(config);\n    assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n    assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n    assertThat(config.isCacheEnabled()).isTrue();\n    assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n    assertThat(config.isLazyLoadingEnabled()).isFalse();\n    assertThat(config.isAggressiveLazyLoading()).isFalse();\n    assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n    assertThat(config.isUseColumnLabel()).isTrue();\n    assertThat(config.isUseGeneratedKeys()).isFalse();\n    assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n    assertNull(config.getDefaultStatementTimeout());\n    assertNull(config.getDefaultFetchSize());\n    assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n    assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n    assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n    assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n    assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n    assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n    assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n    assertThat(config.isCallSettersOnNulls()).isFalse();\n    assertNull(config.getLogPrefix());\n    assertNull(config.getLogImpl());\n    assertNull(config.getConfigurationFactory());\n    assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    inputStream.close();\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2018-05-03 21:34:51","commitOrder":10,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n        Properties props = new Properties();\n        props.put(\"prop2\", \"cccc\");\n        XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n        Configuration config = builder.parse();\n\n        assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n        assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n        assertThat(config.isCacheEnabled()).isFalse();\n        assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n        assertThat(config.isLazyLoadingEnabled()).isTrue();\n        assertThat(config.isAggressiveLazyLoading()).isTrue();\n        assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n        assertThat(config.isUseColumnLabel()).isFalse();\n        assertThat(config.isUseGeneratedKeys()).isTrue();\n        assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n        assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n        assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n        assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n        assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n        assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n        assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n        assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n        assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n        assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n        assertThat(config.isCallSettersOnNulls()).isTrue();\n        assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n        assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n        assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n        assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n        ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n        assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n        assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n        assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n        assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n        ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n        assertThat(plugin.getProperties().size()).isEqualTo(1);\n        assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n        Environment environment = config.getEnvironment();\n        assertThat(environment.getId()).isEqualTo(\"development\");\n        assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n        assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n        assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n        assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n        assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n      }\n    }\n","date":"2018-05-03 21:34:51","endLine":232,"groupId":"2160","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/a7/a8240168f90dc7925cfc9ca458a748beba686e.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      InputStream inputStream = Resources.getResourceAsStream(resource);\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n      assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n      inputStream.close();\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"d5f024c6256b5deb9d79dc8b35ebd825e47e679c","commitMessage":"@@@Merge pull request #1270 from kazuki43zoo/try-with-resources\n\nChange to use try-with-resources on test","date":"2018-05-03 21:34:51","modifiedFileCount":"150","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-20 20:20:45","codes":[{"authorDate":"2019-01-20 20:20:45","commitOrder":11,"curCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","date":"2019-01-20 20:20:45","endLine":103,"groupId":"2158","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/69/5af78e473a2a0ac6bae8c932d3d2f7dd9d94ae.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2019-01-20 20:20:45","commitOrder":11,"curCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n        Properties props = new Properties();\n        props.put(\"prop2\", \"cccc\");\n        XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n        Configuration config = builder.parse();\n\n        assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n        assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n        assertThat(config.isCacheEnabled()).isFalse();\n        assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n        assertThat(config.isLazyLoadingEnabled()).isTrue();\n        assertThat(config.isAggressiveLazyLoading()).isTrue();\n        assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n        assertThat(config.isUseColumnLabel()).isFalse();\n        assertThat(config.isUseGeneratedKeys()).isTrue();\n        assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n        assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n        assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n        assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n        assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n        assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n        assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n        assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n        assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n        assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n        assertThat(config.isCallSettersOnNulls()).isTrue();\n        assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n        assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n        assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n        assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n        ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n        assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n        assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n        assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n        assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n        ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n        assertThat(plugin.getProperties().size()).isEqualTo(1);\n        assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n        Environment environment = config.getEnvironment();\n        assertThat(environment.getId()).isEqualTo(\"development\");\n        assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n        assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n        assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n        assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n        assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n      }\n    }\n","date":"2019-01-20 20:20:45","endLine":231,"groupId":"0","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/69/5af78e473a2a0ac6bae8c932d3d2f7dd9d94ae.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n        Properties props = new Properties();\n        props.put(\"prop2\", \"cccc\");\n        XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n        Configuration config = builder.parse();\n\n        assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n        assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n        assertThat(config.isCacheEnabled()).isFalse();\n        assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n        assertThat(config.isLazyLoadingEnabled()).isTrue();\n        assertThat(config.isAggressiveLazyLoading()).isTrue();\n        assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n        assertThat(config.isUseColumnLabel()).isFalse();\n        assertThat(config.isUseGeneratedKeys()).isTrue();\n        assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n        assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n        assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n        assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n        assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n        assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n        assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n        assertThat(config.getLazyLoadTriggerMethods()).isEqualTo((Set<String>) new HashSet<String>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n        assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n        assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n        assertThat(config.isCallSettersOnNulls()).isTrue();\n        assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n        assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n        assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n        assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n        ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n        assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n        assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n        assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n        assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n        ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n        assertThat(plugin.getProperties().size()).isEqualTo(1);\n        assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n        Environment environment = config.getEnvironment();\n        assertThat(environment.getId()).isEqualTo(\"development\");\n        assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n        assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n        assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n        assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n        assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n      }\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"090013dc35b7912e478ebcb751e0f5ab35830b91","commitMessage":"@@@Merge pull request #1454 from kazuki43zoo/polish\n\nChange to use the diamond operator","date":"2019-01-20 20:20:45","modifiedFileCount":"58","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-01-23 20:49:49","codes":[{"authorDate":"2019-01-23 20:49:49","commitOrder":12,"curCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":102,"groupId":"2158","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/87/4cb587d0237cc8cfd6dee9502c22dd770678e4.src","preCode":"  public void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2019-01-23 20:49:49","commitOrder":12,"curCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","date":"2019-01-23 20:49:49","endLine":230,"groupId":"1634","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/87/4cb587d0237cc8cfd6dee9502c22dd770678e4.src","preCode":"    public void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n      String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n      try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n        Properties props = new Properties();\n        props.put(\"prop2\", \"cccc\");\n        XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n        Configuration config = builder.parse();\n\n        assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n        assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n        assertThat(config.isCacheEnabled()).isFalse();\n        assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n        assertThat(config.isLazyLoadingEnabled()).isTrue();\n        assertThat(config.isAggressiveLazyLoading()).isTrue();\n        assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n        assertThat(config.isUseColumnLabel()).isFalse();\n        assertThat(config.isUseGeneratedKeys()).isTrue();\n        assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n        assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n        assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n        assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n        assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n        assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n        assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n        assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n        assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n        assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n        assertThat(config.isCallSettersOnNulls()).isTrue();\n        assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n        assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n        assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n        assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals(Author.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals(Blog.class));\n        assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals(Cart.class));\n\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n        assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n        ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n        assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n        assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n        assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n        assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n        ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n        assertThat(plugin.getProperties().size()).isEqualTo(1);\n        assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n        Environment environment = config.getEnvironment();\n        assertThat(environment.getId()).isEqualTo(\"development\");\n        assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n        assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n        assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n        assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n        assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n        assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n      }\n    }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"674b9c0e82a181d21ed0240291e79f73f36e2e53","commitMessage":"@@@Merge pull request #1460 from kazuki43zoo/polishing-tests\n\nPolishing tests","date":"2019-01-23 20:49:49","modifiedFileCount":"291","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2019-07-07 16:19:01","codes":[{"authorDate":"2019-07-07 16:19:01","commitOrder":13,"curCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertNull(config.getDefaultResultSetType());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","date":"2019-07-07 16:19:01","endLine":104,"groupId":"375","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9c/d90d80a9e1a7c331977997ba1572cdf5fa1101.src","preCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2019-07-07 16:19:01","commitOrder":13,"curCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.getDefaultResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","date":"2019-07-07 16:19:01","endLine":233,"groupId":"1634","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/9c/d90d80a9e1a7c331977997ba1572cdf5fa1101.src","preCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"6e9e4c22a7cd450f65449dd72cf972344d492c8e","commitMessage":"@@@Merge pull request #1056 from kazuki43zoo/default-resultset-type\n\nAdd defaultResultSetType as global configuration","date":"2019-07-07 16:19:01","modifiedFileCount":"6","status":"M","submitter":"Kazuki Shimizu"},{"authorTime":"2020-05-18 23:24:24","codes":[{"authorDate":"2020-05-18 23:24:24","commitOrder":14,"curCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertNull(config.getDefaultResultSetType());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n      assertThat(config.isShrinkWhitespacesInSql()).isFalse();\n    }\n  }\n","date":"2020-05-18 23:24:24","endLine":105,"groupId":"375","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ef/1851130dd0ddb32b82ff13796c0d67491e5cfc.src","preCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertNull(config.getDefaultResultSetType());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-05-18 23:24:24","commitOrder":14,"curCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.getDefaultResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n      assertThat(config.isShrinkWhitespacesInSql()).isTrue();\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","date":"2020-05-18 23:24:24","endLine":235,"groupId":"0","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/ef/1851130dd0ddb32b82ff13796c0d67491e5cfc.src","preCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.getDefaultResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"63785f20b43aacdb0402b43f9f05c720f40d6c1b","commitMessage":"@@@Merge pull request #1901 from elfhazard/feature/minifysql\n\nA new option `shrinkWhitespacesInSql` that removes extra whitespaces from SQL","date":"2020-05-18 23:24:24","modifiedFileCount":"8","status":"M","submitter":"Iwao AVE!"},{"authorTime":"2020-06-07 18:38:13","codes":[{"authorDate":"2020-06-07 18:38:13","commitOrder":15,"curCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertNull(config.getDefaultResultSetType());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n      assertThat(config.isShrinkWhitespacesInSql()).isFalse();\n      assertThat(config.getDefaultSqlProviderType()).isNull();\n    }\n  }\n","date":"2020-06-07 18:38:13","endLine":106,"groupId":"10122","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadMinimalXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/05/9b3d8a3d980ec30b786399ad304eb7ab2d85f3.src","preCode":"  void shouldSuccessfullyLoadMinimalXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream);\n      Configuration config = builder.parse();\n      assertNotNull(config);\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.PARTIAL);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.NONE);\n      assertThat(config.isCacheEnabled()).isTrue();\n      assertThat(config.getProxyFactory()).isInstanceOf(JavassistProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isFalse();\n      assertThat(config.isAggressiveLazyLoading()).isFalse();\n      assertThat(config.isMultipleResultSetsEnabled()).isTrue();\n      assertThat(config.isUseColumnLabel()).isTrue();\n      assertThat(config.isUseGeneratedKeys()).isFalse();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.SIMPLE);\n      assertNull(config.getDefaultStatementTimeout());\n      assertNull(config.getDefaultFetchSize());\n      assertNull(config.getDefaultResultSetType());\n      assertThat(config.isMapUnderscoreToCamelCase()).isFalse();\n      assertThat(config.isSafeRowBoundsEnabled()).isFalse();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.SESSION);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.OTHER);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isTrue();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(XMLLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isFalse();\n      assertNull(config.getLogPrefix());\n      assertNull(config.getLogImpl());\n      assertNull(config.getConfigurationFactory());\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumTypeHandler.class);\n      assertThat(config.isShrinkWhitespacesInSql()).isFalse();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-06-07 18:38:13","commitOrder":15,"curCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.getDefaultResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n      assertThat(config.isShrinkWhitespacesInSql()).isTrue();\n      assertThat(config.getDefaultSqlProviderType().getName()).isEqualTo(MySqlProvider.class.getName());\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","date":"2020-06-07 18:38:13","endLine":237,"groupId":"10122","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSuccessfullyLoadXMLConfigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mybatis3-10-0.7/blobInfo/CC_OUT/blobs/05/9b3d8a3d980ec30b786399ad304eb7ab2d85f3.src","preCode":"  void shouldSuccessfullyLoadXMLConfigFile() throws Exception {\n    String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      Properties props = new Properties();\n      props.put(\"prop2\", \"cccc\");\n      XMLConfigBuilder builder = new XMLConfigBuilder(inputStream, null, props);\n      Configuration config = builder.parse();\n\n      assertThat(config.getAutoMappingBehavior()).isEqualTo(AutoMappingBehavior.NONE);\n      assertThat(config.getAutoMappingUnknownColumnBehavior()).isEqualTo(AutoMappingUnknownColumnBehavior.WARNING);\n      assertThat(config.isCacheEnabled()).isFalse();\n      assertThat(config.getProxyFactory()).isInstanceOf(CglibProxyFactory.class);\n      assertThat(config.isLazyLoadingEnabled()).isTrue();\n      assertThat(config.isAggressiveLazyLoading()).isTrue();\n      assertThat(config.isMultipleResultSetsEnabled()).isFalse();\n      assertThat(config.isUseColumnLabel()).isFalse();\n      assertThat(config.isUseGeneratedKeys()).isTrue();\n      assertThat(config.getDefaultExecutorType()).isEqualTo(ExecutorType.BATCH);\n      assertThat(config.getDefaultStatementTimeout()).isEqualTo(10);\n      assertThat(config.getDefaultFetchSize()).isEqualTo(100);\n      assertThat(config.getDefaultResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);\n      assertThat(config.isMapUnderscoreToCamelCase()).isTrue();\n      assertThat(config.isSafeRowBoundsEnabled()).isTrue();\n      assertThat(config.getLocalCacheScope()).isEqualTo(LocalCacheScope.STATEMENT);\n      assertThat(config.getJdbcTypeForNull()).isEqualTo(JdbcType.NULL);\n      assertThat(config.getLazyLoadTriggerMethods()).isEqualTo(new HashSet<>(Arrays.asList(\"equals\", \"clone\", \"hashCode\", \"toString\", \"xxx\")));\n      assertThat(config.isSafeResultHandlerEnabled()).isFalse();\n      assertThat(config.getDefaultScriptingLanuageInstance()).isInstanceOf(RawLanguageDriver.class);\n      assertThat(config.isCallSettersOnNulls()).isTrue();\n      assertThat(config.getLogPrefix()).isEqualTo(\"mybatis_\");\n      assertThat(config.getLogImpl().getName()).isEqualTo(Slf4jImpl.class.getName());\n      assertThat(config.getVfsImpl().getName()).isEqualTo(JBoss6VFS.class.getName());\n      assertThat(config.getConfigurationFactory().getName()).isEqualTo(String.class.getName());\n      assertThat(config.isShrinkWhitespacesInSql()).isTrue();\n\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\")).isEqualTo(Author.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\")).isEqualTo(Blog.class);\n      assertThat(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\")).isEqualTo(Cart.class);\n\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Integer.class)).isInstanceOf(CustomIntegerTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(Long.class)).isInstanceOf(CustomLongTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(String.class, JdbcType.VARCHAR)).isInstanceOf(CustomStringTypeHandler.class);\n      assertThat(config.getTypeHandlerRegistry().getTypeHandler(RoundingMode.class)).isInstanceOf(EnumOrdinalTypeHandler.class);\n\n      ExampleObjectFactory objectFactory = (ExampleObjectFactory) config.getObjectFactory();\n      assertThat(objectFactory.getProperties().size()).isEqualTo(1);\n      assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\")).isEqualTo(\"100\");\n\n      assertThat(config.getObjectWrapperFactory()).isInstanceOf(CustomObjectWrapperFactory.class);\n\n      assertThat(config.getReflectorFactory()).isInstanceOf(CustomReflectorFactory.class);\n\n      ExamplePlugin plugin = (ExamplePlugin) config.getInterceptors().get(0);\n      assertThat(plugin.getProperties().size()).isEqualTo(1);\n      assertThat(plugin.getProperties().getProperty(\"pluginProperty\")).isEqualTo(\"100\");\n\n      Environment environment = config.getEnvironment();\n      assertThat(environment.getId()).isEqualTo(\"development\");\n      assertThat(environment.getDataSource()).isInstanceOf(UnpooledDataSource.class);\n      assertThat(environment.getTransactionFactory()).isInstanceOf(JdbcTransactionFactory.class);\n\n      assertThat(config.getDatabaseId()).isEqualTo(\"derby\");\n\n      assertThat(config.getMapperRegistry().getMappers().size()).isEqualTo(4);\n      assertThat(config.getMapperRegistry().hasMapper(CachedAuthorMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(CustomMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(BlogMapper.class)).isTrue();\n      assertThat(config.getMapperRegistry().hasMapper(NestedBlogMapper.class)).isTrue();\n    }\n  }\n","realPath":"src/test/java/org/apache/ibatis/builder/XmlConfigBuilderTest.java","repoName":"mybatis3","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"28b3f89c220417375cb669525dbdad6314f186c9","commitMessage":"@@@Merge pull request #1951 from kazuki43zoo/support-defaultSqlProviderType\n\nSupport global configuration for applying sql provider type when omit on annotation\nFixes gh-1951","date":"2020-06-07 18:38:13","modifiedFileCount":"5","status":"M","submitter":"Kazuki Shimizu"}]
