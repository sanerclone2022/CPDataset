[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertSwapToYamlWithMaxProperties() {\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n        shardingRuleConfig.getTables().add(mock(ShardingTableRuleConfiguration.class));\n        shardingRuleConfig.getBindingTableGroups().add(\"tbl, sub_tbl\");\n        shardingRuleConfig.getBroadcastTables().add(\"dict\");\n        shardingRuleConfig.setDefaultDatabaseShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultTableShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultKeyGenerateStrategy(mock(KeyGenerateStrategyConfiguration.class));\n        YamlShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToYamlConfiguration(shardingRuleConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTables().size(), is(1));\n        assertThat(actual.getBindingTables().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseStrategy());\n        assertNotNull(actual.getDefaultTableStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n    }\n","date":"2021-06-04 22:49:49","endLine":114,"groupId":"8115","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSwapToYamlWithMaxProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7c/3f4804bb8bcb4ea453cb7c2e800a453a16bfca.src","preCode":"    public void assertSwapToYamlWithMaxProperties() {\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n        shardingRuleConfig.getTables().add(mock(ShardingTableRuleConfiguration.class));\n        shardingRuleConfig.getBindingTableGroups().add(\"tbl, sub_tbl\");\n        shardingRuleConfig.getBroadcastTables().add(\"dict\");\n        shardingRuleConfig.setDefaultDatabaseShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultTableShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultKeyGenerateStrategy(mock(KeyGenerateStrategyConfiguration.class));\n        YamlShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToYamlConfiguration(shardingRuleConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTables().size(), is(1));\n        assertThat(actual.getBindingTables().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseStrategy());\n        assertNotNull(actual.getDefaultTableStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/ShardingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertSwapToObjectWithMaxProperties() {\n        YamlShardingRuleConfiguration yamlConfig = new YamlShardingRuleConfiguration();\n        yamlConfig.getTables().put(\"tbl\", mock(YamlTableRuleConfiguration.class));\n        yamlConfig.getBindingTables().add(\"tbl, sub_tbl\");\n        yamlConfig.getBroadcastTables().add(\"dict\");\n        yamlConfig.setDefaultDatabaseStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultTableStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultKeyGenerateStrategy(mock(YamlKeyGenerateStrategyConfiguration.class));\n        ShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToObject(yamlConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTableGroups().size(), is(1));\n        assertThat(actual.getBindingTableGroups().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseShardingStrategy());\n        assertNotNull(actual.getDefaultTableShardingStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n    }\n","date":"2021-06-04 22:49:49","endLine":147,"groupId":"8116","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSwapToObjectWithMaxProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7c/3f4804bb8bcb4ea453cb7c2e800a453a16bfca.src","preCode":"    public void assertSwapToObjectWithMaxProperties() {\n        YamlShardingRuleConfiguration yamlConfig = new YamlShardingRuleConfiguration();\n        yamlConfig.getTables().put(\"tbl\", mock(YamlTableRuleConfiguration.class));\n        yamlConfig.getBindingTables().add(\"tbl, sub_tbl\");\n        yamlConfig.getBroadcastTables().add(\"dict\");\n        yamlConfig.setDefaultDatabaseStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultTableStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultKeyGenerateStrategy(mock(YamlKeyGenerateStrategyConfiguration.class));\n        ShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToObject(yamlConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTableGroups().size(), is(1));\n        assertThat(actual.getBindingTableGroups().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseShardingStrategy());\n        assertNotNull(actual.getDefaultTableShardingStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/ShardingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-05 15:19:47","codes":[{"authorDate":"2021-08-05 15:19:47","commitOrder":2,"curCode":"    public void assertSwapToYamlWithMaxProperties() {\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n        shardingRuleConfig.getTables().add(mock(ShardingTableRuleConfiguration.class));\n        shardingRuleConfig.getBindingTableGroups().add(\"tbl, sub_tbl\");\n        shardingRuleConfig.getBroadcastTables().add(\"dict\");\n        shardingRuleConfig.setDefaultDatabaseShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultTableShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultKeyGenerateStrategy(mock(KeyGenerateStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultShardingColumn(\"user_id\");\n        YamlShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToYamlConfiguration(shardingRuleConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTables().size(), is(1));\n        assertThat(actual.getBindingTables().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseStrategy());\n        assertNotNull(actual.getDefaultTableStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n        assertThat(actual.getDefaultShardingColumn(), is(\"user_id\"));\n    }\n","date":"2021-08-05 15:19:47","endLine":117,"groupId":"10607","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertSwapToYamlWithMaxProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/f4b28bd6de155b5a55fb63654f7180246d1bea.src","preCode":"    public void assertSwapToYamlWithMaxProperties() {\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n        shardingRuleConfig.getTables().add(mock(ShardingTableRuleConfiguration.class));\n        shardingRuleConfig.getBindingTableGroups().add(\"tbl, sub_tbl\");\n        shardingRuleConfig.getBroadcastTables().add(\"dict\");\n        shardingRuleConfig.setDefaultDatabaseShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultTableShardingStrategy(mock(ShardingStrategyConfiguration.class));\n        shardingRuleConfig.setDefaultKeyGenerateStrategy(mock(KeyGenerateStrategyConfiguration.class));\n        YamlShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToYamlConfiguration(shardingRuleConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTables().size(), is(1));\n        assertThat(actual.getBindingTables().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseStrategy());\n        assertNotNull(actual.getDefaultTableStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/ShardingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2021-08-05 15:19:47","commitOrder":2,"curCode":"    public void assertSwapToObjectWithMaxProperties() {\n        YamlShardingRuleConfiguration yamlConfig = new YamlShardingRuleConfiguration();\n        yamlConfig.getTables().put(\"tbl\", mock(YamlTableRuleConfiguration.class));\n        yamlConfig.getBindingTables().add(\"tbl, sub_tbl\");\n        yamlConfig.getBroadcastTables().add(\"dict\");\n        yamlConfig.setDefaultDatabaseStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultTableStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultKeyGenerateStrategy(mock(YamlKeyGenerateStrategyConfiguration.class));\n        yamlConfig.setDefaultShardingColumn(\"user_id\");\n        ShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToObject(yamlConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTableGroups().size(), is(1));\n        assertThat(actual.getBindingTableGroups().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseShardingStrategy());\n        assertNotNull(actual.getDefaultTableShardingStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n        assertThat(actual.getDefaultShardingColumn(), is(\"user_id\"));\n    }\n","date":"2021-08-05 15:19:47","endLine":153,"groupId":"10607","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertSwapToObjectWithMaxProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/f4b28bd6de155b5a55fb63654f7180246d1bea.src","preCode":"    public void assertSwapToObjectWithMaxProperties() {\n        YamlShardingRuleConfiguration yamlConfig = new YamlShardingRuleConfiguration();\n        yamlConfig.getTables().put(\"tbl\", mock(YamlTableRuleConfiguration.class));\n        yamlConfig.getBindingTables().add(\"tbl, sub_tbl\");\n        yamlConfig.getBroadcastTables().add(\"dict\");\n        yamlConfig.setDefaultDatabaseStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultTableStrategy(mock(YamlShardingStrategyConfiguration.class));\n        yamlConfig.setDefaultKeyGenerateStrategy(mock(YamlKeyGenerateStrategyConfiguration.class));\n        ShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToObject(yamlConfig);\n        assertThat(actual.getTables().size(), is(1));\n        assertThat(actual.getBindingTableGroups().size(), is(1));\n        assertThat(actual.getBindingTableGroups().iterator().next(), is(\"tbl, sub_tbl\"));\n        assertThat(actual.getBroadcastTables().size(), is(1));\n        assertThat(actual.getBroadcastTables().iterator().next(), is(\"dict\"));\n        assertNotNull(actual.getDefaultDatabaseShardingStrategy());\n        assertNotNull(actual.getDefaultTableShardingStrategy());\n        assertNotNull(actual.getDefaultKeyGenerateStrategy());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/ShardingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"fbe641d782b56b72eb130e37daf2d1552b4aac68","commitMessage":"@@@add default sharding column (#11601)\n\n* add defaultShardingColumn\n\n* union mysql route one data node support\n\n* add default sharding column test case\n\n* revert integration test\n\n* add default sharding column modify format","date":"2021-08-05 15:19:47","modifiedFileCount":"14","status":"M","submitter":"tuichenchuxin"}]
