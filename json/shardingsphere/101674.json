[{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-10-22 16:47:44","commitOrder":1,"curCode":"    public ASTNode visitAlterDefinitionClause(final AlterDefinitionClauseContext ctx) {\n        CollectionValue<AlterDefinitionSegment> result = new CollectionValue<>();\n        if (null != ctx.alterTableActions()) {\n            for (AlterTableActionContext each : ctx.alterTableActions().alterTableAction()) {\n                AddColumnSpecificationContext addColumnSpecification = each.addColumnSpecification();\n                if (null != addColumnSpecification) {\n                    result.getValue().addAll(((CollectionValue<AddColumnDefinitionSegment>) visit(addColumnSpecification)).getValue());\n                }\n                if (null != each.addConstraintSpecification() && null != each.addConstraintSpecification().tableConstraint()) {\n                    result.getValue().add((ConstraintDefinitionSegment) visit(each.addConstraintSpecification().tableConstraint()));\n                }\n                if (null != each.modifyColumnSpecification()) {\n                    result.getValue().add((ModifyColumnDefinitionSegment) visit(each.modifyColumnSpecification()));\n                }\n                if (null != each.dropColumnSpecification()) {\n                    result.getValue().add((DropColumnDefinitionSegment) visit(each.dropColumnSpecification()));\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":174,"groupId":"10375","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitAlterDefinitionClause","params":"(finalAlterDefinitionClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fd/54293d12a8d03552cd285a0c05745abb148348.src","preCode":"    public ASTNode visitAlterDefinitionClause(final AlterDefinitionClauseContext ctx) {\n        CollectionValue<AlterDefinitionSegment> result = new CollectionValue<>();\n        if (null != ctx.alterTableActions()) {\n            for (AlterTableActionContext each : ctx.alterTableActions().alterTableAction()) {\n                AddColumnSpecificationContext addColumnSpecification = each.addColumnSpecification();\n                if (null != addColumnSpecification) {\n                    result.getValue().addAll(((CollectionValue<AddColumnDefinitionSegment>) visit(addColumnSpecification)).getValue());\n                }\n                if (null != each.addConstraintSpecification() && null != each.addConstraintSpecification().tableConstraint()) {\n                    result.getValue().add((ConstraintDefinitionSegment) visit(each.addConstraintSpecification().tableConstraint()));\n                }\n                if (null != each.modifyColumnSpecification()) {\n                    result.getValue().add((ModifyColumnDefinitionSegment) visit(each.modifyColumnSpecification()));\n                }\n                if (null != each.dropColumnSpecification()) {\n                    result.getValue().add((DropColumnDefinitionSegment) visit(each.dropColumnSpecification()));\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2020-10-22 16:47:44","commitOrder":1,"curCode":"    public ASTNode visitCreateDefinitionClause(final CreateDefinitionClauseContext ctx) {\n        CollectionValue<CreateDefinitionSegment> result = new CollectionValue<>();\n        for (CreateDefinitionContext each : ctx.createDefinition()) {\n            if (null != each.columnDefinition()) {\n                result.getValue().add((ColumnDefinitionSegment) visit(each.columnDefinition()));\n            }\n            if (null != each.constraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.constraintDefinition()));\n            }\n            if (null != each.checkConstraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.checkConstraintDefinition()));\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":91,"groupId":"10375","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitCreateDefinitionClause","params":"(finalCreateDefinitionClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/c194ae78bfc1366f7e8af008b3f74d41fbcba1.src","preCode":"    public ASTNode visitCreateDefinitionClause(final CreateDefinitionClauseContext ctx) {\n        CollectionValue<CreateDefinitionSegment> result = new CollectionValue<>();\n        for (CreateDefinitionContext each : ctx.createDefinition()) {\n            if (null != each.columnDefinition()) {\n                result.getValue().add((ColumnDefinitionSegment) visit(each.columnDefinition()));\n            }\n            if (null != each.constraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.constraintDefinition()));\n            }\n            if (null != each.checkConstraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.checkConstraintDefinition()));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"dca1684798205a6efd0d94b91aa1d3f86c8baefb","commitMessage":"@@@Add Statement SQL SQLVisitor (#7885)\n\n","date":"2020-10-22 16:47:44","modifiedFileCount":"7","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2021-05-26 17:06:00","commitOrder":2,"curCode":"    public ASTNode visitAlterDefinitionClause(final AlterDefinitionClauseContext ctx) {\n        CollectionValue<AlterDefinitionSegment> result = new CollectionValue<>();\n        if (null != ctx.alterTableActions()) {\n            for (AlterTableActionContext each : ctx.alterTableActions().alterTableAction()) {\n                AddColumnSpecificationContext addColumnSpecification = each.addColumnSpecification();\n                if (null != addColumnSpecification) {\n                    result.getValue().addAll(((CollectionValue<AddColumnDefinitionSegment>) visit(addColumnSpecification)).getValue());\n                }\n                if (null != each.addConstraintSpecification() && null != each.addConstraintSpecification().tableConstraint()) {\n                    result.getValue().add((ConstraintDefinitionSegment) visit(each.addConstraintSpecification().tableConstraint()));\n                }\n                if (null != each.modifyColumnSpecification()) {\n                    result.getValue().add((ModifyColumnDefinitionSegment) visit(each.modifyColumnSpecification()));\n                }\n                if (null != each.dropColumnSpecification()) {\n                    result.getValue().add((DropColumnDefinitionSegment) visit(each.dropColumnSpecification()));\n                }\n            }\n        }\n        if (null != ctx.renameTableSpecification()) {\n            result.getValue().add((RenameTableDefinitionSegment) visit(ctx.renameTableSpecification()));\n        }\n        return result;\n    }\n","date":"2021-05-26 17:06:00","endLine":202,"groupId":"10375","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitAlterDefinitionClause","params":"(finalAlterDefinitionClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/711335563f4ad9bf3c4fb9b35e8e33740ba9bc.src","preCode":"    public ASTNode visitAlterDefinitionClause(final AlterDefinitionClauseContext ctx) {\n        CollectionValue<AlterDefinitionSegment> result = new CollectionValue<>();\n        if (null != ctx.alterTableActions()) {\n            for (AlterTableActionContext each : ctx.alterTableActions().alterTableAction()) {\n                AddColumnSpecificationContext addColumnSpecification = each.addColumnSpecification();\n                if (null != addColumnSpecification) {\n                    result.getValue().addAll(((CollectionValue<AddColumnDefinitionSegment>) visit(addColumnSpecification)).getValue());\n                }\n                if (null != each.addConstraintSpecification() && null != each.addConstraintSpecification().tableConstraint()) {\n                    result.getValue().add((ConstraintDefinitionSegment) visit(each.addConstraintSpecification().tableConstraint()));\n                }\n                if (null != each.modifyColumnSpecification()) {\n                    result.getValue().add((ModifyColumnDefinitionSegment) visit(each.modifyColumnSpecification()));\n                }\n                if (null != each.dropColumnSpecification()) {\n                    result.getValue().add((DropColumnDefinitionSegment) visit(each.dropColumnSpecification()));\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":2,"curCode":"    public ASTNode visitCreateDefinitionClause(final CreateDefinitionClauseContext ctx) {\n        CollectionValue<CreateDefinitionSegment> result = new CollectionValue<>();\n        for (CreateDefinitionContext each : ctx.createDefinition()) {\n            if (null != each.columnDefinition()) {\n                result.getValue().add((ColumnDefinitionSegment) visit(each.columnDefinition()));\n            }\n            if (null != each.constraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.constraintDefinition()));\n            }\n            if (null != each.checkConstraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.checkConstraintDefinition()));\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":91,"groupId":"10375","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitCreateDefinitionClause","params":"(finalCreateDefinitionClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/c194ae78bfc1366f7e8af008b3f74d41fbcba1.src","preCode":"    public ASTNode visitCreateDefinitionClause(final CreateDefinitionClauseContext ctx) {\n        CollectionValue<CreateDefinitionSegment> result = new CollectionValue<>();\n        for (CreateDefinitionContext each : ctx.createDefinition()) {\n            if (null != each.columnDefinition()) {\n                result.getValue().add((ColumnDefinitionSegment) visit(each.columnDefinition()));\n            }\n            if (null != each.constraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.constraintDefinition()));\n            }\n            if (null != each.checkConstraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.checkConstraintDefinition()));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"77debda907c71834b632c7d0ce08b397235bf581","commitMessage":"@@@support mysql alter rename statement (#10487)\n\n* create RenameTableDefinitionSegment to support mysql alter table rename\n\n* add parse test case\n\n* fix test case error","date":"2021-05-26 17:06:00","modifiedFileCount":"4","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2021-06-01 22:50:29","commitOrder":3,"curCode":"    public ASTNode visitAlterDefinitionClause(final AlterDefinitionClauseContext ctx) {\n        CollectionValue<AlterDefinitionSegment> result = new CollectionValue<>();\n        if (null != ctx.alterTableActions()) {\n            for (AlterTableActionContext each : ctx.alterTableActions().alterTableAction()) {\n                AddColumnSpecificationContext addColumnSpecification = each.addColumnSpecification();\n                if (null != addColumnSpecification) {\n                    result.getValue().addAll(((CollectionValue<AddColumnDefinitionSegment>) visit(addColumnSpecification)).getValue());\n                }\n                if (null != each.addConstraintSpecification() && null != each.addConstraintSpecification().tableConstraint()) {\n                    result.getValue().add((AddConstraintDefinitionSegment) visit(each.addConstraintSpecification()));\n                }\n                if (null != each.validateConstraintSpecification()) {\n                    result.getValue().add((ValidateConstraintDefinitionSegment) visit(each.validateConstraintSpecification()));\n                }\n                if (null != each.modifyColumnSpecification()) {\n                    result.getValue().add((ModifyColumnDefinitionSegment) visit(each.modifyColumnSpecification()));\n                }\n                if (null != each.modifyConstraintSpecification()) {\n                    result.getValue().add((ModifyConstraintDefinitionSegment) visit(each.modifyConstraintSpecification()));\n                }\n                if (null != each.dropColumnSpecification()) {\n                    result.getValue().add((DropColumnDefinitionSegment) visit(each.dropColumnSpecification()));\n                }\n                if (null != each.dropConstraintSpecification()) {\n                    result.getValue().add((DropConstraintDefinitionSegment) visit(each.dropConstraintSpecification()));\n                }\n            }\n        }\n        if (null != ctx.renameTableSpecification()) {\n            result.getValue().add((RenameTableDefinitionSegment) visit(ctx.renameTableSpecification()));\n        }\n        return result;\n    }\n","date":"2021-06-01 22:50:29","endLine":233,"groupId":"101674","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitAlterDefinitionClause","params":"(finalAlterDefinitionClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/81/c10b491eefd5b663b9266843a1d9fdf76ef1ab.src","preCode":"    public ASTNode visitAlterDefinitionClause(final AlterDefinitionClauseContext ctx) {\n        CollectionValue<AlterDefinitionSegment> result = new CollectionValue<>();\n        if (null != ctx.alterTableActions()) {\n            for (AlterTableActionContext each : ctx.alterTableActions().alterTableAction()) {\n                AddColumnSpecificationContext addColumnSpecification = each.addColumnSpecification();\n                if (null != addColumnSpecification) {\n                    result.getValue().addAll(((CollectionValue<AddColumnDefinitionSegment>) visit(addColumnSpecification)).getValue());\n                }\n                if (null != each.addConstraintSpecification() && null != each.addConstraintSpecification().tableConstraint()) {\n                    result.getValue().add((ConstraintDefinitionSegment) visit(each.addConstraintSpecification().tableConstraint()));\n                }\n                if (null != each.modifyColumnSpecification()) {\n                    result.getValue().add((ModifyColumnDefinitionSegment) visit(each.modifyColumnSpecification()));\n                }\n                if (null != each.dropColumnSpecification()) {\n                    result.getValue().add((DropColumnDefinitionSegment) visit(each.dropColumnSpecification()));\n                }\n            }\n        }\n        if (null != ctx.renameTableSpecification()) {\n            result.getValue().add((RenameTableDefinitionSegment) visit(ctx.renameTableSpecification()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":3,"curCode":"    public ASTNode visitCreateDefinitionClause(final CreateDefinitionClauseContext ctx) {\n        CollectionValue<CreateDefinitionSegment> result = new CollectionValue<>();\n        for (CreateDefinitionContext each : ctx.createDefinition()) {\n            if (null != each.columnDefinition()) {\n                result.getValue().add((ColumnDefinitionSegment) visit(each.columnDefinition()));\n            }\n            if (null != each.constraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.constraintDefinition()));\n            }\n            if (null != each.checkConstraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.checkConstraintDefinition()));\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":91,"groupId":"101674","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitCreateDefinitionClause","params":"(finalCreateDefinitionClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/c194ae78bfc1366f7e8af008b3f74d41fbcba1.src","preCode":"    public ASTNode visitCreateDefinitionClause(final CreateDefinitionClauseContext ctx) {\n        CollectionValue<CreateDefinitionSegment> result = new CollectionValue<>();\n        for (CreateDefinitionContext each : ctx.createDefinition()) {\n            if (null != each.columnDefinition()) {\n                result.getValue().add((ColumnDefinitionSegment) visit(each.columnDefinition()));\n            }\n            if (null != each.constraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.constraintDefinition()));\n            }\n            if (null != each.checkConstraintDefinition()) {\n                result.getValue().add((ConstraintDefinitionSegment) visit(each.checkConstraintDefinition()));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"916f1210727781ecea299ea506a03ab8e86c8959","commitMessage":"@@@Rewrite constraints' name in logic SQL (#10606)\n\n* Rewrite constraint name in alter table\n\n* Fix MySQL parser testcases\n\n* Fix MySQL SQL parser\n\n* Fix MySQL add constraint SQL parser\n\n* Fix rewrite testcases\n\n* Remove unused import\n\n* Fix SQLServer parse constraint name\n\n* Fix Oracle SQL parser\n\n* Avoid unnamed constraint cause NPE","date":"2021-06-01 22:50:29","modifiedFileCount":"18","status":"M","submitter":"???"}]
