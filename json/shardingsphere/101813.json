[{"authorTime":"2020-11-10 16:05:48","codes":[{"authorDate":"2020-11-10 16:05:48","commitOrder":1,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2020-11-10 16:05:48","endLine":90,"groupId":"13786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/d1b197a53ab81c27d69455135cacce9ef86426.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2020-11-10 16:05:48","commitOrder":1,"curCode":"    private void refresh(final DropTableStatement dropTableStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher();\n        dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropTableStatement, tableName -> Optional.empty());\n        assertFalse(schema.containsTable(\"t_order\"));\n    }\n","date":"2020-11-10 16:05:48","endLine":72,"groupId":"5832","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"refresh","params":"(finalDropTableStatementdropTableStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f2/3ed4ff3a45046bba5cf57387af344358ccec62.src","preCode":"    private void refresh(final DropTableStatement dropTableStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher();\n        dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropTableStatement, tableName -> Optional.empty());\n        assertFalse(schema.containsTable(\"t_order\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropTableStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"a8b0bd56b28c95b0ded4e56ef2b291919170c789","commitMessage":"@@@Refactor schema.refersher package (#8114)\n\n* Rename refresher package\n\n* Rename SchemaRefreshStrategy\n\n* Rename SchemaRefresher\n\n* Refactor test cases\n\n* Rename SchemaRefresherFactory\n\n* Rename refresher.type package\n\n* Remove useless parameter from SchemaRefresher\n\n* Rename schemaRefresher","date":"2020-11-10 16:05:48","modifiedFileCount":"3","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-11-10 18:10:20","codes":[{"authorDate":"2020-11-10 18:10:20","commitOrder":2,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2020-11-10 18:10:20","endLine":91,"groupId":"13786","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/13e060a5cacbded077c20950238aa796223a8b.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-11-10 18:10:20","commitOrder":2,"curCode":"    private void refresh(final DropTableStatement dropTableStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher();\n        dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropTableStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.containsTable(\"t_order\"));\n    }\n","date":"2020-11-10 18:10:20","endLine":73,"groupId":"5832","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"refresh","params":"(finalDropTableStatementdropTableStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/28/f60ff17baedac73ba330c57bbd4cbfed78b610.src","preCode":"    private void refresh(final DropTableStatement dropTableStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher();\n        dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropTableStatement, tableName -> Optional.empty());\n        assertFalse(schema.containsTable(\"t_order\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropTableStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"8c151b27e25c051dd4e6384200f1ac977743dcb3","commitMessage":"@@@Add SchemaBuilderMaterials to simplify refresher (#8117)\n\n* Add SchemaBuilderMaterials\n\n* Use SchemaBuilderMaterials to refactor SchemaRefresher\n\n* Remove TableMetaDataLoaderCallback","date":"2020-11-10 18:10:20","modifiedFileCount":"23","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-04 18:58:22","codes":[{"authorDate":"2021-09-04 18:58:22","commitOrder":3,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\", mock(ShardingSphereResource.class), mock(ShardingSphereRuleMetaData.class), schema);\n        schemaRefresher.refresh(metaData, Collections.emptyList(), dropIndexStatement, new ConfigurationProperties(new Properties()));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2021-09-04 18:58:22","endLine":97,"groupId":"101813","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b6/53845af1de57f31f80b70c6cf27782d30084f9.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-09-04 18:58:22","commitOrder":3,"curCode":"    private void refresh(final DropTableStatement dropTableStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher();\n        dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\", mock(ShardingSphereResource.class), mock(ShardingSphereRuleMetaData.class), schema);\n        schemaRefresher.refresh(metaData, Collections.emptyList(), dropTableStatement, new ConfigurationProperties(new Properties()));\n        assertFalse(schema.containsTable(\"t_order\"));\n    }\n","date":"2021-09-04 18:58:22","endLine":78,"groupId":"101813","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"refresh","params":"(finalDropTableStatementdropTableStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/8ea779b83349768f3e651f792f274e5a2989c2.src","preCode":"    private void refresh(final DropTableStatement dropTableStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher();\n        dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropTableStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.containsTable(\"t_order\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropTableStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"a8c655eaf51f230c724274dc0c1d6ba775c73d40","commitMessage":"@@@Add shardingsphere-single-table into kernel module (#12210)\n\n* Rename SchemaRulesBuilderMaterials\n\n* Add shardingsphere-single-table\n\n* Add shardingsphere-single-table\n\n* Revise javadoc\n\n* Move MetadataRefresher.findShardingSphereRulesByClass to ShardingSphereSchema\n\n* Add MutableDataNodeRule\n\n* Add SingleTableSchemaBuilderTest\n\n* Move single table rule\n\n* Move single table configuration\n\n* Revise java doc","date":"2021-09-04 18:58:22","modifiedFileCount":"54","status":"M","submitter":"Liang Zhang"}]
