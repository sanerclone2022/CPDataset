[{"authorTime":"2020-05-17 16:36:04","codes":[{"authorDate":"2020-05-17 16:36:04","commitOrder":1,"curCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<String> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (String value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(Long.valueOf(value) % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-05-17 16:36:04","endLine":40,"groupId":"8648","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doSharding","params":"(finalCollection<String>availableTargetNames@finalHintShardingValue<String>shardingValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2f/c62e553ea6966c8637824aaaf152f136bf5545.src","preCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<String> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (String value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(Long.valueOf(value) % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"examples/shardingsphere-proxy-example/shardingsphere-proxy-hint-example/src/main/java/org/apache/shardingsphere/example/proxy/hint/ModuloHintShardingAlgorithm.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"},{"authorDate":"2020-05-17 16:36:04","commitOrder":1,"curCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<Long> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (Long value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(value % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-05-17 16:36:04","endLine":40,"groupId":"3941","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doSharding","params":"(finalCollection<String>availableTargetNames@finalHintShardingValue<Long>shardingValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/35/62d3da7cf2eb764f1f0df3e9b18ed027e0257a.src","preCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<Long> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (Long value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(value % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"examples/shardingsphere-jdbc-example/other-feature-example/hint-example/hint-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/hint/raw/jdbc/ModuloHintShardingAlgorithm.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"}],"commitId":"cf5ac7e245ec30c8da4be46dca6a65795758a99c","commitMessage":"@@@Revise exapmles (#5656)\n\n* fix example pom\n\n* rename sharding-jdbc-example to shardingsphere-jdbc-example\n\n* rename sharding-proxy-example to shardingsphere-proxy-example\n\n* for code style\n\n* fix log\n\n* revise code with sharding-proxy","date":"2020-05-17 16:36:04","modifiedFileCount":"7","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-05-17 16:36:04","codes":[{"authorDate":"2020-07-23 08:02:58","commitOrder":2,"curCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<String> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (String value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(Long.parseLong(value) % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-07-23 08:02:58","endLine":46,"groupId":"13068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doSharding","params":"(finalCollection<String>availableTargetNames@finalHintShardingValue<String>shardingValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b2/43a967012f10ccc18290b032005121487d4d9c.src","preCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<String> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (String value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(Long.valueOf(value) % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"examples/shardingsphere-proxy-example/shardingsphere-proxy-hint-example/src/main/java/org/apache/shardingsphere/example/proxy/hint/ModuloHintShardingAlgorithm.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2020-05-17 16:36:04","commitOrder":2,"curCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<Long> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (Long value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(value % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-05-17 16:36:04","endLine":40,"groupId":"3941","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doSharding","params":"(finalCollection<String>availableTargetNames@finalHintShardingValue<Long>shardingValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/35/62d3da7cf2eb764f1f0df3e9b18ed027e0257a.src","preCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<Long> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (Long value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(value % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"examples/shardingsphere-jdbc-example/other-feature-example/hint-example/hint-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/hint/raw/jdbc/ModuloHintShardingAlgorithm.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"N"}],"commitId":"6b69fa1b79e36135634e9728a8a342401d14c1cc","commitMessage":"@@@Merge pull request #6407 from terrymanu/dev\n\nClean up codes","date":"2020-07-23 08:02:58","modifiedFileCount":"75","status":"M","submitter":"Haoran Meng"},{"authorTime":"2020-08-07 18:55:05","codes":[{"authorDate":"2020-08-07 18:55:05","commitOrder":3,"curCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<String> shardingValue) {\n        Collection<String> result = new LinkedList<>();\n        for (String each : availableTargetNames) {\n            for (String value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(Long.parseLong(value) % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-08-07 18:55:05","endLine":46,"groupId":"1099","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doSharding","params":"(finalCollection<String>availableTargetNames@finalHintShardingValue<String>shardingValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/18/4784ae42f1e2cf4ce11701b251293930598cb4.src","preCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<String> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (String value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(Long.parseLong(value) % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"examples/shardingsphere-proxy-example/shardingsphere-proxy-hint-example/src/main/java/org/apache/shardingsphere/example/proxy/hint/ModuloHintShardingAlgorithm.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2020-08-07 18:55:05","commitOrder":3,"curCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<Long> shardingValue) {\n        Collection<String> result = new LinkedList<>();\n        for (String each : availableTargetNames) {\n            for (Long value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(value % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-08-07 18:55:05","endLine":46,"groupId":"1099","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doSharding","params":"(finalCollection<String>availableTargetNames@finalHintShardingValue<Long>shardingValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ce/5ffc651ac8032f617ac3469501fd5845bb2aaa.src","preCode":"    public Collection<String> doSharding(final Collection<String> availableTargetNames, final HintShardingValue<Long> shardingValue) {\n        Collection<String> result = new ArrayList<>();\n        for (String each : availableTargetNames) {\n            for (Long value : shardingValue.getValues()) {\n                if (each.endsWith(String.valueOf(value % 2))) {\n                    result.add(each);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"examples/shardingsphere-jdbc-example/other-feature-example/hint-example/hint-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/hint/raw/jdbc/ModuloHintShardingAlgorithm.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"b5e4738cb80fcedc9e4dbf29592bcdfb996ab744","commitMessage":"@@@For code inspection (#6694)\n\n","date":"2020-08-07 18:55:05","modifiedFileCount":"70","status":"M","submitter":"Liang Zhang"}]
