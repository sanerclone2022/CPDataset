[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<AssignmentSegment> assignments = Lists.newArrayList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(onDuplicateUpdateContext, new Object[]{parameters, parametersOffset});\n        assertThat(onDuplicateUpdateContext.getParameters(), is(getParametersResult));\n    }\n","date":"2020-10-11 18:46:54","endLine":61,"groupId":"11780","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertInstanceConstructedOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6f/c6a0362f608781741e47696d28fd7de30ae388.src","preCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<AssignmentSegment> assignments = Lists.newArrayList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(onDuplicateUpdateContext, new Object[]{parameters, parametersOffset});\n        assertThat(onDuplicateUpdateContext.getParameters(), is(getParametersResult));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/OnDuplicateUpdateContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<ExpressionSegment> assignments = Lists.newArrayList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = InsertValueContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = InsertValueContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = InsertValueContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(insertValueContext, new Object[] {parameters, parametersOffset});\n        assertThat(insertValueContext.getParameters(), is(getParametersResult));\n    }\n","date":"2020-10-11 18:46:54","endLine":56,"groupId":"11780","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInstanceConstructedOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6b/8633bf02491bce5b9b3df5de84d94e26cdf7d3.src","preCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<ExpressionSegment> assignments = Lists.newArrayList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = InsertValueContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = InsertValueContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = InsertValueContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(insertValueContext, new Object[] {parameters, parametersOffset});\n        assertThat(insertValueContext.getParameters(), is(getParametersResult));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/InsertValueContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-29 01:03:53","codes":[{"authorDate":"2021-07-29 01:03:53","commitOrder":2,"curCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<AssignmentSegment> assignments = Collections.emptyList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(onDuplicateUpdateContext, new Object[]{parameters, parametersOffset});\n        assertThat(onDuplicateUpdateContext.getParameters(), is(getParametersResult));\n    }\n","date":"2021-07-29 01:03:53","endLine":61,"groupId":"11780","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertInstanceConstructedOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/00/6eb8d1e92c0f700d11e2f9959e839a9c1768a1.src","preCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<AssignmentSegment> assignments = Lists.newArrayList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(onDuplicateUpdateContext, new Object[]{parameters, parametersOffset});\n        assertThat(onDuplicateUpdateContext.getParameters(), is(getParametersResult));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/OnDuplicateUpdateContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2021-07-29 01:03:53","commitOrder":2,"curCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<ExpressionSegment> assignments = Collections.emptyList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = InsertValueContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = InsertValueContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = InsertValueContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(insertValueContext, new Object[] {parameters, parametersOffset});\n        assertThat(insertValueContext.getParameters(), is(getParametersResult));\n    }\n","date":"2021-07-29 01:03:53","endLine":55,"groupId":"11780","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInstanceConstructedOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/28/d05b2232de5318c3f5c539c1c73ae4922e6f71.src","preCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<ExpressionSegment> assignments = Lists.newArrayList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = InsertValueContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = InsertValueContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = InsertValueContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(insertValueContext, new Object[] {parameters, parametersOffset});\n        assertThat(insertValueContext.getParameters(), is(getParametersResult));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/InsertValueContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"6d2d2ba7b05c29bce74525f0437e04b22a556f66","commitMessage":"@@@Use java raw new List/Set/Map to instead of guava (#11561)\n\n* Use java raw new Map to instead of guava\n\n* Use java raw new List to instead of guava\n\n* Use java raw new Set to instead of guava","date":"2021-07-29 01:03:53","modifiedFileCount":"78","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-17 07:46:37","codes":[{"authorDate":"2021-09-17 07:46:37","commitOrder":3,"curCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<AssignmentSegment> assignments = Collections.emptyList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, parametersOffset);\n        Method getValueExpressionsMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(onDuplicateUpdateContext, new Object[]{parameters, parametersOffset});\n        assertThat(onDuplicateUpdateContext.getParameters(), is(getParametersResult));\n    }\n","date":"2021-09-17 07:46:37","endLine":59,"groupId":"101734","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertInstanceConstructedOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8b/c72dc2b55c2d54bf9b97a7178778df84364e27.src","preCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<AssignmentSegment> assignments = Collections.emptyList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(onDuplicateUpdateContext, new Object[]{assignments});\n        assertThat(onDuplicateUpdateContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = OnDuplicateUpdateContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(onDuplicateUpdateContext, new Object[]{parameters, parametersOffset});\n        assertThat(onDuplicateUpdateContext.getParameters(), is(getParametersResult));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/OnDuplicateUpdateContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-09-17 07:46:37","commitOrder":3,"curCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<ExpressionSegment> assignments = Collections.emptyList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, parametersOffset);\n        Method getValueExpressionsMethod = InsertValueContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = InsertValueContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(insertValueContext, new Object[] {parameters, parametersOffset});\n        assertThat(insertValueContext.getParameters(), is(getParametersResult));\n    }\n","date":"2021-09-17 07:46:37","endLine":56,"groupId":"101734","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInstanceConstructedOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cc/824c89223560c368e2e00fa134326d74149d8d.src","preCode":"    public void assertInstanceConstructedOk() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        Collection<ExpressionSegment> assignments = Collections.emptyList();\n        List<Object> parameters = Collections.emptyList();\n        int parametersOffset = 0;\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, parametersOffset);\n        Method calculateParameterCountMethod = InsertValueContext.class.getDeclaredMethod(\"calculateParameterCount\", Collection.class);\n        calculateParameterCountMethod.setAccessible(true);\n        int calculateParameterCountResult = (int) calculateParameterCountMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getParameterCount(), is(calculateParameterCountResult));\n        Method getValueExpressionsMethod = InsertValueContext.class.getDeclaredMethod(\"getValueExpressions\", Collection.class);\n        getValueExpressionsMethod.setAccessible(true);\n        List<ExpressionSegment> getValueExpressionsResult = (List<ExpressionSegment>) getValueExpressionsMethod.invoke(insertValueContext, new Object[] {assignments});\n        assertThat(insertValueContext.getValueExpressions(), is(getValueExpressionsResult));\n        Method getParametersMethod = InsertValueContext.class.getDeclaredMethod(\"getParameters\", List.class, int.class);\n        getParametersMethod.setAccessible(true);\n        List<Object> getParametersResult = (List<Object>) getParametersMethod.invoke(insertValueContext, new Object[] {parameters, parametersOffset});\n        assertThat(insertValueContext.getParameters(), is(getParametersResult));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/InsertValueContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"a5b7aff8702777e1ccfc97c66ebc7588cbf5b51c","commitMessage":"@@@fix mysql insert sql bug; sql convert to a tree.  if assignment is ins? (#12295)\n\n* fix mysql insert sql bug; sql convert to a tree.  if assignment is instanceof BinaryOperationExpression.  parameter count should be  added.\nfor more detail: https://github.com/apache/shardingsphere/issues/12272\n\n* ???checkStyke\n\n* add unit test code to keep this logic right.\n\n* 1?replace assertsEquals with assertsThat\n2?extra common method in InsertValueContext and OnDuplicateUpdateContext\n\n* add header licence\n\n* move ExpressionSegmentUtil logic to ExpressionExtraUtil\n\n* remove import\n\n* move logic to special class\n\n* add java doc.  and delete blank line.","date":"2021-09-17 07:46:37","modifiedFileCount":"5","status":"M","submitter":"CodingBingo"}]
