[{"authorTime":"2021-01-12 10:35:24","codes":[{"authorDate":"2021-01-12 10:35:24","commitOrder":1,"curCode":"    public void assertInterceptedMethod() {\n        InstanceMaterial material = new ByteBuddy()\n                .subclass(InstanceMaterial.class)\n                .method(ElementMatchers.named(methodName))\n                .intercept(MethodDelegation.withDefaultConfiguration().to(new InstanceMethodAroundInterceptor(new MockInstanceMethodAroundAdvice(rebase))))\n                .make()\n                .load(new MockClassLoader())\n                .getLoaded()\n                .newInstance();\n        List<String> queues = new LinkedList<>();\n        if (\"mockWithException\".equals(methodName)) {\n            try {\n                material.mockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(material.mock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","date":"2021-01-12 10:35:24","endLine":115,"groupId":"8732","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertInterceptedMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7f/d9854bd08407820b74512095fb86661a898dec.src","preCode":"    public void assertInterceptedMethod() {\n        InstanceMaterial material = new ByteBuddy()\n                .subclass(InstanceMaterial.class)\n                .method(ElementMatchers.named(methodName))\n                .intercept(MethodDelegation.withDefaultConfiguration().to(new InstanceMethodAroundInterceptor(new MockInstanceMethodAroundAdvice(rebase))))\n                .make()\n                .load(new MockClassLoader())\n                .getLoaded()\n                .newInstance();\n        List<String> queues = new LinkedList<>();\n        if (\"mockWithException\".equals(methodName)) {\n            try {\n                material.mockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(material.mock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/test/java/org/apache/shardingsphere/agent/core/plugin/interceptor/InstanceMethodAroundInterceptorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2021-01-12 10:35:24","commitOrder":1,"curCode":"    public void assertInterceptedMethod() {\n        List<String> queues = new LinkedList<>();\n        if (\"staticMockWithException\".equals(methodName)) {\n            try {\n                StaticMaterial.staticMockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(StaticMaterial.staticMock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","date":"2021-01-12 10:35:24","endLine":107,"groupId":"8732","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInterceptedMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a3/6af0fb555f73bd8de65e530d6fd615a67efc19.src","preCode":"    public void assertInterceptedMethod() {\n        List<String> queues = new LinkedList<>();\n        if (\"staticMockWithException\".equals(methodName)) {\n            try {\n                StaticMaterial.staticMockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(StaticMaterial.staticMock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/test/java/org/apache/shardingsphere/agent/core/plugin/interceptor/ClassStaticMethodAroundInterceptorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"}],"commitId":"c75652dbf13f60b4572abc2f7a68c24bb84e6bd4","commitMessage":"@@@support to instrument the same method repeatedly (#8986)\n\n* support to instrument the same method repeatedly\n\n* fix wrong hand","date":"2021-01-12 10:35:24","modifiedFileCount":"32","status":"B","submitter":"Daming"},{"authorTime":"2021-01-14 23:42:28","codes":[{"authorDate":"2021-01-12 10:35:24","commitOrder":2,"curCode":"    public void assertInterceptedMethod() {\n        InstanceMaterial material = new ByteBuddy()\n                .subclass(InstanceMaterial.class)\n                .method(ElementMatchers.named(methodName))\n                .intercept(MethodDelegation.withDefaultConfiguration().to(new InstanceMethodAroundInterceptor(new MockInstanceMethodAroundAdvice(rebase))))\n                .make()\n                .load(new MockClassLoader())\n                .getLoaded()\n                .newInstance();\n        List<String> queues = new LinkedList<>();\n        if (\"mockWithException\".equals(methodName)) {\n            try {\n                material.mockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(material.mock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","date":"2021-01-12 10:35:24","endLine":115,"groupId":"102205","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertInterceptedMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7f/d9854bd08407820b74512095fb86661a898dec.src","preCode":"    public void assertInterceptedMethod() {\n        InstanceMaterial material = new ByteBuddy()\n                .subclass(InstanceMaterial.class)\n                .method(ElementMatchers.named(methodName))\n                .intercept(MethodDelegation.withDefaultConfiguration().to(new InstanceMethodAroundInterceptor(new MockInstanceMethodAroundAdvice(rebase))))\n                .make()\n                .load(new MockClassLoader())\n                .getLoaded()\n                .newInstance();\n        List<String> queues = new LinkedList<>();\n        if (\"mockWithException\".equals(methodName)) {\n            try {\n                material.mockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(material.mock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/test/java/org/apache/shardingsphere/agent/core/plugin/interceptor/InstanceMethodAroundInterceptorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"N"},{"authorDate":"2021-01-14 23:42:28","commitOrder":2,"curCode":"    public void assertInterceptedMethod() {\n        List<String> queues = new LinkedList<>();\n        if (\"staticMockWithException\".equals(methodName)) {\n            try {\n                StaticMaterial.staticMockWithException(queues);\n            } catch (final IOException ignored) {\n            }\n        } else {\n            assertThat(StaticMaterial.staticMock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","date":"2021-01-14 23:42:28","endLine":107,"groupId":"102205","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInterceptedMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/65/e26bd559426902edd3f861e09bbd094c2ea71d.src","preCode":"    public void assertInterceptedMethod() {\n        List<String> queues = new LinkedList<>();\n        if (\"staticMockWithException\".equals(methodName)) {\n            try {\n                StaticMaterial.staticMockWithException(queues);\n            } catch (IOException ignored) {\n            }\n        } else {\n            assertThat(StaticMaterial.staticMock(queues), is(result));\n        }\n        assertArrayEquals(expected, queues.toArray());\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/test/java/org/apache/shardingsphere/agent/core/plugin/interceptor/ClassStaticMethodAroundInterceptorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"2e6c1ff962e05376950fc22cc516f7f3e23457e1","commitMessage":"@@@Refactor for code format (#9037)\n\n* Update code-conduct\n\n* For code format","date":"2021-01-14 23:42:28","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"}]
