[{"authorTime":"2021-01-04 16:07:58","codes":[{"authorDate":"2021-01-04 16:07:58","commitOrder":1,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionManager(), equalTo(PostgreSQLPositionManager.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","date":"2021-01-04 16:07:58","endLine":46,"groupId":"3811","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f9/e95ad940c3b012924cd9cba196c5eded7623cd.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionManager(), equalTo(PostgreSQLPositionManager.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-postgresql/src/test/java/org/apache/shardingsphere/scaling/postgresql/PostgreSQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2021-01-04 16:07:58","commitOrder":1,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionManager(), equalTo(MySQLPositionManager.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","date":"2021-01-04 16:07:58","endLine":46,"groupId":"3811","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a4/1ae627f70265ee18265d3c6201868efa2ac364.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionManager(), equalTo(MySQLPositionManager.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/MySQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"fad55398b146a3416d3742989172d924c42d8423","commitMessage":"@@@Add shardingsphere-scaling-dialect module and move scaling-mysql/postgresql into (#8874)\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-01-04 16:07:58","modifiedFileCount":"0","status":"B","submitter":"?? Lucas"},{"authorTime":"2021-01-28 11:01:26","codes":[{"authorDate":"2021-01-28 11:01:26","commitOrder":2,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","date":"2021-01-28 11:01:26","endLine":46,"groupId":"3811","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d3/7c32e1456fc643f12291b7cfaa593dbee34a0a.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionManager(), equalTo(PostgreSQLPositionManager.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-postgresql/src/test/java/org/apache/shardingsphere/scaling/postgresql/PostgreSQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2021-01-28 11:01:26","commitOrder":2,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","date":"2021-01-28 11:01:26","endLine":46,"groupId":"3811","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/56/271095a728ac150a46216c3006d59cb07ce5de.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionManager(), equalTo(MySQLPositionManager.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/MySQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"cb82953e4d384907965198a7a42fcc8551d77905","commitMessage":"@@@Rewrite scaling position persist and resume (#9195)\n\n* Remove scaling position manager and resumer.\n\n* Rewrite scaling position persist and resume.\n\n* update exception message.\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-01-28 11:01:26","modifiedFileCount":"30","status":"M","submitter":"?? Lucas"},{"authorTime":"2021-02-02 19:32:47","codes":[{"authorDate":"2021-02-02 19:32:47","commitOrder":3,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","date":"2021-02-02 19:32:47","endLine":46,"groupId":"3811","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6b/62b85adede6c5bba1109fc7fb82a68010c79bd.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-postgresql/src/test/java/org/apache/shardingsphere/scaling/postgresql/PostgreSQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2021-02-02 19:32:47","commitOrder":3,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","date":"2021-02-02 19:32:47","endLine":46,"groupId":"3811","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e3/c21a8194e2d1079b5f57f77e2bad2c0641c6b3.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getScalingEntryByDatabaseType(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/MySQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"b69d41b83455f507459b1b13b44c446054a9d0f3","commitMessage":"@@@Optimize ScalingEntryLoader. (#9278)\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-02-02 19:32:47","modifiedFileCount":"13","status":"M","submitter":"?? Lucas"},{"authorTime":"2021-03-01 16:44:43","codes":[{"authorDate":"2021-03-01 16:44:43","commitOrder":4,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getInventoryDumperClass(), equalTo(PostgreSQLInventoryDumper.class));\n        assertThat(scalingEntry.getIncrementalDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","date":"2021-03-01 16:44:43","endLine":46,"groupId":"3811","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/62/270bc5c3c2854316fc8febd97a3d7c8e026ef6.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(PostgreSQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-postgresql/src/test/java/org/apache/shardingsphere/scaling/postgresql/PostgreSQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2021-03-01 16:44:43","commitOrder":4,"curCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getInventoryDumperClass(), equalTo(MySQLInventoryDumper.class));\n        assertThat(scalingEntry.getIncrementalDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","date":"2021-03-01 16:44:43","endLine":46,"groupId":"3811","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/32/49dcf9cbed85642bae07f1801c9c068d5d6e9e.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getJdbcDumperClass(), equalTo(MySQLJdbcDumper.class));\n        assertThat(scalingEntry.getLogDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/MySQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"5799d0257665a4df219900369865ec27f66ef612","commitMessage":"@@@Optimize ScalingEntry (#9545)\n\n* Optimize ScalingEntry\n\n* rename Position to ScalingPosition\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-03-01 16:44:43","modifiedFileCount":"29","status":"M","submitter":"?? Lucas"},{"authorTime":"2021-03-02 16:00:33","codes":[{"authorDate":"2021-03-02 16:00:33","commitOrder":5,"curCode":"    public void assertGetScalingEntryByDatabaseType() throws IllegalAccessException, InstantiationException {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializerClass(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getEnvironmentCheckerClass(), equalTo(PostgreSQLEnvironmentChecker.class));\n        assertThat(scalingEntry.getEnvironmentCheckerClass().newInstance().getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getEnvironmentCheckerClass().newInstance().getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getInventoryDumperClass(), equalTo(PostgreSQLInventoryDumper.class));\n        assertThat(scalingEntry.getIncrementalDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","date":"2021-03-02 16:00:33","endLine":48,"groupId":"102006","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/43/0b4902fd71ae9944d912eeaa0f98c3d5e9d675.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"PostgreSQL\");\n        assertTrue(scalingEntry instanceof PostgreSQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(PostgreSQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(PostgreSQLDataSourceChecker.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(PostgreSQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(PostgreSQLImporter.class));\n        assertThat(scalingEntry.getInventoryDumperClass(), equalTo(PostgreSQLInventoryDumper.class));\n        assertThat(scalingEntry.getIncrementalDumperClass(), equalTo(PostgreSQLWalDumper.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-postgresql/src/test/java/org/apache/shardingsphere/scaling/postgresql/PostgreSQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2021-03-02 16:00:33","commitOrder":5,"curCode":"    public void assertGetScalingEntryByDatabaseType() throws IllegalAccessException, InstantiationException {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializerClass(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getEnvironmentCheckerClass(), equalTo(MySQLEnvironmentChecker.class));\n        assertThat(scalingEntry.getEnvironmentCheckerClass().newInstance().getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getEnvironmentCheckerClass().newInstance().getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getInventoryDumperClass(), equalTo(MySQLInventoryDumper.class));\n        assertThat(scalingEntry.getIncrementalDumperClass(), equalTo(MySQLIncrementalDumper.class));\n    }\n","date":"2021-03-02 16:00:33","endLine":48,"groupId":"102006","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"assertGetScalingEntryByDatabaseType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d5/297e17bd8ba445766e792a67de0efed66b6ce7.src","preCode":"    public void assertGetScalingEntryByDatabaseType() {\n        ScalingEntry scalingEntry = ScalingEntryLoader.getInstance(\"MySQL\");\n        assertTrue(scalingEntry instanceof MySQLScalingEntry);\n        assertThat(scalingEntry.getPositionInitializer(), equalTo(MySQLPositionInitializer.class));\n        assertThat(scalingEntry.getDataSourceCheckerClass(), equalTo(MySQLDataSourceChecker.class));\n        assertThat(scalingEntry.getImporterClass(), equalTo(MySQLImporter.class));\n        assertThat(scalingEntry.getInventoryDumperClass(), equalTo(MySQLInventoryDumper.class));\n        assertThat(scalingEntry.getIncrementalDumperClass(), equalTo(MySQLBinlogDumper.class));\n        assertThat(scalingEntry.getDataConsistencyCheckerClass(), equalTo(MySQLDataConsistencyChecker.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/MySQLScalingEntryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"6e07d0e425d74a1e40fc68c595229ad4067fafb3","commitMessage":"@@@Optimize ScalingEntry (#9562)\n\n* Optimize ScalingEntry\n\n* Optimize FixtureScalingEntry\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-03-02 16:00:33","modifiedFileCount":"19","status":"M","submitter":"?? Lucas"}]
