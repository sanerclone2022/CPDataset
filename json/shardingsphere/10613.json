[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-05 15:56:59","commitOrder":2,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/shadow-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRootRuleConfigurations rootRuleConfigurations = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class);\n        assertThat(rootRuleConfigurations.getRules().size(), is(1));\n        assertShadowRule((YamlShadowRuleConfiguration) rootRuleConfigurations.getRules().iterator().next());\n    }\n","date":"2021-06-05 15:56:59","endLine":63,"groupId":"10164","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ca/7fd497bac63cc165c67a3bed9aa354b79a14d5.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/shadow-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRootRuleConfigurations rootRuleConfigurations = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class);\n        assertThat(rootRuleConfigurations.getRules().size(), is(1));\n        assertShadowRule((YamlShadowRuleConfiguration) rootRuleConfigurations.getRules().iterator().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/YamlRootRuleConfigurationsForYamlShadowRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":2,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/sharding-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        assertYamlShardingConfiguration(YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class));\n    }\n","date":"2021-06-04 22:49:49","endLine":61,"groupId":"10164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/83/8c9053425d842dfbfb0130ff3b4d49f69e38ad.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/sharding-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        assertYamlShardingConfiguration(YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/YamlRootRuleConfigurationsForYamlShardingRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"NB"}],"commitId":"dd4349f723bb3b9ab3107157736e2227cd231429","commitMessage":"@@@Merge shadow feature to core module (#10666)\n\n* Merge shadow feature to core module\n\n* Merge shadow feature to core module","date":"2021-06-05 15:56:59","modifiedFileCount":"0","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-14 13:32:42","codes":[{"authorDate":"2021-08-14 13:32:42","commitOrder":3,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/shadow-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRootConfiguration rootConfig = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class);\n        assertThat(rootConfig.getRules().size(), is(1));\n        assertShadowRule((YamlShadowRuleConfiguration) rootConfig.getRules().iterator().next());\n    }\n","date":"2021-08-14 13:32:42","endLine":63,"groupId":"10164","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ff/4f5fafa9b86c13ac2ca654697eabb375d9d584.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/shadow-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRootRuleConfigurations rootRuleConfigurations = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class);\n        assertThat(rootRuleConfigurations.getRules().size(), is(1));\n        assertShadowRule((YamlShadowRuleConfiguration) rootRuleConfigurations.getRules().iterator().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/YamlRootRuleConfigurationsForYamlShadowRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-08-14 13:32:42","commitOrder":3,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/sharding-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        assertYamlShardingConfiguration(YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class));\n    }\n","date":"2021-08-14 13:32:42","endLine":61,"groupId":"10164","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/c99e6cc7102a2807e92d35e5eaee88daf29f4e.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/sharding-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        assertYamlShardingConfiguration(YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/YamlRootRuleConfigurationsForYamlShardingRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"d3d70a09e37e922c9284aa7739cca41be654d0a2","commitMessage":"@@@Rename YamlRootRuleConfigurations to YamlRootConfiguration (#11815)\n\n* Rename YamlRootRuleConfigurations to YamlRootConfiguration\n\n* For checkstyle","date":"2021-08-14 13:32:42","modifiedFileCount":"17","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-02 22:47:56","codes":[{"authorDate":"2021-09-02 22:47:56","commitOrder":4,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/shadow-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootConfiguration rootConfig = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class);\n        assertThat(rootConfig.getRules().size(), is(1));\n        assertShadowRule((YamlShadowRuleConfiguration) rootConfig.getRules().iterator().next());\n    }\n","date":"2021-09-02 22:47:56","endLine":63,"groupId":"10613","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/705e3d54864b71b3d978ff4fccafd6bcaab494.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/shadow-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRootConfiguration rootConfig = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class);\n        assertThat(rootConfig.getRules().size(), is(1));\n        assertShadowRule((YamlShadowRuleConfiguration) rootConfig.getRules().iterator().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/YamlRootRuleConfigurationsForYamlShadowRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-09-02 22:47:56","commitOrder":4,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/sharding-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        assertYamlShardingConfiguration(YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class));\n    }\n","date":"2021-09-02 22:47:56","endLine":61,"groupId":"10613","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bf/32948d1e4d8c4ec3e1210f2e5a718f61b52d97.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/sharding-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        assertYamlShardingConfiguration(YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/swapper/YamlRootRuleConfigurationsForYamlShardingRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"1f7f8205e2bdc59b0067185662104ca2b33c1f0a","commitMessage":"@@@Fix the separator problem under window. (#12161)\n\n* Fixed #12157.\n\n* Get system separator for yaml conversion.\n\n* Fixes test case.\n\n* Load config form YAML.\n\n* Add new line.\n\n* Load config from YAML.\n\n* Fix code style.","date":"2021-09-02 22:47:56","modifiedFileCount":"9","status":"M","submitter":"Guocheng Tang"}]
