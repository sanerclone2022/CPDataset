[{"authorTime":"2021-01-07 20:03:25","codes":[{"authorDate":"2021-01-07 20:03:25","commitOrder":1,"curCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        \r\n        if (\"shadow\".equals(getScenario())) {\n            return;\n        }\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++).toLowerCase(), is(each.getName().toLowerCase()));\n        }\n    }\n","date":"2021-01-07 20:03:25","endLine":101,"groupId":"10174","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMetaData","params":"(finalResultSetMetaDataactual@finalCollection<DataSetColumn>expected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/49/87279deaf2dc0ebc6d2bd1c433ddfa0cf5b812.src","preCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        \r\n        if (\"shadow\".equals(getScenario())) {\n            return;\n        }\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++).toLowerCase(), is(each.getName().toLowerCase()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-suite/src/test/java/org/apache/shardingsphere/test/integration/engine/it/dql/BaseDQLIT.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2021-01-07 20:03:25","commitOrder":1,"curCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++), is(each.getName()));\n        }\n    }\n","date":"2021-01-07 20:03:25","endLine":135,"groupId":"10174","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMetaData","params":"(finalResultSetMetaDataactual@finalCollection<DataSetColumn>expected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/33/1540de8775d61e9d143cc71b79fce3b1543b2f.src","preCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++), is(each.getName()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-suite/src/test/java/org/apache/shardingsphere/test/integration/engine/it/dml/BaseDMLIT.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"d71f881256c447c7fe6d88f7563a38486d36fbb0","commitMessage":"@@@Add back loss files (#8939)\n\n","date":"2021-01-07 20:03:25","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-01-07 20:03:25","codes":[{"authorDate":"2021-03-24 18:00:29","commitOrder":2,"curCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        \r\n        if (\"shadow\".equals(getDescription().getScenario())) {\n            return;\n        }\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++).toLowerCase(), is(each.getName().toLowerCase()));\n        }\n    }\n","date":"2021-03-24 18:00:29","endLine":97,"groupId":"10174","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMetaData","params":"(finalResultSetMetaDataactual@finalCollection<DataSetColumn>expected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/36/679dac273867b251eaebcbbbe3c50257d44437.src","preCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        \r\n        if (\"shadow\".equals(getScenario())) {\n            return;\n        }\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++).toLowerCase(), is(each.getName().toLowerCase()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-suite/src/test/java/org/apache/shardingsphere/test/integration/engine/it/dql/BaseDQLIT.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-01-07 20:03:25","commitOrder":2,"curCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++), is(each.getName()));\n        }\n    }\n","date":"2021-01-07 20:03:25","endLine":135,"groupId":"10174","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMetaData","params":"(finalResultSetMetaDataactual@finalCollection<DataSetColumn>expected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/33/1540de8775d61e9d143cc71b79fce3b1543b2f.src","preCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++), is(each.getName()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-suite/src/test/java/org/apache/shardingsphere/test/integration/engine/it/dml/BaseDMLIT.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"}],"commitId":"70176a68c9d7d55a47f4dde8391fdbb0d52cb231","commitMessage":"@@@refactor: it engine (#9725)\n\n* move packages\n\n* refactor dockerfile\n\n* Refactor IT engine\n\n* fix checkstyle and update it.yaml\n\n* optimize\n\n* fix\n\n* fix ci/it script\n\n* fix null pointer\n\n* fix checkstyle\n\n* fix nullpointer\n\n* code polish\n\n* revert\n\n* make adapter=jdbc available\n\n* fix\n\n* fix\n\n* following reviews\n\n* fix ci\n\n* Compatible with ci\n\n* support parallel\n\n* fix\n\n* fix\n\n* fix\n\n* fix\n\n* disable fail-fast\n\n* polish\n\n* fix health-chek\n\n* fix health-chek\n\n* fix health-chek\n\n* code polish\n\n* code polish\n\n* code polish\n\n* rollback\n\n* fix missing case\n\n* fix\n\n* fix skip dockerfile build\n\n* revert removed profile\n\n* remove dead code\n\nCo-authored-by: root <root@daming.sgp>","date":"2021-03-24 18:00:29","modifiedFileCount":"14","status":"M","submitter":"Daming"},{"authorTime":"2021-01-07 20:03:25","codes":[{"authorDate":"2021-03-29 19:40:36","commitOrder":3,"curCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        \r\n        if (\"shadow\".equals(getScenario())) {\n            return;\n        }\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++).toLowerCase(), is(each.getName().toLowerCase()));\n        }\n    }\n","date":"2021-03-29 19:40:36","endLine":112,"groupId":"102183","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMetaData","params":"(finalResultSetMetaDataactual@finalCollection<DataSetColumn>expected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/87/f25168b4cb7da1b7d0d5536d5faacaa448a054.src","preCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        \r\n        if (\"shadow\".equals(getDescription().getScenario())) {\n            return;\n        }\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++).toLowerCase(), is(each.getName().toLowerCase()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-suite/src/test/java/org/apache/shardingsphere/test/integration/engine/it/dql/BaseDQLIT.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2021-01-07 20:03:25","commitOrder":3,"curCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++), is(each.getName()));\n        }\n    }\n","date":"2021-01-07 20:03:25","endLine":135,"groupId":"102183","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMetaData","params":"(finalResultSetMetaDataactual@finalCollection<DataSetColumn>expected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/33/1540de8775d61e9d143cc71b79fce3b1543b2f.src","preCode":"    private void assertMetaData(final ResultSetMetaData actual, final Collection<DataSetColumn> expected) throws SQLException {\n        assertThat(actual.getColumnCount(), is(expected.size()));\n        int index = 1;\n        for (DataSetColumn each : expected) {\n            assertThat(actual.getColumnLabel(index++), is(each.getName()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-suite/src/test/java/org/apache/shardingsphere/test/integration/engine/it/dml/BaseDMLIT.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"}],"commitId":"f7511d5d36b5cfb2692fa07c5d7e9e278205c1b4","commitMessage":"@@@Refactor: IT framework (#9857)\n\n* refactor it engine\n\n* following reviews and remove dead codes\n\nCo-authored-by: zhuanghaochao <zhuanghaochao@yy.com>","date":"2021-03-29 19:40:36","modifiedFileCount":"33","status":"M","submitter":"Daming"}]
