[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return visit(ctx.simpleExpr());\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":438,"groupId":"8877","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return visit(ctx.simpleExpr());\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":346,"groupId":"8877","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/57ffeacf154844f0a67f662de75ac1ba20bb29.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-11-01 14:32:14","codes":[{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return visit(ctx.simpleExpr());\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        return new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n    }\n","date":"2020-11-01 14:32:14","endLine":425,"groupId":"101367","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/d30c68bccd585500d3b25952c4d250f3bc9d2c.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return visit(ctx.simpleExpr());\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"M"},{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        return new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n    }\n","date":"2020-11-01 14:32:14","endLine":338,"groupId":"101367","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f9/5b1f3859c490d2da9c3a22636646c4aa43e292.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"}],"commitId":"5d7ca41942d298dad2cc0d8efc5fc5c6872e2aec","commitMessage":"@@@Fix checkstyle (#8001)\n\n","date":"2020-11-01 14:32:14","modifiedFileCount":"16","status":"M","submitter":"Liang Zhang"}]
