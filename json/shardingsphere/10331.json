[{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-07-03 15:12:51","commitOrder":1,"curCode":"    private void dropRuleConfiguration(final AlterReadwriteSplittingRuleStatement sqlStatement, final ReadwriteSplittingRuleConfiguration currentRuleConfig) {\n        for (String each : getToBeAlteredRuleNames(sqlStatement)) {\n            Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig\n                    = currentRuleConfig.getDataSources().stream().filter(dataSource -> each.equals(dataSource.getName())).findAny();\n            Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent());\n            currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get());\n            currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","date":"2021-07-03 15:12:51","endLine":113,"groupId":"7451","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dropRuleConfiguration","params":"(finalAlterReadwriteSplittingRuleStatementsqlStatement@finalReadwriteSplittingRuleConfigurationcurrentRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/fcacfb6e81b484964e7eec6967b34f965ec202.src","preCode":"    private void dropRuleConfiguration(final AlterReadwriteSplittingRuleStatement sqlStatement, final ReadwriteSplittingRuleConfiguration currentRuleConfig) {\n        for (String each : getToBeAlteredRuleNames(sqlStatement)) {\n            Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig\n                    = currentRuleConfig.getDataSources().stream().filter(dataSource -> each.equals(dataSource.getName())).findAny();\n            Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent());\n            currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get());\n            currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/AlterReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2021-07-03 15:12:51","commitOrder":1,"curCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","date":"2021-07-03 15:12:51","endLine":72,"groupId":"7451","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dropRule","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/be/b16dbf682a2d45e060b26ddb0e4af43bf735a8.src","preCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"2f7f7f5e0627c094d508f37554ec49c87874bb9e","commitMessage":"@@@Add shardingsphere-readwrite-splitting-distsql-handler module (#11124)\n\n","date":"2021-07-03 15:12:51","modifiedFileCount":"2","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-07-04 21:25:58","commitOrder":2,"curCode":"    private void dropRuleConfiguration(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final ReadwriteSplittingRuleConfiguration toBeAlteredRuleConfig) {\n        for (ReadwriteSplittingDataSourceRuleConfiguration each : toBeAlteredRuleConfig.getDataSources()) {\n            Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig\n                    = currentRuleConfig.getDataSources().stream().filter(dataSource -> each.getName().equals(dataSource.getName())).findAny();\n            Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent());\n            currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get());\n            currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","date":"2021-07-04 21:25:58","endLine":122,"groupId":"7451","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dropRuleConfiguration","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalReadwriteSplittingRuleConfigurationtoBeAlteredRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/03/4a7dc5b0b58b98da714caaaec77259a02c6bde.src","preCode":"    private void dropRuleConfiguration(final AlterReadwriteSplittingRuleStatement sqlStatement, final ReadwriteSplittingRuleConfiguration currentRuleConfig) {\n        for (String each : getToBeAlteredRuleNames(sqlStatement)) {\n            Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig\n                    = currentRuleConfig.getDataSources().stream().filter(dataSource -> each.equals(dataSource.getName())).findAny();\n            Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent());\n            currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get());\n            currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/AlterReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2021-07-03 15:12:51","commitOrder":2,"curCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","date":"2021-07-03 15:12:51","endLine":72,"groupId":"7451","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dropRule","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/be/b16dbf682a2d45e060b26ddb0e4af43bf735a8.src","preCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"ea03871547a90a0542096ea715f999466c47412e","commitMessage":"@@@Refactor RDLAlterUpdater.buildToBeAlteredRuleConfiguration() (#11151)\n\n","date":"2021-07-04 21:25:58","modifiedFileCount":"14","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-12 18:16:59","codes":[{"authorDate":"2021-07-04 21:25:58","commitOrder":3,"curCode":"    private void dropRuleConfiguration(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final ReadwriteSplittingRuleConfiguration toBeAlteredRuleConfig) {\n        for (ReadwriteSplittingDataSourceRuleConfiguration each : toBeAlteredRuleConfig.getDataSources()) {\n            Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig\n                    = currentRuleConfig.getDataSources().stream().filter(dataSource -> each.getName().equals(dataSource.getName())).findAny();\n            Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent());\n            currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get());\n            currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","date":"2021-07-04 21:25:58","endLine":122,"groupId":"10331","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"dropRuleConfiguration","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalReadwriteSplittingRuleConfigurationtoBeAlteredRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/03/4a7dc5b0b58b98da714caaaec77259a02c6bde.src","preCode":"    private void dropRuleConfiguration(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final ReadwriteSplittingRuleConfiguration toBeAlteredRuleConfig) {\n        for (ReadwriteSplittingDataSourceRuleConfiguration each : toBeAlteredRuleConfig.getDataSources()) {\n            Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig\n                    = currentRuleConfig.getDataSources().stream().filter(dataSource -> each.getName().equals(dataSource.getName())).findAny();\n            Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent());\n            currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get());\n            currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/AlterReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"},{"authorDate":"2021-07-12 18:16:59","commitOrder":3,"curCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        if (isLoadBalancerNotInUse(currentRuleConfig, dataSourceRuleConfig.get().getLoadBalancerName())) {\n            currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","date":"2021-07-12 18:16:59","endLine":76,"groupId":"10331","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"dropRule","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/5a392ca9d82cf7e02b8e6cdc5ec92d0afc7766.src","preCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"fc56fcda8d10e4e4e8553fd8a2f784e6b1ec006b","commitMessage":"@@@Check encryptor & loadBalancer not in use before drop it (#11280)\n\n","date":"2021-07-12 18:16:59","modifiedFileCount":"4","status":"M","submitter":"Haoran Meng"}]
