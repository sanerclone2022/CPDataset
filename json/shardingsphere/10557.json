[{"authorTime":"2021-08-17 15:06:22","codes":[{"authorDate":"2021-08-17 15:06:22","commitOrder":1,"curCode":"    private void mockSQLServerResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT obj.name AS TABLE_NAME, col.name AS COLUMN_NAME, t.name AS DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT a.name AS INDEX_NAME, c.name AS TABLE_NAME FROM sys.indexes a\"))).thenReturn(indexStatement);\n    }\n","date":"2021-08-17 15:06:22","endLine":117,"groupId":"11005","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSQLServerResultSet","params":"(finalConnectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ba81f6892c4d651f3f9549435029b80256ad67.src","preCode":"    private void mockSQLServerResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT obj.name AS TABLE_NAME, col.name AS COLUMN_NAME, t.name AS DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT a.name AS INDEX_NAME, c.name AS TABLE_NAME FROM sys.indexes a\"))).thenReturn(indexStatement);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/metadata/ShardingTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2021-08-17 15:06:22","commitOrder":1,"curCode":"    private void mockOracleResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, INDEX_NAME FROM ALL_INDEXES WHERE OWNER\"))).thenReturn(indexStatement);\n    }\n","date":"2021-08-17 15:06:22","endLine":139,"groupId":"11005","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockOracleResultSet","params":"(finalConnectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ba81f6892c4d651f3f9549435029b80256ad67.src","preCode":"    private void mockOracleResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, INDEX_NAME FROM ALL_INDEXES WHERE OWNER\"))).thenReturn(indexStatement);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/metadata/ShardingTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"605e05c907bb4bd4e14bb682c01e6f46e562a87b","commitMessage":"@@@improve metadata load performance (#11767)\n\n* improve metadata load performance\n\n* improve metadata load performance\n\n* metaDataImprove test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove fix index\n\n* metaDataImprove optimize review\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions","date":"2021-08-17 15:06:22","modifiedFileCount":"16","status":"B","submitter":"tuichenchuxin"},{"authorTime":"2021-09-02 17:34:21","codes":[{"authorDate":"2021-08-17 15:06:22","commitOrder":2,"curCode":"    private void mockSQLServerResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT obj.name AS TABLE_NAME, col.name AS COLUMN_NAME, t.name AS DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT a.name AS INDEX_NAME, c.name AS TABLE_NAME FROM sys.indexes a\"))).thenReturn(indexStatement);\n    }\n","date":"2021-08-17 15:06:22","endLine":117,"groupId":"10557","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSQLServerResultSet","params":"(finalConnectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ba81f6892c4d651f3f9549435029b80256ad67.src","preCode":"    private void mockSQLServerResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT obj.name AS TABLE_NAME, col.name AS COLUMN_NAME, t.name AS DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT a.name AS INDEX_NAME, c.name AS TABLE_NAME FROM sys.indexes a\"))).thenReturn(indexStatement);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/metadata/ShardingTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"N"},{"authorDate":"2021-09-02 17:34:21","commitOrder":2,"curCode":"    private void mockOracleResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSetForOracle();\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSetForOracle();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, INDEX_NAME FROM ALL_INDEXES WHERE OWNER\"))).thenReturn(indexStatement);\n    }\n","date":"2021-09-02 17:34:21","endLine":134,"groupId":"10557","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"mockOracleResultSet","params":"(finalConnectionconnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6a/ce14213aae049cfaa8c25ea43d859ed5c2cb0c.src","preCode":"    private void mockOracleResultSet(final Connection connection) throws SQLException {\n        ResultSet resultSet = createColumnResultSet(\"t_order_0\");\n        PreparedStatement preparedStatement = mock(PreparedStatement.class);\n        when(preparedStatement.executeQuery()).thenReturn(resultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE\"))).thenReturn(preparedStatement);\n        ResultSet indexResultSet = createIndexResultSet();\n        PreparedStatement indexStatement = mock(PreparedStatement.class);\n        when(indexStatement.executeQuery()).thenReturn(indexResultSet);\n        when(connection.prepareStatement(startsWith(\"SELECT OWNER AS TABLE_SCHEMA, TABLE_NAME, INDEX_NAME FROM ALL_INDEXES WHERE OWNER\"))).thenReturn(indexStatement);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/metadata/ShardingTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"1301a41807eda152b17ef78fe084bc2d4e9d368e","commitMessage":"@@@fix calcite exception when user execute sql with lowercase (#12125)\n\n* fix calcite execute error with oracle statement\n\n* add test case\n\n* modify map to case insensitive\n\n* fix test case\n\n* add test case for federate refresh test\n\n* optimize code\n\n* optimize code\n\n* optimize test case\n\n* optimize test case\n\n* optimize federate logic\n\n* optimize code","date":"2021-09-02 17:34:21","modifiedFileCount":"18","status":"M","submitter":"Zhengqiang Duan"}]
