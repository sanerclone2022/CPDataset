[{"authorTime":"2020-10-11 17:18:14","codes":[{"authorDate":"2020-05-16 14:46:06","commitOrder":2,"curCode":"    public void assertReadStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta(MySQLColumnType.MYSQL_TYPE_STRING.getValue() << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedByte()).thenReturn((short) expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","date":"2020-05-16 14:46:06","endLine":86,"groupId":"4546","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertReadStringValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/37/1eaaadaff1332b5f344167da2c69f2c4f2d775.src","preCode":"    public void assertReadStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta(MySQLColumnType.MYSQL_TYPE_STRING.getValue() << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedByte()).thenReturn((short) expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"NB"},{"authorDate":"2020-10-11 17:18:14","commitOrder":2,"curCode":"    public void assertReadLongStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta((MySQLColumnType.MYSQL_TYPE_STRING.getValue() ^ ((256 & 0x300) >> 4)) << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","date":"2020-10-11 17:18:14","endLine":96,"groupId":"8870","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertReadLongStringValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7f/91c50ded83a3d8d3276fd41bcc1aca431c44a5.src","preCode":"    public void assertReadLongStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta((MySQLColumnType.MYSQL_TYPE_STRING.getValue() ^ ((256 & 0x300) >> 4)) << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"37efe1c94a05fa3d23f3dd69f80783fbdaefe54e","commitMessage":"@@@Fix mysql binlog type decode (#7725)\n\n* Fix mysql binlog type decode\n\n* For checkstyle","date":"2020-10-11 17:18:14","modifiedFileCount":"2","status":"M","submitter":"avalon5666"},{"authorTime":"2020-12-01 18:57:15","codes":[{"authorDate":"2020-12-01 18:57:15","commitOrder":3,"curCode":"    public void assertReadStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta(MySQLBinaryColumnType.MYSQL_TYPE_STRING.getValue() << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedByte()).thenReturn((short) expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","date":"2020-12-01 18:57:15","endLine":86,"groupId":"101289","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertReadStringValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/eb/a693a953e2f89d430ae151de49e993dc0ac458.src","preCode":"    public void assertReadStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta(MySQLColumnType.MYSQL_TYPE_STRING.getValue() << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedByte()).thenReturn((short) expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-12-01 18:57:15","commitOrder":3,"curCode":"    public void assertReadLongStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta((MySQLBinaryColumnType.MYSQL_TYPE_STRING.getValue() ^ ((256 & 0x300) >> 4)) << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","date":"2020-12-01 18:57:15","endLine":96,"groupId":"101289","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertReadLongStringValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/eb/a693a953e2f89d430ae151de49e993dc0ac458.src","preCode":"    public void assertReadLongStringValue() {\n        String expected = \"test_value\";\n        columnDef.setColumnMeta((MySQLColumnType.MYSQL_TYPE_STRING.getValue() ^ ((256 & 0x300) >> 4)) << 8);\n        when(payload.getByteBuf()).thenReturn(byteBuf);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(expected.length());\n        when(payload.readStringFix(expected.length())).thenReturn(expected);\n        assertThat(new MySQLStringBinlogProtocolValue().read(columnDef, payload), is(expected));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"a62d3daaa0771449880b6af3bdb62d3b0a1482d6","commitMessage":"@@@Add BinaryResultSetRow to refactor BinaryResultSetRowPacket (#8452)\n\n* Fix javadoc\n\n* Move PostgreSQLColumnType and MySQLSQLColumnType usage into protocol modules\n\n* Add MySQLBinaryResultSetRow to refactor MySQLBinaryResultSetRowPacket\n\n* Add BinaryResultSetRow to refactor BinaryResultSetRowPacket\n\n* Add BinaryResultSetRow to refactor BinaryResultSetRowPacket\n\n* Add SQLColumnType interface\n\n* Add BinaryResultSetRow\n\n* Rename BinaryColumnType\n\n* Add BinaryColumnType.getValue\n\n* Remove PostgreSQLBinaryResultSetRow and MySQLBinaryResultSetRow\n\n* Remove generic type for BinaryResultSetRow\n\n* Update javadoc","date":"2020-12-01 18:57:15","modifiedFileCount":"39","status":"M","submitter":"Liang Zhang"}]
