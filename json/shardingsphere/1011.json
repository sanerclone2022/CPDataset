[{"authorTime":"2021-01-06 16:11:47","codes":[{"authorDate":"2021-01-06 16:11:47","commitOrder":1,"curCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-01-06 16:11:47","endLine":71,"groupId":"12093","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f6/2aefe2146b99a6749a9c517c8da09bb6413639.src","preCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2021-01-06 16:11:47","commitOrder":1,"curCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","date":"2021-01-06 16:11:47","endLine":77,"groupId":"12093","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a6/0d028de77242310f97ef38e2e5bb82737347f3.src","preCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"190d66495ea798024b782d96fe4ca71a9d007797","commitMessage":"@@@add agent tracing test (#8910)\n\n","date":"2021-01-06 16:11:47","modifiedFileCount":"7","status":"B","submitter":"xiaoyu"},{"authorTime":"2021-01-12 10:35:24","codes":[{"authorDate":"2021-01-12 10:35:24","commitOrder":2,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-01-12 10:35:24","endLine":71,"groupId":"12093","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/74/72e5b71c194576c10305dac8e9e3134ad1a280.src","preCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2021-01-12 10:35:24","commitOrder":2,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","date":"2021-01-12 10:35:24","endLine":77,"groupId":"12093","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d0/2f670fe6b9dcf2afd0ac37b926e18ec95502dd.src","preCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"c75652dbf13f60b4572abc2f7a68c24bb84e6bd4","commitMessage":"@@@support to instrument the same method repeatedly (#8986)\n\n* support to instrument the same method repeatedly\n\n* fix wrong hand","date":"2021-01-12 10:35:24","modifiedFileCount":"32","status":"M","submitter":"Daming"},{"authorTime":"2021-01-15 10:40:24","codes":[{"authorDate":"2021-01-15 10:40:24","commitOrder":3,"curCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = collector.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-01-15 10:40:24","endLine":50,"groupId":"9188","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/5f209d45bf5487abbc5fb242656870e895ed0f.src","preCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2021-01-15 10:40:24","commitOrder":3,"curCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = collector.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n        assertThat(spans.get(0).tags(), is(EXPECTED));\n    }\n","date":"2021-01-15 10:40:24","endLine":64,"groupId":"9188","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3e/57e526e374bfeced745069c25b69cf810a819e.src","preCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"3d21ffcaa4b7aeb854496c403f46c0aa4ee6d611","commitMessage":"@@@rrefactor agent tracing plugin test (#9039)\n\n* refactor agent tracing plugin test\n\n* Update CommandExecutorTaskAdviceTest.java\n\nrename method\n\n* add license header","date":"2021-01-15 10:40:24","modifiedFileCount":"15","status":"M","submitter":"Daming"},{"authorTime":"2021-02-18 15:58:05","codes":[{"authorDate":"2021-02-18 15:58:05","commitOrder":4,"curCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = COLLECTOR.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-02-18 15:58:05","endLine":50,"groupId":"9188","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/89/c74be20e857b2902565ae0bca70aeffd989de1.src","preCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = collector.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2021-02-18 15:58:05","commitOrder":4,"curCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = COLLECTOR.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n        assertThat(spans.get(0).tags(), is(EXPECTED));\n    }\n","date":"2021-02-18 15:58:05","endLine":64,"groupId":"9188","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/42/c83962a83da83e6c31ccaef594888e103a56ab.src","preCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = collector.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n        assertThat(spans.get(0).tags(), is(EXPECTED));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"ddc88a96c405bca47a8c611ce61af166657109b3","commitMessage":"@@@agent inspect code (#9425)\n\n* agent inspect code\n\n* fix checkstyle","date":"2021-02-18 15:58:05","modifiedFileCount":"19","status":"M","submitter":"xiaoyu"},{"authorTime":"2021-07-27 13:57:46","codes":[{"authorDate":"2021-07-27 13:57:46","commitOrder":5,"curCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = COLLECTOR.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertTrue(spans.get(0).logEntries().isEmpty());\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-07-27 13:57:46","endLine":51,"groupId":"1011","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b8/15f1872706600c44c3003215afd01ca566ce1d.src","preCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = COLLECTOR.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2021-07-27 13:57:46","commitOrder":5,"curCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = COLLECTOR.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertTrue(spans.get(0).logEntries().isEmpty());\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n        assertThat(spans.get(0).tags(), is(EXPECTED));\n    }\n","date":"2021-07-27 13:57:46","endLine":65,"groupId":"1011","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0b/262fdf617aab93650185d21d4ce9b4bc157a1c.src","preCode":"    public void assertMethod() {\n        ADVICE.beforeMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(getTargetObject(), null, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = COLLECTOR.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n        assertThat(spans.get(0).tags(), is(EXPECTED));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"a2a03362cd71d2e11d4067f9215ca2bd344b5a5d","commitMessage":"@@@Use assertTrue(xxx.isEmpty()) to instead of assertThat(xxx.size().  is(0)) (#11531)\n\n","date":"2021-07-27 13:57:46","modifiedFileCount":"21","status":"M","submitter":"Liang Zhang"}]
