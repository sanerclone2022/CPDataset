[{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":2,"curCode":"    public ASTNode visitOnDuplicateKeyClause(final MySQLStatementParser.OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-10-22 20:53:42","endLine":797,"groupId":"479","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOnDuplicateKeyClause","params":"(finalMySQLStatementParser.OnDuplicateKeyClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitOnDuplicateKeyClause(final MySQLStatementParser.OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"B"},{"authorDate":"2020-10-22 16:47:44","commitOrder":2,"curCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-10-22 16:47:44","endLine":228,"groupId":"10346","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDropColumnSpecification","params":"(finalDropColumnSpecificationContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5f/24d270bc954e85c9e849b3fe73470e8dca1bc3.src","preCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"NB"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":3,"curCode":"    public ASTNode visitOnDuplicateKeyClause(final OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-11-16 12:59:49","endLine":896,"groupId":"101456","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOnDuplicateKeyClause","params":"(finalOnDuplicateKeyClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitOnDuplicateKeyClause(final MySQLStatementParser.OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":890,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":3,"curCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-10-22 16:47:44","endLine":228,"groupId":"101456","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDropColumnSpecification","params":"(finalDropColumnSpecificationContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5f/24d270bc954e85c9e849b3fe73470e8dca1bc3.src","preCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"N"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"}]
