[{"authorTime":"2021-04-12 18:54:17","codes":[{"authorDate":"2021-04-12 18:54:17","commitOrder":1,"curCode":"    public void assertAuthenticationMethodMismatch() {\n        setConnectionPhase(MySQLConnectionPhase.AUTH_PHASE_FAST_PATH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        when(payload.readInt4()).thenReturn(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue());\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getConnectionPhase(), is(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH));\n    }\n","date":"2021-04-12 18:54:17","endLine":99,"groupId":"10621","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertAuthenticationMethodMismatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e6/dc0b82a475d86a06692edf16ef52a243bb810c.src","preCode":"    public void assertAuthenticationMethodMismatch() {\n        setConnectionPhase(MySQLConnectionPhase.AUTH_PHASE_FAST_PATH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        when(payload.readInt4()).thenReturn(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue());\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getConnectionPhase(), is(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/authentication/MySQLAuthenticationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2021-04-12 18:54:17","commitOrder":1,"curCode":"    public void assertAuthSwitchResponse() {\n        setConnectionPhase(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        Channel channel = mock(Channel.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        setAuthenticationResult();\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getAuthResponse(), is(authResponse));\n    }\n","date":"2021-04-12 18:54:17","endLine":114,"groupId":"10876","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertAuthSwitchResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e6/dc0b82a475d86a06692edf16ef52a243bb810c.src","preCode":"    public void assertAuthSwitchResponse() {\n        setConnectionPhase(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        Channel channel = mock(Channel.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        setAuthenticationResult();\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getAuthResponse(), is(authResponse));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/authentication/MySQLAuthenticationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"20af443ee6670aac77a9a3fcb1ee9dbc1c3c28df","commitMessage":"@@@Rename auth to authentication or authenticated for meaningful and clear reason (#10050)\n\n","date":"2021-04-12 18:54:17","modifiedFileCount":"17","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 07:22:30","codes":[{"authorDate":"2021-07-27 07:22:30","commitOrder":2,"curCode":"    public void assertAuthenticationMethodMismatch() {\n        setConnectionPhase(MySQLConnectionPhase.AUTH_PHASE_FAST_PATH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        when(payload.readInt4()).thenReturn(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue());\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getConnectionPhase(), is(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH));\n    }\n","date":"2021-07-27 07:22:30","endLine":97,"groupId":"10822","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertAuthenticationMethodMismatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c9/ec9d7e2c389b632cb9403afc6b14d0b92ef217.src","preCode":"    public void assertAuthenticationMethodMismatch() {\n        setConnectionPhase(MySQLConnectionPhase.AUTH_PHASE_FAST_PATH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        when(payload.readInt4()).thenReturn(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue());\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getConnectionPhase(), is(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/authentication/MySQLAuthenticationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-07-27 07:22:30","commitOrder":2,"curCode":"    public void assertAuthSwitchResponse() {\n        setConnectionPhase(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        Channel channel = mock(Channel.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        setAuthenticationResult();\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getAuthResponse(), is(authResponse));\n    }\n","date":"2021-07-27 07:22:30","endLine":111,"groupId":"10822","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertAuthSwitchResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c9/ec9d7e2c389b632cb9403afc6b14d0b92ef217.src","preCode":"    public void assertAuthSwitchResponse() {\n        setConnectionPhase(MySQLConnectionPhase.AUTHENTICATION_METHOD_MISMATCH);\n        MySQLPacketPayload payload = mock(MySQLPacketPayload.class);\n        Channel channel = mock(Channel.class);\n        ChannelHandlerContext channelHandlerContext = mock(ChannelHandlerContext.class);\n        when(payload.readStringEOFByBytes()).thenReturn(authResponse);\n        when(payload.readStringNulByBytes()).thenReturn(\"root\".getBytes());\n        when(channel.remoteAddress()).thenReturn(new InetSocketAddress(\"localhost\", 3307));\n        when(channelHandlerContext.channel()).thenReturn(channel);\n        setAuthenticationResult();\n        authenticationEngine.authenticate(channelHandlerContext, payload);\n        assertThat(getAuthResponse(), is(authResponse));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/authentication/MySQLAuthenticationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"6d7e3fe33533f8d8dd098e81d667ce57aabd625a","commitMessage":"@@@Use raw new HashMap to instead of guava (#11517)\n\n* Use raw new HashMap to instead of guava\n\n* Use raw new HashMap to instead of guava","date":"2021-07-27 07:22:30","modifiedFileCount":"69","status":"M","submitter":"Liang Zhang"}]
