[{"authorTime":"2020-11-09 07:16:02","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":4,"curCode":"    public void route(final RouteContext routeContext, final ShardingRule shardingRule) {\n        for (String each : shardingRule.getDataSourceNames()) {\n            if (dataSourcesMetaData.getAllInstanceDataSourceNames().contains(each)) {\n                routeContext.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n            }\n        }\n    }\n","date":"2021-06-04 22:49:49","endLine":45,"groupId":"9800","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"route","params":"(finalRouteContextrouteContext@finalShardingRuleshardingRule)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7f/2aa7abb0c497e99b1914437275d90fb312e9f0.src","preCode":"    public void route(final RouteContext routeContext, final ShardingRule shardingRule) {\n        for (String each : shardingRule.getDataSourceNames()) {\n            if (dataSourcesMetaData.getAllInstanceDataSourceNames().contains(each)) {\n                routeContext.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n            }\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingInstanceBroadcastRoutingEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2020-11-09 07:16:02","commitOrder":4,"curCode":"    public RouteContext route(final LogicSQL logicSQL, final ShardingSphereMetaData metaData) {\n        RouteContext result = new RouteContext();\n        for (String each : metaData.getResource().getDataSources().keySet()) {\n            result.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n        }\n        return result;\n    }\n","date":"2020-11-09 07:16:02","endLine":41,"groupId":"12178","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"route","params":"(finalLogicSQLlogicSQL@finalShardingSphereMetaDatametaData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/42/2081511661a76911c71ab6b1be7c31acc94fdc.src","preCode":"    public RouteContext route(final LogicSQL logicSQL, final ShardingSphereMetaData metaData) {\n        RouteContext result = new RouteContext();\n        for (String each : metaData.getResource().getDataSources().keySet()) {\n            result.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/engine/impl/AllSQLRouteExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"NB"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-09 07:16:02","codes":[{"authorDate":"2021-09-16 10:44:49","commitOrder":5,"curCode":"    public RouteContext route(final ShardingRule shardingRule) {\n        RouteContext result = new RouteContext();\n        for (String each : shardingRule.getDataSourceNames()) {\n            if (dataSourcesMetaData.getAllInstanceDataSourceNames().contains(each)) {\n                result.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n            }\n        }\n        return result;\n    }\n","date":"2021-09-16 10:44:49","endLine":47,"groupId":"10733","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"route","params":"(finalShardingRuleshardingRule)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/89/438a5af9b4cb838af530d2da453caee229e62e.src","preCode":"    public void route(final RouteContext routeContext, final ShardingRule shardingRule) {\n        for (String each : shardingRule.getDataSourceNames()) {\n            if (dataSourcesMetaData.getAllInstanceDataSourceNames().contains(each)) {\n                routeContext.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n            }\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingInstanceBroadcastRoutingEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2020-11-09 07:16:02","commitOrder":5,"curCode":"    public RouteContext route(final LogicSQL logicSQL, final ShardingSphereMetaData metaData) {\n        RouteContext result = new RouteContext();\n        for (String each : metaData.getResource().getDataSources().keySet()) {\n            result.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n        }\n        return result;\n    }\n","date":"2020-11-09 07:16:02","endLine":41,"groupId":"10733","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"route","params":"(finalLogicSQLlogicSQL@finalShardingSphereMetaDatametaData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/42/2081511661a76911c71ab6b1be7c31acc94fdc.src","preCode":"    public RouteContext route(final LogicSQL logicSQL, final ShardingSphereMetaData metaData) {\n        RouteContext result = new RouteContext();\n        for (String each : metaData.getResource().getDataSources().keySet()) {\n            result.getRouteUnits().add(new RouteUnit(new RouteMapper(each, each), Collections.emptyList()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/engine/impl/AllSQLRouteExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"da387e577c285547374f3bec611c3b27e978b3e3","commitMessage":"@@@optimize sharding route logic (#12457)\n\n* remove sharding condition merge logic\n\n* optimize route logic\n\n* fix checkstyle\n\n* optimize param name\n\n* fix checkstyle\n\n* fix unit test\n\n* optimize merge logic\n\n* optimize java doc\n\n* optimize java collection type","date":"2021-09-16 10:44:49","modifiedFileCount":"26","status":"M","submitter":"Zhengqiang Duan"}]
