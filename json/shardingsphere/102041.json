[{"authorTime":"2021-01-04 16:07:58","codes":[{"authorDate":"2021-01-04 16:07:58","commitOrder":1,"curCode":"    public void assertDecodeFormatDescriptionEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.FORMAT_DESCRIPTION_EVENT.getValue(), (short) 19);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(4);\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getChecksumLength(), is(4));\n    }\n","date":"2021-01-04 16:07:58","endLine":92,"groupId":"6203","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecodeFormatDescriptionEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a5/b34bf827bc16ec9a31dd35b55b5a24e048a452.src","preCode":"    public void assertDecodeFormatDescriptionEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.FORMAT_DESCRIPTION_EVENT.getValue(), (short) 19);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(4);\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getChecksumLength(), is(4));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2021-01-04 16:07:58","commitOrder":1,"curCode":"    public void assertDecodeTableMapEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.TABLE_MAP_EVENT.getValue(), (short) 0);\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getTableMap().size(), is(1));\n        assertThat(binlogContext.getTableMap().get(0L), instanceOf(MySQLBinlogTableMapEventPacket.class));\n    }\n","date":"2021-01-04 16:07:58","endLine":102,"groupId":"6203","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecodeTableMapEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a5/b34bf827bc16ec9a31dd35b55b5a24e048a452.src","preCode":"    public void assertDecodeTableMapEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.TABLE_MAP_EVENT.getValue(), (short) 0);\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getTableMap().size(), is(1));\n        assertThat(binlogContext.getTableMap().get(0L), instanceOf(MySQLBinlogTableMapEventPacket.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"fad55398b146a3416d3742989172d924c42d8423","commitMessage":"@@@Add shardingsphere-scaling-dialect module and move scaling-mysql/postgresql into (#8874)\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-01-04 16:07:58","modifiedFileCount":"0","status":"B","submitter":"?? Lucas"},{"authorTime":"2021-02-06 00:37:52","codes":[{"authorDate":"2021-02-06 00:37:52","commitOrder":2,"curCode":"    public void assertDecodeFormatDescriptionEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.FORMAT_DESCRIPTION_EVENT.getValue(), (short) 19);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(4);\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getChecksumLength(), is(4));\n    }\n","date":"2021-02-06 00:37:52","endLine":91,"groupId":"6203","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecodeFormatDescriptionEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ac/0584d82fe875d5c327ec6823fdad429774b781.src","preCode":"    public void assertDecodeFormatDescriptionEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.FORMAT_DESCRIPTION_EVENT.getValue(), (short) 19);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(4);\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getChecksumLength(), is(4));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-02-06 00:37:52","commitOrder":2,"curCode":"    public void assertDecodeTableMapEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.TABLE_MAP_EVENT.getValue(), (short) 0);\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getTableMap().size(), is(1));\n        assertThat(binlogContext.getTableMap().get(0L), instanceOf(MySQLBinlogTableMapEventPacket.class));\n    }\n","date":"2021-02-06 00:37:52","endLine":101,"groupId":"6203","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecodeTableMapEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ac/0584d82fe875d5c327ec6823fdad429774b781.src","preCode":"    public void assertDecodeTableMapEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.TABLE_MAP_EVENT.getValue(), (short) 0);\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getTableMap().size(), is(1));\n        assertThat(binlogContext.getTableMap().get(0L), instanceOf(MySQLBinlogTableMapEventPacket.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"9424b261f6a125a06890c706bf56f7dd410423f3","commitMessage":"@@@For code style (#9355)\n\n* Remove useless codes\n\n* For code style\n\n* For code style\n\n* For code style","date":"2021-02-06 00:37:52","modifiedFileCount":"77","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 13:57:46","codes":[{"authorDate":"2021-07-27 13:57:46","commitOrder":3,"curCode":"    public void assertDecodeFormatDescriptionEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.FORMAT_DESCRIPTION_EVENT.getValue(), (short) 19);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(4);\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertTrue(decodedEvents.isEmpty());\n        assertThat(binlogContext.getChecksumLength(), is(4));\n    }\n","date":"2021-07-27 13:57:46","endLine":92,"groupId":"102041","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertDecodeFormatDescriptionEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/e1a016fcc3296759cc186a37827620771b139b.src","preCode":"    public void assertDecodeFormatDescriptionEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.FORMAT_DESCRIPTION_EVENT.getValue(), (short) 19);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(4);\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getChecksumLength(), is(4));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2021-07-27 13:57:46","commitOrder":3,"curCode":"    public void assertDecodeTableMapEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.TABLE_MAP_EVENT.getValue(), (short) 0);\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertTrue(decodedEvents.isEmpty());\n        assertThat(binlogContext.getTableMap().size(), is(1));\n        assertThat(binlogContext.getTableMap().get(0L), instanceOf(MySQLBinlogTableMapEventPacket.class));\n    }\n","date":"2021-07-27 13:57:46","endLine":102,"groupId":"102041","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertDecodeTableMapEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/e1a016fcc3296759cc186a37827620771b139b.src","preCode":"    public void assertDecodeTableMapEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.TABLE_MAP_EVENT.getValue(), (short) 0);\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(0));\n        assertThat(binlogContext.getTableMap().size(), is(1));\n        assertThat(binlogContext.getTableMap().get(0L), instanceOf(MySQLBinlogTableMapEventPacket.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"a2a03362cd71d2e11d4067f9215ca2bd344b5a5d","commitMessage":"@@@Use assertTrue(xxx.isEmpty()) to instead of assertThat(xxx.size().  is(0)) (#11531)\n\n","date":"2021-07-27 13:57:46","modifiedFileCount":"21","status":"M","submitter":"Liang Zhang"}]
