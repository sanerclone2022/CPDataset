[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public ASTNode visitUpdate(final MySQLStatementParser.UpdateContext ctx) {\n        MySQLUpdateStatement result = new MySQLUpdateStatement();\n        TableSegment tableSegment = (TableSegment) visit(ctx.tableReferences());\n        result.setTableSegment(tableSegment);\n        result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":872,"groupId":"6190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitUpdate","params":"(finalMySQLStatementParser.UpdateContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitUpdate(final MySQLStatementParser.UpdateContext ctx) {\n        MySQLUpdateStatement result = new MySQLUpdateStatement();\n        TableSegment tableSegment = (TableSegment) visit(ctx.tableReferences());\n        result.setTableSegment(tableSegment);\n        result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":856,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public ASTNode visitDelete(final MySQLStatementParser.DeleteContext ctx) {\n        MySQLDeleteStatement result = new MySQLDeleteStatement();\n        if (null != ctx.multipleTablesClause()) {\n            result.setTableSegment((TableSegment) visit(ctx.multipleTablesClause()));\n        } else {\n            result.setTableSegment((TableSegment) visit(ctx.singleTableClause()));\n        }\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":937,"groupId":"6190","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDelete","params":"(finalMySQLStatementParser.DeleteContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitDelete(final MySQLStatementParser.DeleteContext ctx) {\n        MySQLDeleteStatement result = new MySQLDeleteStatement();\n        if (null != ctx.multipleTablesClause()) {\n            result.setTableSegment((TableSegment) visit(ctx.multipleTablesClause()));\n        } else {\n            result.setTableSegment((TableSegment) visit(ctx.singleTableClause()));\n        }\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":919,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-11-16 12:59:49","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":2,"curCode":"    public ASTNode visitUpdate(final UpdateContext ctx) {\n        MySQLUpdateStatement result = new MySQLUpdateStatement();\n        TableSegment tableSegment = (TableSegment) visit(ctx.tableReferences());\n        result.setTableSegment(tableSegment);\n        result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":971,"groupId":"6190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitUpdate","params":"(finalUpdateContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitUpdate(final MySQLStatementParser.UpdateContext ctx) {\n        MySQLUpdateStatement result = new MySQLUpdateStatement();\n        TableSegment tableSegment = (TableSegment) visit(ctx.tableReferences());\n        result.setTableSegment(tableSegment);\n        result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":955,"status":"M"},{"authorDate":"2020-11-16 12:59:49","commitOrder":2,"curCode":"    public ASTNode visitDelete(final DeleteContext ctx) {\n        MySQLDeleteStatement result = new MySQLDeleteStatement();\n        if (null != ctx.multipleTablesClause()) {\n            result.setTableSegment((TableSegment) visit(ctx.multipleTablesClause()));\n        } else {\n            result.setTableSegment((TableSegment) visit(ctx.singleTableClause()));\n        }\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":1036,"groupId":"6190","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDelete","params":"(finalDeleteContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitDelete(final MySQLStatementParser.DeleteContext ctx) {\n        MySQLDeleteStatement result = new MySQLDeleteStatement();\n        if (null != ctx.multipleTablesClause()) {\n            result.setTableSegment((TableSegment) visit(ctx.multipleTablesClause()));\n        } else {\n            result.setTableSegment((TableSegment) visit(ctx.singleTableClause()));\n        }\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1018,"status":"M"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"},{"authorTime":"2020-12-24 00:26:44","codes":[{"authorDate":"2020-12-24 00:26:44","commitOrder":3,"curCode":"    public ASTNode visitUpdate(final UpdateContext ctx) {\n        MySQLUpdateStatement result = new MySQLUpdateStatement();\n        TableSegment tableSegment = (TableSegment) visit(ctx.tableReferences());\n        result.setTableSegment(tableSegment);\n        result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","date":"2020-12-24 00:26:44","endLine":1042,"groupId":"101458","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitUpdate","params":"(finalUpdateContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e2/b2a499c30d408203074c056c50c8e15fe2c4f6.src","preCode":"    public ASTNode visitUpdate(final UpdateContext ctx) {\n        MySQLUpdateStatement result = new MySQLUpdateStatement();\n        TableSegment tableSegment = (TableSegment) visit(ctx.tableReferences());\n        result.setTableSegment(tableSegment);\n        result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1026,"status":"M"},{"authorDate":"2020-12-24 00:26:44","commitOrder":3,"curCode":"    public ASTNode visitDelete(final DeleteContext ctx) {\n        MySQLDeleteStatement result = new MySQLDeleteStatement();\n        if (null != ctx.multipleTablesClause()) {\n            result.setTableSegment((TableSegment) visit(ctx.multipleTablesClause()));\n        } else {\n            result.setTableSegment((TableSegment) visit(ctx.singleTableClause()));\n        }\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","date":"2020-12-24 00:26:44","endLine":1107,"groupId":"101458","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDelete","params":"(finalDeleteContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e2/b2a499c30d408203074c056c50c8e15fe2c4f6.src","preCode":"    public ASTNode visitDelete(final DeleteContext ctx) {\n        MySQLDeleteStatement result = new MySQLDeleteStatement();\n        if (null != ctx.multipleTablesClause()) {\n            result.setTableSegment((TableSegment) visit(ctx.multipleTablesClause()));\n        } else {\n            result.setTableSegment((TableSegment) visit(ctx.singleTableClause()));\n        }\n        if (null != ctx.whereClause()) {\n            result.setWhere((WhereSegment) visit(ctx.whereClause()));\n        }\n        if (null != ctx.orderByClause()) {\n            result.setOrderBy((OrderBySegment) visit(ctx.orderByClause()));\n        }\n        if (null != ctx.limitClause()) {\n            result.setLimit((LimitSegment) visit(ctx.limitClause()));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1089,"status":"M"}],"commitId":"ab45b9dba391d6bd904ff8da6b596f1d1299a241","commitMessage":"@@@Refactor for code format (#8743)\n\n* Refactor MySQLSQLStatVisitor\n\n* For code format","date":"2020-12-24 00:26:44","modifiedFileCount":"15","status":"M","submitter":"Liang Zhang"}]
