[{"authorTime":"2021-07-01 17:47:55","codes":[{"authorDate":"2021-07-01 17:47:55","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedAssignmentValue expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n            \r\n        } else if (actual instanceof ExpressionProjectionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (ExpressionProjectionSegment) actual, expected.getCommonExpression());\n        } else if (actual instanceof ColumnSegment) {\n            ColumnAssert.assertIs(assertContext, (ColumnSegment) actual, expected.getColumn());\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":56,"groupId":"8802","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalExpressionSegmentactual@finalExpectedAssignmentValueexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c6/82698af67ffccd1f428745207009a6768d9c16.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedAssignmentValue expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n            \r\n        } else if (actual instanceof ExpressionProjectionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (ExpressionProjectionSegment) actual, expected.getCommonExpression());\n        } else if (actual instanceof ColumnSegment) {\n            ColumnAssert.assertIs(assertContext, (ColumnSegment) actual, expected.getColumn());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/segment/assignment/AssignmentValueAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2021-07-01 17:47:55","commitOrder":1,"curCode":"    private static void assertParameter(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedCallParameter expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n        } else if (actual instanceof CommonExpressionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (CommonExpressionSegment) actual, expected.getCommonExpression());\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":76,"groupId":"8802","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"assertParameter","params":"(finalSQLCaseAssertContextassertContext@finalExpressionSegmentactual@finalExpectedCallParameterexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/da/76d797c7899422df2e8fa32035ea7a5f2ec41c.src","preCode":"    private static void assertParameter(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedCallParameter expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n        } else if (actual instanceof CommonExpressionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (CommonExpressionSegment) actual, expected.getCommonExpression());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/CallStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"71c18596a4427b83e98bd0cb6b32319e297d1373","commitMessage":"@@@add new parser test module (#11083)\n\n","date":"2021-07-01 17:47:55","modifiedFileCount":"0","status":"B","submitter":"totalo"},{"authorTime":"2021-07-01 17:47:55","codes":[{"authorDate":"2021-08-22 12:23:28","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedAssignmentValue expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n            \r\n        } else if (actual instanceof ExpressionProjectionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (ExpressionProjectionSegment) actual, expected.getCommonExpression());\n        } else if (actual instanceof ColumnSegment) {\n            ColumnAssert.assertIs(assertContext, (ColumnSegment) actual, expected.getColumn());\n        } else if (actual instanceof SubqueryExpressionSegment) {\n            ExpressionAssert.assertSubqueryExpression(assertContext, (SubqueryExpressionSegment) actual, expected.getSubquery());\n        }\n    }\n","date":"2021-08-22 12:23:28","endLine":59,"groupId":"102058","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalExpressionSegmentactual@finalExpectedAssignmentValueexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ab/0c1a54753fde8a517fc2c2a5fa192d0e41cd20.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedAssignmentValue expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n            \r\n        } else if (actual instanceof ExpressionProjectionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (ExpressionProjectionSegment) actual, expected.getCommonExpression());\n        } else if (actual instanceof ColumnSegment) {\n            ColumnAssert.assertIs(assertContext, (ColumnSegment) actual, expected.getColumn());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/segment/assignment/AssignmentValueAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-07-01 17:47:55","commitOrder":2,"curCode":"    private static void assertParameter(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedCallParameter expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n        } else if (actual instanceof CommonExpressionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (CommonExpressionSegment) actual, expected.getCommonExpression());\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":76,"groupId":"102058","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertParameter","params":"(finalSQLCaseAssertContextassertContext@finalExpressionSegmentactual@finalExpectedCallParameterexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/da/76d797c7899422df2e8fa32035ea7a5f2ec41c.src","preCode":"    private static void assertParameter(final SQLCaseAssertContext assertContext, final ExpressionSegment actual, final ExpectedCallParameter expected) {\n        if (actual instanceof ParameterMarkerExpressionSegment) {\n            ExpressionAssert.assertParameterMarkerExpression(assertContext, (ParameterMarkerExpressionSegment) actual, expected.getParameterMarkerExpression());\n        } else if (actual instanceof LiteralExpressionSegment) {\n            ExpressionAssert.assertLiteralExpression(assertContext, (LiteralExpressionSegment) actual, expected.getLiteralExpression());\n        } else if (actual instanceof CommonExpressionSegment) {\n            ExpressionAssert.assertCommonExpression(assertContext, (CommonExpressionSegment) actual, expected.getCommonExpression());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/CallStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"}],"commitId":"3c51144dafb300617a9a84558b6d87704f826c6a","commitMessage":"@@@Add Oracle SQL - Update statement (#11692)\n\n* add oracle update definition\n\n* add multi-column in an assignment\n\n* make AssignmentSegment into abstract.  define new ColumnAssignmentSegment and refactor AssignmentSegment related code.\n\n* utilize ColumnAssignmentSegment to create an instance type of AssignmentSegment\n\n* set ColumnAssignmentSegment's columns field to final and uninitialize it\n\n* remove commented code","date":"2021-08-22 12:23:28","modifiedFileCount":"27","status":"M","submitter":"Thanoshan MV"}]
