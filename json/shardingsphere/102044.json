[{"authorTime":"2021-01-04 16:07:58","codes":[{"authorDate":"2021-01-04 16:07:58","commitOrder":1,"curCode":"    public void assertDecodeUpdateRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.UPDATE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(UpdateRowsEvent.class));\n    }\n","date":"2021-01-04 16:07:58","endLine":126,"groupId":"6206","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecodeUpdateRowEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a5/b34bf827bc16ec9a31dd35b55b5a24e048a452.src","preCode":"    public void assertDecodeUpdateRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.UPDATE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(UpdateRowsEvent.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"},{"authorDate":"2021-01-04 16:07:58","commitOrder":1,"curCode":"    public void assertDecodeDeleteRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.DELETE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(DeleteRowsEvent.class));\n    }\n","date":"2021-01-04 16:07:58","endLine":138,"groupId":"6206","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecodeDeleteRowEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a5/b34bf827bc16ec9a31dd35b55b5a24e048a452.src","preCode":"    public void assertDecodeDeleteRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.DELETE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(DeleteRowsEvent.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"fad55398b146a3416d3742989172d924c42d8423","commitMessage":"@@@Add shardingsphere-scaling-dialect module and move scaling-mysql/postgresql into (#8874)\n\nCo-authored-by: qiulu3 <Lucas209910>","date":"2021-01-04 16:07:58","modifiedFileCount":"0","status":"B","submitter":"?? Lucas"},{"authorTime":"2021-02-06 00:37:52","codes":[{"authorDate":"2021-02-06 00:37:52","commitOrder":2,"curCode":"    public void assertDecodeUpdateRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.UPDATE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(UpdateRowsEvent.class));\n    }\n","date":"2021-02-06 00:37:52","endLine":125,"groupId":"102044","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecodeUpdateRowEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ac/0584d82fe875d5c327ec6823fdad429774b781.src","preCode":"    public void assertDecodeUpdateRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.UPDATE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(UpdateRowsEvent.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2021-02-06 00:37:52","commitOrder":2,"curCode":"    public void assertDecodeDeleteRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.DELETE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new LinkedList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(DeleteRowsEvent.class));\n    }\n","date":"2021-02-06 00:37:52","endLine":137,"groupId":"102044","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecodeDeleteRowEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ac/0584d82fe875d5c327ec6823fdad429774b781.src","preCode":"    public void assertDecodeDeleteRowEvent() {\n        when(byteBuf.readUnsignedByte()).thenReturn((short) 0, (short) 0, (short) MySQLBinlogEventType.DELETE_ROWS_EVENTv2.getValue(), (short) 0);\n        when(byteBuf.readUnsignedShortLE()).thenReturn(2);\n        binlogContext.getTableMap().put(0L, tableMapEventPacket);\n        when(tableMapEventPacket.getColumnDefs()).thenReturn(Collections.emptyList());\n        List<Object> decodedEvents = new ArrayList<>();\n        binlogEventPacketDecoder.decode(null, byteBuf, decodedEvents);\n        assertThat(decodedEvents.size(), is(1));\n        assertThat(decodedEvents.get(0), instanceOf(DeleteRowsEvent.class));\n    }\n","realPath":"shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-mysql/src/test/java/org/apache/shardingsphere/scaling/mysql/client/netty/MySQLBinlogEventPacketDecoderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"9424b261f6a125a06890c706bf56f7dd410423f3","commitMessage":"@@@For code style (#9355)\n\n* Remove useless codes\n\n* For code style\n\n* For code style\n\n* For code style","date":"2021-02-06 00:37:52","modifiedFileCount":"77","status":"M","submitter":"Liang Zhang"}]
