[{"authorTime":"2021-06-05 16:48:03","codes":[{"authorDate":"2021-06-05 16:48:03","commitOrder":1,"curCode":"    private Collection<SQLToken> getAddColumnTokens(final String tableName, final AddColumnDefinitionSegment addColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnDefinitionSegment each : addColumnDefinitionSegment.getColumnDefinitions()) {\n            String columnName = each.getColumnName().getIdentifier().getValue();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getAddColumnTokens(tableName, columnName, addColumnDefinitionSegment, each));\n            }\n        }\n        return result;\n    }\n","date":"2021-06-05 16:48:03","endLine":75,"groupId":"3886","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAddColumnTokens","params":"(finalStringtableName@finalAddColumnDefinitionSegmentaddColumnDefinitionSegment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/35/428df9cf45eae0c6e8b1e1bd23e6443b6c968c.src","preCode":"    private Collection<SQLToken> getAddColumnTokens(final String tableName, final AddColumnDefinitionSegment addColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnDefinitionSegment each : addColumnDefinitionSegment.getColumnDefinitions()) {\n            String columnName = each.getColumnName().getIdentifier().getValue();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getAddColumnTokens(tableName, columnName, addColumnDefinitionSegment, each));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2021-06-05 16:48:03","commitOrder":1,"curCode":"    private Collection<SQLToken> getDropColumnTokens(final String tableName, final DropColumnDefinitionSegment dropColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnSegment each : dropColumnDefinitionSegment.getColumns()) {\n            String columnName = each.getQualifiedName();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getDropColumnTokens(tableName, columnName, each, dropColumnDefinitionSegment));\n            }\n        }\n        return result;\n    }\n","date":"2021-06-05 16:48:03","endLine":128,"groupId":"670","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDropColumnTokens","params":"(finalStringtableName@finalDropColumnDefinitionSegmentdropColumnDefinitionSegment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/35/428df9cf45eae0c6e8b1e1bd23e6443b6c968c.src","preCode":"    private Collection<SQLToken> getDropColumnTokens(final String tableName, final DropColumnDefinitionSegment dropColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnSegment each : dropColumnDefinitionSegment.getColumns()) {\n            String columnName = each.getQualifiedName();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getDropColumnTokens(tableName, columnName, each, dropColumnDefinitionSegment));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"78da9d03eb0ae28c28d4d8f4f45f84303a69986e","commitMessage":"@@@Merge encrypt feature to core module (#10667)\n\n* Merge encrypt feature to core module\n\n* Merge encrypt feature to core module\n\n* Merge encrypt feature to core module","date":"2021-06-05 16:48:03","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-29 16:03:33","codes":[{"authorDate":"2021-06-05 16:48:03","commitOrder":2,"curCode":"    private Collection<SQLToken> getAddColumnTokens(final String tableName, final AddColumnDefinitionSegment addColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnDefinitionSegment each : addColumnDefinitionSegment.getColumnDefinitions()) {\n            String columnName = each.getColumnName().getIdentifier().getValue();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getAddColumnTokens(tableName, columnName, addColumnDefinitionSegment, each));\n            }\n        }\n        return result;\n    }\n","date":"2021-06-05 16:48:03","endLine":75,"groupId":"1298","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAddColumnTokens","params":"(finalStringtableName@finalAddColumnDefinitionSegmentaddColumnDefinitionSegment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/35/428df9cf45eae0c6e8b1e1bd23e6443b6c968c.src","preCode":"    private Collection<SQLToken> getAddColumnTokens(final String tableName, final AddColumnDefinitionSegment addColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnDefinitionSegment each : addColumnDefinitionSegment.getColumnDefinitions()) {\n            String columnName = each.getColumnName().getIdentifier().getValue();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getAddColumnTokens(tableName, columnName, addColumnDefinitionSegment, each));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2021-07-29 16:03:33","commitOrder":2,"curCode":"    private Collection<SQLToken> getDropColumnTokens(final String tableName, final DropColumnDefinitionSegment dropColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnSegment each : dropColumnDefinitionSegment.getColumns()) {\n            String columnName = each.getQualifiedName();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getDropColumnTokens(tableName, columnName, each, dropColumnDefinitionSegment));\n            } else {\n                result.add(new RemoveToken(dropColumnDefinitionSegment.getStartIndex() - 1, each.getStopIndex()));\n                result.add(new EncryptAlterTableToken(each.getStopIndex() + 1, each.getStopIndex(), columnName, \"DROP COLUMN\"));\n            }\n        }\n        return result;\n    }\n","date":"2021-07-29 16:03:33","endLine":169,"groupId":"1298","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getDropColumnTokens","params":"(finalStringtableName@finalDropColumnDefinitionSegmentdropColumnDefinitionSegment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/52/4bbf0d5438a161fe2651c684d3b17c33be28a3.src","preCode":"    private Collection<SQLToken> getDropColumnTokens(final String tableName, final DropColumnDefinitionSegment dropColumnDefinitionSegment) {\n        Collection<SQLToken> result = new LinkedList<>();\n        for (ColumnSegment each : dropColumnDefinitionSegment.getColumns()) {\n            String columnName = each.getQualifiedName();\n            Optional<EncryptAlgorithm> encryptor = getEncryptRule().findEncryptor(tableName, columnName);\n            if (encryptor.isPresent()) {\n                result.addAll(getDropColumnTokens(tableName, columnName, each, dropColumnDefinitionSegment));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"c05c7bb06d4cc42621550add2e0bd5c879c9fcaf","commitMessage":"@@@fix issue #11103 (#11385)\n\n* fix issue #11103\n\n* fix issue #11103\n\n* fix issue #11103\n\n* fix issue #11103\n\n* fix issue #11103\n\n* fix issue #11105\n\n* fix issue #11103. #11105\n\n* style fix\n\n* style fix\n\n* modify variable naming","date":"2021-07-29 16:03:33","modifiedFileCount":"4","status":"M","submitter":"arthasking123"}]
