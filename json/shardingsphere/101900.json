[{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-05-16 16:30:07","commitOrder":1,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-05-16 16:30:07","endLine":61,"groupId":"13743","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/01/14fff891fa5050943368a920b4bedd9d816528.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"},{"authorDate":"2020-05-16 16:30:07","commitOrder":1,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-05-16 16:30:07","endLine":79,"groupId":"12850","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/01/14fff891fa5050943368a920b4bedd9d816528.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"60b82df2df371512c4a2d40f562a6ffa1349c2e1","commitMessage":"@@@Rename shardingsphere-underlying to shardingsphere-infra (#5638)\n\n* Rename shardingsphere-underlying to shardingsphere-infra\n\n* Rename shardingsphere-infra's subprojects\n\n* Rename shardingsphere-infra's subprojects\n\n* rename package from org.apache.shardingsphere.underlying.common to org.apache.shardingsphere.infra\n\n* rename package from org.apache.shardingsphere.underlying.executor to org.apache.shardingsphere.infra.executor\n\n* rename package from org.apache.shardingsphere.underlying.merge to org.apache.shardingsphere.infra.merge\n\n* rename package from org.apache.shardingsphere.underlying.route to org.apache.shardingsphere.infra.route\n\n* rename package from org.apache.shardingsphere.underlying.rewrite to org.apache.shardingsphere.infra.rewrite","date":"2020-05-16 16:30:07","modifiedFileCount":"488","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-06-12 16:34:42","commitOrder":2,"curCode":"    public void assertGetValue() {\n        Properties properties = new Properties();\n        properties.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        properties.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        properties.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(properties);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-06-12 16:34:42","endLine":61,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/51/98a68c8772c92a52d47baa78665dac7de05564.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-05-16 16:30:07","commitOrder":2,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-05-16 16:30:07","endLine":79,"groupId":"12850","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/01/14fff891fa5050943368a920b4bedd9d816528.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"}],"commitId":"b200ed8e6833ebdfa95f88f7cbd1b16af1f65d16","commitMessage":"@@@Refactor key generator api (#6010)\n\n* rename KeyGeneratorConfiguration.algorithm\n\n* rename KeyGenerateStrategyConfiguration\n\n* refactor org.apache.shardingsphere.sharding.api.config.strategy package\n\n* add builder package\n\n* refactor key generator api\n\n* refactor key generator api\n\n* unify props and properties","date":"2020-06-12 16:34:42","modifiedFileCount":"79","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-06-13 11:39:32","commitOrder":3,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-06-13 11:39:32","endLine":61,"groupId":"13743","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/01/14fff891fa5050943368a920b4bedd9d816528.src","preCode":"    public void assertGetValue() {\n        Properties properties = new Properties();\n        properties.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        properties.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        properties.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        properties.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(properties);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-05-16 16:30:07","commitOrder":3,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-05-16 16:30:07","endLine":79,"groupId":"12850","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/01/14fff891fa5050943368a920b4bedd9d816528.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"}],"commitId":"75824a28d2ffe9387ccaf9849f4fbc91a0037257","commitMessage":"@@@Unify properties and props (#6019)\n\n* Unify properties and props\n\n* Unify properties and props\n\n* Merge branch 'master' into dev\n\n# Conflicts:\n#\tshardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-common/src/main/java/org/apache/shardingsphere/sharding/strategy/algorithm/sharding/ModuloShardingAlgorithm.java\n#\tshardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/standard/ShardingStandardRoutingEngine.java\n#\tshardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/Bootstrap.java","date":"2020-06-13 11:39:32","modifiedFileCount":"243","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-06-17 21:09:30","codes":[{"authorDate":"2020-06-17 21:09:30","commitOrder":4,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-06-17 21:09:30","endLine":57,"groupId":"13743","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/27/7ff818cfa8e5eb2be8b0d34b9072b646df1d08.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-06-17 21:09:30","commitOrder":4,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2020-06-17 21:09:30","endLine":73,"groupId":"12850","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/27/7ff818cfa8e5eb2be8b0d34b9072b646df1d08.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS), is(8));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS), is(60));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"162006152fe4a0d4cd382e06680dc1f47da96b3b","commitMessage":"@@@Add props (#6103)\n\n* Add props\n\n* Add props","date":"2020-06-17 21:09:30","modifiedFileCount":"2","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-01-11 12:48:41","codes":[{"authorDate":"2021-01-11 12:48:41","commitOrder":5,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-01-11 12:48:41","endLine":55,"groupId":"13743","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f2/dc28e34bd4581b7594b3dfe6308364230ef6da.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2021-01-11 12:48:41","commitOrder":5,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-01-11 12:48:41","endLine":70,"groupId":"12850","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f2/dc28e34bd4581b7594b3dfe6308364230ef6da.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"135e61f24a728bc79a560999a293316b02e9dd42","commitMessage":"@@@Remove hook interface  (#8957)\n\n* remove hook interface for OpenTracing","date":"2021-01-11 12:48:41","modifiedFileCount":"6","status":"M","submitter":"xiaoyu"},{"authorTime":"2021-02-03 12:42:37","codes":[{"authorDate":"2021-02-03 12:42:37","commitOrder":6,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-02-03 12:42:37","endLine":53,"groupId":"13743","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/eb/26058c2c2427413dc0c556c50ddc68e1ec343b.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2021-02-03 12:42:37","commitOrder":6,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-02-03 12:42:37","endLine":67,"groupId":"12850","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/eb/26058c2c2427413dc0c556c50ddc68e1ec343b.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE), is(Runtime.getRuntime().availableProcessors() * 2));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"6116ab7812d7a2e76518f5d5602ba776b7af269e","commitMessage":"@@@#8903.  avoid lock wait timeout (#9279)\n\n","date":"2021-02-03 12:42:37","modifiedFileCount":"4","status":"M","submitter":"Zhang Yonglun"},{"authorTime":"2021-05-12 17:28:54","codes":[{"authorDate":"2021-05-12 17:28:54","commitOrder":7,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-05-12 17:28:54","endLine":51,"groupId":"13743","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d9/bf94a3cfcb2abe17a41e3503d14890166579fa.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(), Boolean.FALSE.toString());\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2021-05-12 17:28:54","commitOrder":7,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-05-12 17:28:54","endLine":64,"groupId":"13964","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d9/bf94a3cfcb2abe17a41e3503d14890166579fa.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"3aedaaa99634e7e7a5d0a182db749f537873aa5f","commitMessage":"@@@Move queryWithCipherColumn configuration from props to encrypt rule (#10313)\n\n* Move queryWithCipherColumn configuration from props to encrypt rule\n\n* Update spring namespace\n\n* Update docs","date":"2021-05-12 17:28:54","modifiedFileCount":"19","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-29 21:43:02","codes":[{"authorDate":"2021-08-29 21:43:02","commitOrder":8,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-08-29 21:43:02","endLine":49,"groupId":"101900","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ba/a77cbee2e8764e0e6b021d794b245c9eff8f5e.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(), \"20\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(), \"XA\");\n        props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(), Boolean.TRUE.toString());\n        props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(), Boolean.TRUE.toString());\n        ConfigurationProperties actual = new ConfigurationProperties(props);\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(20));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"XA\"));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2021-08-29 21:43:02","commitOrder":8,"curCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","date":"2021-08-29 21:43:02","endLine":61,"groupId":"101900","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ba/a77cbee2e8764e0e6b021d794b245c9eff8f5e.src","preCode":"    public void assertGetDefaultValue() {\n        ConfigurationProperties actual = new ConfigurationProperties(new Properties());\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE));\n        assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(0));\n        assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY), is(1));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD), is(128));\n        assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE), is(\"LOCAL\"));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED));\n        assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/properties/ConfigurationPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"3a1c54d096f525c23835412a5a4068b16d28db82","commitMessage":"@@@Use transaction rule instead of props (#12090)\n\n* Add transaction configuration\n\n* Use transaction rule to process default transaction type\n\n* Use transaction rule to process default transaction type\n\n* Use transaction rule to process xa-transaction-manager-type","date":"2021-08-29 21:43:02","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"}]
