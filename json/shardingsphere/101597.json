[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":281,"groupId":"8449","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCompareSegment","params":"(finalBooleanPrimaryContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/57ffeacf154844f0a67f662de75ac1ba20bb29.src","preCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":288,"groupId":"8449","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCompareSegment","params":"(finalBooleanPrimaryContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/e15c503fad699f0ee0c02d397eedfdb12b8071.src","preCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-11-01 14:32:14","codes":[{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        return new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n    }\n","date":"2020-11-01 14:32:14","endLine":277,"groupId":"101597","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCompareSegment","params":"(finalBooleanPrimaryContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f9/5b1f3859c490d2da9c3a22636646c4aa43e292.src","preCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"},{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        return new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n    }\n","date":"2020-11-01 14:32:14","endLine":284,"groupId":"101597","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCompareSegment","params":"(finalBooleanPrimaryContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/aa/fade47bfb9b4768bf12e30db28682f53f7750f.src","preCode":"    private ASTNode createCompareSegment(final BooleanPrimaryContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.booleanPrimary());\n        ExpressionSegment right;\n        if (null != ctx.predicate()) {\n            right = (ExpressionSegment) visit(ctx.predicate());\n        } else {\n            right = (ExpressionSegment) visit(ctx.subquery());\n        }\n        String operator = null != ctx.SAFE_EQ_() ? ctx.SAFE_EQ_().getText() : ctx.comparisonOperator().getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"5d7ca41942d298dad2cc0d8efc5fc5c6872e2aec","commitMessage":"@@@Fix checkstyle (#8001)\n\n","date":"2020-11-01 14:32:14","modifiedFileCount":"16","status":"M","submitter":"Liang Zhang"}]
