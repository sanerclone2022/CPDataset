[{"authorTime":"2020-08-24 21:12:21","codes":[{"authorDate":"2020-08-24 21:12:21","commitOrder":1,"curCode":"    public void assertNewInstance() {\n        PostgreSQLTimeBinaryProtocolValue actual = new PostgreSQLTimeBinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), equalTo(8));\n        when(payload.readInt8()).thenReturn(1L);\n        assertThat(actual.read(payload), is(1L));\n        Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n        actual.write(payload, timestamp);\n        verify(payload).writeInt8(timestamp.getTime());\n    }\n","date":"2020-08-24 21:12:21","endLine":49,"groupId":"265","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c1/582ed54ee2580e5b2ccd06eaa38b9889a918cb.src","preCode":"    public void assertNewInstance() {\n        PostgreSQLTimeBinaryProtocolValue actual = new PostgreSQLTimeBinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), equalTo(8));\n        when(payload.readInt8()).thenReturn(1L);\n        assertThat(actual.read(payload), is(1L));\n        Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n        actual.write(payload, timestamp);\n        verify(payload).writeInt8(timestamp.getTime());\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLTimeBinaryProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2020-08-24 21:12:21","commitOrder":1,"curCode":"    public void assertNewInstance() {\n        PostgreSQLInt2BinaryProtocolValue actual = new PostgreSQLInt2BinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), equalTo(2));\n        when(payload.readInt2()).thenReturn(1);\n        assertThat(actual.read(payload), is(1));\n        actual.write(payload, 1);\n        verify(payload).writeInt2(1);\n    }\n","date":"2020-08-24 21:12:21","endLine":46,"groupId":"10725","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/35/645ee632c181ce3ba69a27a83ef8bba2f6e388.src","preCode":"    public void assertNewInstance() {\n        PostgreSQLInt2BinaryProtocolValue actual = new PostgreSQLInt2BinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), equalTo(2));\n        when(payload.readInt2()).thenReturn(1);\n        assertThat(actual.read(payload), is(1));\n        actual.write(payload, 1);\n        verify(payload).writeInt2(1);\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLInt2BinaryProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"45d0cc11b441163338c03eb5cb4d648006e39113","commitMessage":"@@@add test cases (#7030)\n\n* add test cases\n\n* add test cases\n\n* add test cases","date":"2020-08-24 21:12:21","modifiedFileCount":"0","status":"B","submitter":"Yanjie Zhou"},{"authorTime":"2021-05-02 13:06:46","codes":[{"authorDate":"2021-05-02 13:06:46","commitOrder":2,"curCode":"    public void assertNewInstance() {\n        PostgreSQLTimeBinaryProtocolValue actual = new PostgreSQLTimeBinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), is(8));\n        when(payload.readInt8()).thenReturn(1L);\n        assertThat(actual.read(payload, 8), is(1L));\n        Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n        actual.write(payload, timestamp);\n        verify(payload).writeInt8(timestamp.getTime());\n    }\n","date":"2021-05-02 13:06:46","endLine":48,"groupId":"101218","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ff/e51b42ab0f048cfedb3d76584e18a37f2ea1c5.src","preCode":"    public void assertNewInstance() {\n        PostgreSQLTimeBinaryProtocolValue actual = new PostgreSQLTimeBinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), equalTo(8));\n        when(payload.readInt8()).thenReturn(1L);\n        assertThat(actual.read(payload), is(1L));\n        Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n        actual.write(payload, timestamp);\n        verify(payload).writeInt8(timestamp.getTime());\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLTimeBinaryProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2021-05-02 13:06:46","commitOrder":2,"curCode":"    public void assertNewInstance() {\n        PostgreSQLInt2BinaryProtocolValue actual = new PostgreSQLInt2BinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), is(2));\n        when(payload.readInt2()).thenReturn(1);\n        assertThat(actual.read(payload, 2), is(1));\n        actual.write(payload, 1);\n        verify(payload).writeInt2(1);\n    }\n","date":"2021-05-02 13:06:46","endLine":45,"groupId":"101218","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2e/ee4e3abc14b780281f519d21b9a0d154a9515d.src","preCode":"    public void assertNewInstance() {\n        PostgreSQLInt2BinaryProtocolValue actual = new PostgreSQLInt2BinaryProtocolValue();\n        assertThat(actual.getColumnLength(null), equalTo(2));\n        when(payload.readInt2()).thenReturn(1);\n        assertThat(actual.read(payload), is(1));\n        actual.write(payload, 1);\n        verify(payload).writeInt2(1);\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLInt2BinaryProtocolValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"222776c6c2d5325f699a80b1fa1f2be65ebe43f4","commitMessage":"@@@Add parameterValueLength for PostgreSQLBinaryProtocolValue (#10238)\n\n* Add parameterValueLength for PostgreSQLBinaryProtocolValue\n\n* Add parameterValueLength for PostgreSQLBinaryProtocolValue","date":"2021-05-02 13:06:46","modifiedFileCount":"37","status":"M","submitter":"Liang Zhang"}]
