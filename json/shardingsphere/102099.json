[{"authorTime":"2021-07-01 17:47:55","codes":[{"authorDate":"2021-07-01 17:47:55","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateShardingBroadcastTableRulesStatement actual, final CreateShardingBroadcastTableRulesStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertThat(assertContext.getText(\"create sharding broadcast table rule assertion error: \"), actual.getTables(), is(expected.getTables()));\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":51,"groupId":"6240","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalCreateShardingBroadcastTableRulesStatementactual@finalCreateShardingBroadcastTableRulesStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/72/9ab365c43a6b4384dbb4f1782db936f97b46e5.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateShardingBroadcastTableRulesStatement actual, final CreateShardingBroadcastTableRulesStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertThat(assertContext.getText(\"create sharding broadcast table rule assertion error: \"), actual.getTables(), is(expected.getTables()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/create/impl/CreateShardingBroadcastTableRulesStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2021-07-01 17:47:55","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final DropReadwriteSplittingRuleStatement actual, final DropReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertThat(assertContext.getText(\"read-write splitting assertion error: \"), actual.getRuleNames(), is(expected.getRules()));\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":51,"groupId":"6240","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalDropReadwriteSplittingRuleStatementactual@finalDropReadWriteSplittingRuleStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cd/43b6f9e7c073d3186054c3a2043b92029681fc.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final DropReadwriteSplittingRuleStatement actual, final DropReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertThat(assertContext.getText(\"read-write splitting assertion error: \"), actual.getRuleNames(), is(expected.getRules()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/drop/impl/DropReadwriteSplittingRuleStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"71c18596a4427b83e98bd0cb6b32319e297d1373","commitMessage":"@@@add new parser test module (#11083)\n\n","date":"2021-07-01 17:47:55","modifiedFileCount":"0","status":"B","submitter":"totalo"},{"authorTime":"2021-08-13 18:15:48","codes":[{"authorDate":"2021-08-13 18:15:48","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateShardingBroadcastTableRulesStatement actual, final CreateShardingBroadcastTableRulesStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual statement should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual statement should exist.\"), actual);\n            assertThat(assertContext.getText(\"create sharding broadcast table rule assertion error: \"), actual.getTables(), is(expected.getTables()));\n        }\n    }\n","date":"2021-08-13 18:15:48","endLine":51,"groupId":"102099","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalCreateShardingBroadcastTableRulesStatementactual@finalCreateShardingBroadcastTableRulesStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/81/36f70440d0cfca52751b6e5dbb58fde7c47814.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateShardingBroadcastTableRulesStatement actual, final CreateShardingBroadcastTableRulesStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertThat(assertContext.getText(\"create sharding broadcast table rule assertion error: \"), actual.getTables(), is(expected.getTables()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/create/impl/CreateShardingBroadcastTableRulesStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2021-08-13 18:15:48","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final DropReadwriteSplittingRuleStatement actual, final DropReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual statement should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual statement should exist.\"), actual);\n            assertThat(assertContext.getText(\"readwrite splitting assertion error: \"), actual.getRuleNames(), is(expected.getRules()));\n        }\n    }\n","date":"2021-08-13 18:15:48","endLine":51,"groupId":"102099","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalDropReadwriteSplittingRuleStatementactual@finalDropReadWriteSplittingRuleStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ab/adad43a6831804b91d9e9548c6def231d35d84.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final DropReadwriteSplittingRuleStatement actual, final DropReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertThat(assertContext.getText(\"read-write splitting assertion error: \"), actual.getRuleNames(), is(expected.getRules()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/drop/impl/DropReadwriteSplittingRuleStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"933ebab23d2431213c8fc9b01d9d096115eca4f8","commitMessage":"@@@Add advancedDistSQLStatement.  and implement 'preview sql'. (#11802)\n\n* Add advancedDistSQLStatement.  and implement 'preview sql'.\n\n* fix `Actual should not exist` syntax problem.","date":"2021-08-13 18:15:48","modifiedFileCount":"29","status":"M","submitter":"Raigor"}]
