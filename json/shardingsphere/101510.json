[{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":2,"curCode":"    public ASTNode visitTableReferences(final MySQLStatementParser.TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":1135,"groupId":"13485","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitTableReferences","params":"(finalMySQLStatementParser.TableReferencesContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitTableReferences(final MySQLStatementParser.TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1127,"status":"B"},{"authorDate":"2020-10-22 16:47:44","commitOrder":2,"curCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":341,"groupId":"13485","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitTableReferences","params":"(finalTableReferencesContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/85/a97b30faeab0c41cacc4170b7fefe965819968.src","preCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DMLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"NB"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-11-08 12:03:55","commitOrder":3,"curCode":"    public ASTNode visitTableReferences(final MySQLStatementParser.TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.tableReference(0));\n        if (ctx.tableReference().size() > 1) {\n            for (int i = 1; i < ctx.tableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.tableReference(i), result);\n            }\n        }\n        return result;\n    }\n","date":"2020-11-08 12:03:55","endLine":1163,"groupId":"13485","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitTableReferences","params":"(finalMySQLStatementParser.TableReferencesContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/23/d86f9a08163c55c1809612b89aa43c886cb5db.src","preCode":"    public ASTNode visitTableReferences(final MySQLStatementParser.TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1155,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":3,"curCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":341,"groupId":"13485","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitTableReferences","params":"(finalTableReferencesContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/85/a97b30faeab0c41cacc4170b7fefe965819968.src","preCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DMLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"N"}],"commitId":"b13473fbea001a4b827ff415d493e556dd64cc98","commitMessage":"@@@Fix mysql grammar (#8052)\n\n* fix mysql g4 file\n\n* fix mysql alterTable grammar\n\n* fix\n\n* fix test\n\n* Update MySQLFormatSQLVisitor.java","date":"2020-11-08 12:03:55","modifiedFileCount":"6","status":"M","submitter":"JingShang Lu"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":4,"curCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.tableReference(0));\n        if (ctx.tableReference().size() > 1) {\n            for (int i = 1; i < ctx.tableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.tableReference(i), result);\n            }\n        }\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":1207,"groupId":"101510","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitTableReferences","params":"(finalTableReferencesContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitTableReferences(final MySQLStatementParser.TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.tableReference(0));\n        if (ctx.tableReference().size() > 1) {\n            for (int i = 1; i < ctx.tableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.tableReference(i), result);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1199,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":4,"curCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":341,"groupId":"101510","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitTableReferences","params":"(finalTableReferencesContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/85/a97b30faeab0c41cacc4170b7fefe965819968.src","preCode":"    public ASTNode visitTableReferences(final TableReferencesContext ctx) {\n        TableSegment result = (TableSegment) visit(ctx.escapedTableReference(0));\n        if (ctx.escapedTableReference().size() > 1) {\n            for (int i = 1; i < ctx.escapedTableReference().size(); i++) {\n                result = generateJoinTableSourceFromEscapedTableReference(ctx.escapedTableReference(i), result);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DMLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"N"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"}]
