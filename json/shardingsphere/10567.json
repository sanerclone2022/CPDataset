[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>();\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = new HashMap<>();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","date":"2021-06-04 22:49:49","endLine":72,"groupId":"4370","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDoSharding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/86/3aa3c1bdb3f31ca96b0a905607966c39fef801.src","preCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>();\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = new HashMap<>();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>();\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = new HashMap<>();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","date":"2021-06-04 22:49:49","endLine":84,"groupId":"4370","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDoShardingWithMultiValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/86/3aa3c1bdb3f31ca96b0a905607966c39fef801.src","preCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>();\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = new HashMap<>();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 07:22:30","codes":[{"authorDate":"2021-07-27 07:22:30","commitOrder":2,"curCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = Collections.emptyMap();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","date":"2021-07-27 07:22:30","endLine":72,"groupId":"4387","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDoSharding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/96ea2b99695d93063ffb55fa656f7a17d586a1.src","preCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>();\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = new HashMap<>();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2021-07-27 07:22:30","commitOrder":2,"curCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","date":"2021-07-27 07:22:30","endLine":83,"groupId":"4387","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDoShardingWithMultiValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/96ea2b99695d93063ffb55fa656f7a17d586a1.src","preCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>();\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = new HashMap<>();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"6d7e3fe33533f8d8dd098e81d667ce57aabd625a","commitMessage":"@@@Use raw new HashMap to instead of guava (#11517)\n\n* Use raw new HashMap to instead of guava\n\n* Use raw new HashMap to instead of guava","date":"2021-07-27 07:22:30","modifiedFileCount":"69","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 07:22:30","codes":[{"authorDate":"2021-07-27 12:21:41","commitOrder":3,"curCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","date":"2021-07-27 12:21:41","endLine":71,"groupId":"4387","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDoSharding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d3/2352631f61a073fe09fce976b7115d6ee642c8.src","preCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        Map<String, Range<Comparable<?>>> rangeShardingValueMap = Collections.emptyMap();\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, rangeShardingValueMap);\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2021-07-27 07:22:30","commitOrder":3,"curCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","date":"2021-07-27 07:22:30","endLine":83,"groupId":"4387","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDoShardingWithMultiValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/96ea2b99695d93063ffb55fa656f7a17d586a1.src","preCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"dcf6c2ec12c0c43ba1075012d2a4ea3cb1f05b28","commitMessage":"@@@Remove @SuppressWarnings(\"all\") (#11525)\n\n* Remove @SuppressWarnings(\"all\")\n\n* Remove @SuppressWarnings(\"all\")","date":"2021-07-27 12:21:41","modifiedFileCount":"5","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-29 01:03:53","codes":[{"authorDate":"2021-07-29 01:03:53","commitOrder":4,"curCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Arrays.asList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(1 == actual.size() && actual.contains(\"t_order_0_0\"));\n    }\n","date":"2021-07-29 01:03:53","endLine":70,"groupId":"10567","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"assertDoSharding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/f2309b731680b849421bee01e3a3a3bd7d8b51.src","preCode":"    public void assertDoSharding() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Collections.singletonList(2));\n        sharingValueMap.put(\"order_id\", Collections.singletonList(2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.size() == 1 && actual.contains(\"t_order_0_0\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2021-07-29 01:03:53","commitOrder":4,"curCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Arrays.asList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","date":"2021-07-29 01:03:53","endLine":81,"groupId":"10567","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"assertDoShardingWithMultiValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/f2309b731680b849421bee01e3a3a3bd7d8b51.src","preCode":"    public void assertDoShardingWithMultiValue() {\n        List<String> availableTargetNames = Lists.newArrayList(\"t_order_0_0\", \"t_order_0_1\", \"t_order_1_0\", \"t_order_1_1\");\n        Map<String, Collection<Comparable<?>>> sharingValueMap = new HashMap<>(2, 1);\n        sharingValueMap.put(\"type\", Arrays.asList(1, 2));\n        sharingValueMap.put(\"order_id\", Arrays.asList(1, 2));\n        ComplexKeysShardingValue<Comparable<?>> shardingValue = new ComplexKeysShardingValue<>(\"t_order\", sharingValueMap, Collections.emptyMap());\n        Collection<String> actual = complexInlineShardingAlgorithm.doSharding(availableTargetNames, shardingValue);\n        assertTrue(actual.containsAll(availableTargetNames));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/algorithm/sharding/complex/ComplexInlineShardingAlgorithmTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"6d2d2ba7b05c29bce74525f0437e04b22a556f66","commitMessage":"@@@Use java raw new List/Set/Map to instead of guava (#11561)\n\n* Use java raw new Map to instead of guava\n\n* Use java raw new List to instead of guava\n\n* Use java raw new Set to instead of guava","date":"2021-07-29 01:03:53","modifiedFileCount":"78","status":"M","submitter":"Liang Zhang"}]
