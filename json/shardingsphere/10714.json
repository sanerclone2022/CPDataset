[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    private void assertCompareToForDesc(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(\n            selectStatement, new GroupByContext(Collections.emptyList()), createOrderBy(), createProjectionsContext(), null);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"3\", \"4\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertTrue(orderByValue1.compareTo(orderByValue2) > 0);\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","date":"2021-06-04 22:49:49","endLine":157,"groupId":"1256","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCompareToForDesc","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/62/e3c802e004fcd4ffdc6b7c468181a9a2a7a07c.src","preCode":"    private void assertCompareToForDesc(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(\n            selectStatement, new GroupByContext(Collections.emptyList()), createOrderBy(), createProjectionsContext(), null);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"3\", \"4\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertTrue(orderByValue1.compareTo(orderByValue2) > 0);\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    private void assertCompareToWhenEqual(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(\n            selectStatement, new GroupByContext(Collections.emptyList()), createOrderBy(), createProjectionsContext(), null);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertThat(orderByValue1.compareTo(orderByValue2), is(0));\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","date":"2021-06-04 22:49:49","endLine":207,"groupId":"3720","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCompareToWhenEqual","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/62/e3c802e004fcd4ffdc6b7c468181a9a2a7a07c.src","preCode":"    private void assertCompareToWhenEqual(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(\n            selectStatement, new GroupByContext(Collections.emptyList()), createOrderBy(), createProjectionsContext(), null);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertThat(orderByValue1.compareTo(orderByValue2), is(0));\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-06 15:37:24","codes":[{"authorDate":"2021-08-06 15:37:24","commitOrder":2,"curCode":"    private void assertCompareToForDesc(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class);\n        selectStatement.setOrderBy(createOrderBySegment());\n        SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME, metaData),\n                Collections.emptyList(), selectStatement, DefaultSchema.LOGIC_NAME);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.get(\"table\")).thenReturn(new TableMetaData());\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"3\", \"4\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertTrue(orderByValue1.compareTo(orderByValue2) > 0);\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","date":"2021-08-06 15:37:24","endLine":160,"groupId":"10714","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertCompareToForDesc","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/56/ccca72aaa73dfda23169f12ded5abf4f1bcb5e.src","preCode":"    private void assertCompareToForDesc(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(\n            selectStatement, new GroupByContext(Collections.emptyList()), createOrderBy(), createProjectionsContext(), null);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"3\", \"4\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.DESC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertTrue(orderByValue1.compareTo(orderByValue2) > 0);\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2021-08-06 15:37:24","commitOrder":2,"curCode":"    private void assertCompareToWhenEqual(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class);\n        selectStatement.setOrderBy(createOrderBySegment());\n        SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME, metaData),\n                Collections.emptyList(), selectStatement, DefaultSchema.LOGIC_NAME);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertThat(orderByValue1.compareTo(orderByValue2), is(0));\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","date":"2021-08-06 15:37:24","endLine":212,"groupId":"10714","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertCompareToWhenEqual","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/56/ccca72aaa73dfda23169f12ded5abf4f1bcb5e.src","preCode":"    private void assertCompareToWhenEqual(final SelectStatement selectStatement) throws SQLException, NoSuchFieldException {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(\n            selectStatement, new GroupByContext(Collections.emptyList()), createOrderBy(), createProjectionsContext(), null);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        QueryResult queryResult1 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue1 = new OrderByValue(queryResult1, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue1, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue1.next());\n        QueryResult queryResult2 = createQueryResult(\"1\", \"2\");\n        OrderByValue orderByValue2 = new OrderByValue(queryResult2, Arrays.asList(\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 1, OrderDirection.ASC, OrderDirection.ASC)),\n            createOrderByItem(new IndexOrderByItemSegment(0, 0, 2, OrderDirection.DESC, OrderDirection.ASC))),\n            selectStatementContext, schema);\n        FieldSetter.setField(orderByValue2, OrderByValue.class.getDeclaredField(\"orderValuesCaseSensitive\"), Arrays.asList(false, false));\n        assertTrue(orderByValue2.next());\n        assertThat(orderByValue1.compareTo(orderByValue2), is(0));\n        assertFalse(orderByValue1.getQueryResult().next());\n        assertFalse(orderByValue2.getQueryResult().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValueTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"2843f408e67d98d3e62485c8ed89dbe08e9cb202","commitMessage":"@@@Remove test only constructor of SelectStatementContext (#11675)\n\n* TopAndRowNumberDecoratorMergedResultTest use SelectStatementContext's second constructor\n\n* PreparedShadowDataSourceRouterTest use SelectStatementContext's second constructor\n\n* GroupByMemoryMergedResultTest use SelectStatementContext's second constructor\n\n* GroupByRowComparatorTest use SelectStatementContext's second constructor\n\n* ShardingResultMergerEngineTest use SelectStatementContext's second constructor\n\n* ShardingDQLResultMergerTest use SelectStatementContext's second constructor\n\n* ShardingDQLResultMergerTest use SelectStatementContext's second constructor2\n\n* GroupByStreamMergedResultTest use SelectStatementContext's second constructor\n\n* IteratorStreamMergedResultTest use SelectStatementContext's second constructor\n\n* OrderByStreamMergedResultTest use SelectStatementContext's second constructor\n\n* SelectStatementContextTest use SelectStatementContext's second constructor\n\n* LimitDecoratorMergedResultTest use SelectStatementContext's second constructor\n\n* RowNumberDecoratorMergedResultTest use SelectStatementContext's second constructor\n\n* OrderByValueTest use SelectStatementContext's second constructor\n\n* code style\n\n* merge code","date":"2021-08-06 15:37:24","modifiedFileCount":"14","status":"M","submitter":"liguoping"}]
