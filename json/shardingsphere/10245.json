[{"authorTime":"2021-06-08 11:37:47","codes":[{"authorDate":"2021-06-05 21:57:24","commitOrder":2,"curCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_DB_DISCOVERY_DATASOURCE_NAME, NONE_DB_DISCOVERY_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","date":"2021-06-05 21:57:24","endLine":144,"groupId":"2026","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockRouteContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/b3205b272a1f4aa5629f457bcb7931884699f9.src","preCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_DB_DISCOVERY_DATASOURCE_NAME, NONE_DB_DISCOVERY_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/route/DatabaseDiscoverySQLRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"NB"},{"authorDate":"2021-06-08 11:37:47","commitOrder":2,"curCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_READWRITE_SPLITTING_DATASOURCE_NAME, NONE_READWRITE_SPLITTING_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","date":"2021-06-08 11:37:47","endLine":188,"groupId":"2026","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockRouteContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/3d54018f54f7f32a8898d65f1d3f610f78875b.src","preCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_READWRITE_SPLITTING_DATASOURCE_NAME, NONE_READWRITE_SPLITTING_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/route/ReadwriteSplittingSQLRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"}],"commitId":"064bffe3e00d9db5179d52f81d8d5dad9620a3a5","commitMessage":"@@@Correct packages and generic types (#10710)\n\n","date":"2021-06-08 11:37:47","modifiedFileCount":"0","status":"M","submitter":"???"},{"authorTime":"2021-06-08 11:37:47","codes":[{"authorDate":"2021-08-28 11:58:56","commitOrder":3,"curCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATA_SOURCE_NAME, DATA_SOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_DB_DISCOVERY_DATA_SOURCE_NAME, NONE_DB_DISCOVERY_DATA_SOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","date":"2021-08-28 11:58:56","endLine":145,"groupId":"10245","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockRouteContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ec/69fc8454f2e8b2eb2d7d3898dc8ec09a77e79c.src","preCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_DB_DISCOVERY_DATASOURCE_NAME, NONE_DB_DISCOVERY_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/route/DatabaseDiscoverySQLRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2021-06-08 11:37:47","commitOrder":3,"curCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_READWRITE_SPLITTING_DATASOURCE_NAME, NONE_READWRITE_SPLITTING_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","date":"2021-06-08 11:37:47","endLine":188,"groupId":"10245","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mockRouteContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/3d54018f54f7f32a8898d65f1d3f610f78875b.src","preCode":"    private RouteContext mockRouteContext() {\n        RouteContext result = new RouteContext();\n        RouteUnit routeUnit = new RouteUnit(new RouteMapper(DATASOURCE_NAME, DATASOURCE_NAME), Collections.singletonList(new RouteMapper(\"table\", \"table_0\")));\n        result.getRouteUnits().add(routeUnit);\n        result.getRouteUnits().add(new RouteUnit(new RouteMapper(NONE_READWRITE_SPLITTING_DATASOURCE_NAME, NONE_READWRITE_SPLITTING_DATASOURCE_NAME), Collections.emptyList()));\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/route/ReadwriteSplittingSQLRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"N"}],"commitId":"8f4d55cfb1c346c0864d320c6b6e9bdaae3b38c4","commitMessage":"@@@Enhance of TypedSPI and RequiredSPI (#12074)\n\n","date":"2021-08-28 11:58:56","modifiedFileCount":"15","status":"M","submitter":"Liang Zhang"}]
