[{"authorTime":"2021-06-08 11:37:47","codes":[{"authorDate":"2021-06-05 21:57:24","commitOrder":2,"curCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedDatabaseDiscoveryRuleConfiguration actual = swapper.swapToObject(createYamlHARuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        DatabaseDiscoveryDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n    }\n","date":"2021-06-05 21:57:24","endLine":58,"groupId":"3409","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSwapToObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7b/c3bb71e0c1614c6197200b4a4f98801a157343.src","preCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedDatabaseDiscoveryRuleConfiguration actual = swapper.swapToObject(createYamlHARuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        DatabaseDiscoveryDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/DatabaseDiscoveryRuleAlgorithmProviderConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"NB"},{"authorDate":"2021-06-08 11:37:47","commitOrder":2,"curCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedReadwriteSplittingRuleConfiguration actual = swapper.swapToObject(createYamlReadwriteSplittingRuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        ReadwriteSplittingDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n        assertThat(ruleConfig.getWriteDataSourceName(), is(\"writeDataSourceName\"));\n        assertThat(ruleConfig.getLoadBalancerName(), is(\"loadBalancerName\"));\n        assertThat(ruleConfig.getReadDataSourceNames(), is(Collections.singletonList(\"readDataSourceName\")));\n        assertThat(actual.getLoadBalanceAlgorithms(), is(Collections.emptyMap()));\n    }\n","date":"2021-06-08 11:37:47","endLine":69,"groupId":"3409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSwapToObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/22/009414d0c834a073144e9608852dced2eba41c.src","preCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedReadwriteSplittingRuleConfiguration actual = swapper.swapToObject(createYamlReadwriteSplittingRuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        ReadwriteSplittingDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n        assertThat(ruleConfig.getWriteDataSourceName(), is(\"writeDataSourceName\"));\n        assertThat(ruleConfig.getLoadBalancerName(), is(\"loadBalancerName\"));\n        assertThat(ruleConfig.getReadDataSourceNames(), is(Collections.singletonList(\"readDataSourceName\")));\n        assertThat(actual.getLoadBalanceAlgorithms(), is(Collections.emptyMap()));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/swapper/ReadwriteSplittingRuleAlgorithmProviderConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"064bffe3e00d9db5179d52f81d8d5dad9620a3a5","commitMessage":"@@@Correct packages and generic types (#10710)\n\n","date":"2021-06-08 11:37:47","modifiedFileCount":"0","status":"M","submitter":"???"},{"authorTime":"2021-09-05 19:00:52","codes":[{"authorDate":"2021-06-05 21:57:24","commitOrder":3,"curCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedDatabaseDiscoveryRuleConfiguration actual = swapper.swapToObject(createYamlHARuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        DatabaseDiscoveryDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n    }\n","date":"2021-06-05 21:57:24","endLine":58,"groupId":"10249","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSwapToObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7b/c3bb71e0c1614c6197200b4a4f98801a157343.src","preCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedDatabaseDiscoveryRuleConfiguration actual = swapper.swapToObject(createYamlHARuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        DatabaseDiscoveryDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/DatabaseDiscoveryRuleAlgorithmProviderConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"N"},{"authorDate":"2021-09-05 19:00:52","commitOrder":3,"curCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedReadwriteSplittingRuleConfiguration actual = swapper.swapToObject(createYamlReadwriteSplittingRuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        ReadwriteSplittingDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n        assertThat(ruleConfig.getWriteDataSourceName(), is(\"writeDataSourceName\"));\n        assertThat(ruleConfig.getLoadBalancerName(), is(\"loadBalancerName\"));\n        assertThat(ruleConfig.getReadDataSourceNames(), is(Collections.singletonList(\"readDataSourceName\")));\n        assertFalse(ruleConfig.isQueryConsistent());\n        assertThat(actual.getLoadBalanceAlgorithms(), is(Collections.emptyMap()));\n    }\n","date":"2021-09-05 19:00:52","endLine":72,"groupId":"10249","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertSwapToObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/15/49f57b839eb7c0ad547824d3a36de22d41845d.src","preCode":"    public void assertSwapToObject() {\n        AlgorithmProvidedReadwriteSplittingRuleConfiguration actual = swapper.swapToObject(createYamlReadwriteSplittingRuleConfiguration());\n        assertNotNull(actual);\n        assertNotNull(actual.getDataSources());\n        assertTrue(actual.getDataSources().iterator().hasNext());\n        ReadwriteSplittingDataSourceRuleConfiguration ruleConfig = actual.getDataSources().iterator().next();\n        assertNotNull(ruleConfig);\n        assertThat(ruleConfig.getName(), is(\"name\"));\n        assertThat(ruleConfig.getWriteDataSourceName(), is(\"writeDataSourceName\"));\n        assertThat(ruleConfig.getLoadBalancerName(), is(\"loadBalancerName\"));\n        assertThat(ruleConfig.getReadDataSourceNames(), is(Collections.singletonList(\"readDataSourceName\")));\n        assertThat(actual.getLoadBalanceAlgorithms(), is(Collections.emptyMap()));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/swapper/ReadwriteSplittingRuleAlgorithmProviderConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"b25419ae9f4af7a98255740bc603c34d82f34e97","commitMessage":"@@@Fixes #12158.  add configuration for whether enable consistent routing for readwrite splitting. (#12209)\n\n* For #12158.  Add the consistencyEnabled configuration for readwrite-splitting API & core.\n\n* For #12158.  Add the consistencyEnabled default value for DistSQL handler.\n\n* Add consistencyEnabled configuration and parser for Spring Namespace.\n\n* Add consistencyEnabled configuration for examples.\n\n* update documents of readwrite splitting.\n\n* fix CI.\n\n* update more test cases.\n\n* Change `consistencyEnabled` to `queryConsistent`.\n\n* revert blank line.","date":"2021-09-05 19:00:52","modifiedFileCount":"30","status":"M","submitter":"Raigor"}]
