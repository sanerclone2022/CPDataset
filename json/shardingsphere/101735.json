[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<AssignmentSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = onDuplicateUpdateContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","date":"2020-10-11 18:46:54","endLine":93,"groupId":"3523","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValueWhenLiteralExpressionSegment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6f/c6a0362f608781741e47696d28fd7de30ae388.src","preCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<AssignmentSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = onDuplicateUpdateContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/OnDuplicateUpdateContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<ExpressionSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = insertValueContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","date":"2020-10-11 18:46:54","endLine":81,"groupId":"3523","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetValueWhenLiteralExpressionSegment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6b/8633bf02491bce5b9b3df5de84d94e26cdf7d3.src","preCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<ExpressionSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = insertValueContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/InsertValueContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2021-09-17 11:06:50","commitOrder":2,"curCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<AssignmentSegment> assignments = createLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = onDuplicateUpdateContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","date":"2021-09-17 11:06:50","endLine":90,"groupId":"101735","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetValueWhenLiteralExpressionSegment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/16/0069b7ededac3cdcd01a0a2b0a9d86014856c5.src","preCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<AssignmentSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        OnDuplicateUpdateContext onDuplicateUpdateContext = new OnDuplicateUpdateContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = onDuplicateUpdateContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/OnDuplicateUpdateContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-10-11 18:46:54","commitOrder":2,"curCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<ExpressionSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = insertValueContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","date":"2020-10-11 18:46:54","endLine":81,"groupId":"101735","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetValueWhenLiteralExpressionSegment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6b/8633bf02491bce5b9b3df5de84d94e26cdf7d3.src","preCode":"    public void assertGetValueWhenLiteralExpressionSegment() {\n        Object literalObject = new Object();\n        Collection<ExpressionSegment> assignments = makeLiteralExpressionSegment(literalObject);\n        List<Object> parameters = Collections.emptyList();\n        InsertValueContext insertValueContext = new InsertValueContext(assignments, parameters, 0);\n        Object valueFromInsertValueContext = insertValueContext.getValue(0);\n        assertThat(valueFromInsertValueContext, is(literalObject));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/insert/values/InsertValueContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"}],"commitId":"98f04e683e0e3d435b66ef1dce746f7da363e366","commitMessage":"@@@Revise pr 12295 (#12507)\n\n","date":"2021-09-17 11:06:50","modifiedFileCount":"6","status":"M","submitter":"Zhengqiang Duan"}]
