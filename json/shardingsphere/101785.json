[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new SchemaMetaData(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","date":"2020-10-11 18:46:54","endLine":253,"groupId":"13446","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotUseDefaultColumnsWithColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3b/bb0fc44774bbcb3ed77f0efefe06a56d6e4c61.src","preCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new SchemaMetaData(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new SchemaMetaData(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","date":"2020-10-11 18:46:54","endLine":340,"groupId":"13446","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInsertColumnNamesForInsertColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3b/bb0fc44774bbcb3ed77f0efefe06a56d6e4c61.src","preCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new SchemaMetaData(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":332,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-10-13 16:56:26","codes":[{"authorDate":"2020-10-13 16:56:26","commitOrder":2,"curCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new PhysicalSchemaMetaData(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","date":"2020-10-13 16:56:26","endLine":252,"groupId":"13446","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotUseDefaultColumnsWithColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/34/63a765d252576aa3be1a3ebfe2fdd2a179a518.src","preCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new SchemaMetaData(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"},{"authorDate":"2020-10-13 16:56:26","commitOrder":2,"curCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new PhysicalSchemaMetaData(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","date":"2020-10-13 16:56:26","endLine":339,"groupId":"13446","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInsertColumnNamesForInsertColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/34/63a765d252576aa3be1a3ebfe2fdd2a179a518.src","preCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new SchemaMetaData(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"M"}],"commitId":"5bde8b2aa27657e9459fb20929cfd4ef83dcddcf","commitMessage":"@@@Rename metadata.model.physical package (#7771)\n\n* Rename metadata.model.physical package\n\n* Rename JDBCSchemaHandler\n\n* rename PhysicalXXXMetaData","date":"2020-10-13 16:56:26","modifiedFileCount":"136","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-09 17:01:30","codes":[{"authorDate":"2020-11-09 17:01:30","commitOrder":3,"curCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new ShardingSphereSchema(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","date":"2020-11-09 17:01:30","endLine":252,"groupId":"13446","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotUseDefaultColumnsWithColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/20c9bcac1404f5c5098a940fe3eb7dd0d75f2a.src","preCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new PhysicalSchemaMetaData(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"},{"authorDate":"2020-11-09 17:01:30","commitOrder":3,"curCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new ShardingSphereSchema(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","date":"2020-11-09 17:01:30","endLine":339,"groupId":"13446","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInsertColumnNamesForInsertColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/20c9bcac1404f5c5098a940fe3eb7dd0d75f2a.src","preCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new PhysicalSchemaMetaData(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"M"}],"commitId":"09281f69a6dd01c12dd73dcc6675397062498f90","commitMessage":"@@@Rename PhysicalSchemaMetaData to ShardingSphereSchema (#8094)\n\n* Rename PhysicalSchemaMetaData to ShardingSphereSchema\n\n* Fix checkstyle","date":"2020-11-09 17:01:30","modifiedFileCount":"153","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-02 20:44:49","codes":[{"authorDate":"2021-07-02 20:44:49","commitOrder":4,"curCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","date":"2021-07-02 20:44:49","endLine":258,"groupId":"13446","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotUseDefaultColumnsWithColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/08/962aac1755f56ea5bde84174416216d99c337e.src","preCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new ShardingSphereSchema(), Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2021-07-02 20:44:49","commitOrder":4,"curCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","date":"2021-07-02 20:44:49","endLine":345,"groupId":"13446","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInsertColumnNamesForInsertColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/08/962aac1755f56ea5bde84174416216d99c337e.src","preCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(new ShardingSphereSchema(), Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":337,"status":"M"}],"commitId":"bfb784c9a0e47fd147c8a654c2f0b2a1e86c2c27","commitMessage":"@@@extract SchemaAvailable interface & add validate for SelectStatement (#11091)\n\n* refactor SchemaAvailable interface & add validate for SelectStatement\n\n* add final for InsertStatementContext field\n\n* fix test case error\n\n* fix rewrite test case error\n\n* refactor context new instance method\n\n* optimize test case\n\n* fix test case\n\n* optimize logic\n\n* fix test case\n\n* fix checkstyle","date":"2021-07-02 20:44:49","modifiedFileCount":"44","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":5,"curCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"\"))));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","date":"2021-07-05 14:48:43","endLine":259,"groupId":"101785","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotUseDefaultColumnsWithColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b3/61b81f1c1aac8837900f7c9cc85644fbdfdfc9.src","preCode":"    private void assertNotUseDefaultColumnsWithColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(), insertStatement);\n        assertFalse(insertStatementContext.useDefaultColumns());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":5,"curCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"\"))));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","date":"2021-07-05 14:48:43","endLine":346,"groupId":"101785","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInsertColumnNamesForInsertColumns","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b3/61b81f1c1aac8837900f7c9cc85644fbdfdfc9.src","preCode":"    private void assertGetInsertColumnNamesForInsertColumns(final InsertStatement insertStatement) {\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Collections.singletonList(new ColumnSegment(0, 0, new IdentifierValue(\"col\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"\")));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(), insertStatement);\n        List<String> columnNames = insertStatementContext.getInsertColumnNames();\n        assertThat(columnNames.size(), is(1));\n        assertThat(columnNames.iterator().next(), is(\"col\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"}]
