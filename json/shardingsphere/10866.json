[{"authorTime":"2021-05-12 17:27:04","codes":[{"authorDate":"2021-05-11 18:12:40","commitOrder":2,"curCode":"    public void assertExecuteEmptyBindPacket() throws SQLException {\n        PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(bindPacket, backendConnection);\n        Collection<DatabasePacket<?>> actual = executor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLBindCompletePacket.class)));\n        assertNull(executor.getResponseType());\n        assertFalse(executor.next());\n    }\n","date":"2021-05-11 18:12:40","endLine":78,"groupId":"4939","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExecuteEmptyBindPacket","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b8/af72778c464893007b43d931a354617bce7dec.src","preCode":"    public void assertExecuteEmptyBindPacket() throws SQLException {\n        PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(bindPacket, backendConnection);\n        Collection<DatabasePacket<?>> actual = executor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLBindCompletePacket.class)));\n        assertNull(executor.getResponseType());\n        assertFalse(executor.next());\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"NB"},{"authorDate":"2021-05-12 17:27:04","commitOrder":2,"curCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","date":"2021-05-12 17:27:04","endLine":75,"groupId":"4939","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExecuteClosePortal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/747dbae72c5add2d46cbba18bb8127cf6ff53e.src","preCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"9e35377cdd8aa2297cb1c92cdca010ef4fa85a71","commitMessage":"@@@Support PostgreSQL Close command (#10316)\n\n","date":"2021-05-12 17:27:04","modifiedFileCount":"6","status":"M","submitter":"???"},{"authorTime":"2021-05-12 17:27:04","codes":[{"authorDate":"2021-06-09 18:43:06","commitOrder":3,"curCode":"    public void assertExecuteEmptyBindPacket() throws SQLException {\n        PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(connectionContext, bindPacket, backendConnection);\n        Collection<DatabasePacket<?>> actual = executor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLBindCompletePacket.class)));\n        assertThat(executor.getResponseType(), is(ResponseType.UPDATE));\n        assertFalse(executor.next());\n    }\n","date":"2021-06-09 18:43:06","endLine":91,"groupId":"4939","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExecuteEmptyBindPacket","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bc/e3b95a6cc587f80ba1205520b88d3fa54727c0.src","preCode":"    public void assertExecuteEmptyBindPacket() throws SQLException {\n        PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(bindPacket, backendConnection);\n        Collection<DatabasePacket<?>> actual = executor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLBindCompletePacket.class)));\n        assertNull(executor.getResponseType());\n        assertFalse(executor.next());\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-05-12 17:27:04","commitOrder":3,"curCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","date":"2021-05-12 17:27:04","endLine":75,"groupId":"4939","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExecuteClosePortal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/747dbae72c5add2d46cbba18bb8127cf6ff53e.src","preCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"be59cca18523e6b2955c665f81a7ce64e834ef08","commitMessage":"@@@Refactor PostgreSQL Proxy (#10736)\n\n* Refactor PostgreSQL Proxy\n\n* Fix empty SQL cause NPE\n\n* Fix empty SQL parsing error\n\n* Fix checkstyle\n\n* Fix PostgreSQLComDescribeExecutorTest\n\n* Refactor PostgreSQL Proxy protocol\n\n* Fix no data packet may be missing\n\n* Fix get Optional class mistake\n\n* Fix SQL command not found\n\n* Fix PostgreSQL frontend test cases\n\n* Add PostgreSQLNoDataPacketTest\n\n* Replace ThreadLocal with ConnectionContextRegistry\n\n* Fix checkstyle\n\n* Fix test case\n\n* Polish test case","date":"2021-06-09 18:43:06","modifiedFileCount":"25","status":"M","submitter":"???"},{"authorTime":"2021-06-23 20:27:01","codes":[{"authorDate":"2021-06-23 20:27:01","commitOrder":4,"curCode":"    public void assertExecuteEmptyBindPacket() throws SQLException {\n        PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(connectionContext, bindPacket, backendConnection);\n        Collection<DatabasePacket<?>> actual = executor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLBindCompletePacket.class)));\n        verify(portal).execute();\n    }\n","date":"2021-06-23 20:27:01","endLine":78,"groupId":"10866","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExecuteEmptyBindPacket","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/74/0f1b702582d33a51f60d17d4e411610ca8fd58.src","preCode":"    public void assertExecuteEmptyBindPacket() throws SQLException {\n        PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(connectionContext, bindPacket, backendConnection);\n        Collection<DatabasePacket<?>> actual = executor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLBindCompletePacket.class)));\n        assertThat(executor.getResponseType(), is(ResponseType.UPDATE));\n        assertFalse(executor.next());\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2021-06-23 20:27:01","commitOrder":4,"curCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        String portalName = \"C_1\";\n        when(packet.getName()).thenReturn(portalName);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(connectionContext, packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLCloseCompletePacket.class)));\n        verify(connectionContext).closePortal(portalName);\n    }\n","date":"2021-06-23 20:27:01","endLine":82,"groupId":"10866","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExecuteClosePortal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/8453ed335e4c1d29fd8f7769d61566f3085921.src","preCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"9094b20a512891fea7cc0f616231d94f3325431b","commitMessage":"@@@PostgreSQL Proxy support Portal (#10914)\n\n* Support portal for PostgreSQL Proxy\n\n* Support Close Portal for PostgreSQL\n\n* Enhance PostgreSQLComExecuteExecutor\n\n* Complete Portal implementation\n\n* Fix checkstyle\n\n* Fix test cases","date":"2021-06-23 20:27:01","modifiedFileCount":"14","status":"M","submitter":"???"}]
