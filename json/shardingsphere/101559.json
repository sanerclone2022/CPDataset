[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    private BetweenExpression createBetweenSegment(final PredicateContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.bitExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bitExpr(1));\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.predicate());\n        boolean not = null != ctx.NOT() ? true : false;\n        BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":333,"groupId":"3713","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createBetweenSegment","params":"(finalPredicateContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/57ffeacf154844f0a67f662de75ac1ba20bb29.src","preCode":"    private BetweenExpression createBetweenSegment(final PredicateContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.bitExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bitExpr(1));\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.predicate());\n        boolean not = null != ctx.NOT() ? true : false;\n        BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    private BetweenExpression createBetweenSegment(final AExprContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.aExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bExpr());\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.aExpr(1));\n        boolean not = null != ctx.NOT() ? true : false;\n        BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":291,"groupId":"10758","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createBetweenSegment","params":"(finalAExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6c/bed09c6d4c22281d0397805404c0b4f609eb4b.src","preCode":"    private BetweenExpression createBetweenSegment(final AExprContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.aExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bExpr());\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.aExpr(1));\n        boolean not = null != ctx.NOT() ? true : false;\n        BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-11-01 14:32:14","codes":[{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    private BetweenExpression createBetweenSegment(final PredicateContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.bitExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bitExpr(1));\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.predicate());\n        boolean not = null != ctx.NOT();\n        return new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n    }\n","date":"2020-11-01 14:32:14","endLine":326,"groupId":"101559","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createBetweenSegment","params":"(finalPredicateContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f9/5b1f3859c490d2da9c3a22636646c4aa43e292.src","preCode":"    private BetweenExpression createBetweenSegment(final PredicateContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.bitExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bitExpr(1));\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.predicate());\n        boolean not = null != ctx.NOT() ? true : false;\n        BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"M"},{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    private BetweenExpression createBetweenSegment(final AExprContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.aExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bExpr());\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.aExpr(1));\n        boolean not = null != ctx.NOT();\n        return new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n    }\n","date":"2020-11-01 14:32:14","endLine":287,"groupId":"101559","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createBetweenSegment","params":"(finalAExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/03/4a4ba593a682e439167b50f760653b25b5370a.src","preCode":"    private BetweenExpression createBetweenSegment(final AExprContext ctx) {\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.aExpr(0));\n        ExpressionSegment between = (ExpressionSegment) visit(ctx.bExpr());\n        ExpressionSegment and = (ExpressionSegment) visit(ctx.aExpr(1));\n        boolean not = null != ctx.NOT() ? true : false;\n        BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, between, and, not);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"}],"commitId":"5d7ca41942d298dad2cc0d8efc5fc5c6872e2aec","commitMessage":"@@@Fix checkstyle (#8001)\n\n","date":"2020-11-01 14:32:14","modifiedFileCount":"16","status":"M","submitter":"Liang Zhang"}]
