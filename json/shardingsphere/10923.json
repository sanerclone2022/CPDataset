[{"authorTime":"2020-09-16 13:14:54","codes":[{"authorDate":"2020-09-16 13:14:54","commitOrder":1,"curCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction() {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(false);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, never()).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","date":"2020-09-16 13:14:54","endLine":366,"groupId":"5321","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b2/b00e2ff16c3ca851ad8e529cb43c2af5ffabc2.src","preCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction() {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(false);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, never()).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"B"},{"authorDate":"2020-09-16 13:14:54","commitOrder":1,"curCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction() {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(true);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, times(1)).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","date":"2020-09-16 13:14:54","endLine":378,"groupId":"5321","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b2/b00e2ff16c3ca851ad8e529cb43c2af5ffabc2.src","preCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction() {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(true);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, times(1)).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"B"}],"commitId":"c9c6c66926dece7f30e7806781bfc18e75097a6f","commitMessage":"@@@Following test methods added: (#7472)\n\nassertCloseResultSetsCorrectly\nassertCloseResultSetsWithExceptionThrown\nassertCloseStatementsCorrectly\nassertCloseStatementsWithExceptionThrown\nassertCloseConnectionsCorrectlyWhenNotForceRollback\nassertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction\nassertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction\nassertCloseConnectionsCorrectlyWhenSQLExceptionThrown\nassertCreateStorageResourceCorrectlyWhenConnectionModeMemoryStrictly\n\nCo-authored-by: wangxichun <wangxichun@jd.com>","date":"2020-09-16 13:14:54","modifiedFileCount":"1","status":"B","submitter":"sluk3r"},{"authorTime":"2020-10-04 16:42:27","codes":[{"authorDate":"2020-10-04 16:42:27","commitOrder":2,"curCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction() throws SQLException {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(false);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, never()).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","date":"2020-10-04 16:42:27","endLine":358,"groupId":"5321","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e3/32c4d29827af5b70ca23783acab8e1f1db2e3a.src","preCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction() {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(false);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, never()).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"M"},{"authorDate":"2020-10-04 16:42:27","commitOrder":2,"curCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction() throws SQLException {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(true);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, times(1)).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","date":"2020-10-04 16:42:27","endLine":369,"groupId":"5321","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e3/32c4d29827af5b70ca23783acab8e1f1db2e3a.src","preCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction() {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(true);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, times(1)).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"M"}],"commitId":"3fdee3f2341e32a55122c8e4cdd111ca4827c829","commitMessage":"@@@Remove useless @SneakyThrows (#7697)\n\n","date":"2020-10-04 16:42:27","modifiedFileCount":"85","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-20 19:10:45","codes":[{"authorDate":"2021-08-20 19:10:45","commitOrder":3,"curCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction() throws SQLException {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(false);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, never()).rollback();\n    }\n","date":"2021-08-20 19:10:45","endLine":287,"groupId":"10923","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ca/9a0431c10eb82e73a890d0da9aacc9cb709788.src","preCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndNotInTransaction() throws SQLException {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(false);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, never()).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"},{"authorDate":"2021-08-20 19:10:45","commitOrder":3,"curCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction() throws SQLException {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(true);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, times(1)).rollback();\n    }\n","date":"2021-08-20 19:10:45","endLine":297,"groupId":"10923","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ca/9a0431c10eb82e73a890d0da9aacc9cb709788.src","preCode":"    public void assertCloseConnectionsCorrectlyWhenForceRollbackAndInTransaction() throws SQLException {\n        ConnectionStatus connectionStatus = mock(ConnectionStatus.class);\n        prepareConnectionStatus(connectionStatus);\n        backendConnection.getTransactionStatus().setInTransaction(true);\n        Connection connection = prepareCachedConnections();\n        backendConnection.closeConnections(true);\n        verify(connection, times(1)).rollback();\n        verify(connectionStatus, times(1)).switchToReleased();\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"afef48a701fbfe55fbc6a2e46a66f0369752b942","commitMessage":"@@@fix(transaction):fix transaction statement commit error while using shared thread pool and local transaction manager. add testcase #11583 (#11587)\n\n","date":"2021-08-20 19:10:45","modifiedFileCount":"4","status":"M","submitter":"jianliu"}]
