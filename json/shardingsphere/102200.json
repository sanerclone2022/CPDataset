[{"authorTime":"2021-06-06 23:39:57","codes":[{"authorDate":"2021-06-06 23:39:57","commitOrder":1,"curCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(3, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"amount\", mock(ColumnMetaData.class));\n        result.put(\"status\", mock(ColumnMetaData.class));\n        return result;\n    }\n","date":"2021-06-06 23:39:57","endLine":135,"groupId":"3001","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnMetaDataMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/dd4b2fc6b2160d37f3e0cfcb4b20d85f5e0020.src","preCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(3, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"amount\", mock(ColumnMetaData.class));\n        result.put(\"status\", mock(ColumnMetaData.class));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2021-06-06 23:39:57","commitOrder":1,"curCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(4, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"password\", Mockito.mock(ColumnMetaData.class));\n        result.put(\"amount\", Mockito.mock(ColumnMetaData.class));\n        result.put(\"status\", Mockito.mock(ColumnMetaData.class));\n        return result;\n    }\n","date":"2021-06-06 23:39:57","endLine":131,"groupId":"3831","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnMetaDataMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b3/ca9103e023c78d2a33aac832c100be76899484.src","preCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(4, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"password\", Mockito.mock(ColumnMetaData.class));\n        result.put(\"amount\", Mockito.mock(ColumnMetaData.class));\n        result.put(\"status\", Mockito.mock(ColumnMetaData.class));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"4f1f6246bf7e4971de22ca68e3b2fa4b10fcb470","commitMessage":"@@@Merge rewrite-test module (#10682)\n\n* Adjust sequence of pom order for feature import\n\n* Merge rewrite-test module\n\n* Merge rewrite-test module","date":"2021-06-06 23:39:57","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 21:31:26","codes":[{"authorDate":"2021-06-06 23:39:57","commitOrder":2,"curCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(3, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"amount\", mock(ColumnMetaData.class));\n        result.put(\"status\", mock(ColumnMetaData.class));\n        return result;\n    }\n","date":"2021-06-06 23:39:57","endLine":135,"groupId":"102200","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnMetaDataMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/dd4b2fc6b2160d37f3e0cfcb4b20d85f5e0020.src","preCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(3, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"amount\", mock(ColumnMetaData.class));\n        result.put(\"status\", mock(ColumnMetaData.class));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"},{"authorDate":"2021-07-27 21:31:26","commitOrder":2,"curCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(4, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"password\", mock(ColumnMetaData.class));\n        result.put(\"amount\", mock(ColumnMetaData.class));\n        result.put(\"status\", mock(ColumnMetaData.class));\n        return result;\n    }\n","date":"2021-07-27 21:31:26","endLine":134,"groupId":"102200","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnMetaDataMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f2/deaadcc713e03ec7fd9cf672d031925d4d9b92.src","preCode":"    private Map<String, ColumnMetaData> createColumnMetaDataMap() {\n        Map<String, ColumnMetaData> result = new LinkedHashMap<>(4, 1);\n        result.put(\"account_id\", new ColumnMetaData(\"account_id\", Types.INTEGER, true, true, false));\n        result.put(\"password\", Mockito.mock(ColumnMetaData.class));\n        result.put(\"amount\", Mockito.mock(ColumnMetaData.class));\n        result.put(\"status\", Mockito.mock(ColumnMetaData.class));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"d951f5f407d900fcd69bf73848b08e45091bbe05","commitMessage":"@@@Use static import with Mockito (#11543)\n\n","date":"2021-07-27 21:31:26","modifiedFileCount":"6","status":"M","submitter":"Liang Zhang"}]
