[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public AlgorithmProvidedShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        AlgorithmProvidedShardingRuleConfiguration result = new AlgorithmProvidedShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        return result;\n    }\n","date":"2021-06-04 22:49:49","endLine":76,"groupId":"2928","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"swapToObject","params":"(finalYamlShardingRuleConfigurationyamlConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/95/85ed7469276baa89d81b51d9f0a515b81e1ec0.src","preCode":"    public AlgorithmProvidedShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        AlgorithmProvidedShardingRuleConfiguration result = new AlgorithmProvidedShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/ShardingRuleAlgorithmProviderConfigurationYamlSwapper.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public ShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        ShardingRuleConfiguration result = new ShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        setAlgorithms(yamlConfig, result);\n        return result;\n    }\n","date":"2021-06-04 22:49:49","endLine":100,"groupId":"2928","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"swapToObject","params":"(finalYamlShardingRuleConfigurationyamlConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8d/947470f03000354eb3a1b20391c8af53d2a235.src","preCode":"    public ShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        ShardingRuleConfiguration result = new ShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        setAlgorithms(yamlConfig, result);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/ShardingRuleConfigurationYamlSwapper.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-05 15:19:47","codes":[{"authorDate":"2021-08-05 15:19:47","commitOrder":2,"curCode":"    public AlgorithmProvidedShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        AlgorithmProvidedShardingRuleConfiguration result = new AlgorithmProvidedShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        result.setDefaultShardingColumn(yamlConfig.getDefaultShardingColumn());\n        return result;\n    }\n","date":"2021-08-05 15:19:47","endLine":77,"groupId":"1070","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"swapToObject","params":"(finalYamlShardingRuleConfigurationyamlConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3f/c52abb24e71ced2f7a7f8cdbc1ae7e9f468011.src","preCode":"    public AlgorithmProvidedShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        AlgorithmProvidedShardingRuleConfiguration result = new AlgorithmProvidedShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/ShardingRuleAlgorithmProviderConfigurationYamlSwapper.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2021-08-05 15:19:47","commitOrder":2,"curCode":"    public ShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        ShardingRuleConfiguration result = new ShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        setAlgorithms(yamlConfig, result);\n        result.setDefaultShardingColumn(yamlConfig.getDefaultShardingColumn());\n        return result;\n    }\n","date":"2021-08-05 15:19:47","endLine":102,"groupId":"1070","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"swapToObject","params":"(finalYamlShardingRuleConfigurationyamlConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/80/8de92b9959fe367d60669a026360f106c8a176.src","preCode":"    public ShardingRuleConfiguration swapToObject(final YamlShardingRuleConfiguration yamlConfig) {\n        ShardingRuleConfiguration result = new ShardingRuleConfiguration();\n        for (Entry<String, YamlTableRuleConfiguration> entry : yamlConfig.getTables().entrySet()) {\n            YamlTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getTables().add(tableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        for (Entry<String, YamlShardingAutoTableRuleConfiguration> entry : yamlConfig.getAutoTables().entrySet()) {\n            YamlShardingAutoTableRuleConfiguration tableRuleConfig = entry.getValue();\n            tableRuleConfig.setLogicTable(entry.getKey());\n            result.getAutoTables().add(autoTableYamlSwapper.swapToObject(tableRuleConfig));\n        }\n        result.getBindingTableGroups().addAll(yamlConfig.getBindingTables());\n        result.getBroadcastTables().addAll(yamlConfig.getBroadcastTables());\n        setDefaultStrategies(yamlConfig, result);\n        setAlgorithms(yamlConfig, result);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/ShardingRuleConfigurationYamlSwapper.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"fbe641d782b56b72eb130e37daf2d1552b4aac68","commitMessage":"@@@add default sharding column (#11601)\n\n* add defaultShardingColumn\n\n* union mysql route one data node support\n\n* add default sharding column test case\n\n* revert integration test\n\n* add default sharding column modify format","date":"2021-08-05 15:19:47","modifiedFileCount":"14","status":"M","submitter":"tuichenchuxin"}]
