[{"authorTime":"2021-02-09 15:58:53","codes":[{"authorDate":"2021-02-09 15:58:53","commitOrder":1,"curCode":"    public ASTNode visitCreateUserEntryIdentifiedBy(final CreateUserEntryIdentifiedByContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.string_()) {\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n        } else {\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setUsesIdentifiedWithClause(false);\n        }\n        result.setRetainCurrentPassword(false);\n        return result;\n    }\n","date":"2021-02-09 15:58:53","endLine":209,"groupId":"6397","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitCreateUserEntryIdentifiedBy","params":"(finalCreateUserEntryIdentifiedByContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/60/d32c607a41ec755535d472a607f38e21b3b802.src","preCode":"    public ASTNode visitCreateUserEntryIdentifiedBy(final CreateUserEntryIdentifiedByContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.string_()) {\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n        } else {\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setUsesIdentifiedWithClause(false);\n        }\n        result.setRetainCurrentPassword(false);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLDCLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"B"},{"authorDate":"2021-02-09 15:58:53","commitOrder":1,"curCode":"    public ASTNode visitCreateUserEntryIdentifiedWith(final CreateUserEntryIdentifiedWithContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.textOrIdentifier()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.AS()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.BY() && null != ctx.string_()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        }\n        return result;\n    }\n","date":"2021-02-09 15:58:53","endLine":247,"groupId":"6397","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitCreateUserEntryIdentifiedWith","params":"(finalCreateUserEntryIdentifiedWithContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/60/d32c607a41ec755535d472a607f38e21b3b802.src","preCode":"    public ASTNode visitCreateUserEntryIdentifiedWith(final CreateUserEntryIdentifiedWithContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.textOrIdentifier()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.AS()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.BY() && null != ctx.string_()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLDCLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"B"}],"commitId":"806194001c61b94f6682a03601e67cefa3f3255c","commitMessage":"@@@fix the create user syntax of MySQL (#9395)\n\n* fix the create user syntax of MySQL and add the definition of MySQL create user statement\n\n* code format\n\n* fix\n\n* code format\n\n* code format","date":"2021-02-09 15:58:53","modifiedFileCount":"2","status":"B","submitter":"JingShang Lu"},{"authorTime":"2021-06-08 18:28:08","codes":[{"authorDate":"2021-06-08 18:28:08","commitOrder":2,"curCode":"    public ASTNode visitCreateUserEntryIdentifiedBy(final CreateUserEntryIdentifiedByContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.string_()) {\n            result.setAuth(((StringLiteralValue) visit(ctx.string_())).getValue());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n        } else {\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setUsesIdentifiedWithClause(false);\n        }\n        result.setRetainCurrentPassword(false);\n        return result;\n    }\n","date":"2021-06-08 18:28:08","endLine":572,"groupId":"101347","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitCreateUserEntryIdentifiedBy","params":"(finalCreateUserEntryIdentifiedByContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/63/7bbaa7e7301bc3691fd08790a2a72afd7d3f4e.src","preCode":"    public ASTNode visitCreateUserEntryIdentifiedBy(final CreateUserEntryIdentifiedByContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.string_()) {\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n        } else {\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setUsesIdentifiedWithClause(false);\n        }\n        result.setRetainCurrentPassword(false);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLDCLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":555,"status":"M"},{"authorDate":"2021-06-08 18:28:08","commitOrder":2,"curCode":"    public ASTNode visitCreateUserEntryIdentifiedWith(final CreateUserEntryIdentifiedWithContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.textOrIdentifier()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.AS()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(((StringLiteralValue) visit(ctx.string_())).getValue());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.BY() && null != ctx.string_()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(((StringLiteralValue) visit(ctx.string_())).getValue());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(((StringLiteralValue) visit(ctx.string_())).getValue());\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        }\n        return result;\n    }\n","date":"2021-06-08 18:28:08","endLine":615,"groupId":"101347","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitCreateUserEntryIdentifiedWith","params":"(finalCreateUserEntryIdentifiedWithContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/63/7bbaa7e7301bc3691fd08790a2a72afd7d3f4e.src","preCode":"    public ASTNode visitCreateUserEntryIdentifiedWith(final CreateUserEntryIdentifiedWithContext ctx) {\n        UserSegment result = (UserSegment) visit(ctx.userName());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.textOrIdentifier()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.AS()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else if (null != ctx.BY() && null != ctx.string_()) {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(false);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        } else {\n            result.setPlugin(ctx.textOrIdentifier().getText());\n            result.setAuth(ctx.string_().getText());\n            result.setHasPasswordGenerator(true);\n            result.setUsesIdentifiedByClause(true);\n            result.setUsesIdentifiedWithClause(true);\n            result.setDiscardOldPassword(false);\n            result.setRetainCurrentPassword(false);\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLDCLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":580,"status":"M"}],"commitId":"a87367f5e4e2e1d1900166ad4cb9edd11c85d710","commitMessage":"@@@fix create user password parse error (#10713)\n\n* fix create user password parse error\n\n* modify visit class","date":"2021-06-08 18:28:08","modifiedFileCount":"1","status":"M","submitter":"Zhengqiang Duan"}]
