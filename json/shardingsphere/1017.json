[{"authorTime":"2021-08-17 15:06:22","codes":[{"authorDate":"2021-08-17 15:06:22","commitOrder":2,"curCode":"    private ResultSet createColumnResultSet() throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"table_name\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","date":"2021-08-17 15:06:22","endLine":168,"groupId":"11497","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnResultSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/194ec7f951ed2222ca01d7feeecaa91b1206c1.src","preCode":"    private ResultSet createColumnResultSet() throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"table_name\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/metadata/EncryptTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"MB"},{"authorDate":"2021-08-17 15:06:22","commitOrder":2,"curCode":"    private ResultSet createColumnResultSet(final String actualTable) throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(actualTable);\n        when(result.getString(\"table_name\")).thenReturn(actualTable);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","date":"2021-08-17 15:06:22","endLine":206,"groupId":"7028","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnResultSet","params":"(finalStringactualTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ba81f6892c4d651f3f9549435029b80256ad67.src","preCode":"    private ResultSet createColumnResultSet(final String actualTable) throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(actualTable);\n        when(result.getString(\"table_name\")).thenReturn(actualTable);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/metadata/ShardingTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"605e05c907bb4bd4e14bb682c01e6f46e562a87b","commitMessage":"@@@improve metadata load performance (#11767)\n\n* improve metadata load performance\n\n* improve metadata load performance\n\n* metaDataImprove test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove add test case\n\n* metaDataImprove fix index\n\n* metaDataImprove optimize review\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions\n\n* metaDataImprove optimize review suggestions","date":"2021-08-17 15:06:22","modifiedFileCount":"16","status":"M","submitter":"tuichenchuxin"},{"authorTime":"2021-09-02 17:34:21","codes":[{"authorDate":"2021-08-17 15:06:22","commitOrder":3,"curCode":"    private ResultSet createColumnResultSet() throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"table_name\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","date":"2021-08-17 15:06:22","endLine":168,"groupId":"1017","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnResultSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/194ec7f951ed2222ca01d7feeecaa91b1206c1.src","preCode":"    private ResultSet createColumnResultSet() throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"table_name\")).thenReturn(TABLE_NAME);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/metadata/EncryptTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"},{"authorDate":"2021-09-02 17:34:21","commitOrder":3,"curCode":"    private ResultSet createColumnResultSet(final String actualTable) throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(actualTable);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        return result;\n    }\n","date":"2021-09-02 17:34:21","endLine":230,"groupId":"1017","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"createColumnResultSet","params":"(finalStringactualTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6a/ce14213aae049cfaa8c25ea43d859ed5c2cb0c.src","preCode":"    private ResultSet createColumnResultSet(final String actualTable) throws SQLException {\n        ResultSet result = mock(ResultSet.class);\n        when(result.next()).thenReturn(true, true, true, false);\n        when(result.getString(\"TABLE_NAME\")).thenReturn(actualTable);\n        when(result.getString(\"table_name\")).thenReturn(actualTable);\n        when(result.getString(\"COLUMN_NAME\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"column_name\")).thenReturn(\"id\", \"pwd_cipher\", \"pwd_plain\");\n        when(result.getString(\"TYPE_NAME\")).thenReturn(\"INT\");\n        when(result.getString(\"DATA_TYPE\")).thenReturn(\"INT\");\n        when(result.getString(\"udt_name\")).thenReturn(\"INT\");\n        when(result.getInt(\"ordinal_position\")).thenReturn(1, 2, 3);\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/metadata/ShardingTableMetaDataBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"1301a41807eda152b17ef78fe084bc2d4e9d368e","commitMessage":"@@@fix calcite exception when user execute sql with lowercase (#12125)\n\n* fix calcite execute error with oracle statement\n\n* add test case\n\n* modify map to case insensitive\n\n* fix test case\n\n* add test case for federate refresh test\n\n* optimize code\n\n* optimize code\n\n* optimize test case\n\n* optimize test case\n\n* optimize federate logic\n\n* optimize code","date":"2021-09-02 17:34:21","modifiedFileCount":"18","status":"M","submitter":"Zhengqiang Duan"}]
