[{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-07-02 23:18:54","commitOrder":2,"curCode":"    private void dropRule(final DatabaseDiscoveryRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(dataSource -> dataSource.getName().equals(ruleName)).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        \r\n        currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName());\n    }\n","date":"2021-07-02 23:18:54","endLine":72,"groupId":"3367","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dropRule","params":"(finalDatabaseDiscoveryRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/79/965c6c5a599f7a8cb6d26d88fb2360e9c65b3f.src","preCode":"    private void dropRule(final DatabaseDiscoveryRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(dataSource -> dataSource.getName().equals(ruleName)).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        \r\n        currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/main/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/update/DropDatabaseDiscoveryRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"NB"},{"authorDate":"2021-07-03 15:12:51","commitOrder":2,"curCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","date":"2021-07-03 15:12:51","endLine":72,"groupId":"7451","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dropRule","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/be/b16dbf682a2d45e060b26ddb0e4af43bf735a8.src","preCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"2f7f7f5e0627c094d508f37554ec49c87874bb9e","commitMessage":"@@@Add shardingsphere-readwrite-splitting-distsql-handler module (#11124)\n\n","date":"2021-07-03 15:12:51","modifiedFileCount":"2","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-07-12 13:46:34","commitOrder":3,"curCode":"    private void dropRule(final DatabaseDiscoveryRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(dataSource -> dataSource.getName().equals(ruleName)).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        if (isDiscoveryTypeNotInUse(currentRuleConfig, dataSourceRuleConfig.get().getDiscoveryTypeName())) {\n            currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName());\n        }\n    }\n","date":"2021-07-12 13:46:34","endLine":75,"groupId":"3367","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dropRule","params":"(finalDatabaseDiscoveryRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/8fb5c4d3c4376d257b396f75dcca519461292d.src","preCode":"    private void dropRule(final DatabaseDiscoveryRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(dataSource -> dataSource.getName().equals(ruleName)).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        \r\n        currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/main/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/update/DropDatabaseDiscoveryRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2021-07-03 15:12:51","commitOrder":3,"curCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","date":"2021-07-03 15:12:51","endLine":72,"groupId":"7451","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dropRule","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/be/b16dbf682a2d45e060b26ddb0e4af43bf735a8.src","preCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"cf8634f9964c6f43747c539033245d9062f2feb8","commitMessage":"@@@Check DiscoveryType not in use before drop it (#11274)\n\n","date":"2021-07-12 13:46:34","modifiedFileCount":"2","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-07-12 18:16:59","codes":[{"authorDate":"2021-07-12 13:46:34","commitOrder":4,"curCode":"    private void dropRule(final DatabaseDiscoveryRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(dataSource -> dataSource.getName().equals(ruleName)).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        if (isDiscoveryTypeNotInUse(currentRuleConfig, dataSourceRuleConfig.get().getDiscoveryTypeName())) {\n            currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName());\n        }\n    }\n","date":"2021-07-12 13:46:34","endLine":75,"groupId":"10330","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"dropRule","params":"(finalDatabaseDiscoveryRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/8fb5c4d3c4376d257b396f75dcca519461292d.src","preCode":"    private void dropRule(final DatabaseDiscoveryRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(dataSource -> dataSource.getName().equals(ruleName)).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        if (isDiscoveryTypeNotInUse(currentRuleConfig, dataSourceRuleConfig.get().getDiscoveryTypeName())) {\n            currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName());\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/main/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/update/DropDatabaseDiscoveryRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2021-07-12 18:16:59","commitOrder":4,"curCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        if (isLoadBalancerNotInUse(currentRuleConfig, dataSourceRuleConfig.get().getLoadBalancerName())) {\n            currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n        }\n    }\n","date":"2021-07-12 18:16:59","endLine":76,"groupId":"10330","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"dropRule","params":"(finalReadwriteSplittingRuleConfigurationcurrentRuleConfig@finalStringruleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/5a392ca9d82cf7e02b8e6cdc5ec92d0afc7766.src","preCode":"    private void dropRule(final ReadwriteSplittingRuleConfiguration currentRuleConfig, final String ruleName) {\n        Optional<ReadwriteSplittingDataSourceRuleConfiguration> dataSourceRuleConfig\n                = currentRuleConfig.getDataSources().stream().filter(dataSource -> ruleName.equals(dataSource.getName())).findAny();\n        Preconditions.checkState(dataSourceRuleConfig.isPresent());\n        currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get());\n        currentRuleConfig.getLoadBalancers().remove(dataSourceRuleConfig.get().getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"fc56fcda8d10e4e4e8553fd8a2f784e6b1ec006b","commitMessage":"@@@Check encryptor & loadBalancer not in use before drop it (#11280)\n\n","date":"2021-07-12 18:16:59","modifiedFileCount":"4","status":"M","submitter":"Haoran Meng"}]
