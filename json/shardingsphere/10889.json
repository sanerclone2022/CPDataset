[{"authorTime":"2020-11-09 20:30:31","codes":[{"authorDate":"2020-11-16 15:42:32","commitOrder":7,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorKernel.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2020-11-16 15:42:32","endLine":108,"groupId":"3994","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2f/eeed155e9bd2eef758f2acf045f14b77b9e5b4.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorKernel.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2020-11-09 20:30:31","commitOrder":7,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorKernel.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2020-11-09 20:30:31","endLine":110,"groupId":"3994","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3a/b8d36f0292b06a82330040cf19e713ef31102a.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorKernel.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"NB"}],"commitId":"0bbc61f258e6cbf4bbb9178dfbc6d63bdfb0bd28","commitMessage":"@@@Do not permit return null for ProxyContext.getMetaData() (#8168)\n\n","date":"2020-11-16 15:42:32","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-21 17:20:14","codes":[{"authorDate":"2020-11-21 17:20:14","commitOrder":8,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2020-11-21 17:20:14","endLine":108,"groupId":"8006","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/27737dffaddc84ad6a7bf44588e5ba5de3e74d.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorKernel.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-11-21 17:20:14","commitOrder":8,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2020-11-21 17:20:14","endLine":128,"groupId":"8006","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/27737dffaddc84ad6a7bf44588e5ba5de3e74d.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorKernel.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"dc3af42b1328348d884e19281e4aae5a8b1cbd42","commitMessage":"@@@Refactor executor.kernel's domain (#8266)\n\n* Rename ExecutorServiceManager\n\n* Rename ExecutorThreadFactoryBuilder\n\n* Rename package to kernel.thread\n\n* Add kernel.model package\n\n* Rename ExecutorEngine","date":"2020-11-21 17:20:14","modifiedFileCount":"64","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-12-11 07:32:04","codes":[{"authorDate":"2020-12-11 07:32:04","commitOrder":9,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2020-12-11 07:32:04","endLine":108,"groupId":"8006","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b9/961967de3c0f4d00f95f5de83a6d597b9a4183.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-12-11 07:32:04","commitOrder":9,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2020-12-11 07:32:04","endLine":128,"groupId":"8006","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b9/961967de3c0f4d00f95f5de83a6d597b9a4183.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"74a10c21f3c7d63c5dd4365b17873f6966ad0487","commitMessage":"@@@Add authentication SPI for external authentication (#8566)\n\n* Rename ShardingSphereUser\n\n* Add MemoryAuthentication\n\n* Rename UserYamlSwapper\n\n* Rename YamlUserConfiguration\n\n* Add memory package\n\n* Refactor usage of Authentication\n\n* Add AuthenticationEngine\n\n* Refactor StandardMetaDataContexts\n\n* Rename DefaultAuthentication\n\n* Resolve conflict","date":"2020-12-11 07:32:04","modifiedFileCount":"43","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-12-12 23:20:10","codes":[{"authorDate":"2020-12-12 23:20:10","commitOrder":10,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2020-12-12 23:20:10","endLine":107,"groupId":"8006","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/43/5b7f06d56550971117d9995b54cd82ad583e88.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(),\n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2020-12-12 23:20:10","commitOrder":10,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2020-12-12 23:20:10","endLine":127,"groupId":"8006","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/43/5b7f06d56550971117d9995b54cd82ad583e88.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"efdd25f4b72a85c3040d089ff58f418141cc72b2","commitMessage":"@@@Split backend database type from same one to multiple with each schema (#8596)\n\n* Use database type map instead of single database type\n\n* Add MetaDataContexts.getAllSchemas\n\n* Remove MetaDataContexts.getDatabaseTypes()\n\n* Add ShardingSphereResource.databaseType\n\n* Remove MetaDataContexts.getDatabaseType()\n\n* Remove StandardMetaDataContexts.databaseTypes\n\n* Use MetaDataContexts.getDefaultMetaData\n\n* Use MetaDataContexts.getDefaultMetaData\n\n* Add MetaDataContexts.getMetaData(String schemaName)\n\n* Remove MetaDataContexts.getMetaDataMap()\n\n* refactor MetaDataContextsBuilder","date":"2020-12-12 23:20:10","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-01 18:29:09","codes":[{"authorDate":"2021-04-01 18:29:09","commitOrder":11,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-04-01 18:29:09","endLine":96,"groupId":"4185","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/83/4bd96b1784fa617f579e6cad1bb22bc9833a53.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-04-01 18:29:09","commitOrder":11,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-04-01 18:29:09","endLine":116,"groupId":"4185","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/83/4bd96b1784fa617f579e6cad1bb22bc9833a53.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"4954616af3db97b031b8a2005b2e40062b390929","commitMessage":"@@@Add AuthenticationContext and ShardingSphereUsers (#9906)\n\n* Add AuthenticationContext and ShardingSphereUsers\n\n* Remove MetaDataContexts.getAuthentication()\n\n* Fix test case\n\n* Move AuthenticationContext\n\n* Refactor SQLChecker\n\n* Use SQLChecker to check authrity\n\n* Fix compile error","date":"2021-04-01 18:29:09","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-08 16:15:03","codes":[{"authorDate":"2021-04-08 16:15:03","commitOrder":12,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-04-08 16:15:03","endLine":96,"groupId":"7055","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/25/3cb250ecd83ebe4088bb452ec4761bac35cd99.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-04-08 16:15:03","commitOrder":12,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-04-08 16:15:03","endLine":116,"groupId":"7055","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/25/3cb250ecd83ebe4088bb452ec4761bac35cd99.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"d6fe7c187b7f3bd2c05cad2d9920b9f664de5d11","commitMessage":"@@@Use SchemaRule and GlobalRule interface (#9989)\n\n* Use SchemaRule and GlobalRule interface\n\n* Fix compile error","date":"2021-04-08 16:15:03","modifiedFileCount":"67","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-05-18 13:23:30","codes":[{"authorDate":"2021-05-18 13:23:30","commitOrder":13,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-05-18 13:23:30","endLine":94,"groupId":"7055","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a0/f86931c3bc8b413c83e574703f620ea5b1c908.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-05-18 13:23:30","commitOrder":13,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-05-18 13:23:30","endLine":114,"groupId":"7055","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a0/f86931c3bc8b413c83e574703f620ea5b1c908.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"fe0ddc8c5d6c106f4f88af39bc42a4038f60b26b","commitMessage":"@@@Users  removed from StandardMetaDataContexts (#10310)\n\n* remove user\n\n* fix review\n\n* trigger ci\n\n* fix code\n\n* fix","date":"2021-05-18 13:23:30","modifiedFileCount":"39","status":"M","submitter":"Zhu jun"},{"authorTime":"2021-07-01 11:29:35","codes":[{"authorDate":"2021-07-01 11:29:35","commitOrder":14,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-07-01 11:29:35","endLine":97,"groupId":"7055","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/09/84b99e4a264e6931cb4874f172a75fcaa3f57c.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties())));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2021-07-01 11:29:35","commitOrder":14,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-07-01 11:29:35","endLine":117,"groupId":"7055","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/09/84b99e4a264e6931cb4874f172a75fcaa3f57c.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties())));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"e560dc4352de5abc7caf4fbdc03b747985508961","commitMessage":"@@@improve code for #10840 (#11028)\n\n* improve code style for 10678\n\n* Remove unnecessary submitted code.\n\n* improve code\n\n* improve code\n\n* improve code for 10678","date":"2021-07-01 11:29:35","modifiedFileCount":"61","status":"M","submitter":"totalo"},{"authorTime":"2021-07-24 22:50:31","codes":[{"authorDate":"2021-07-24 22:50:31","commitOrder":15,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-07-24 22:50:31","endLine":98,"groupId":"6669","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/39/cc416a4cf4ce149c0e16b0b676aa2d159f98ff.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-07-24 22:50:31","commitOrder":15,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-07-24 22:50:31","endLine":118,"groupId":"6669","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/39/cc416a4cf4ce149c0e16b0b676aa2d159f98ff.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"717c99918248f66d683ef60a4f961ee37470c687","commitMessage":"@@@Use direct call to instead of event post on AddResourceBackendHandler (#11488)\n\n* Add MetaDataContexts.getConfigCenter()\n\n* Use direct call to refactor AddResourceBackendHandler\n\n* Use direct call to refactor AddResourceBackendHandler\n\n* Fix test case\n\n* Add DataSourcePersistService.append()\n\n* Add test case","date":"2021-07-24 22:50:31","modifiedFileCount":"44","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-26 14:43:21","codes":[{"authorDate":"2021-07-26 14:43:21","commitOrder":16,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-07-26 14:43:21","endLine":98,"groupId":"4613","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/9217a17ae4dfaecfab301d62a51b21510fa3c3.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-07-26 14:43:21","commitOrder":16,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-07-26 14:43:21","endLine":118,"groupId":"4613","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/9217a17ae4dfaecfab301d62a51b21510fa3c3.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), \n                new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"3073e94515f9556d995dbf3a2d409630801788f4","commitMessage":"@@@Rename ConfigCenter to DistMetaDataPersistService (#11505)\n\n* Rename DistMetaDataPersistService\n\n* Rename DistMetaDataPersistRepository\n\n* Rename DistMetaDataPersistRepository\n\n* For checkstyle\n\n* For checkstyle","date":"2021-07-26 14:43:21","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-26 14:43:21","codes":[{"authorDate":"2021-07-27 07:22:30","commitOrder":17,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-07-27 07:22:30","endLine":93,"groupId":"4613","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ee/7e9005b1e55a75d060de3aa4da7448f8d8c0f5.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap());\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-07-26 14:43:21","commitOrder":17,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-07-26 14:43:21","endLine":118,"groupId":"4613","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/9217a17ae4dfaecfab301d62a51b21510fa3c3.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"}],"commitId":"6d7e3fe33533f8d8dd098e81d667ce57aabd625a","commitMessage":"@@@Use raw new HashMap to instead of guava (#11517)\n\n* Use raw new HashMap to instead of guava\n\n* Use raw new HashMap to instead of guava","date":"2021-07-27 07:22:30","modifiedFileCount":"69","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 02:33:31","codes":[{"authorDate":"2021-08-15 02:33:31","commitOrder":18,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-08-15 02:33:31","endLine":101,"groupId":"3020","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/36/043bdcce48e2389436216209aa58c5baf509b1.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-08-15 02:33:31","commitOrder":18,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-08-15 02:33:31","endLine":127,"groupId":"3020","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/36/043bdcce48e2389436216209aa58c5baf509b1.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), \n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"d6e424ba68c64ea1835a42b0f4b0fb7f69c95323","commitMessage":"@@@Add ContextManager (#11822)\n\n* Add ContextManager\n\n* Use ContextManager on GovernanceShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereConnection\n\n* Use ContextManager on ShardingSphereConnection\n\n* Refactor AbstractBaseExecutorTest\n\n* Use ContextManager on proxy\n\n* Fix test case","date":"2021-08-15 02:33:31","modifiedFileCount":"118","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 11:55:34","codes":[{"authorDate":"2021-08-15 11:55:34","commitOrder":19,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-08-15 11:55:34","endLine":101,"groupId":"3020","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/c1bac48ecdf18420d024d843d5bb1b08263520.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-08-15 11:55:34","commitOrder":19,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-08-15 11:55:34","endLine":127,"groupId":"3020","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/c1bac48ecdf18420d024d843d5bb1b08263520.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"21a22f867f1709d878330ac64794a8a8880a116c","commitMessage":"@@@Merge StandardContexts and Contexts interface (#11826)\n\n","date":"2021-08-15 11:55:34","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-21 23:24:02","codes":[{"authorDate":"2021-08-21 23:24:02","commitOrder":20,"curCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","date":"2021-08-21 23:24:02","endLine":101,"groupId":"10889","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetSchemaWhenNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/7dbece528e38b78d743a4098845c4b99210a14.src","preCode":"    public void assertGetSchemaWhenNotExisted() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = mockMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        ProxyContext.getInstance().getMetaData(\"schema1\");\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-08-21 23:24:02","commitOrder":20,"curCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","date":"2021-08-21 23:24:02","endLine":127,"groupId":"10889","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetAllSchemaNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/7dbece528e38b78d743a4098845c4b99210a14.src","preCode":"    public void assertGetAllSchemaNames() throws NoSuchFieldException, IllegalAccessException {\n        Map<String, ShardingSphereMetaData> metaDataMap = createMetaDataMap();\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class),\n                metaDataMap, mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()), is(metaDataMap.keySet()));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/context/ProxyContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"534fe5735969e87e2066a2087ba12618be530cbc","commitMessage":"@@@Refactor ShardingSphereMode (#11937)\n\n* Refactor ShardingSphereAutoConfiguration\n\n* Remove useless PersistRepositoryFactory\n\n* Add StandalonePersistRepository\n\n* Add generic type of ShardingSphereMode\n\n* Add generic type of ContextManagerBuilder\n\n* Refactor ShardingSphereMode\n\n* Rename LocalStandalonePersistRepository\n\n* Rename LocalRepository\n\n* Rename RegistryCenterRepository to ClusterPersistRepository\n\n* Rename ClusterPersistRepositoryFactory\n\n* Move StandalonePersistRepository\n\n* Move StandalonePersistRepositoryConfiguration\n\n* Rename DistMetaDataPersistService to PersistService","date":"2021-08-21 23:24:02","modifiedFileCount":"75","status":"M","submitter":"Liang Zhang"}]
