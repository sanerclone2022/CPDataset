[{"authorTime":"2021-07-12 00:00:41","codes":[{"authorDate":"2021-05-18 13:23:30","commitOrder":2,"curCode":"    private static Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && ProxyContext.getInstance().schemaExists(databaseName)) {\n            result.addAll(ProxyContext.getInstance().getMetaDataContexts().getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(ProxyContext.getInstance().getMetaDataContexts().getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","date":"2021-05-18 13:23:30","endLine":94,"groupId":"6246","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getRules","params":"(finalStringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3c/bf74b9468eb2b61e5d6ae83be46a0b55d04eb7.src","preCode":"    private static Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && ProxyContext.getInstance().schemaExists(databaseName)) {\n            result.addAll(ProxyContext.getInstance().getMetaDataContexts().getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(ProxyContext.getInstance().getMetaDataContexts().getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/authentication/PostgreSQLAuthenticationHandler.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"},{"authorDate":"2021-07-12 00:00:41","commitOrder":2,"curCode":"    public Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && schemaExists(databaseName)) {\n            result.addAll(metaDataContexts.getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(metaDataContexts.getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","date":"2021-07-12 00:00:41","endLine":143,"groupId":"13726","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRules","params":"(finalStringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a2/8a42c5e3d2043bcfc00522d0fd2f8444fffafd.src","preCode":"    public Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && schemaExists(databaseName)) {\n            result.addAll(metaDataContexts.getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(metaDataContexts.getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/context/ProxyContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"B"}],"commitId":"2a1f5b17d789c0591428fbe27df9b31a734afdaf","commitMessage":"@@@Minor performance enhance of MySQL authentication (#11271)\n\n","date":"2021-07-12 00:00:41","modifiedFileCount":"3","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 02:33:31","codes":[{"authorDate":"2021-08-15 02:33:31","commitOrder":3,"curCode":"    private static Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && ProxyContext.getInstance().schemaExists(databaseName)) {\n            result.addAll(ProxyContext.getInstance().getContextManager().getMetaDataContexts().getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(ProxyContext.getInstance().getContextManager().getMetaDataContexts().getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","date":"2021-08-15 02:33:31","endLine":91,"groupId":"10883","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getRules","params":"(finalStringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/37/42c6b5f724e2419caff000e30e4098c265938b.src","preCode":"    private static Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && ProxyContext.getInstance().schemaExists(databaseName)) {\n            result.addAll(ProxyContext.getInstance().getMetaDataContexts().getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(ProxyContext.getInstance().getMetaDataContexts().getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/authentication/PostgreSQLAuthenticationHandler.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-08-15 02:33:31","commitOrder":3,"curCode":"    public Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && schemaExists(databaseName)) {\n            result.addAll(contextManager.getMetaDataContexts().getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(contextManager.getMetaDataContexts().getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","date":"2021-08-15 02:33:31","endLine":134,"groupId":"10883","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRules","params":"(finalStringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d6/ae4a20d0f0d9545eff7994083b3c16d9618776.src","preCode":"    public Collection<ShardingSphereRule> getRules(final String databaseName) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        if (!Strings.isNullOrEmpty(databaseName) && schemaExists(databaseName)) {\n            result.addAll(metaDataContexts.getMetaData(databaseName).getRuleMetaData().getRules());\n        }\n        result.addAll(metaDataContexts.getGlobalRuleMetaData().getRules());\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/context/ProxyContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"d6e424ba68c64ea1835a42b0f4b0fb7f69c95323","commitMessage":"@@@Add ContextManager (#11822)\n\n* Add ContextManager\n\n* Use ContextManager on GovernanceShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereConnection\n\n* Use ContextManager on ShardingSphereConnection\n\n* Refactor AbstractBaseExecutorTest\n\n* Use ContextManager on proxy\n\n* Fix test case","date":"2021-08-15 02:33:31","modifiedFileCount":"118","status":"M","submitter":"Liang Zhang"}]
