[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertValidateCreateViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        MySQLCreateViewStatement sqlStatement = new MySQLCreateViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<CreateViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-06-04 22:49:49","endLine":64,"groupId":"13583","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertValidateCreateViewWithShardingTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/89/a91a80fec9edc107c68305cec17c30a93a8495.src","preCode":"    public void assertValidateCreateViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        MySQLCreateViewStatement sqlStatement = new MySQLCreateViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<CreateViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateViewStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertValidateAlterViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        MySQLAlterViewStatement sqlStatement = new MySQLAlterViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<AlterViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingAlterViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-06-04 22:49:49","endLine":66,"groupId":"13583","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValidateAlterViewWithShardingTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/39/c1018d018d359510589e5a30af64a9b7a4d8ce.src","preCode":"    public void assertValidateAlterViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        MySQLAlterViewStatement sqlStatement = new MySQLAlterViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<AlterViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingAlterViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingAlterViewStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertValidateCreateViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        MySQLCreateViewStatement sqlStatement = new MySQLCreateViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<CreateViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-07-05 14:48:43","endLine":65,"groupId":"10490","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertValidateCreateViewWithShardingTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c2/437fa06a55baab995265f4292b90ea2b425dd1.src","preCode":"    public void assertValidateCreateViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        MySQLCreateViewStatement sqlStatement = new MySQLCreateViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<CreateViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateViewStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertValidateAlterViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        MySQLAlterViewStatement sqlStatement = new MySQLAlterViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<AlterViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingAlterViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-07-05 14:48:43","endLine":67,"groupId":"10490","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertValidateAlterViewWithShardingTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/75/6c85391491085a670c40d7e1f81a0a49133ff0.src","preCode":"    public void assertValidateAlterViewWithShardingTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        MySQLAlterViewStatement sqlStatement = new MySQLAlterViewStatement();\n        sqlStatement.setSelect(selectStatement);\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"));\n        SQLStatementContext<AlterViewStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingAlterViewStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingAlterViewStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"}]
