[{"authorTime":"2021-06-29 14:46:19","codes":[{"authorDate":"2021-06-29 14:46:19","commitOrder":1,"curCode":"    public void assertLoadCondition1() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION1).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","date":"2021-06-29 14:46:19","endLine":91,"groupId":"11802","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertLoadCondition1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/55/39621c8eb9ec0c7e633c5c3fe8043c5dcea6f6.src","preCode":"    public void assertLoadCondition1() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION1).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2021-06-29 14:46:19","commitOrder":1,"curCode":"    public void assertLoadCondition2() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","date":"2021-06-29 14:46:19","endLine":105,"groupId":"11802","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertLoadCondition2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/55/39621c8eb9ec0c7e633c5c3fe8043c5dcea6f6.src","preCode":"    public void assertLoadCondition2() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"3c033709ad6eb0fe3bda6998c77ce3bd2c1ecc84","commitMessage":"@@@Fix booting error with oracle 11g (#10956)\n\n* Fix booting error with oracle 11g\n\nbooting error with oracle 11g\n\n* Fix booting error with oracle 11g\n\nFix booting error with oracle 11g\nset correct START_MINOR_VERSION of IDENTITY_COLUMN\n\n* change indent style\n\n* Splitting over-long rows\n\nSplitting over-long rows to fix ci error\n\n* update test sql\n\n* Increase unit test coverage\n\n* change to pass checkStyle\n\n* change indent\nimprove code readability","date":"2021-06-29 14:46:19","modifiedFileCount":"2","status":"B","submitter":"xueshiji"},{"authorTime":"2021-08-20 15:52:50","codes":[{"authorDate":"2021-08-20 15:52:50","commitOrder":2,"curCode":"    public void assertLoadCondition1() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION1).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","date":"2021-08-20 15:52:50","endLine":91,"groupId":"11802","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertLoadCondition1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/17/90e0c06a6c95d911533cce90a2cd0e3fecbade.src","preCode":"    public void assertLoadCondition1() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION1).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2021-08-20 15:52:50","commitOrder":2,"curCode":"    public void assertLoadCondition2() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","date":"2021-08-20 15:52:50","endLine":105,"groupId":"11802","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertLoadCondition2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/17/90e0c06a6c95d911533cce90a2cd0e3fecbade.src","preCode":"    public void assertLoadCondition2() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"632b7c777ea43f7de3dfd2f13bc866814b882eaa","commitMessage":"@@@Refactor single table meta data load (#11895)\n\n","date":"2021-08-20 15:52:50","modifiedFileCount":"31","status":"M","submitter":"tuichenchuxin"},{"authorTime":"2021-08-24 07:46:44","codes":[{"authorDate":"2021-08-24 07:46:44","commitOrder":3,"curCode":"    public void assertLoadCondition1() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION1).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2);\n        Map<String, TableMetaData> actual = getTableMetaDataLoader().load(dataSource, Collections.emptyList());\n        assertTableMetaDataMap(actual);\n        assertThat(actual.get(\"tbl\").getColumnMetaData(0), is(new ColumnMetaData(\"id\", 4, true, true, true)));\n        assertThat(actual.get(\"tbl\").getColumnMetaData(1), is(new ColumnMetaData(\"name\", 12, false, false, false)));\n    }\n","date":"2021-08-24 07:46:44","endLine":94,"groupId":"101858","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertLoadCondition1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/d1991d0e15b9eeb885ee3b257107e4eca47e2c.src","preCode":"    public void assertLoadCondition1() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION1).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2021-08-24 07:46:44","commitOrder":3,"curCode":"    public void assertLoadCondition2() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1);\n        Map<String, TableMetaData> actual = getTableMetaDataLoader().load(dataSource, Collections.emptyList());\n        assertTableMetaDataMap(actual);\n        assertThat(actual.get(\"tbl\").getColumnMetaData(0), is(new ColumnMetaData(\"id\", 4, true, true, false)));\n        assertThat(actual.get(\"tbl\").getColumnMetaData(1), is(new ColumnMetaData(\"name\", 12, false, false, false)));\n    }\n","date":"2021-08-24 07:46:44","endLine":111,"groupId":"101858","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertLoadCondition2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/d1991d0e15b9eeb885ee3b257107e4eca47e2c.src","preCode":"    public void assertLoadCondition2() throws SQLException {\n        DataSource dataSource = mockDataSource();\n        ResultSet resultSet = mockTableMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet);\n        ResultSet indexResultSet = mockIndexMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet);\n        ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet();\n        when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys);\n        when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12);\n        when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1);\n        assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource, Collections.emptyList()));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"580d8c81fbd39a751333abb0bfe3a453cc6a77a9","commitMessage":"@@@Oracle load test (#11956)\n\n","date":"2021-08-24 07:46:44","modifiedFileCount":"2","status":"M","submitter":"tuichenchuxin"}]
