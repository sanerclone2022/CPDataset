[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    private boolean getValueCaseSensitiveFromTables(final QueryResult queryResult, \n                                                    final SelectStatementContext selectStatementContext, final ShardingSphereSchema schema, final int columnIndex) throws SQLException {\n        for (SimpleTableSegment each : selectStatementContext.getAllSimpleTableSegments()) {\n            String tableName = each.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n            if (columns.containsKey(columnName)) {\n                return columns.get(columnName).isCaseSensitive();\n            }\n        }\n        return false;\n    }\n","date":"2021-06-04 22:49:49","endLine":140,"groupId":"8792","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getValueCaseSensitiveFromTables","params":"(finalQueryResultqueryResult@finalSelectStatementContextselectStatementContext@finalShardingSphereSchemaschema@finalintcolumnIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ad/bbea55b41f8cd66a0f98d41e340e4dcdee1621.src","preCode":"    private boolean getValueCaseSensitiveFromTables(final QueryResult queryResult, \n                                                    final SelectStatementContext selectStatementContext, final ShardingSphereSchema schema, final int columnIndex) throws SQLException {\n        for (SimpleTableSegment each : selectStatementContext.getAllSimpleTableSegments()) {\n            String tableName = each.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n            if (columns.containsKey(columnName)) {\n                return columns.get(columnName).isCaseSensitive();\n            }\n        }\n        return false;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/merge/dql/groupby/GroupByMemoryMergedResult.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    private boolean getOrderValuesCaseSensitiveFromTables(final SelectStatementContext selectStatementContext,\n                                                          final ShardingSphereSchema schema, final OrderByItem eachOrderByItem) throws SQLException {\n        for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n            String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n            if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n                String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n                int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n                String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n","date":"2021-06-04 22:49:49","endLine":92,"groupId":"8607","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"getOrderValuesCaseSensitiveFromTables","params":"(finalSelectStatementContextselectStatementContext@finalShardingSphereSchemaschema@finalOrderByItemeachOrderByItem)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c2/bdb3832970deb3d0ade6ed4fb2245d67c8ecbd.src","preCode":"    private boolean getOrderValuesCaseSensitiveFromTables(final SelectStatementContext selectStatementContext,\n                                                          final ShardingSphereSchema schema, final OrderByItem eachOrderByItem) throws SQLException {\n        for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n            String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n            if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n                String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n                int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n                String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-08-16 10:17:11","commitOrder":2,"curCode":"    private boolean getValueCaseSensitiveFromTables(final QueryResult queryResult, \n                                                    final SelectStatementContext selectStatementContext, final ShardingSphereSchema schema, final int columnIndex) throws SQLException {\n        for (SimpleTableSegment each : selectStatementContext.getAllTables()) {\n            String tableName = each.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n            if (columns.containsKey(columnName)) {\n                return columns.get(columnName).isCaseSensitive();\n            }\n        }\n        return false;\n    }\n","date":"2021-08-16 10:17:11","endLine":139,"groupId":"10752","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getValueCaseSensitiveFromTables","params":"(finalQueryResultqueryResult@finalSelectStatementContextselectStatementContext@finalShardingSphereSchemaschema@finalintcolumnIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/a18456a8dbc43de32b2ec8083e82b24dbdf60f.src","preCode":"    private boolean getValueCaseSensitiveFromTables(final QueryResult queryResult, \n                                                    final SelectStatementContext selectStatementContext, final ShardingSphereSchema schema, final int columnIndex) throws SQLException {\n        for (SimpleTableSegment each : selectStatementContext.getAllSimpleTableSegments()) {\n            String tableName = each.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n            if (columns.containsKey(columnName)) {\n                return columns.get(columnName).isCaseSensitive();\n            }\n        }\n        return false;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/merge/dql/groupby/GroupByMemoryMergedResult.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"},{"authorDate":"2021-06-04 22:49:49","commitOrder":2,"curCode":"    private boolean getOrderValuesCaseSensitiveFromTables(final SelectStatementContext selectStatementContext,\n                                                          final ShardingSphereSchema schema, final OrderByItem eachOrderByItem) throws SQLException {\n        for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n            String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n            if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n                String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n                int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n                String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n","date":"2021-06-04 22:49:49","endLine":92,"groupId":"10752","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getOrderValuesCaseSensitiveFromTables","params":"(finalSelectStatementContextselectStatementContext@finalShardingSphereSchemaschema@finalOrderByItemeachOrderByItem)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c2/bdb3832970deb3d0ade6ed4fb2245d67c8ecbd.src","preCode":"    private boolean getOrderValuesCaseSensitiveFromTables(final SelectStatementContext selectStatementContext,\n                                                          final ShardingSphereSchema schema, final OrderByItem eachOrderByItem) throws SQLException {\n        for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n            String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n            TableMetaData tableMetaData = schema.get(tableName);\n            Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n            OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n            if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n                String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n                int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n                String columnName = queryResult.getMetaData().getColumnName(columnIndex);\n                if (columns.containsKey(columnName)) {\n                    return columns.get(columnName).isCaseSensitive();\n                }\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"5c7afb08d738709e3cc1ebf4636ff27131a11b35","commitMessage":"@@@reduce the call of TableExtractor in SelectStatementContext (#11833)\n\n","date":"2021-08-16 10:17:11","modifiedFileCount":"7","status":"M","submitter":"Zhengqiang Duan"}]
