[{"authorTime":"2021-07-03 16:36:59","codes":[{"authorDate":"2021-07-03 16:36:59","commitOrder":1,"curCode":"    private void checkToBeAlteredDuplicateBindingTables(final AlterShardingBindingTableRulesStatement sqlStatement) {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","date":"2021-07-03 16:36:59","endLine":75,"groupId":"3019","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkToBeAlteredDuplicateBindingTables","params":"(finalAlterShardingBindingTableRulesStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/50/e607db1df4ed6321f1f0ad805b8b6c1729c292.src","preCode":"    private void checkToBeAlteredDuplicateBindingTables(final AlterShardingBindingTableRulesStatement sqlStatement) {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/AlterShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2021-07-03 16:36:59","commitOrder":1,"curCode":"    private void checkToBeCreatedDuplicateBindingTables(final CreateShardingBindingTableRulesStatement sqlStatement, final ShardingRuleConfiguration currentRuleConfig) {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","date":"2021-07-03 16:36:59","endLine":82,"groupId":"3019","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkToBeCreatedDuplicateBindingTables","params":"(finalCreateShardingBindingTableRulesStatementsqlStatement@finalShardingRuleConfigurationcurrentRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b8/9f2fb54d6dfe100bcfd22c0746d33ec06de265.src","preCode":"    private void checkToBeCreatedDuplicateBindingTables(final CreateShardingBindingTableRulesStatement sqlStatement, final ShardingRuleConfiguration currentRuleConfig) {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/CreateShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"70149d383a75b5b9986818226f18abd449e5ae80","commitMessage":"@@@Add shardingsphere-sharding-distsql-handler module (#11125)\n\n* Add shardingsphere-sharding-distsql-handler module\n\n* Fix test cases\n\n* Fix test cases\n\n* Fix test cases","date":"2021-07-03 16:36:59","modifiedFileCount":"1","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-04 01:26:11","codes":[{"authorDate":"2021-07-04 01:26:11","commitOrder":2,"curCode":"    private void checkToBeAlteredDuplicateBindingTables(final AlterShardingBindingTableRulesStatement sqlStatement) throws DuplicateBindingTablesException {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","date":"2021-07-04 01:26:11","endLine":77,"groupId":"3019","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkToBeAlteredDuplicateBindingTables","params":"(finalAlterShardingBindingTableRulesStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/89/d91822b4a75237dd0397b7d61930b93acc5c57.src","preCode":"    private void checkToBeAlteredDuplicateBindingTables(final AlterShardingBindingTableRulesStatement sqlStatement) {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/AlterShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-07-04 01:26:11","commitOrder":2,"curCode":"    private void checkToBeCreatedDuplicateBindingTables(final CreateShardingBindingTableRulesStatement sqlStatement, \n                                                        final ShardingRuleConfiguration currentRuleConfig) throws DuplicateBindingTablesException {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","date":"2021-07-04 01:26:11","endLine":85,"groupId":"3019","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkToBeCreatedDuplicateBindingTables","params":"(finalCreateShardingBindingTableRulesStatementsqlStatement@finalShardingRuleConfigurationcurrentRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cf/7463a0af12a39415568dd46d3b23114e789493.src","preCode":"    private void checkToBeCreatedDuplicateBindingTables(final CreateShardingBindingTableRulesStatement sqlStatement, final ShardingRuleConfiguration currentRuleConfig) {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/CreateShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"18ab59a5ac8de3a2c2d2c1dac39de3041b9c36f3","commitMessage":"@@@Refactor RuleDefinitionViolationException to extend SQLException (#11129)\n\n* Refactor RDLBackendHandler\n\n* Refactor RuleDefinitionViolationException to extend SQLException","date":"2021-07-04 01:26:11","modifiedFileCount":"66","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-04 14:16:58","codes":[{"authorDate":"2021-07-04 14:16:58","commitOrder":3,"curCode":"    private void checkToBeAlteredDuplicateBindingTables(final String schemaName, final AlterShardingBindingTableRulesStatement sqlStatement) throws RuleDuplicatedException {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new RuleDuplicatedException(\"binding\", schemaName, duplicateBindingTables);\n        }\n    }\n","date":"2021-07-04 14:16:58","endLine":77,"groupId":"3019","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkToBeAlteredDuplicateBindingTables","params":"(finalStringschemaName@finalAlterShardingBindingTableRulesStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/82/af7518995d81245a1218c119cb30b00eeef842.src","preCode":"    private void checkToBeAlteredDuplicateBindingTables(final AlterShardingBindingTableRulesStatement sqlStatement) throws DuplicateBindingTablesException {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/AlterShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-07-04 14:16:58","commitOrder":3,"curCode":"    private void checkToBeCreatedDuplicateBindingTables(final String schemaName, \n                                                        final CreateShardingBindingTableRulesStatement sqlStatement, final ShardingRuleConfiguration currentRuleConfig) throws RuleDuplicatedException {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new RuleDuplicatedException(\"binding\", schemaName, duplicateBindingTables);\n        }\n    }\n","date":"2021-07-04 14:16:58","endLine":85,"groupId":"3019","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"checkToBeCreatedDuplicateBindingTables","params":"(finalStringschemaName@finalCreateShardingBindingTableRulesStatementsqlStatement@finalShardingRuleConfigurationcurrentRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/dc/47a532bbaa286a67ef870514de15428acec185.src","preCode":"    private void checkToBeCreatedDuplicateBindingTables(final CreateShardingBindingTableRulesStatement sqlStatement, \n                                                        final ShardingRuleConfiguration currentRuleConfig) throws DuplicateBindingTablesException {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateBindingTablesException(duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/CreateShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"f470823871a18135ec464481217395cbaf8f6e90","commitMessage":"@@@Use DuplicateResourceException to refine Exception of current rule validation (#11134)\n\n* Rename RuleDuplicatedException\n\n* Remove DuplicateTablesException\n\n* Remove DuplicateBindingTablesException","date":"2021-07-04 14:16:58","modifiedFileCount":"14","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-04 15:02:59","codes":[{"authorDate":"2021-07-04 15:02:59","commitOrder":4,"curCode":"    private void checkToBeAlteredDuplicateBindingTables(final String schemaName, final AlterShardingBindingTableRulesStatement sqlStatement) throws DuplicateRuleException {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateRuleException(\"binding\", schemaName, duplicateBindingTables);\n        }\n    }\n","date":"2021-07-04 15:02:59","endLine":77,"groupId":"10769","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"checkToBeAlteredDuplicateBindingTables","params":"(finalStringschemaName@finalAlterShardingBindingTableRulesStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/fca4975ff2300c929fc0fec00bc17eced0d441.src","preCode":"    private void checkToBeAlteredDuplicateBindingTables(final String schemaName, final AlterShardingBindingTableRulesStatement sqlStatement) throws RuleDuplicatedException {\n        Collection<String> toBeAlteredBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeAlteredBindingTables.add(each)).collect(Collectors.toSet());\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new RuleDuplicatedException(\"binding\", schemaName, duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/AlterShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-07-04 15:02:59","commitOrder":4,"curCode":"    private void checkToBeCreatedDuplicateBindingTables(final String schemaName, \n                                                        final CreateShardingBindingTableRulesStatement sqlStatement, final ShardingRuleConfiguration currentRuleConfig) throws DuplicateRuleException {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new DuplicateRuleException(\"binding\", schemaName, duplicateBindingTables);\n        }\n    }\n","date":"2021-07-04 15:02:59","endLine":85,"groupId":"10769","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"checkToBeCreatedDuplicateBindingTables","params":"(finalStringschemaName@finalCreateShardingBindingTableRulesStatementsqlStatement@finalShardingRuleConfigurationcurrentRuleConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3a/ef073ae8d4e56e89a83320c5bce75181a32293.src","preCode":"    private void checkToBeCreatedDuplicateBindingTables(final String schemaName, \n                                                        final CreateShardingBindingTableRulesStatement sqlStatement, final ShardingRuleConfiguration currentRuleConfig) throws RuleDuplicatedException {\n        Collection<String> toBeCreatedBindingTables = new HashSet<>();\n        Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet());\n        duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(each -> !toBeCreatedBindingTables.add(each)).collect(Collectors.toSet()));\n        if (!duplicateBindingTables.isEmpty()) {\n            throw new RuleDuplicatedException(\"binding\", schemaName, duplicateBindingTables);\n        }\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/CreateShardingBindingTableRuleStatementUpdater.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"83216cb8e0d277c40d499d8c6ad41413990dc1b5","commitMessage":"@@@Add ResourceDefinitionViolationException (#11136)\n\n* Add ResourceDefinitionViolationException\n\n* Add ResourceDefinitionViolationException\n\n* Rename DuplicateRuleException\n\n* Rename RequiredRuleMissedException\n\n* Rename RequiredResourceMissedException","date":"2021-07-04 15:02:59","modifiedFileCount":"35","status":"M","submitter":"Liang Zhang"}]
