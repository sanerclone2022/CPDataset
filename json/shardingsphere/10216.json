[{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-07-02 23:18:54","commitOrder":2,"curCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        RQLResultSet resultSet = new DatabaseDiscoveryRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowDatabaseDiscoveryRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), CoreMatchers.is(4));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_0,ds_1\"));\n        assertTrue(actual.contains(\"MGR\"));\n    }\n","date":"2021-07-02 23:18:54","endLine":56,"groupId":"6041","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetRowData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5a/a69adb6d748b0740877867702ddbfb25d69671.src","preCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        RQLResultSet resultSet = new DatabaseDiscoveryRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowDatabaseDiscoveryRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), CoreMatchers.is(4));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_0,ds_1\"));\n        assertTrue(actual.contains(\"MGR\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/test/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/query/DatabaseDiscoveryRuleQueryResultSetTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"NB"},{"authorDate":"2021-07-03 15:12:51","commitOrder":2,"curCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        ReadwriteSplittingRuleQueryResultSet resultSet = new ReadwriteSplittingRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowReadwriteSplittingRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(6));\n        assertTrue(actual.contains(\"pr_ds\"));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_primary\"));\n        assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n        assertTrue(actual.contains(\"random\"));\n        assertTrue(actual.contains(\"read_weight=2:1\"));\n    }\n","date":"2021-07-03 15:12:51","endLine":58,"groupId":"3712","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetRowData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/a97822b456740dfa3e8cb3797c69d5590a86dd.src","preCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        ReadwriteSplittingRuleQueryResultSet resultSet = new ReadwriteSplittingRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowReadwriteSplittingRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(6));\n        assertTrue(actual.contains(\"pr_ds\"));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_primary\"));\n        assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n        assertTrue(actual.contains(\"random\"));\n        assertTrue(actual.contains(\"read_weight=2:1\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/test/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/query/ReadwriteSplittingRuleQueryResultSetTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"}],"commitId":"2f7f7f5e0627c094d508f37554ec49c87874bb9e","commitMessage":"@@@Add shardingsphere-readwrite-splitting-distsql-handler module (#11124)\n\n","date":"2021-07-03 15:12:51","modifiedFileCount":"2","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-07-06 20:43:56","commitOrder":3,"curCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        DistSQLResultSet resultSet = new DatabaseDiscoveryRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowDatabaseDiscoveryRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), CoreMatchers.is(4));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_0,ds_1\"));\n        assertTrue(actual.contains(\"MGR\"));\n    }\n","date":"2021-07-06 20:43:56","endLine":56,"groupId":"6041","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetRowData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bd/4ffe41a4c1fe7b6eba3d1221adcd518947051f.src","preCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        RQLResultSet resultSet = new DatabaseDiscoveryRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowDatabaseDiscoveryRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), CoreMatchers.is(4));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_0,ds_1\"));\n        assertTrue(actual.contains(\"MGR\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/test/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/query/DatabaseDiscoveryRuleQueryResultSetTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-07-03 15:12:51","commitOrder":3,"curCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        ReadwriteSplittingRuleQueryResultSet resultSet = new ReadwriteSplittingRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowReadwriteSplittingRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(6));\n        assertTrue(actual.contains(\"pr_ds\"));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_primary\"));\n        assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n        assertTrue(actual.contains(\"random\"));\n        assertTrue(actual.contains(\"read_weight=2:1\"));\n    }\n","date":"2021-07-03 15:12:51","endLine":58,"groupId":"3712","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetRowData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/a97822b456740dfa3e8cb3797c69d5590a86dd.src","preCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        ReadwriteSplittingRuleQueryResultSet resultSet = new ReadwriteSplittingRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowReadwriteSplittingRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(6));\n        assertTrue(actual.contains(\"pr_ds\"));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_primary\"));\n        assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n        assertTrue(actual.contains(\"random\"));\n        assertTrue(actual.contains(\"read_weight=2:1\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/test/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/query/ReadwriteSplittingRuleQueryResultSetTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"}],"commitId":"b3dfa8782cbddbc87346be8117d8d11694fe1aea","commitMessage":"@@@Rename DistSQLResultSet (#11181)\n\n","date":"2021-07-06 20:43:56","modifiedFileCount":"18","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-03 15:12:51","codes":[{"authorDate":"2021-09-04 06:28:38","commitOrder":4,"curCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        DistSQLResultSet resultSet = new DatabaseDiscoveryRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowDatabaseDiscoveryRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(4));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_0,ds_1\"));\n        assertTrue(actual.contains(\"MGR\"));\n    }\n","date":"2021-09-04 06:28:38","endLine":56,"groupId":"10216","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetRowData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/09/229d1c38c19711f74a5f2dd6bd15a35becbb57.src","preCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        DistSQLResultSet resultSet = new DatabaseDiscoveryRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowDatabaseDiscoveryRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), CoreMatchers.is(4));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_0,ds_1\"));\n        assertTrue(actual.contains(\"MGR\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/test/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/query/DatabaseDiscoveryRuleQueryResultSetTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-07-03 15:12:51","commitOrder":4,"curCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        ReadwriteSplittingRuleQueryResultSet resultSet = new ReadwriteSplittingRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowReadwriteSplittingRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(6));\n        assertTrue(actual.contains(\"pr_ds\"));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_primary\"));\n        assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n        assertTrue(actual.contains(\"random\"));\n        assertTrue(actual.contains(\"read_weight=2:1\"));\n    }\n","date":"2021-07-03 15:12:51","endLine":58,"groupId":"10216","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetRowData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/a97822b456740dfa3e8cb3797c69d5590a86dd.src","preCode":"    public void assertGetRowData() {\n        ShardingSphereMetaData metaData = mock(ShardingSphereMetaData.class, RETURNS_DEEP_STUBS);\n        when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n        ReadwriteSplittingRuleQueryResultSet resultSet = new ReadwriteSplittingRuleQueryResultSet();\n        resultSet.init(metaData, mock(ShowReadwriteSplittingRulesStatement.class));\n        Collection<Object> actual = resultSet.getRowData();\n        assertThat(actual.size(), is(6));\n        assertTrue(actual.contains(\"pr_ds\"));\n        assertTrue(actual.contains(\"ms_group\"));\n        assertTrue(actual.contains(\"ds_primary\"));\n        assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n        assertTrue(actual.contains(\"random\"));\n        assertTrue(actual.contains(\"read_weight=2:1\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/test/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/query/ReadwriteSplittingRuleQueryResultSetTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"}],"commitId":"5c9bd5ce6bd4794ed6eb01547d38a5cf9046384c","commitMessage":"@@@Fix curatorZookeeperRepositoryTest and code style. (#12203)\n\n* Fix CuratorZookeeperRepositoryTest.\n\n* Fix code style.","date":"2021-09-04 06:28:38","modifiedFileCount":"6","status":"M","submitter":"Guocheng Tang"}]
