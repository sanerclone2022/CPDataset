[{"authorTime":"2021-08-24 19:06:54","codes":[{"authorDate":"2021-08-24 19:06:54","commitOrder":1,"curCode":"    public void assertWatchUpdatedChangedType() {\n        mockCache();\n        ChildData oldData = new ChildData(\"/test/children_updated/1\", null, \"value1\".getBytes());\n        ChildData data = new ChildData(\"/test/children_updated/1\", null, \"value2\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CHANGED, oldData, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_updated/1\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), CoreMatchers.is(Type.UPDATED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_updated/1\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value2\"));\n    }\n","date":"2021-08-24 19:06:54","endLine":233,"groupId":"1209","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertWatchUpdatedChangedType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2c/99f562324967208a2c2688763486257d9b00ca.src","preCode":"    public void assertWatchUpdatedChangedType() {\n        mockCache();\n        ChildData oldData = new ChildData(\"/test/children_updated/1\", null, \"value1\".getBytes());\n        ChildData data = new ChildData(\"/test/children_updated/1\", null, \"value2\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CHANGED, oldData, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_updated/1\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), CoreMatchers.is(Type.UPDATED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_updated/1\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value2\"));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-repository/shardingsphere-cluster-mode-repository-provider/shardingsphere-cluster-mode-repository-zookeeper-curator/src/test/java/org/apache/shardingsphere/mode/repository/cluster/zookeeper/CuratorZookeeperRepositoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"B"},{"authorDate":"2021-08-24 19:06:54","commitOrder":1,"curCode":"    public void assertWatchAddedChangedType() {\n        mockCache();\n        ChildData data = new ChildData(\"/test/children_added/4\", null, \"value4\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CREATED, null, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_added/4\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), is(Type.ADDED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_added/4\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value4\"));\n    }\n","date":"2021-08-24 19:06:54","endLine":267,"groupId":"1209","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertWatchAddedChangedType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2c/99f562324967208a2c2688763486257d9b00ca.src","preCode":"    public void assertWatchAddedChangedType() {\n        mockCache();\n        ChildData data = new ChildData(\"/test/children_added/4\", null, \"value4\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CREATED, null, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_added/4\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), is(Type.ADDED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_added/4\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value4\"));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-repository/shardingsphere-cluster-mode-repository-provider/shardingsphere-cluster-mode-repository-zookeeper-curator/src/test/java/org/apache/shardingsphere/mode/repository/cluster/zookeeper/CuratorZookeeperRepositoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"}],"commitId":"cdec8f7c500b45b68be095a98abe440485b6cc99","commitMessage":"@@@Move mode out of infra module (#11986)\n\n* Move mode out of infra module\n\n* Move mode out of infra module\n\n* Rename package","date":"2021-08-24 19:06:54","modifiedFileCount":"116","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-24 19:06:54","codes":[{"authorDate":"2021-09-04 06:28:38","commitOrder":2,"curCode":"    public void assertWatchUpdatedChangedType() {\n        mockCache();\n        ChildData oldData = new ChildData(\"/test/children_updated/1\", null, \"value1\".getBytes());\n        ChildData data = new ChildData(\"/test/children_updated/1\", null, \"value2\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CHANGED, oldData, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_updated/1\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), is(Type.UPDATED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_updated/1\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value2\"));\n    }\n","date":"2021-09-04 06:28:38","endLine":251,"groupId":"101948","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertWatchUpdatedChangedType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/b603c401f534e31de65285071d07b337d6069b.src","preCode":"    public void assertWatchUpdatedChangedType() {\n        mockCache();\n        ChildData oldData = new ChildData(\"/test/children_updated/1\", null, \"value1\".getBytes());\n        ChildData data = new ChildData(\"/test/children_updated/1\", null, \"value2\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CHANGED, oldData, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_updated/1\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), CoreMatchers.is(Type.UPDATED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_updated/1\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value2\"));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-repository/shardingsphere-cluster-mode-repository-provider/shardingsphere-cluster-mode-repository-zookeeper-curator/src/test/java/org/apache/shardingsphere/mode/repository/cluster/zookeeper/CuratorZookeeperRepositoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2021-08-24 19:06:54","commitOrder":2,"curCode":"    public void assertWatchAddedChangedType() {\n        mockCache();\n        ChildData data = new ChildData(\"/test/children_added/4\", null, \"value4\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CREATED, null, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_added/4\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), is(Type.ADDED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_added/4\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value4\"));\n    }\n","date":"2021-08-24 19:06:54","endLine":267,"groupId":"101948","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertWatchAddedChangedType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2c/99f562324967208a2c2688763486257d9b00ca.src","preCode":"    public void assertWatchAddedChangedType() {\n        mockCache();\n        ChildData data = new ChildData(\"/test/children_added/4\", null, \"value4\".getBytes());\n        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(CuratorCacheListener.Type.NODE_CREATED, null, data))).when(listenable).addListener(any(CuratorCacheListener.class));\n        SettableFuture<DataChangedEvent> settableFuture = SettableFuture.create();\n        REPOSITORY.watch(\"/test/children_added/4\", settableFuture::set);\n        DataChangedEvent dataChangedEvent = settableFuture.get();\n        assertNotNull(dataChangedEvent);\n        assertThat(dataChangedEvent.getType(), is(Type.ADDED));\n        assertThat(dataChangedEvent.getKey(), is(\"/test/children_added/4\"));\n        assertThat(dataChangedEvent.getValue(), is(\"value4\"));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-repository/shardingsphere-cluster-mode-repository-provider/shardingsphere-cluster-mode-repository-zookeeper-curator/src/test/java/org/apache/shardingsphere/mode/repository/cluster/zookeeper/CuratorZookeeperRepositoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"N"}],"commitId":"5c9bd5ce6bd4794ed6eb01547d38a5cf9046384c","commitMessage":"@@@Fix curatorZookeeperRepositoryTest and code style. (#12203)\n\n* Fix CuratorZookeeperRepositoryTest.\n\n* Fix code style.","date":"2021-09-04 06:28:38","modifiedFileCount":"6","status":"M","submitter":"Guocheng Tang"}]
