[{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":2,"curCode":"    public ASTNode visitOnDuplicateKeyClause(final MySQLStatementParser.OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-10-22 20:53:42","endLine":797,"groupId":"479","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOnDuplicateKeyClause","params":"(finalMySQLStatementParser.OnDuplicateKeyClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitOnDuplicateKeyClause(final MySQLStatementParser.OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"B"},{"authorDate":"2020-10-22 16:47:44","commitOrder":2,"curCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnOrColumnList().columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-10-22 16:47:44","endLine":236,"groupId":"12444","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDropColumnSpecification","params":"(finalDropColumnSpecificationContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/4d52be93e05813661bd7e7bd4869a5cb986773.src","preCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnOrColumnList().columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"NB"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":3,"curCode":"    public ASTNode visitOnDuplicateKeyClause(final OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-11-16 12:59:49","endLine":896,"groupId":"479","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOnDuplicateKeyClause","params":"(finalOnDuplicateKeyClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitOnDuplicateKeyClause(final MySQLStatementParser.OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":890,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":3,"curCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnOrColumnList().columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-10-22 16:47:44","endLine":236,"groupId":"12444","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDropColumnSpecification","params":"(finalDropColumnSpecificationContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/4d52be93e05813661bd7e7bd4869a5cb986773.src","preCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnOrColumnList().columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"},{"authorTime":"2021-03-19 14:33:38","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":4,"curCode":"    public ASTNode visitOnDuplicateKeyClause(final OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2020-11-16 12:59:49","endLine":896,"groupId":"101455","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOnDuplicateKeyClause","params":"(finalOnDuplicateKeyClauseContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitOnDuplicateKeyClause(final OnDuplicateKeyClauseContext ctx) {\n        Collection<AssignmentSegment> columns = new LinkedList<>();\n        for (MySQLStatementParser.AssignmentContext each : ctx.assignment()) {\n            columns.add((AssignmentSegment) visit(each));\n        }\n        return new OnDuplicateKeyColumnsSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":890,"status":"N"},{"authorDate":"2021-03-19 14:33:38","commitOrder":4,"curCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        if (null != ctx.columnOrColumnList().columnName()) {\n            columns.add((ColumnSegment) visit(ctx.columnOrColumnList().columnName()));\n        } else {\n            for (ColumnNameContext each : ctx.columnOrColumnList().columnNames().columnName()) {\n                columns.add((ColumnSegment) visit(each));\n            }\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","date":"2021-03-19 14:33:38","endLine":251,"groupId":"101455","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDropColumnSpecification","params":"(finalDropColumnSpecificationContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f0/7abfc05312b7efce81952632b2a5d87a2e8142.src","preCode":"    public ASTNode visitDropColumnSpecification(final DropColumnSpecificationContext ctx) {\n        Collection<ColumnSegment> columns = new LinkedList<>();\n        for (ColumnNameContext each : ctx.columnOrColumnList().columnName()) {\n            columns.add((ColumnSegment) visit(each));\n        }\n        return new DropColumnDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), columns);\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"19b27d272e3e0e25426bdc6a2792e2cca9d595ac","commitMessage":"@@@Add relational table grammar in 'create table'. (#9572)\n\n* feat: add grammar for create table.\n\n* feat: add grammar for create table.\n\n* feat: add grammar for create table.\n\n* fix: bugs in select clause unit tests.\n\n* fix: bugs in select clause unit tests.\n\n* fix: bugs in select clause unit tests.\n\n* fix: bugs in select clause unit tests.  by removing \"K M G T P E\" from OracleKeyword.g4.\n\n* style: modify code style.","date":"2021-03-19 14:33:38","modifiedFileCount":"1","status":"M","submitter":"coco"}]
