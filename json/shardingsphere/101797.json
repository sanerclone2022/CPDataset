[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (ColumnDefinitionSegment each : getSqlStatement().getColumnDefinitions()) {\n            result.addAll(each.getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","date":"2020-10-11 18:46:54","endLine":60,"groupId":"7879","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e9/eeed929a67aec3c543861bfa0fe638f1043313.src","preCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (ColumnDefinitionSegment each : getSqlStatement().getColumnDefinitions()) {\n            result.addAll(each.getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/ddl/CreateTableStatementContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (AddColumnDefinitionSegment each : getSqlStatement().getAddColumnDefinitions()) {\n            for (ColumnDefinitionSegment columnDefinition : each.getColumnDefinitions()) {\n                result.addAll(columnDefinition.getReferencedTables());\n            }\n        }\n        for (ModifyColumnDefinitionSegment each : getSqlStatement().getModifyColumnDefinitions()) {\n            result.addAll(each.getColumnDefinition().getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getAddConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","date":"2020-10-11 18:46:54","endLine":65,"groupId":"5215","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAllTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/19/74a3d223977a1ff4d7f91bee90cd66436b1bef.src","preCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (AddColumnDefinitionSegment each : getSqlStatement().getAddColumnDefinitions()) {\n            for (ColumnDefinitionSegment columnDefinition : each.getColumnDefinitions()) {\n                result.addAll(columnDefinition.getReferencedTables());\n            }\n        }\n        for (ModifyColumnDefinitionSegment each : getSqlStatement().getModifyColumnDefinitions()) {\n            result.addAll(each.getColumnDefinition().getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getAddConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/ddl/AlterTableStatementContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-05-26 15:53:47","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":2,"curCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (ColumnDefinitionSegment each : getSqlStatement().getColumnDefinitions()) {\n            result.addAll(each.getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","date":"2020-10-11 18:46:54","endLine":60,"groupId":"7879","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e9/eeed929a67aec3c543861bfa0fe638f1043313.src","preCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (ColumnDefinitionSegment each : getSqlStatement().getColumnDefinitions()) {\n            result.addAll(each.getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/ddl/CreateTableStatementContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2021-05-26 15:53:47","commitOrder":2,"curCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        if (getSqlStatement().getRenameTable().isPresent()) {\n            result.add(getSqlStatement().getRenameTable().get());\n        }\n        for (AddColumnDefinitionSegment each : getSqlStatement().getAddColumnDefinitions()) {\n            for (ColumnDefinitionSegment columnDefinition : each.getColumnDefinitions()) {\n                result.addAll(columnDefinition.getReferencedTables());\n            }\n        }\n        for (ModifyColumnDefinitionSegment each : getSqlStatement().getModifyColumnDefinitions()) {\n            result.addAll(each.getColumnDefinition().getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getAddConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","date":"2021-05-26 15:53:47","endLine":68,"groupId":"5215","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getAllTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/87/382dd6af22ca543c25f44000e219acf7dc00ce.src","preCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (AddColumnDefinitionSegment each : getSqlStatement().getAddColumnDefinitions()) {\n            for (ColumnDefinitionSegment columnDefinition : each.getColumnDefinitions()) {\n                result.addAll(columnDefinition.getReferencedTables());\n            }\n        }\n        for (ModifyColumnDefinitionSegment each : getSqlStatement().getModifyColumnDefinitions()) {\n            result.addAll(each.getColumnDefinition().getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getAddConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/ddl/AlterTableStatementContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"e527a88d21eb2fd83c985802ff12987a08bc54b1","commitMessage":"@@@support postgresql alter table rename statement (#10462)\n\n* support postgresql alter table rename statement\n\n* fix checkstyle\n\n* modify alter table pre validate logic\n\n* fix checkstyle\n\n* extract getRenameTable method","date":"2021-05-26 15:53:47","modifiedFileCount":"8","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-06-01 22:50:29","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":3,"curCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (ColumnDefinitionSegment each : getSqlStatement().getColumnDefinitions()) {\n            result.addAll(each.getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","date":"2020-10-11 18:46:54","endLine":60,"groupId":"101797","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e9/eeed929a67aec3c543861bfa0fe638f1043313.src","preCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        for (ColumnDefinitionSegment each : getSqlStatement().getColumnDefinitions()) {\n            result.addAll(each.getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/ddl/CreateTableStatementContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2021-06-01 22:50:29","commitOrder":3,"curCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        if (getSqlStatement().getRenameTable().isPresent()) {\n            result.add(getSqlStatement().getRenameTable().get());\n        }\n        for (AddColumnDefinitionSegment each : getSqlStatement().getAddColumnDefinitions()) {\n            for (ColumnDefinitionSegment columnDefinition : each.getColumnDefinitions()) {\n                result.addAll(columnDefinition.getReferencedTables());\n            }\n        }\n        for (ModifyColumnDefinitionSegment each : getSqlStatement().getModifyColumnDefinitions()) {\n            result.addAll(each.getColumnDefinition().getReferencedTables());\n        }\n        for (AddConstraintDefinitionSegment each : getSqlStatement().getAddConstraintDefinitions()) {\n            each.getConstraintDefinition().getReferencedTable().ifPresent(result::add);\n        }\n        return result;\n    }\n","date":"2021-06-01 22:50:29","endLine":73,"groupId":"101797","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"getAllTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/83/a91cf4a6a99f03ac60fda3946605f20e77fa63.src","preCode":"    public Collection<SimpleTableSegment> getAllTables() {\n        Collection<SimpleTableSegment> result = new LinkedList<>();\n        result.add(getSqlStatement().getTable());\n        if (getSqlStatement().getRenameTable().isPresent()) {\n            result.add(getSqlStatement().getRenameTable().get());\n        }\n        for (AddColumnDefinitionSegment each : getSqlStatement().getAddColumnDefinitions()) {\n            for (ColumnDefinitionSegment columnDefinition : each.getColumnDefinitions()) {\n                result.addAll(columnDefinition.getReferencedTables());\n            }\n        }\n        for (ModifyColumnDefinitionSegment each : getSqlStatement().getModifyColumnDefinitions()) {\n            result.addAll(each.getColumnDefinition().getReferencedTables());\n        }\n        for (ConstraintDefinitionSegment each : getSqlStatement().getAddConstraintDefinitions()) {\n            if (each.getReferencedTable().isPresent()) {\n                result.add(each.getReferencedTable().get());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/ddl/AlterTableStatementContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"916f1210727781ecea299ea506a03ab8e86c8959","commitMessage":"@@@Rewrite constraints' name in logic SQL (#10606)\n\n* Rewrite constraint name in alter table\n\n* Fix MySQL parser testcases\n\n* Fix MySQL SQL parser\n\n* Fix MySQL add constraint SQL parser\n\n* Fix rewrite testcases\n\n* Remove unused import\n\n* Fix SQLServer parse constraint name\n\n* Fix Oracle SQL parser\n\n* Avoid unnamed constraint cause NPE","date":"2021-06-01 22:50:29","modifiedFileCount":"18","status":"M","submitter":"???"}]
