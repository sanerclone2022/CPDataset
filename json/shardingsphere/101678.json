[{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-10-22 16:47:44","commitOrder":1,"curCode":"    public ASTNode visitOutOfLineConstraint(final OutOfLineConstraintContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.primaryKey()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.columnNames())).getValue());\n        }\n        if (null != ctx.referencesClause()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.referencesClause().tableName()));\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":145,"groupId":"2294","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOutOfLineConstraint","params":"(finalOutOfLineConstraintContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/4d52be93e05813661bd7e7bd4869a5cb986773.src","preCode":"    public ASTNode visitOutOfLineConstraint(final OutOfLineConstraintContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.primaryKey()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.columnNames())).getValue());\n        }\n        if (null != ctx.referencesClause()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.referencesClause().tableName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"B"},{"authorDate":"2020-10-22 16:47:44","commitOrder":1,"curCode":"    public ASTNode visitConstraintDefinition(final ConstraintDefinitionContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.primaryKeyOption()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.primaryKeyOption().columnNames())).getValue());\n        }\n        if (null != ctx.foreignKeyOption()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.foreignKeyOption().referenceDefinition().tableName()));\n        }\n        return result;\n    }\n","date":"2020-10-22 16:47:44","endLine":133,"groupId":"10376","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitConstraintDefinition","params":"(finalConstraintDefinitionContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/c194ae78bfc1366f7e8af008b3f74d41fbcba1.src","preCode":"    public ASTNode visitConstraintDefinition(final ConstraintDefinitionContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.primaryKeyOption()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.primaryKeyOption().columnNames())).getValue());\n        }\n        if (null != ctx.foreignKeyOption()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.foreignKeyOption().referenceDefinition().tableName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"dca1684798205a6efd0d94b91aa1d3f86c8baefb","commitMessage":"@@@Add Statement SQL SQLVisitor (#7885)\n\n","date":"2020-10-22 16:47:44","modifiedFileCount":"7","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2021-06-01 22:50:29","codes":[{"authorDate":"2021-06-01 22:50:29","commitOrder":2,"curCode":"    public ASTNode visitOutOfLineConstraint(final OutOfLineConstraintContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.constraintName()) {\n            result.setConstraintName((ConstraintSegment) visit(ctx.constraintName()));\n        }\n        if (null != ctx.primaryKey()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.columnNames())).getValue());\n        }\n        if (null != ctx.UNIQUE()) {\n            result.getIndexColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.columnNames())).getValue());\n        }\n        if (null != ctx.referencesClause()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.referencesClause().tableName()));\n        }\n        return result;\n    }\n","date":"2021-06-01 22:50:29","endLine":178,"groupId":"101678","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitOutOfLineConstraint","params":"(finalOutOfLineConstraintContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fb/31e86f8adf2601c9d24b68e3d7c4f850268d3c.src","preCode":"    public ASTNode visitOutOfLineConstraint(final OutOfLineConstraintContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.primaryKey()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.columnNames())).getValue());\n        }\n        if (null != ctx.referencesClause()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.referencesClause().tableName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleDDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2021-06-01 22:50:29","commitOrder":2,"curCode":"    public ASTNode visitConstraintDefinition(final ConstraintDefinitionContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.constraintName()) {\n            result.setConstraintName((ConstraintSegment) visit(ctx.constraintName()));\n        }\n        if (null != ctx.primaryKeyOption()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.primaryKeyOption().columnNames())).getValue());\n        }\n        if (null != ctx.foreignKeyOption()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.foreignKeyOption().referenceDefinition().tableName()));\n        }\n        return result;\n    }\n","date":"2021-06-01 22:50:29","endLine":160,"groupId":"101678","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"visitConstraintDefinition","params":"(finalConstraintDefinitionContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/72/62edad7b40152d7e6ba6cd84e965d48c7564fb.src","preCode":"    public ASTNode visitConstraintDefinition(final ConstraintDefinitionContext ctx) {\n        ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex());\n        if (null != ctx.primaryKeyOption()) {\n            result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>) visit(ctx.primaryKeyOption().columnNames())).getValue());\n        }\n        if (null != ctx.foreignKeyOption()) {\n            result.setReferencedTable((SimpleTableSegment) visit(ctx.foreignKeyOption().referenceDefinition().tableName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92DDLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"916f1210727781ecea299ea506a03ab8e86c8959","commitMessage":"@@@Rewrite constraints' name in logic SQL (#10606)\n\n* Rewrite constraint name in alter table\n\n* Fix MySQL parser testcases\n\n* Fix MySQL SQL parser\n\n* Fix MySQL add constraint SQL parser\n\n* Fix rewrite testcases\n\n* Remove unused import\n\n* Fix SQLServer parse constraint name\n\n* Fix Oracle SQL parser\n\n* Avoid unnamed constraint cause NPE","date":"2021-06-01 22:50:29","modifiedFileCount":"18","status":"M","submitter":"???"}]
