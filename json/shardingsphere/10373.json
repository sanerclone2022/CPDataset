[{"authorTime":"2020-11-09 17:01:30","codes":[{"authorDate":"2021-06-05 15:56:59","commitOrder":4,"curCode":"    private void judgeForInsert(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0,\n                Arrays.asList(new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"shadow\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(\n                0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, true)))));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(schema, Collections.emptyList(), insertStatement);\n        SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertTrue(\"should be shadow\", simpleShadowDataSourceRouter.isShadow());\n        insertStatement.getValues().clear();\n        insertStatement.getValues().addAll(Collections.singletonList(\n                new InsertValuesSegment(0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, false)))));\n        insertStatementContext = new InsertStatementContext(schema, Collections.emptyList(), insertStatement);\n        simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertFalse(\"should not be shadow\", simpleShadowDataSourceRouter.isShadow());\n    }\n","date":"2021-06-05 15:56:59","endLine":112,"groupId":"13668","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"judgeForInsert","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/61/906a94a86f26e33d1b1a90ad01e9c676aa90ff.src","preCode":"    private void judgeForInsert(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0,\n                Arrays.asList(new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"shadow\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(\n                0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, true)))));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(schema, Collections.emptyList(), insertStatement);\n        SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertTrue(\"should be shadow\", simpleShadowDataSourceRouter.isShadow());\n        insertStatement.getValues().clear();\n        insertStatement.getValues().addAll(Collections.singletonList(\n                new InsertValuesSegment(0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, false)))));\n        insertStatementContext = new InsertStatementContext(schema, Collections.emptyList(), insertStatement);\n        simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertFalse(\"should not be shadow\", simpleShadowDataSourceRouter.isShadow());\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/route/judge/impl/SimpleShadowDataSourceRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2020-11-09 17:01:30","commitOrder":4,"curCode":"    private void assertInsertStatementContextWithColumnNames(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Arrays.asList(\n                new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"status\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        setUpInsertValues(insertStatement);\n        InsertStatementContext actual = new InsertStatementContext(mock(ShardingSphereSchema.class), Arrays.asList(1, \"Tom\", 2, \"Jerry\"), insertStatement);\n        assertInsertStatementContext(actual);\n    }\n","date":"2020-11-09 17:01:30","endLine":95,"groupId":"13441","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInsertStatementContextWithColumnNames","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/20c9bcac1404f5c5098a940fe3eb7dd0d75f2a.src","preCode":"    private void assertInsertStatementContextWithColumnNames(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Arrays.asList(\n                new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"status\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        setUpInsertValues(insertStatement);\n        InsertStatementContext actual = new InsertStatementContext(mock(ShardingSphereSchema.class), Arrays.asList(1, \"Tom\", 2, \"Jerry\"), insertStatement);\n        assertInsertStatementContext(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"}],"commitId":"dd4349f723bb3b9ab3107157736e2227cd231429","commitMessage":"@@@Merge shadow feature to core module (#10666)\n\n* Merge shadow feature to core module\n\n* Merge shadow feature to core module","date":"2021-06-05 15:56:59","modifiedFileCount":"0","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-02 20:44:49","codes":[{"authorDate":"2021-07-02 20:44:49","commitOrder":5,"curCode":"    private void judgeForInsert(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0,\n                Arrays.asList(new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"shadow\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(\n                0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, true)))));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(insertStatement);\n        SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertTrue(\"should be shadow\", simpleShadowDataSourceRouter.isShadow());\n        insertStatement.getValues().clear();\n        insertStatement.getValues().addAll(Collections.singletonList(\n                new InsertValuesSegment(0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, false)))));\n        insertStatementContext = createInsertStatementContext(insertStatement);\n        simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertFalse(\"should not be shadow\", simpleShadowDataSourceRouter.isShadow());\n    }\n","date":"2021-07-02 20:44:49","endLine":116,"groupId":"13668","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"judgeForInsert","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ad/ef4a1aaac5146ff84271d3b1b070ff8286a187.src","preCode":"    private void judgeForInsert(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0,\n                Arrays.asList(new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"shadow\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(\n                0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, true)))));\n        InsertStatementContext insertStatementContext = new InsertStatementContext(schema, Collections.emptyList(), insertStatement);\n        SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertTrue(\"should be shadow\", simpleShadowDataSourceRouter.isShadow());\n        insertStatement.getValues().clear();\n        insertStatement.getValues().addAll(Collections.singletonList(\n                new InsertValuesSegment(0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, false)))));\n        insertStatementContext = new InsertStatementContext(schema, Collections.emptyList(), insertStatement);\n        simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertFalse(\"should not be shadow\", simpleShadowDataSourceRouter.isShadow());\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/route/judge/impl/SimpleShadowDataSourceRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2021-07-02 20:44:49","commitOrder":5,"curCode":"    private void assertInsertStatementContextWithColumnNames(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Arrays.asList(\n                new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"status\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        setUpInsertValues(insertStatement);\n        InsertStatementContext actual = createInsertStatementContext(Arrays.asList(1, \"Tom\", 2, \"Jerry\"), insertStatement);\n        assertInsertStatementContext(actual);\n    }\n","date":"2021-07-02 20:44:49","endLine":99,"groupId":"13441","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInsertStatementContextWithColumnNames","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/08/962aac1755f56ea5bde84174416216d99c337e.src","preCode":"    private void assertInsertStatementContextWithColumnNames(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Arrays.asList(\n                new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"status\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        setUpInsertValues(insertStatement);\n        InsertStatementContext actual = new InsertStatementContext(mock(ShardingSphereSchema.class), Arrays.asList(1, \"Tom\", 2, \"Jerry\"), insertStatement);\n        assertInsertStatementContext(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"bfb784c9a0e47fd147c8a654c2f0b2a1e86c2c27","commitMessage":"@@@extract SchemaAvailable interface & add validate for SelectStatement (#11091)\n\n* refactor SchemaAvailable interface & add validate for SelectStatement\n\n* add final for InsertStatementContext field\n\n* fix test case error\n\n* fix rewrite test case error\n\n* refactor context new instance method\n\n* optimize test case\n\n* fix test case\n\n* optimize logic\n\n* fix test case\n\n* fix checkstyle","date":"2021-07-02 20:44:49","modifiedFileCount":"44","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":6,"curCode":"    private void judgeForInsert(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"tbl\"))));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0,\n                Arrays.asList(new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"shadow\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(\n                0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, true)))));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(insertStatement);\n        SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertTrue(\"should be shadow\", simpleShadowDataSourceRouter.isShadow());\n        insertStatement.getValues().clear();\n        insertStatement.getValues().addAll(Collections.singletonList(\n                new InsertValuesSegment(0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, false)))));\n        insertStatementContext = createInsertStatementContext(insertStatement);\n        simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertFalse(\"should not be shadow\", simpleShadowDataSourceRouter.isShadow());\n    }\n","date":"2021-07-05 14:48:43","endLine":117,"groupId":"10373","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"judgeForInsert","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/08/ec2f9f595ed462ca690210b66af75db59aeea2.src","preCode":"    private void judgeForInsert(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0,\n                Arrays.asList(new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"shadow\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(\n                0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, true)))));\n        InsertStatementContext insertStatementContext = createInsertStatementContext(insertStatement);\n        SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertTrue(\"should be shadow\", simpleShadowDataSourceRouter.isShadow());\n        insertStatement.getValues().clear();\n        insertStatement.getValues().addAll(Collections.singletonList(\n                new InsertValuesSegment(0, 0, Arrays.asList(new LiteralExpressionSegment(0, 0, 1), new LiteralExpressionSegment(0, 0, \"name\"), new LiteralExpressionSegment(0, 0, false)))));\n        insertStatementContext = createInsertStatementContext(insertStatement);\n        simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule, insertStatementContext);\n        assertFalse(\"should not be shadow\", simpleShadowDataSourceRouter.isShadow());\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/route/judge/impl/SimpleShadowDataSourceRouterTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":6,"curCode":"    private void assertInsertStatementContextWithColumnNames(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"tbl\"))));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Arrays.asList(\n                new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"status\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        setUpInsertValues(insertStatement);\n        InsertStatementContext actual = createInsertStatementContext(Arrays.asList(1, \"Tom\", 2, \"Jerry\"), insertStatement);\n        assertInsertStatementContext(actual);\n    }\n","date":"2021-07-05 14:48:43","endLine":100,"groupId":"10373","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertInsertStatementContextWithColumnNames","params":"(finalInsertStatementinsertStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b3/61b81f1c1aac8837900f7c9cc85644fbdfdfc9.src","preCode":"    private void assertInsertStatementContextWithColumnNames(final InsertStatement insertStatement) {\n        insertStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"tbl\")));\n        InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0, 0, Arrays.asList(\n                new ColumnSegment(0, 0, new IdentifierValue(\"id\")), new ColumnSegment(0, 0, new IdentifierValue(\"name\")), new ColumnSegment(0, 0, new IdentifierValue(\"status\"))));\n        insertStatement.setInsertColumns(insertColumnsSegment);\n        setUpInsertValues(insertStatement);\n        InsertStatementContext actual = createInsertStatementContext(Arrays.asList(1, \"Tom\", 2, \"Jerry\"), insertStatement);\n        assertInsertStatementContext(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/statement/impl/InsertStatementContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"}]
