[{"authorTime":"2021-02-20 16:26:03","codes":[{"authorDate":"2021-02-08 23:22:42","commitOrder":3,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","date":"2021-02-08 23:22:42","endLine":66,"groupId":"10164","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/b58881cf3abd83b2055b9dbfd0c764a15043cd.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"},{"authorDate":"2021-02-20 16:26:03","commitOrder":3,"curCode":"    public void assertUnmarshalInvalidYaml() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/accepted-class.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlEngine.unmarshal(yamlContent.toString(), YamlRootRuleConfigurations.class);\n    }\n","date":"2021-02-20 16:26:03","endLine":96,"groupId":"10164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUnmarshalInvalidYaml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bf/e178bdc9b176415f0c2b7ad8356395d032363a.src","preCode":"    public void assertUnmarshalInvalidYaml() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/accepted-class.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlEngine.unmarshal(yamlContent.toString(), YamlRootRuleConfigurations.class);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"5d1ff85f5696ab61ff8a69aae3ff7cb3aae2cf67","commitMessage":"@@@Unify unmarshal and secureUnmarshal in YamlEngine (#9453)\n\n","date":"2021-02-20 16:26:03","modifiedFileCount":"9","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-08-14 13:32:42","codes":[{"authorDate":"2021-02-08 23:22:42","commitOrder":4,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","date":"2021-02-08 23:22:42","endLine":66,"groupId":"10164","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/b58881cf3abd83b2055b9dbfd0c764a15043cd.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2021-08-14 13:32:42","commitOrder":4,"curCode":"    public void assertUnmarshalInvalidYaml() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/accepted-class.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlEngine.unmarshal(yamlContent.toString(), YamlRootConfiguration.class);\n    }\n","date":"2021-08-14 13:32:42","endLine":97,"groupId":"10164","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUnmarshalInvalidYaml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/27/acbca0a3c3934c51bb2ceb1e3893c250daf454.src","preCode":"    public void assertUnmarshalInvalidYaml() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/accepted-class.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlEngine.unmarshal(yamlContent.toString(), YamlRootRuleConfigurations.class);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"d3d70a09e37e922c9284aa7739cca41be654d0a2","commitMessage":"@@@Rename YamlRootRuleConfigurations to YamlRootConfiguration (#11815)\n\n* Rename YamlRootRuleConfigurations to YamlRootConfiguration\n\n* For checkstyle","date":"2021-08-14 13:32:42","modifiedFileCount":"17","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-02 22:47:56","codes":[{"authorDate":"2021-09-02 22:47:56","commitOrder":5,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","date":"2021-09-02 22:47:56","endLine":62,"groupId":"10622","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/60/6a0f827ff21a55bb349b76f51f1cf498665d10.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-09-02 22:47:56","commitOrder":5,"curCode":"    public void assertUnmarshalInvalidYaml() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/accepted-class.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlEngine.unmarshal(yamlContent.toString(), YamlRootConfiguration.class);\n    }\n","date":"2021-09-02 22:47:56","endLine":97,"groupId":"10622","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertUnmarshalInvalidYaml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/60/6a0f827ff21a55bb349b76f51f1cf498665d10.src","preCode":"    public void assertUnmarshalInvalidYaml() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/accepted-class.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlEngine.unmarshal(yamlContent.toString(), YamlRootConfiguration.class);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"1f7f8205e2bdc59b0067185662104ca2b33c1f0a","commitMessage":"@@@Fix the separator problem under window. (#12161)\n\n* Fixed #12157.\n\n* Get system separator for yaml conversion.\n\n* Fixes test case.\n\n* Load config form YAML.\n\n* Add new line.\n\n* Load config from YAML.\n\n* Fix code style.","date":"2021-09-02 22:47:56","modifiedFileCount":"9","status":"M","submitter":"Guocheng Tang"}]
