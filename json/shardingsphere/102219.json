[{"authorTime":"2021-08-02 17:49:58","codes":[{"authorDate":"2021-08-02 17:49:58","commitOrder":1,"curCode":"    private Optional<MetricsWrapper> createCounter(final Map metric) {\n        Counter.Builder builder = Counter.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Counter counter = builder.register();\n        CounterWrapper wrapper = new CounterWrapper(counter);\n        return Optional.of(wrapper);\n    }\n","date":"2021-08-02 17:49:58","endLine":86,"groupId":"8070","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCounter","params":"(finalMapmetric)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b7/7093eeec6f119ace512cf3118e15afd72391bb.src","preCode":"    private Optional<MetricsWrapper> createCounter(final Map metric) {\n        Counter.Builder builder = Counter.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Counter counter = builder.register();\n        CounterWrapper wrapper = new CounterWrapper(counter);\n        return Optional.of(wrapper);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2021-08-02 17:49:58","commitOrder":1,"curCode":"    private Optional<MetricsWrapper> createGauge(final Map metric) {\n        Gauge.Builder builder = Gauge.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Gauge gauge = builder.register();\n        GaugeWrapper wrapper = new GaugeWrapper(gauge);\n        return Optional.of(wrapper);\n    }\n","date":"2021-08-02 17:49:58","endLine":98,"groupId":"6958","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createGauge","params":"(finalMapmetric)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b7/7093eeec6f119ace512cf3118e15afd72391bb.src","preCode":"    private Optional<MetricsWrapper> createGauge(final Map metric) {\n        Gauge.Builder builder = Gauge.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Gauge gauge = builder.register();\n        GaugeWrapper wrapper = new GaugeWrapper(gauge);\n        return Optional.of(wrapper);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"fcad18cd188a1a15d723a1a9de774445f0cf5b31","commitMessage":"@@@Refactor the metrics module in agent plugin and add transfer bytes metrics (#11585)\n\n* Refactor the metrics module in agent plugin and add request/response metrics\n\n* Change some parameters settings and fix some code style\n\n* Add some test cases.\n\n* Change ProxyInfoCollectorTest test cases.","date":"2021-08-02 17:49:58","modifiedFileCount":"16","status":"B","submitter":"Dachuan J"},{"authorTime":"2021-08-13 19:38:46","codes":[{"authorDate":"2021-08-13 19:38:46","commitOrder":2,"curCode":"    protected Optional<MetricsWrapper> createCounter(final Map metric) {\n        Counter.Builder builder = Counter.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Counter counter = builder.register();\n        CounterWrapper wrapper = new CounterWrapper(counter);\n        return Optional.of(wrapper);\n    }\n","date":"2021-08-13 19:38:46","endLine":120,"groupId":"8070","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCounter","params":"(finalMapmetric)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ee864241b58e9ce6c82a659aa1fd0b6dcc084b.src","preCode":"    private Optional<MetricsWrapper> createCounter(final Map metric) {\n        Counter.Builder builder = Counter.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Counter counter = builder.register();\n        CounterWrapper wrapper = new CounterWrapper(counter);\n        return Optional.of(wrapper);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2021-08-13 19:38:46","commitOrder":2,"curCode":"    protected Optional<MetricsWrapper> createGauge(final Map metric) {\n        Gauge.Builder builder = Gauge.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Gauge gauge = builder.register();\n        GaugeWrapper wrapper = new GaugeWrapper(gauge);\n        return Optional.of(wrapper);\n    }\n","date":"2021-08-13 19:38:46","endLine":132,"groupId":"6958","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createGauge","params":"(finalMapmetric)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ee864241b58e9ce6c82a659aa1fd0b6dcc084b.src","preCode":"    private Optional<MetricsWrapper> createGauge(final Map metric) {\n        Gauge.Builder builder = Gauge.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Gauge gauge = builder.register();\n        GaugeWrapper wrapper = new GaugeWrapper(gauge);\n        return Optional.of(wrapper);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"6433e6036ceccc997cc522f5f0bfd6b34499cc28","commitMessage":"@@@Refactor metrics (#11804)\n\n","date":"2021-08-13 19:38:46","modifiedFileCount":"5","status":"M","submitter":"Dachuan J"},{"authorTime":"2021-08-15 18:31:45","codes":[{"authorDate":"2021-08-15 18:31:45","commitOrder":3,"curCode":"    private Optional<MetricsWrapper> createCounter(final Map<String, Object> metric) {\n        Counter.Builder builder = Counter.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).toArray(new String[0]));\n        }\n        Counter counter = builder.register();\n        CounterWrapper wrapper = new CounterWrapper(counter);\n        return Optional.of(wrapper);\n    }\n","date":"2021-08-15 18:31:45","endLine":130,"groupId":"102219","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createCounter","params":"(finalMap<String@Object>metric)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/17363a9581315c9d3645f722d8a9c039b0f58b.src","preCode":"    protected Optional<MetricsWrapper> createCounter(final Map metric) {\n        Counter.Builder builder = Counter.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Counter counter = builder.register();\n        CounterWrapper wrapper = new CounterWrapper(counter);\n        return Optional.of(wrapper);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2021-08-15 18:31:45","commitOrder":3,"curCode":"    private Optional<MetricsWrapper> createGauge(final Map<String, Object> metric) {\n        Gauge.Builder builder = Gauge.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).toArray(new String[0]));\n        }\n        Gauge gauge = builder.register();\n        GaugeWrapper wrapper = new GaugeWrapper(gauge);\n        return Optional.of(wrapper);\n    }\n","date":"2021-08-15 18:31:45","endLine":142,"groupId":"102219","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createGauge","params":"(finalMap<String@Object>metric)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/17363a9581315c9d3645f722d8a9c039b0f58b.src","preCode":"    protected Optional<MetricsWrapper> createGauge(final Map metric) {\n        Gauge.Builder builder = Gauge.build()\n                .name(getName(metric))\n                .help(getHelp(metric));\n        if (null != getLabels(metric)) {\n            builder.labelNames(getLabels(metric).stream().toArray(String[]::new));\n        }\n        Gauge gauge = builder.register();\n        GaugeWrapper wrapper = new GaugeWrapper(gauge);\n        return Optional.of(wrapper);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"11b86de893b6597f1661a171957ab37c019c1eba","commitMessage":"@@@Fix code warnings (#11828)\n\n","date":"2021-08-15 18:31:45","modifiedFileCount":"14","status":"M","submitter":"Dachuan J"}]
