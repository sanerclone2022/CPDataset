[{"authorTime":"2021-06-16 16:13:38","codes":[{"authorDate":"2021-06-16 16:13:38","commitOrder":1,"curCode":"    public static Range<Comparable<?>> safeClosed(final Comparable<?> lowerEndpoint, final Comparable<?> upperEndpoint) {\n        try {\n            return Range.closed(lowerEndpoint, upperEndpoint);\n        } catch (final ClassCastException ex) {\n            Class<?> clazz = getTargetNumericType(Lists.newArrayList(lowerEndpoint, upperEndpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            return Range.closed(parseNumberByClazz(lowerEndpoint.toString(), clazz), parseNumberByClazz(upperEndpoint.toString(), clazz));\n        }\n    }\n","date":"2021-06-16 16:13:38","endLine":79,"groupId":"13260","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"safeClosed","params":"(finalComparable<?>lowerEndpoint@finalComparable<?>upperEndpoint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/45/39d69eed6a8db16be43bccd8aa80c4856987e2.src","preCode":"    public static Range<Comparable<?>> safeClosed(final Comparable<?> lowerEndpoint, final Comparable<?> upperEndpoint) {\n        try {\n            return Range.closed(lowerEndpoint, upperEndpoint);\n        } catch (final ClassCastException ex) {\n            Class<?> clazz = getTargetNumericType(Lists.newArrayList(lowerEndpoint, upperEndpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            return Range.closed(parseNumberByClazz(lowerEndpoint.toString(), clazz), parseNumberByClazz(upperEndpoint.toString(), clazz));\n        }\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SafeNumberOperationUtil.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2021-06-16 16:13:38","commitOrder":1,"curCode":"    public static boolean safeContains(final Range<Comparable<?>> range, final Comparable<?> endpoint) {\n        try {\n            return range.contains(endpoint);\n        } catch (final ClassCastException ex) {\n            Comparable<?> rangeUpperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n            Comparable<?> rangeLowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n            Class<?> clazz = getTargetNumericType(Lists.newArrayList(rangeLowerEndpoint, rangeUpperEndpoint, endpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            Range<Comparable<?>> newRange = createTargetNumericTypeRange(range, clazz);\n            return newRange.contains(parseNumberByClazz(endpoint.toString(), clazz));\n        }\n    }\n","date":"2021-06-16 16:13:38","endLine":101,"groupId":"13259","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"safeContains","params":"(finalRange<Comparable<?>>range@finalComparable<?>endpoint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/45/39d69eed6a8db16be43bccd8aa80c4856987e2.src","preCode":"    public static boolean safeContains(final Range<Comparable<?>> range, final Comparable<?> endpoint) {\n        try {\n            return range.contains(endpoint);\n        } catch (final ClassCastException ex) {\n            Comparable<?> rangeUpperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n            Comparable<?> rangeLowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n            Class<?> clazz = getTargetNumericType(Lists.newArrayList(rangeLowerEndpoint, rangeUpperEndpoint, endpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            Range<Comparable<?>> newRange = createTargetNumericTypeRange(range, clazz);\n            return newRange.contains(parseNumberByClazz(endpoint.toString(), clazz));\n        }\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SafeNumberOperationUtil.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"fc3c59030d72cd98eea54d9fbbf6487102f16d3a","commitMessage":"@@@fix column index out of range exception when execute subquery select (#10833)\n\n* fix column index out of range exception when execute subquery select\n\n* fix checkstyle","date":"2021-06-16 16:13:38","modifiedFileCount":"9","status":"B","submitter":"Zhengqiang Duan"},{"authorTime":"2021-07-29 01:03:53","codes":[{"authorDate":"2021-07-29 01:03:53","commitOrder":2,"curCode":"    public static Range<Comparable<?>> safeClosed(final Comparable<?> lowerEndpoint, final Comparable<?> upperEndpoint) {\n        try {\n            return Range.closed(lowerEndpoint, upperEndpoint);\n        } catch (final ClassCastException ex) {\n            Class<?> clazz = getTargetNumericType(Arrays.asList(lowerEndpoint, upperEndpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            return Range.closed(parseNumberByClazz(lowerEndpoint.toString(), clazz), parseNumberByClazz(upperEndpoint.toString(), clazz));\n        }\n    }\n","date":"2021-07-29 01:03:53","endLine":79,"groupId":"13260","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"safeClosed","params":"(finalComparable<?>lowerEndpoint@finalComparable<?>upperEndpoint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5b/4e151504131d5b614d212096b82bc5286159fa.src","preCode":"    public static Range<Comparable<?>> safeClosed(final Comparable<?> lowerEndpoint, final Comparable<?> upperEndpoint) {\n        try {\n            return Range.closed(lowerEndpoint, upperEndpoint);\n        } catch (final ClassCastException ex) {\n            Class<?> clazz = getTargetNumericType(Lists.newArrayList(lowerEndpoint, upperEndpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            return Range.closed(parseNumberByClazz(lowerEndpoint.toString(), clazz), parseNumberByClazz(upperEndpoint.toString(), clazz));\n        }\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SafeNumberOperationUtil.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-07-29 01:03:53","commitOrder":2,"curCode":"    public static boolean safeContains(final Range<Comparable<?>> range, final Comparable<?> endpoint) {\n        try {\n            return range.contains(endpoint);\n        } catch (final ClassCastException ex) {\n            Comparable<?> rangeUpperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n            Comparable<?> rangeLowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n            Class<?> clazz = getTargetNumericType(Arrays.asList(rangeLowerEndpoint, rangeUpperEndpoint, endpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            Range<Comparable<?>> newRange = createTargetNumericTypeRange(range, clazz);\n            return newRange.contains(parseNumberByClazz(endpoint.toString(), clazz));\n        }\n    }\n","date":"2021-07-29 01:03:53","endLine":101,"groupId":"13259","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"safeContains","params":"(finalRange<Comparable<?>>range@finalComparable<?>endpoint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5b/4e151504131d5b614d212096b82bc5286159fa.src","preCode":"    public static boolean safeContains(final Range<Comparable<?>> range, final Comparable<?> endpoint) {\n        try {\n            return range.contains(endpoint);\n        } catch (final ClassCastException ex) {\n            Comparable<?> rangeUpperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n            Comparable<?> rangeLowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n            Class<?> clazz = getTargetNumericType(Lists.newArrayList(rangeLowerEndpoint, rangeUpperEndpoint, endpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            Range<Comparable<?>> newRange = createTargetNumericTypeRange(range, clazz);\n            return newRange.contains(parseNumberByClazz(endpoint.toString(), clazz));\n        }\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SafeNumberOperationUtil.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"6d2d2ba7b05c29bce74525f0437e04b22a556f66","commitMessage":"@@@Use java raw new List/Set/Map to instead of guava (#11561)\n\n* Use java raw new Map to instead of guava\n\n* Use java raw new List to instead of guava\n\n* Use java raw new Set to instead of guava","date":"2021-07-29 01:03:53","modifiedFileCount":"78","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-27 15:39:51","codes":[{"authorDate":"2021-08-27 15:39:51","commitOrder":3,"curCode":"    public static Range<Comparable<?>> safeClosed(final Comparable<?> lowerEndpoint, final Comparable<?> upperEndpoint) {\n        try {\n            return Range.closed(lowerEndpoint, upperEndpoint);\n        } catch (final ClassCastException ex) {\n            Optional<Class<?>> clazz = getTargetNumericType(Arrays.asList(lowerEndpoint, upperEndpoint));\n            if (!clazz.isPresent()) {\n                throw ex;\n            }\n            return Range.closed(parseNumberByClazz(lowerEndpoint.toString(), clazz.get()), parseNumberByClazz(upperEndpoint.toString(), clazz.get()));\n        }\n    }\n","date":"2021-08-27 15:39:51","endLine":80,"groupId":"101693","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"safeClosed","params":"(finalComparable<?>lowerEndpoint@finalComparable<?>upperEndpoint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/def8242715be87356fa2ad35c50455fd1e8259.src","preCode":"    public static Range<Comparable<?>> safeClosed(final Comparable<?> lowerEndpoint, final Comparable<?> upperEndpoint) {\n        try {\n            return Range.closed(lowerEndpoint, upperEndpoint);\n        } catch (final ClassCastException ex) {\n            Class<?> clazz = getTargetNumericType(Arrays.asList(lowerEndpoint, upperEndpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            return Range.closed(parseNumberByClazz(lowerEndpoint.toString(), clazz), parseNumberByClazz(upperEndpoint.toString(), clazz));\n        }\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SafeNumberOperationUtil.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2021-08-27 15:39:51","commitOrder":3,"curCode":"    public static boolean safeContains(final Range<Comparable<?>> range, final Comparable<?> endpoint) {\n        try {\n            return range.contains(endpoint);\n        } catch (final ClassCastException ex) {\n            Comparable<?> rangeUpperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n            Comparable<?> rangeLowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n            Optional<Class<?>> clazz = getTargetNumericType(Arrays.asList(rangeLowerEndpoint, rangeUpperEndpoint, endpoint));\n            if (!clazz.isPresent()) {\n                throw ex;\n            }\n            Range<Comparable<?>> newRange = createTargetNumericTypeRange(range, clazz.get());\n            return newRange.contains(parseNumberByClazz(endpoint.toString(), clazz.get()));\n        }\n    }\n","date":"2021-08-27 15:39:51","endLine":102,"groupId":"101693","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"safeContains","params":"(finalRange<Comparable<?>>range@finalComparable<?>endpoint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/def8242715be87356fa2ad35c50455fd1e8259.src","preCode":"    public static boolean safeContains(final Range<Comparable<?>> range, final Comparable<?> endpoint) {\n        try {\n            return range.contains(endpoint);\n        } catch (final ClassCastException ex) {\n            Comparable<?> rangeUpperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n            Comparable<?> rangeLowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n            Class<?> clazz = getTargetNumericType(Arrays.asList(rangeLowerEndpoint, rangeUpperEndpoint, endpoint));\n            if (null == clazz) {\n                throw ex;\n            }\n            Range<Comparable<?>> newRange = createTargetNumericTypeRange(range, clazz);\n            return newRange.contains(parseNumberByClazz(endpoint.toString(), clazz));\n        }\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SafeNumberOperationUtil.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"dd43a3dc3625598cb556905b2f6350b704046356","commitMessage":"@@@Refactor to use optional. (#12047)\n\n* fix test case error.\n\n* Refactor getTargetNumericType method to use optional.\n\n* Fix the logic error.","date":"2021-08-27 15:39:51","modifiedFileCount":"1","status":"M","submitter":"Guocheng Tang"}]
