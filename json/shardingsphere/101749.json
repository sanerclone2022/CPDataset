[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertCreatePaginationContextWhenParameterMarkerRowNumberValueSegment() {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        ParameterMarkerExpressionSegment right = new ParameterMarkerExpressionSegment(0, 10, 0);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, \">\", null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(new TopProjectionSegment(0, 10, null, name), expression, Collections.singletonList(1));\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(ParameterMarkerRowNumberValueSegment.class));\n        ParameterMarkerRowNumberValueSegment parameterMarkerRowNumberValueSegment = (ParameterMarkerRowNumberValueSegment) paginationValueSegment;\n        assertThat(parameterMarkerRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(parameterMarkerRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(parameterMarkerRowNumberValueSegment.getParameterIndex(), is(0));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","date":"2020-10-11 18:46:54","endLine":100,"groupId":"4755","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreatePaginationContextWhenParameterMarkerRowNumberValueSegment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9f/7fa6c9288a974419c65b2c625d152ff463726d.src","preCode":"    public void assertCreatePaginationContextWhenParameterMarkerRowNumberValueSegment() {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        ParameterMarkerExpressionSegment right = new ParameterMarkerExpressionSegment(0, 10, 0);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, \">\", null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(new TopProjectionSegment(0, 10, null, name), expression, Collections.singletonList(1));\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(ParameterMarkerRowNumberValueSegment.class));\n        ParameterMarkerRowNumberValueSegment parameterMarkerRowNumberValueSegment = (ParameterMarkerRowNumberValueSegment) paginationValueSegment;\n        assertThat(parameterMarkerRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(parameterMarkerRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(parameterMarkerRowNumberValueSegment.getParameterIndex(), is(0));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/pagination/engine/TopPaginationContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void assertCreatePaginationContextWhenRowNumberPredicatePresentAndWithGivenOperator(final String operator) {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        LiteralExpressionSegment right = new LiteralExpressionSegment(0, 10, 100);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, operator, null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(new TopProjectionSegment(0, 10, null, name), expression, Collections.emptyList());\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(NumberLiteralRowNumberValueSegment.class));\n        NumberLiteralRowNumberValueSegment numberLiteralRowNumberValueSegment = (NumberLiteralRowNumberValueSegment) paginationValueSegment;\n        assertThat(numberLiteralRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(numberLiteralRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(numberLiteralRowNumberValueSegment.getValue(), is(100L));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","date":"2020-10-11 18:46:54","endLine":116,"groupId":"4756","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreatePaginationContextWhenRowNumberPredicatePresentAndWithGivenOperator","params":"(finalStringoperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9f/7fa6c9288a974419c65b2c625d152ff463726d.src","preCode":"    private void assertCreatePaginationContextWhenRowNumberPredicatePresentAndWithGivenOperator(final String operator) {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        LiteralExpressionSegment right = new LiteralExpressionSegment(0, 10, 100);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, operator, null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(new TopProjectionSegment(0, 10, null, name), expression, Collections.emptyList());\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(NumberLiteralRowNumberValueSegment.class));\n        NumberLiteralRowNumberValueSegment numberLiteralRowNumberValueSegment = (NumberLiteralRowNumberValueSegment) paginationValueSegment;\n        assertThat(numberLiteralRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(numberLiteralRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(numberLiteralRowNumberValueSegment.getValue(), is(100L));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/pagination/engine/TopPaginationContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-09-05 14:15:46","codes":[{"authorDate":"2021-09-05 14:15:46","commitOrder":2,"curCode":"    public void assertCreatePaginationContextWhenParameterMarkerRowNumberValueSegment() {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        ParameterMarkerExpressionSegment right = new ParameterMarkerExpressionSegment(0, 10, 0);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, \">\", null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(\n                new TopProjectionSegment(0, 10, null, name), Collections.singletonList(expression), Collections.singletonList(1));\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(ParameterMarkerRowNumberValueSegment.class));\n        ParameterMarkerRowNumberValueSegment parameterMarkerRowNumberValueSegment = (ParameterMarkerRowNumberValueSegment) paginationValueSegment;\n        assertThat(parameterMarkerRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(parameterMarkerRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(parameterMarkerRowNumberValueSegment.getParameterIndex(), is(0));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","date":"2021-09-05 14:15:46","endLine":99,"groupId":"101749","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertCreatePaginationContextWhenParameterMarkerRowNumberValueSegment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/395fbd1db7fdf7b6a86eed2bdd6c4ead3cc4e2.src","preCode":"    public void assertCreatePaginationContextWhenParameterMarkerRowNumberValueSegment() {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        ParameterMarkerExpressionSegment right = new ParameterMarkerExpressionSegment(0, 10, 0);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, \">\", null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(new TopProjectionSegment(0, 10, null, name), expression, Collections.singletonList(1));\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(ParameterMarkerRowNumberValueSegment.class));\n        ParameterMarkerRowNumberValueSegment parameterMarkerRowNumberValueSegment = (ParameterMarkerRowNumberValueSegment) paginationValueSegment;\n        assertThat(parameterMarkerRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(parameterMarkerRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(parameterMarkerRowNumberValueSegment.getParameterIndex(), is(0));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/pagination/engine/TopPaginationContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-09-05 14:15:46","commitOrder":2,"curCode":"    private void assertCreatePaginationContextWhenRowNumberPredicatePresentAndWithGivenOperator(final String operator) {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        LiteralExpressionSegment right = new LiteralExpressionSegment(0, 10, 100);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, operator, null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(\n                new TopProjectionSegment(0, 10, null, name), Collections.singletonList(expression), Collections.emptyList());\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(NumberLiteralRowNumberValueSegment.class));\n        NumberLiteralRowNumberValueSegment numberLiteralRowNumberValueSegment = (NumberLiteralRowNumberValueSegment) paginationValueSegment;\n        assertThat(numberLiteralRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(numberLiteralRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(numberLiteralRowNumberValueSegment.getValue(), is(100L));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","date":"2021-09-05 14:15:46","endLine":116,"groupId":"101749","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertCreatePaginationContextWhenRowNumberPredicatePresentAndWithGivenOperator","params":"(finalStringoperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/395fbd1db7fdf7b6a86eed2bdd6c4ead3cc4e2.src","preCode":"    private void assertCreatePaginationContextWhenRowNumberPredicatePresentAndWithGivenOperator(final String operator) {\n        String name = \"rowNumberAlias\";\n        ColumnSegment left = new ColumnSegment(0, 10, new IdentifierValue(name));\n        LiteralExpressionSegment right = new LiteralExpressionSegment(0, 10, 100);\n        BinaryOperationExpression expression = new BinaryOperationExpression(0, 0, left, right, operator, null);\n        PaginationContext paginationContext = topPaginationContextEngine.createPaginationContext(new TopProjectionSegment(0, 10, null, name), expression, Collections.emptyList());\n        assertTrue(paginationContext.getOffsetSegment().isPresent());\n        PaginationValueSegment paginationValueSegment = paginationContext.getOffsetSegment().get();\n        assertThat(paginationValueSegment, instanceOf(NumberLiteralRowNumberValueSegment.class));\n        NumberLiteralRowNumberValueSegment numberLiteralRowNumberValueSegment = (NumberLiteralRowNumberValueSegment) paginationValueSegment;\n        assertThat(numberLiteralRowNumberValueSegment.getStartIndex(), is(0));\n        assertThat(numberLiteralRowNumberValueSegment.getStopIndex(), is(10));\n        assertThat(numberLiteralRowNumberValueSegment.getValue(), is(100L));\n        assertFalse(paginationContext.getRowCountSegment().isPresent());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/pagination/engine/TopPaginationContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"499fc0b734066b1a65a5a28d460fa7d7bc764bf6","commitMessage":"@@@fix oracle pagination wrong result (#12199)\n\n* fix oracle pagination wrong result\n\n* optimize logic\n\n* optimize logic","date":"2021-09-05 14:15:46","modifiedFileCount":"13","status":"M","submitter":"Zhengqiang Duan"}]
