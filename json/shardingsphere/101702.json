[{"authorTime":"2020-09-28 18:07:04","codes":[{"authorDate":"2020-09-28 18:07:04","commitOrder":1,"curCode":"    private Set<String> getActualTableNames(final String actualDataSourceName, final String logicTableName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getActualTableNames(logicTableName));\n            }\n        }\n        return result;\n    }\n","date":"2020-09-28 18:07:04","endLine":89,"groupId":"10088","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getActualTableNames","params":"(finalStringactualDataSourceName@finalStringlogicTableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/94/f33faeb5712a91ac069d543b304d437a92ab47.src","preCode":"    private Set<String> getActualTableNames(final String actualDataSourceName, final String logicTableName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getActualTableNames(logicTableName));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/context/RouteContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2020-09-28 18:07:04","commitOrder":1,"curCode":"    private Set<String> getLogicTableNames(final String actualDataSourceName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getLogicTableNames());\n            }\n        }\n        return result;\n    }\n","date":"2020-09-28 18:07:04","endLine":116,"groupId":"10088","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogicTableNames","params":"(finalStringactualDataSourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/94/f33faeb5712a91ac069d543b304d437a92ab47.src","preCode":"    private Set<String> getLogicTableNames(final String actualDataSourceName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getLogicTableNames());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/context/RouteContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"b8238c7b678c752cb4c89e1933ed68510f2b5d23","commitMessage":"@@@Merge RouteResult and RouteContext (#7647)\n\n* Use RouteContext on RouteSQLRewriteEngine\n\n* Use RouteContext on ShardingStatementValidator\n\n* Use RouteContext on ShardingRouteEngine\n\n* Refactor ShardingComplexRoutingEngine\n\n* Refactor ShardingComplexRoutingEngine's return value to void\n\n* Refactor RouteContext\n\n* Refactor RouteResultTest\n\n* Remove RouteResult\n\n* Remove RouteResult","date":"2020-09-28 18:07:04","modifiedFileCount":"44","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-09-28 18:07:04","codes":[{"authorDate":"2021-05-04 11:24:31","commitOrder":2,"curCode":"    private Set<String> getActualTableNames(final String actualDataSourceName, final String logicTableName) {\n        Set<String> result = new LinkedHashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getActualTableNames(logicTableName));\n            }\n        }\n        return result;\n    }\n","date":"2021-05-04 11:24:31","endLine":93,"groupId":"101702","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getActualTableNames","params":"(finalStringactualDataSourceName@finalStringlogicTableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6a/5c4ec7a7a520ab1837f76a646ecdd0297a79bf.src","preCode":"    private Set<String> getActualTableNames(final String actualDataSourceName, final String logicTableName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getActualTableNames(logicTableName));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/context/RouteContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-09-28 18:07:04","commitOrder":2,"curCode":"    private Set<String> getLogicTableNames(final String actualDataSourceName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getLogicTableNames());\n            }\n        }\n        return result;\n    }\n","date":"2020-09-28 18:07:04","endLine":116,"groupId":"101702","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogicTableNames","params":"(finalStringactualDataSourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/94/f33faeb5712a91ac069d543b304d437a92ab47.src","preCode":"    private Set<String> getLogicTableNames(final String actualDataSourceName) {\n        Set<String> result = new HashSet<>();\n        for (RouteUnit each : routeUnits) {\n            if (actualDataSourceName.equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n                result.addAll(each.getLogicTableNames());\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/context/RouteContext.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"N"}],"commitId":"16aef56ae33fa71ebd47ef112dbb9e83bf91b47f","commitMessage":"@@@fix bad rewritten result for foreign key SQL (#10193)\n\n* fix bad rewritten result for foreign key SQL when user config single data node sharding config\n\n* refactor ShardingTableBroadcastRoutingEngine to support multiple tables route\n\n* add different type test cases and fix some bug\n\n* fix ci exception","date":"2021-05-04 11:24:31","modifiedFileCount":"9","status":"M","submitter":"Zhengqiang Duan"}]
