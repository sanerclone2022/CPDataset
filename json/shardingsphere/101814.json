[{"authorTime":"2021-05-28 11:19:21","codes":[{"authorDate":"2020-11-10 18:10:20","commitOrder":3,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2020-11-10 18:10:20","endLine":91,"groupId":"13786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/13e060a5cacbded077c20950238aa796223a8b.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"NB"},{"authorDate":"2021-05-28 11:19:21","commitOrder":3,"curCode":"    public void refreshAlterIndexStatementWithRenameIndex() throws SQLException {\n        PostgreSQLAlterIndexStatement alterIndexStatement = new PostgreSQLAlterIndexStatement();\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<AlterIndexStatement> schemaRefresher = new AlterIndexStatementSchemaRefresher();\n        alterIndexStatement.setIndex(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        alterIndexStatement.setRenameIndex(new IndexSegment(1, 2, new IdentifierValue(\"index_new\")));\n        schemaRefresher.refresh(schema, Collections.emptyList(), alterIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertTrue(schema.get(\"t_order\").getIndexes().containsKey(\"index_new\"));\n    }\n","date":"2021-05-28 11:19:21","endLine":48,"groupId":"542","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"refreshAlterIndexStatementWithRenameIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/bc6266824a8e68d55936e1648a9e84f004c17c.src","preCode":"    public void refreshAlterIndexStatementWithRenameIndex() throws SQLException {\n        PostgreSQLAlterIndexStatement alterIndexStatement = new PostgreSQLAlterIndexStatement();\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<AlterIndexStatement> schemaRefresher = new AlterIndexStatementSchemaRefresher();\n        alterIndexStatement.setIndex(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        alterIndexStatement.setRenameIndex(new IndexSegment(1, 2, new IdentifierValue(\"index_new\")));\n        schemaRefresher.refresh(schema, Collections.emptyList(), alterIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertTrue(schema.get(\"t_order\").getIndexes().containsKey(\"index_new\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/AlterIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"9aacab5187297790415727b263b5eb988630069a","commitMessage":"@@@support pg alter index rename statement (#10502)\n\n* support pg alter index rename statement\n\n* fix unit test error\n\n* fix checkstyle\n\n* fix route test case error\n\n* delete unnecessary stub","date":"2021-05-28 11:19:21","modifiedFileCount":"14","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-09-04 18:58:22","codes":[{"authorDate":"2021-09-04 18:58:22","commitOrder":4,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\", mock(ShardingSphereResource.class), mock(ShardingSphereRuleMetaData.class), schema);\n        schemaRefresher.refresh(metaData, Collections.emptyList(), dropIndexStatement, new ConfigurationProperties(new Properties()));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2021-09-04 18:58:22","endLine":97,"groupId":"101814","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b6/53845af1de57f31f80b70c6cf27782d30084f9.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-09-04 18:58:22","commitOrder":4,"curCode":"    public void refreshAlterIndexStatementWithRenameIndex() throws SQLException {\n        PostgreSQLAlterIndexStatement alterIndexStatement = new PostgreSQLAlterIndexStatement();\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<AlterIndexStatement> schemaRefresher = new AlterIndexStatementSchemaRefresher();\n        alterIndexStatement.setIndex(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        alterIndexStatement.setRenameIndex(new IndexSegment(1, 2, new IdentifierValue(\"index_new\")));\n        ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\", mock(ShardingSphereResource.class), mock(ShardingSphereRuleMetaData.class), schema);\n        schemaRefresher.refresh(metaData, Collections.emptyList(), alterIndexStatement, new ConfigurationProperties(new Properties()));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertTrue(schema.get(\"t_order\").getIndexes().containsKey(\"index_new\"));\n    }\n","date":"2021-09-04 18:58:22","endLine":53,"groupId":"101814","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"refreshAlterIndexStatementWithRenameIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d6/49e317b488c88e0f5afc1c594c1c08a090e8db.src","preCode":"    public void refreshAlterIndexStatementWithRenameIndex() throws SQLException {\n        PostgreSQLAlterIndexStatement alterIndexStatement = new PostgreSQLAlterIndexStatement();\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<AlterIndexStatement> schemaRefresher = new AlterIndexStatementSchemaRefresher();\n        alterIndexStatement.setIndex(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        alterIndexStatement.setRenameIndex(new IndexSegment(1, 2, new IdentifierValue(\"index_new\")));\n        schemaRefresher.refresh(schema, Collections.emptyList(), alterIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertTrue(schema.get(\"t_order\").getIndexes().containsKey(\"index_new\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/AlterIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"a8c655eaf51f230c724274dc0c1d6ba775c73d40","commitMessage":"@@@Add shardingsphere-single-table into kernel module (#12210)\n\n* Rename SchemaRulesBuilderMaterials\n\n* Add shardingsphere-single-table\n\n* Add shardingsphere-single-table\n\n* Revise javadoc\n\n* Move MetadataRefresher.findShardingSphereRulesByClass to ShardingSphereSchema\n\n* Add MutableDataNodeRule\n\n* Add SingleTableSchemaBuilderTest\n\n* Move single table rule\n\n* Move single table configuration\n\n* Revise java doc","date":"2021-09-04 18:58:22","modifiedFileCount":"54","status":"M","submitter":"Liang Zhang"}]
