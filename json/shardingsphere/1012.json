[{"authorTime":"2020-06-04 16:29:29","codes":[{"authorDate":"2020-06-04 16:29:29","commitOrder":3,"curCode":"    private static Collection<BeanDefinition> parseEncryptTableRuleConfigurations(final Element element) {\n        Element encryptTablesElement = DomUtils.getChildElementByTagName(element, EncryptRuleBeanDefinitionTag.TABLES_CONFIG_TAG);\n        List<Element> encryptTableElements = DomUtils.getChildElementsByTagName(encryptTablesElement, EncryptRuleBeanDefinitionTag.TABLE_CONFIG_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptTableElements.size());\n        for (Element each : encryptTableElements) {\n            result.add(parseEncryptTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-04 16:29:29","endLine":83,"groupId":"4702","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseEncryptTableRuleConfigurations","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/9935551561eb893758e104d07330eb0d2ee9af.src","preCode":"    private static Collection<BeanDefinition> parseEncryptTableRuleConfigurations(final Element element) {\n        Element encryptTablesElement = DomUtils.getChildElementByTagName(element, EncryptRuleBeanDefinitionTag.TABLES_CONFIG_TAG);\n        List<Element> encryptTableElements = DomUtils.getChildElementsByTagName(encryptTablesElement, EncryptRuleBeanDefinitionTag.TABLE_CONFIG_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptTableElements.size());\n        for (Element each : encryptTableElements) {\n            result.add(parseEncryptTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-spring/shardingsphere-encrypt-spring-namespace/src/main/java/org/apache/shardingsphere/encrypt/spring/namespace/parser/EncryptRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"MB"},{"authorDate":"2020-06-04 16:29:29","commitOrder":3,"curCode":"    private static Collection<BeanDefinition> parseEncryptColumnRuleConfigurations(final Element element) {\n        List<Element> encryptColumnElements = DomUtils.getChildElementsByTagName(element, EncryptRuleBeanDefinitionTag.COLUMN_CONFIG_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptColumnElements.size());\n        for (Element each : encryptColumnElements) {\n            result.add(parseEncryptColumnRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-04 16:29:29","endLine":99,"groupId":"4702","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseEncryptColumnRuleConfigurations","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/9935551561eb893758e104d07330eb0d2ee9af.src","preCode":"    private static Collection<BeanDefinition> parseEncryptColumnRuleConfigurations(final Element element) {\n        List<Element> encryptColumnElements = DomUtils.getChildElementsByTagName(element, EncryptRuleBeanDefinitionTag.COLUMN_CONFIG_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptColumnElements.size());\n        for (Element each : encryptColumnElements) {\n            result.add(parseEncryptColumnRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-spring/shardingsphere-encrypt-spring-namespace/src/main/java/org/apache/shardingsphere/encrypt/spring/namespace/parser/EncryptRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"6534cd49343211472e85a7619978635016dbabbb","commitMessage":"@@@Split encryptor to encrypt strategy and encrypt algorithm (#5918)\n\n* rename EncryptColumnRuleConfiguration\n\n* rename EncryptStrategyConfiguration\n\n* rename EncryptStrategyConfiguration.encryptStrategies\n\n* rename Encryptor to EncryptAlgorithm\n\n* rename EncryptColumnRuleConfiguration.encryptStrategyName\n\n* rename all encrypts","date":"2020-06-04 16:29:29","modifiedFileCount":"42","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-06-07 22:12:58","codes":[{"authorDate":"2020-06-07 22:12:58","commitOrder":4,"curCode":"    private static Collection<BeanDefinition> parseEncryptTableRuleConfigurations(final Element element) {\n        List<Element> encryptTableElements = DomUtils.getChildElementsByTagName(element, EncryptRuleBeanDefinitionTag.TABLE_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptTableElements.size());\n        for (Element each : encryptTableElements) {\n            result.add(parseEncryptTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-07 22:12:58","endLine":83,"groupId":"1012","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseEncryptTableRuleConfigurations","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b7/14af3485fed5ddaf18240c73838aae1831c4f0.src","preCode":"    private static Collection<BeanDefinition> parseEncryptTableRuleConfigurations(final Element element) {\n        Element encryptTablesElement = DomUtils.getChildElementByTagName(element, EncryptRuleBeanDefinitionTag.TABLES_CONFIG_TAG);\n        List<Element> encryptTableElements = DomUtils.getChildElementsByTagName(encryptTablesElement, EncryptRuleBeanDefinitionTag.TABLE_CONFIG_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptTableElements.size());\n        for (Element each : encryptTableElements) {\n            result.add(parseEncryptTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-spring/shardingsphere-encrypt-spring-namespace/src/main/java/org/apache/shardingsphere/encrypt/spring/namespace/parser/EncryptRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-06-07 22:12:58","commitOrder":4,"curCode":"    private static Collection<BeanDefinition> parseEncryptColumnRuleConfigurations(final Element element) {\n        List<Element> encryptColumnElements = DomUtils.getChildElementsByTagName(element, EncryptRuleBeanDefinitionTag.COLUMN_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptColumnElements.size());\n        for (Element each : encryptColumnElements) {\n            result.add(parseEncryptColumnRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-07 22:12:58","endLine":99,"groupId":"1012","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseEncryptColumnRuleConfigurations","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b7/14af3485fed5ddaf18240c73838aae1831c4f0.src","preCode":"    private static Collection<BeanDefinition> parseEncryptColumnRuleConfigurations(final Element element) {\n        List<Element> encryptColumnElements = DomUtils.getChildElementsByTagName(element, EncryptRuleBeanDefinitionTag.COLUMN_CONFIG_TAG);\n        Collection<BeanDefinition> result = new ManagedList<>(encryptColumnElements.size());\n        for (Element each : encryptColumnElements) {\n            result.add(parseEncryptColumnRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-spring/shardingsphere-encrypt-spring-namespace/src/main/java/org/apache/shardingsphere/encrypt/spring/namespace/parser/EncryptRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"ee8432f720422898797b48e2e85e645e4691f90a","commitMessage":"@@@Keep consist for encrypt with master-slave config in spring namespace (#5941)\n\n* remove useless xml import\n\n* for code style","date":"2020-06-07 22:12:58","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"}]
