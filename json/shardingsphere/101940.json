[{"authorTime":"2021-08-24 19:06:54","codes":[{"authorDate":"2021-08-24 19:06:54","commitOrder":1,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingTransactionManagerEngine engine = new ShardingTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-24 19:06:54","endLine":64,"groupId":"1319","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bc/e88ed4b063921f46cea9d5847846b5c4315c5b.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingTransactionManagerEngine engine = new ShardingTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-memory-mode/shardingsphere-memory-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/memory/MemoryContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2021-08-24 19:06:54","commitOrder":1,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingTransactionManagerEngine engine = new ShardingTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-24 19:06:54","endLine":199,"groupId":"1319","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/a21d754abeac9a0a9fa6c7c4d286b107de9742.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingTransactionManagerEngine engine = new ShardingTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"}],"commitId":"cdec8f7c500b45b68be095a98abe440485b6cc99","commitMessage":"@@@Move mode out of infra module (#11986)\n\n* Move mode out of infra module\n\n* Move mode out of infra module\n\n* Rename package","date":"2021-08-24 19:06:54","modifiedFileCount":"116","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-29 11:55:51","codes":[{"authorDate":"2021-08-29 11:55:51","commitOrder":2,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-29 11:55:51","endLine":64,"groupId":"1319","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f1/c23d03106fef0689be17f9b2630f73f2cd9112.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingTransactionManagerEngine engine = new ShardingTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-memory-mode/shardingsphere-memory-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/memory/MemoryContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2021-08-29 11:55:51","commitOrder":2,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-29 11:55:51","endLine":192,"groupId":"1319","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b6/dbc2d985fdfaac08dca4976983c955e15c6ab3.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingTransactionManagerEngine engine = new ShardingTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"d19a34f471034ad6f640477ee180752c9b37dfe8","commitMessage":"@@@Unify class name of transaction module (#12084)\n\n* Rename ShardingSphereTransactionManagerEngine\n\n* Unify class name of transaction module","date":"2021-08-29 11:55:51","modifiedFileCount":"26","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-29 21:43:02","codes":[{"authorDate":"2021-08-29 21:43:02","commitOrder":3,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = getTransactionRule(metaDataContexts).getProps().getProperty(\"xa-transaction-manager-type\");\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-29 21:43:02","endLine":67,"groupId":"12163","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d3/6a9a231bfc181392e2c2f39d2146ab5cfc66ca.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-memory-mode/shardingsphere-memory-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/memory/MemoryContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-08-29 21:43:02","commitOrder":3,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = getTransactionRule(metaDataContexts).getProps().getProperty(\"xa-transaction-manager-type\");\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-29 21:43:02","endLine":195,"groupId":"12163","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fd/442f3d6be7c998383ea0de873b1721a830faf6.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = metaDataContexts.getProps().getValue(ConfigurationPropertyKey.XA_TRANSACTION_MANAGER_TYPE);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"3a1c54d096f525c23835412a5a4068b16d28db82","commitMessage":"@@@Use transaction rule instead of props (#12090)\n\n* Add transaction configuration\n\n* Use transaction rule to process default transaction type\n\n* Use transaction rule to process default transaction type\n\n* Use transaction rule to process xa-transaction-manager-type","date":"2021-08-29 21:43:02","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-29 22:24:21","codes":[{"authorDate":"2021-08-29 22:24:21","commitOrder":4,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        TransactionRule transactionRule = getTransactionRule(metaDataContexts);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), transactionRule);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-29 22:24:21","endLine":67,"groupId":"101940","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b3/1fea4d0869849629d25b5b11473fc74429cb23.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = getTransactionRule(metaDataContexts).getProps().getProperty(\"xa-transaction-manager-type\");\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-memory-mode/shardingsphere-memory-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/memory/MemoryContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-08-29 22:24:21","commitOrder":4,"curCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        TransactionRule transactionRule = getTransactionRule(metaDataContexts);\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), transactionRule);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","date":"2021-08-29 22:24:21","endLine":195,"groupId":"101940","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createTransactionContexts","params":"(finalMetaDataContextsmetaDataContexts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d9/9f31b13e8a925fd3822d33d94377f6a5b229b9.src","preCode":"    private TransactionContexts createTransactionContexts(final MetaDataContexts metaDataContexts) {\n        Map<String, ShardingSphereTransactionManagerEngine> engines = new HashMap<>(metaDataContexts.getAllSchemaNames().size(), 1);\n        String xaTransactionMangerType = getTransactionRule(metaDataContexts).getProps().getProperty(\"xa-transaction-manager-type\");\n        for (String each : metaDataContexts.getAllSchemaNames()) {\n            ShardingSphereTransactionManagerEngine engine = new ShardingSphereTransactionManagerEngine();\n            ShardingSphereResource resource = metaDataContexts.getMetaData(each).getResource();\n            engine.init(resource.getDatabaseType(), resource.getDataSources(), xaTransactionMangerType);\n            engines.put(each, engine);\n        }\n        return new TransactionContexts(engines);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"3f8a217cd0533094e90191e9bcb652efc344db0d","commitMessage":"@@@Fix test cases for transaction (#12091)\n\n* Use transaction rule on ShardingSphereTransactionManager\n\n* Use transaction rule on ShardingSphereTransactionManager","date":"2021-08-29 22:24:21","modifiedFileCount":"14","status":"M","submitter":"Liang Zhang"}]
