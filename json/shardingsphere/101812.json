[{"authorTime":"2020-11-10 16:05:48","codes":[{"authorDate":"2020-11-10 16:05:48","commitOrder":1,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2020-11-10 16:05:48","endLine":90,"groupId":"13786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/d1b197a53ab81c27d69455135cacce9ef86426.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2020-11-10 16:05:48","commitOrder":1,"curCode":"    private void refreshIfIndexIsNull(final CreateIndexStatement createIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<CreateIndexStatement> schemaRefresher = new CreateIndexStatementSchemaRefresher();\n        createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), createIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n    }\n","date":"2020-11-10 16:05:48","endLine":97,"groupId":"5306","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"refreshIfIndexIsNull","params":"(finalCreateIndexStatementcreateIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bc/a4a515741b13f5dd3612a879e8c902bdcee139.src","preCode":"    private void refreshIfIndexIsNull(final CreateIndexStatement createIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<CreateIndexStatement> schemaRefresher = new CreateIndexStatementSchemaRefresher();\n        createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), createIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/CreateIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"a8b0bd56b28c95b0ded4e56ef2b291919170c789","commitMessage":"@@@Refactor schema.refersher package (#8114)\n\n* Rename refresher package\n\n* Rename SchemaRefreshStrategy\n\n* Rename SchemaRefresher\n\n* Refactor test cases\n\n* Rename SchemaRefresherFactory\n\n* Rename refresher.type package\n\n* Remove useless parameter from SchemaRefresher\n\n* Rename schemaRefresher","date":"2020-11-10 16:05:48","modifiedFileCount":"3","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-11-10 18:10:20","codes":[{"authorDate":"2020-11-10 18:10:20","commitOrder":2,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2020-11-10 18:10:20","endLine":91,"groupId":"13786","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/13e060a5cacbded077c20950238aa796223a8b.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-11-10 18:10:20","commitOrder":2,"curCode":"    private void refreshIfIndexIsNull(final CreateIndexStatement createIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<CreateIndexStatement> schemaRefresher = new CreateIndexStatementSchemaRefresher();\n        createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), createIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n    }\n","date":"2020-11-10 18:10:20","endLine":98,"groupId":"11709","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"refreshIfIndexIsNull","params":"(finalCreateIndexStatementcreateIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ea/51c6539cbc7e42bee14757fe76f986255166c3.src","preCode":"    private void refreshIfIndexIsNull(final CreateIndexStatement createIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<CreateIndexStatement> schemaRefresher = new CreateIndexStatementSchemaRefresher();\n        createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), createIndexStatement, tableName -> Optional.empty());\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/CreateIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"8c151b27e25c051dd4e6384200f1ac977743dcb3","commitMessage":"@@@Add SchemaBuilderMaterials to simplify refresher (#8117)\n\n* Add SchemaBuilderMaterials\n\n* Use SchemaBuilderMaterials to refactor SchemaRefresher\n\n* Remove TableMetaDataLoaderCallback","date":"2020-11-10 18:10:20","modifiedFileCount":"23","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-04 18:58:22","codes":[{"authorDate":"2021-09-04 18:58:22","commitOrder":3,"curCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\", mock(ShardingSphereResource.class), mock(ShardingSphereRuleMetaData.class), schema);\n        schemaRefresher.refresh(metaData, Collections.emptyList(), dropIndexStatement, new ConfigurationProperties(new Properties()));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","date":"2021-09-04 18:58:22","endLine":97,"groupId":"101812","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertRemoveIndexes","params":"(finalDropIndexStatementdropIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b6/53845af1de57f31f80b70c6cf27782d30084f9.src","preCode":"    private void assertRemoveIndexes(final DropIndexStatement dropIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        dropIndexStatement.getIndexes().add(new IndexSegment(1, 2, new IdentifierValue(\"index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(2, 3, new IdentifierValue(\"t_order_index\")));\n        dropIndexStatement.getIndexes().add(new IndexSegment(3, 4, new IdentifierValue(\"order_id_index\")));\n        Map<String, IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes();\n        actualIndex.put(\"t_order_index\", new IndexMetaData(\"t_order_index\"));\n        actualIndex.put(\"order_id_index\", new IndexMetaData(\"order_id_index\"));\n        SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher();\n        schemaRefresher.refresh(schema, Collections.emptyList(), dropIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/DropIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-09-04 18:58:22","commitOrder":3,"curCode":"    private void refreshIfIndexIsNull(final CreateIndexStatement createIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<CreateIndexStatement> schemaRefresher = new CreateIndexStatementSchemaRefresher();\n        createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\", mock(ShardingSphereResource.class), mock(ShardingSphereRuleMetaData.class), ShardingSphereSchemaBuildUtil.buildSchema());\n        schemaRefresher.refresh(metaData, Collections.emptyList(), createIndexStatement, new ConfigurationProperties(new Properties()));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n    }\n","date":"2021-09-04 18:58:22","endLine":104,"groupId":"101812","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"refreshIfIndexIsNull","params":"(finalCreateIndexStatementcreateIndexStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/73/4e2fbc3191e95156b504c79afd82f51a00b46f.src","preCode":"    private void refreshIfIndexIsNull(final CreateIndexStatement createIndexStatement) throws SQLException {\n        ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema();\n        SchemaRefresher<CreateIndexStatement> schemaRefresher = new CreateIndexStatementSchemaRefresher();\n        createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1, 3, new IdentifierValue(\"t_order\"))));\n        schemaRefresher.refresh(schema, Collections.emptyList(), createIndexStatement, mock(SchemaBuilderMaterials.class));\n        assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/refresher/type/CreateIndexStatementSchemaRefresherTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"a8c655eaf51f230c724274dc0c1d6ba775c73d40","commitMessage":"@@@Add shardingsphere-single-table into kernel module (#12210)\n\n* Rename SchemaRulesBuilderMaterials\n\n* Add shardingsphere-single-table\n\n* Add shardingsphere-single-table\n\n* Revise javadoc\n\n* Move MetadataRefresher.findShardingSphereRulesByClass to ShardingSphereSchema\n\n* Add MutableDataNodeRule\n\n* Add SingleTableSchemaBuilderTest\n\n* Move single table rule\n\n* Move single table configuration\n\n* Revise java doc","date":"2021-09-04 18:58:22","modifiedFileCount":"54","status":"M","submitter":"Liang Zhang"}]
