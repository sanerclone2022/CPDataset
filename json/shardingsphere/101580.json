[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitDataTypeLength(final OracleStatementParser.DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (numbers.size() == 1) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (numbers.size() == 2) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":520,"groupId":"5234","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitDataTypeLength","params":"(finalOracleStatementParser.DataTypeLengthContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/57ffeacf154844f0a67f662de75ac1ba20bb29.src","preCode":"    public final ASTNode visitDataTypeLength(final OracleStatementParser.DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (numbers.size() == 1) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (numbers.size() == 2) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (1 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (2 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":424,"groupId":"12819","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDataTypeLength","params":"(finalDataTypeLengthContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6c/bed09c6d4c22281d0397805404c0b4f609eb4b.src","preCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (1 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (2 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":2,"curCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (numbers.size() == 1) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (numbers.size() == 2) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":513,"groupId":"5234","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitDataTypeLength","params":"(finalDataTypeLengthContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/17/728b18b55a0356a237268be5af45cbe0f4629d.src","preCode":"    public final ASTNode visitDataTypeLength(final OracleStatementParser.DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (numbers.size() == 1) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (numbers.size() == 2) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"M"},{"authorDate":"2020-10-22 20:53:42","commitOrder":2,"curCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (1 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (2 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":424,"groupId":"12819","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDataTypeLength","params":"(finalDataTypeLengthContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6c/bed09c6d4c22281d0397805404c0b4f609eb4b.src","preCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (1 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (2 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"N"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"},{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2021-05-13 19:08:17","commitOrder":3,"curCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.INTEGER_();\n        if (numbers.size() == 1) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (numbers.size() == 2) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","date":"2021-05-13 19:08:17","endLine":539,"groupId":"101580","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitDataTypeLength","params":"(finalDataTypeLengthContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/31/8ff51536e9a7b3e2156e8fc26c8636437a2db4.src","preCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (numbers.size() == 1) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (numbers.size() == 2) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":526,"status":"M"},{"authorDate":"2020-10-22 20:53:42","commitOrder":3,"curCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (1 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (2 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":424,"groupId":"101580","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDataTypeLength","params":"(finalDataTypeLengthContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6c/bed09c6d4c22281d0397805404c0b4f609eb4b.src","preCode":"    public final ASTNode visitDataTypeLength(final DataTypeLengthContext ctx) {\n        DataTypeLengthSegment result = new DataTypeLengthSegment();\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStartIndex());\n        List<TerminalNode> numbers = ctx.NUMBER_();\n        if (1 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n        }\n        if (2 == numbers.size()) {\n            result.setPrecision(Integer.parseInt(numbers.get(0).getText()));\n            result.setScale(Integer.parseInt(numbers.get(1).getText()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"N"}],"commitId":"537397debf80414cc15533865246436e293bd55d","commitMessage":"@@@Add SQL Definition for `ALTER SYSTEM` of Oracle Database (#10253)\n\n* add alter system definition\n\n* modify code\n\n* change rules\n\n* remove duplicate rules and import statements\n\n* rename rule as it's previously used\n\n* change rules and andd more testcases\n\n* fix typo in clause naming\n\n* define INTEGER_ rule.  test cases\n\n* add INTEGER_ before NUMBER_\n\n* change instanceId to NUMBER_\n\n* change NUMBER_ to INTEGER_ where necessary\n\n* change numberLiterals definition","date":"2021-05-13 19:08:17","modifiedFileCount":"5","status":"M","submitter":"Thanoshan MV"}]
