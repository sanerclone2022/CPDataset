[{"authorTime":"2021-08-27 14:32:22","codes":[{"authorDate":"2021-08-31 21:52:41","commitOrder":3,"curCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ShardingSphereEventBus.getInstance().register(this);\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","date":"2021-08-31 21:52:41","endLine":126,"groupId":"10501","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeBuildContextManager","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bc/81ee22b1bf9f806623b675a39305655e585890.src","preCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ShardingSphereEventBus.getInstance().register(this);\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"},{"authorDate":"2021-08-27 14:32:22","commitOrder":3,"curCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new StandaloneContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","date":"2021-08-27 14:32:22","endLine":73,"groupId":"11131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3b/06a2339ee4c580c006bff6376fddd1842f34d8.src","preCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new StandaloneContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"NB"}],"commitId":"b7b7176f21ac0893086f5ea7c11d4ce06d24b1c0","commitMessage":"@@@Refactor ClusterContextManager & ClusterContextManagerBuilder (#12129)\n\n* Refactor ClusterContextManager & ClusterContextManagerBuilder","date":"2021-08-31 21:52:41","modifiedFileCount":"3","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-09-01 21:05:45","codes":[{"authorDate":"2021-08-31 21:52:41","commitOrder":4,"curCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ShardingSphereEventBus.getInstance().register(this);\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","date":"2021-08-31 21:52:41","endLine":126,"groupId":"10501","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeBuildContextManager","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bc/81ee22b1bf9f806623b675a39305655e585890.src","preCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ShardingSphereEventBus.getInstance().register(this);\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"},{"authorDate":"2021-09-01 21:05:45","commitOrder":4,"curCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","date":"2021-09-01 21:05:45","endLine":76,"groupId":"11131","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a2/76ac3ab2de87d2243fbe83c4a41e19b06c4479.src","preCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new StandaloneContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"a1b19ee5c2788b7d45b41a2a762b4c2adcc11ed9","commitMessage":"@@@Merge mode based ContextManager (#12156)\n\n* Merge mode based ContextManager","date":"2021-09-01 21:05:45","modifiedFileCount":"7","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-09-01 21:05:45","codes":[{"authorDate":"2021-09-07 22:18:12","commitOrder":5,"curCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","date":"2021-09-07 22:18:12","endLine":98,"groupId":"10501","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeBuildContextManager","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/67/0b7d83b8ab8782b23a93ce673dc506c33289dd.src","preCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ShardingSphereEventBus.getInstance().register(this);\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-09-01 21:05:45","commitOrder":5,"curCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","date":"2021-09-01 21:05:45","endLine":76,"groupId":"11131","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a2/76ac3ab2de87d2243fbe83c4a41e19b06c4479.src","preCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"e73cb20c8a97bdf8c7bd7b46eb40d30034898a90","commitMessage":"@@@Split ContextManagerBuilder for build one time only and put renew into coordinator (#12276)\n\n","date":"2021-09-07 22:18:12","modifiedFileCount":"1","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-10 12:03:51","codes":[{"authorDate":"2021-09-07 22:18:12","commitOrder":6,"curCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","date":"2021-09-07 22:18:12","endLine":98,"groupId":"10501","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeBuildContextManager","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/67/0b7d83b8ab8782b23a93ce673dc506c33289dd.src","preCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2021-09-10 12:03:51","commitOrder":6,"curCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"File\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","date":"2021-09-10 12:03:51","endLine":75,"groupId":"11131","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ce/b85a65ec4702c978565f8ffc683a5a53b21641.src","preCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"Local\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"0579f0b27eb3e25bb58e4096611c4b3931ba1db7","commitMessage":"@@@Rename Local standalone mode type to File (#12329)\n\n* rename Local standalone mode type to File\n\n* rename Local standalone mode type to File\n\n* rename Local standalone mode type to File\n\n* rename Local standalone mode type to File\n\n* rename Local standalone mode type to File","date":"2021-09-10 12:03:51","modifiedFileCount":"2","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-09-14 18:41:25","codes":[{"authorDate":"2021-09-14 18:41:25","commitOrder":7,"curCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite, final Integer port) throws SQLException {\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository, port);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","date":"2021-09-14 18:41:25","endLine":97,"groupId":"101970","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeBuildContextManager","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite@finalIntegerport)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2e/9836145b09c0db85803af588a16d293aad55e2.src","preCode":"    private void beforeBuildContextManager(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                           final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                           final Properties props, final boolean isOverwrite) throws SQLException {\n        ClusterPersistRepository repository = createClusterPersistRepository((ClusterPersistRepositoryConfiguration) modeConfig.getRepository());\n        registryCenter = new RegistryCenter(repository);\n        persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        transactionContexts = createTransactionContexts(metaDataContexts);\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-09-14 18:41:25","commitOrder":7,"curCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite, final Integer port) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"File\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","date":"2021-09-14 18:41:25","endLine":75,"groupId":"101970","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"build","params":"(finalModeConfigurationmodeConfig@finalMap<String@Map<String@DataSource>>dataSourcesMap@finalMap<String@Collection<RuleConfiguration>>schemaRuleConfigs@finalCollection<RuleConfiguration>globalRuleConfigs@finalPropertiesprops@finalbooleanisOverwrite@finalIntegerport)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cb/8cec4875419d84e0432e807de69ba482632bc8.src","preCode":"    public ContextManager build(final ModeConfiguration modeConfig, final Map<String, Map<String, DataSource>> dataSourcesMap,\n                                final Map<String, Collection<RuleConfiguration>> schemaRuleConfigs, final Collection<RuleConfiguration> globalRuleConfigs,\n                                final Properties props, final boolean isOverwrite) throws SQLException {\n        PersistRepositoryConfiguration repositoryConfig = null == modeConfig.getRepository() ? new StandalonePersistRepositoryConfiguration(\"File\", new Properties()) : modeConfig.getRepository();\n        StandalonePersistRepository repository = TypedSPIRegistry.getRegisteredService(StandalonePersistRepository.class, repositoryConfig.getType(), repositoryConfig.getProps());\n        PersistService persistService = new PersistService(repository);\n        persistConfigurations(persistService, dataSourcesMap, schemaRuleConfigs, globalRuleConfigs, props, isOverwrite);\n        Collection<String> schemaNames = persistService.getSchemaMetaDataService().loadAllNames();\n        MetaDataContexts metaDataContexts = new MetaDataContextsBuilder(loadDataSourcesMap(persistService, dataSourcesMap, schemaNames),\n                loadSchemaRules(persistService, schemaNames), persistService.getGlobalRuleService().load(), persistService.getPropsService().load()).build(persistService);\n        TransactionContexts transactionContexts = createTransactionContexts(metaDataContexts);\n        ContextManager result = new ContextManager();\n        result.init(metaDataContexts, transactionContexts);\n        return result;\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"d38af63063d3c0a0edc6f7c9da4c1836a6058a3c","commitMessage":"@@@Use port instead of pid in ClusterInstance for proxy (#12423)\n\n* Use port instead of pid in ClusterInstance for proxy\n\n* Use port instead of pid in ClusterInstance for proxy","date":"2021-09-14 18:41:25","modifiedFileCount":"14","status":"M","submitter":"Haoran Meng"}]
