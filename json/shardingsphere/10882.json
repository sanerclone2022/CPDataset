[{"authorTime":"2020-11-16 17:07:47","codes":[{"authorDate":"2020-11-16 17:07:47","commitOrder":1,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-16 17:07:47","endLine":97,"groupId":"5488","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7c/2e52cdef77ebbb20096c3497345a365e1f7502.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2020-11-16 17:07:47","commitOrder":1,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-16 17:07:47","endLine":122,"groupId":"5488","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c5/955f6869abce99bf2b02dc16cf33417a5e16a2.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"d5ee48d9c05f60eb2d42885d83ecfb848943012a","commitMessage":"@@@Remove QueryResult.getResultSetMetaData() (#8173)\n\n* Refactor ShowTablesBackendHandler\n\n* Refactor PostgreSQLComBindExecutor & PostgreSQLComQueryExecutor\n\n* Remove QueryResult.getResultSetMetaData()","date":"2020-11-16 17:07:47","modifiedFileCount":"9","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-11-26 20:18:06","codes":[{"authorDate":"2020-11-26 20:18:06","commitOrder":2,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResultSet> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-26 20:18:06","endLine":92,"groupId":"5488","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/52/549c8f4bddf1bf6955be73d4a03f3ad84d5b40.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-11-26 20:18:06","commitOrder":2,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResultSet> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-26 20:18:06","endLine":117,"groupId":"5488","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/8e3cb40a69cdf85f00e11c49257dd2beea487f.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"c3f4d5967f8265e4b06ef2163396db54d3f09014","commitMessage":"@@@Rename QueryResult to QueryResultSet (#8365)\n\n","date":"2020-11-26 20:18:06","modifiedFileCount":"68","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-28 00:27:33","codes":[{"authorDate":"2020-11-28 00:27:33","commitOrder":3,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-28 00:27:33","endLine":92,"groupId":"5488","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9b/91a4231c736ed951a649bafdcaf72e24d3c3a1.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResultSet> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-11-28 00:27:33","commitOrder":3,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-28 00:27:33","endLine":117,"groupId":"5488","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/28/6db1777c4b160a9ed5a1a8c53f39b4b491ecb0.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResultSet> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"e90bce71f102ae14ab97b92895a5ebdcf1b5d527","commitMessage":"@@@Add more methods of QueryResultSet for decouple ResultSetMetaData (#8389)\n\n* Refactor ProxyJDBCExecutorCallback\n\n* Add more methods of QueryResultSet for decouple ResultSetMetaData\n\n* Remove useless QueryHeaderBuilder method\n\n* Merge QueryResultSet and ExecuteQueryResult\n\n* Merge QueryResultSet and ExecuteQueryResult","date":"2020-11-28 00:27:33","modifiedFileCount":"69","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-28 01:55:00","codes":[{"authorDate":"2020-11-28 01:55:00","commitOrder":4,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-28 01:55:00","endLine":92,"groupId":"5488","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3e/b8c73e2a092d42e84dc93aa6c50806ae154dd1.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-11-28 01:55:00","commitOrder":4,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-28 01:55:00","endLine":117,"groupId":"5488","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/a81f03afd29718475fe450bbff45c2997afbb1.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResultSets = queryResponse.getQueryResultSets();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResultSets.isEmpty() ? null : queryResultSets.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"655940e8c62e04cd1395d3de7a9e394f667a934c","commitMessage":"@@@Rename QueryResultSet to ExecuteQueryResult (#8393)\n\n","date":"2020-11-28 01:55:00","modifiedFileCount":"64","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-28 20:13:42","codes":[{"authorDate":"2020-11-28 20:13:42","commitOrder":5,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-28 20:13:42","endLine":92,"groupId":"5488","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cb/c94a3cb0eaadc851b094ee4af2be9745d7c85b.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-11-28 20:13:42","commitOrder":5,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-28 20:13:42","endLine":117,"groupId":"5488","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/84/de2e0a48d63d33a2f206736b790a9f9af96681.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<ExecuteQueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"240920940faa05e33f8734bef9103a7f02aa62f9","commitMessage":"@@@Rename QueryResult & UpdateResult (#8398)\n\n* Rename UpdateResult\n\n* Rename QueryResult","date":"2020-11-28 20:13:42","modifiedFileCount":"70","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-29 15:42:55","codes":[{"authorDate":"2020-11-29 15:42:55","commitOrder":6,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getMetaData().getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-29 15:42:55","endLine":92,"groupId":"5488","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/9632d217c941b5b5b71f59806afd986761757d.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-11-29 15:42:55","commitOrder":6,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getMetaData().getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-29 15:42:55","endLine":117,"groupId":"5488","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/09e23c139476e031c2e7d5a8fd03a464ed75af.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"6d1f7862cf269b60e3fe0301d52e7131a54a753d","commitMessage":"@@@Use QueryResult.getMetaData instead of metadata methods (#8405)\n\n* Add JDBCQueryResultMetaData\n\n* Use QueryResult.getMetaData instead of metadata methods\n\n* Fix test cases","date":"2020-11-29 15:42:55","modifiedFileCount":"27","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-29 15:42:55","codes":[{"authorDate":"2020-11-30 13:17:27","commitOrder":7,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2020-11-30 13:17:27","endLine":89,"groupId":"8400","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/06f41c4f1913645ac65e6477af3d847dbda60c.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getMetaData().getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2020-11-29 15:42:55","commitOrder":7,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getMetaData().getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","date":"2020-11-29 15:42:55","endLine":117,"groupId":"5488","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/09e23c139476e031c2e7d5a8fd03a464ed75af.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getMetaData().getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"N"}],"commitId":"62f82a62798f2bd734c27e3dc9841f8da3b1e3e4","commitMessage":"@@@Add QueryHeader.columnTypeName (#8417)\n\n","date":"2020-11-30 13:17:27","modifiedFileCount":"11","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-30 13:43:10","codes":[{"authorDate":"2020-11-30 13:17:27","commitOrder":8,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2020-11-30 13:17:27","endLine":89,"groupId":"8400","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/06f41c4f1913645ac65e6477af3d847dbda60c.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"},{"authorDate":"2020-11-30 13:43:10","commitOrder":8,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2020-11-30 13:43:10","endLine":114,"groupId":"8400","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponsequeryResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f1/4dc39459c5acab936007b2085aab1e2d7f302b.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) throws SQLException {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        List<QueryResult> queryResults = queryResponse.getQueryResults();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            String columnTypeName = queryResults.isEmpty() ? null : queryResults.get(0).getMetaData().getColumnTypeName(columnIndex + 1);\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), columnTypeName));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"5e4b034648113315abdd7a5e17c8aba08f47b984","commitMessage":"@@@Use QueryHeader.getColumnTypeName for PostgreSQLComBindExecutor (#8418)\n\n","date":"2020-11-30 13:43:10","modifiedFileCount":"1","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-30 21:51:39","codes":[{"authorDate":"2020-11-30 21:51:39","commitOrder":9,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponseHeader queryResponseHeader) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponseHeader.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2020-11-30 21:51:39","endLine":89,"groupId":"9854","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponseHeaderqueryResponseHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/32/d8ac229d4a3ade6735bee070536890e5ed26f8.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2020-11-30 21:51:39","commitOrder":9,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponseHeader queryResponseHeader) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponseHeader.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2020-11-30 21:51:39","endLine":114,"groupId":"9854","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createColumnDescriptions","params":"(finalQueryResponseHeaderqueryResponseHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/87/b1ba372f9bc1b5c2be94efdb27b7394ffa3925.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponse queryResponse) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponse.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"af024df142e89e7c2f44d523b66946be0748993f","commitMessage":"@@@Rename ResponseHeader and QueryResponseData (#8426)\n\n* Refactor JDBCDatabaseCommunicationEngine\n\n* Rename ResponseHeader\n\n* Rename QueryResponseData","date":"2020-11-30 21:51:39","modifiedFileCount":"47","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-09 18:30:14","codes":[{"authorDate":"2021-09-09 18:30:14","commitOrder":10,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponseHeader queryResponseHeader) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponseHeader.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnLabel(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2021-09-09 18:30:14","endLine":92,"groupId":"10882","id":19,"instanceNumber":1,"isCurCommit":1,"methodName":"createColumnDescriptions","params":"(finalQueryResponseHeaderqueryResponseHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/900bb0b8c884828adc3c8eb23de90ba88ee9fb.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponseHeader queryResponseHeader) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponseHeader.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2021-09-09 18:30:14","commitOrder":10,"curCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponseHeader queryResponseHeader) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponseHeader.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnLabel(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","date":"2021-09-09 18:30:14","endLine":82,"groupId":"10882","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"createColumnDescriptions","params":"(finalQueryResponseHeaderqueryResponseHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1c/8ae6541276dc1cd835e778298393800b291fd0.src","preCode":"    private Collection<PostgreSQLColumnDescription> createColumnDescriptions(final QueryResponseHeader queryResponseHeader) {\n        Collection<PostgreSQLColumnDescription> result = new LinkedList<>();\n        int columnIndex = 0;\n        for (QueryHeader each : queryResponseHeader.getQueryHeaders()) {\n            result.add(new PostgreSQLColumnDescription(each.getColumnName(), ++columnIndex, each.getColumnType(), each.getColumnLength(), each.getColumnTypeName()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"6df8cfc80bf338c57d3c941b7dc2364c868215ad","commitMessage":"@@@fix wrong pg field metadata when use column alias (#12313)\n\n","date":"2021-09-09 18:30:14","modifiedFileCount":"2","status":"M","submitter":"Zhengqiang Duan"}]
