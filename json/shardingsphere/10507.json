[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertValidateCreateFunctionWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateFunctionStatement sqlStatement = new MySQLCreateFunctionStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateFunctionStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateFunctionStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","date":"2021-06-04 22:49:49","endLine":97,"groupId":"3","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertValidateCreateFunctionWithNoSuchTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/63/92ecc0a9b2fb207790a73231c1678326aa84d3.src","preCode":"    public void assertValidateCreateFunctionWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateFunctionStatement sqlStatement = new MySQLCreateFunctionStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateFunctionStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateFunctionStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateFunctionStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertValidateCreateProcedureWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateProcedureStatement sqlStatement = new MySQLCreateProcedureStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateProcedureStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateProcedureStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","date":"2021-06-04 22:49:49","endLine":97,"groupId":"3","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValidateCreateProcedureWithNoSuchTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/33/423750293e8fb092b81a8be6920a726d8076f2.src","preCode":"    public void assertValidateCreateProcedureWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateProcedureStatement sqlStatement = new MySQLCreateProcedureStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateProcedureStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateProcedureStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateProcedureStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertValidateCreateFunctionWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateFunctionStatement sqlStatement = new MySQLCreateFunctionStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateFunctionStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateFunctionStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","date":"2021-07-05 14:48:43","endLine":98,"groupId":"10507","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertValidateCreateFunctionWithNoSuchTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e5/1ca696040ef073c656567ace4a620dd587654b.src","preCode":"    public void assertValidateCreateFunctionWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateFunctionStatement sqlStatement = new MySQLCreateFunctionStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateFunctionStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateFunctionStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateFunctionStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertValidateCreateProcedureWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateProcedureStatement sqlStatement = new MySQLCreateProcedureStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateProcedureStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateProcedureStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","date":"2021-07-05 14:48:43","endLine":98,"groupId":"10507","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertValidateCreateProcedureWithNoSuchTableForMySQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/46/ac06b372295968c22de4a5d5026e7274ba7f46.src","preCode":"    public void assertValidateCreateProcedureWithNoSuchTableForMySQL() {\n        MySQLSelectStatement selectStatement = new MySQLSelectStatement();\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        ValidStatementSegment validStatementSegment = new ValidStatementSegment(0, 0);\n        validStatementSegment.setSqlStatement(selectStatement);\n        RoutineBodySegment routineBody = new RoutineBodySegment(0, 0);\n        routineBody.getValidStatements().add(validStatementSegment);\n        MySQLCreateProcedureStatement sqlStatement = new MySQLCreateProcedureStatement();\n        sqlStatement.setRoutineBody(routineBody);\n        SQLStatementContext<CreateProcedureStatement> sqlStatementContext = new CommonSQLStatementContext<>(sqlStatement);\n        new ShardingCreateProcedureStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), mock(ShardingSphereSchema.class, RETURNS_DEEP_STUBS));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateProcedureStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"}]
