[{"authorTime":"2021-01-04 15:25:24","codes":[{"authorDate":"2021-01-04 15:25:24","commitOrder":1,"curCode":"    private Builder<?> interceptorClassStaticMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        for (ClassStaticMethodPoint each : pluginInterceptorPoint.getClassStaticMethodPoints()) {\n            try {\n                StaticMethodAroundInterceptor interceptor = new StaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                return builder.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return builder;\n    }\n","date":"2021-01-04 15:25:24","endLine":93,"groupId":"11276","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"interceptorClassStaticMethodPoint","params":"(finalPluginInterceptorPointpluginInterceptorPoint@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/dd64494fa197c22864a2cfc47ab237392b43f6.src","preCode":"    private Builder<?> interceptorClassStaticMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        for (ClassStaticMethodPoint each : pluginInterceptorPoint.getClassStaticMethodPoints()) {\n            try {\n                StaticMethodAroundInterceptor interceptor = new StaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                return builder.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return builder;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2021-01-04 15:25:24","commitOrder":1,"curCode":"    private Builder<?> interceptorInstanceMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        for (InstanceMethodPoint each : pluginInterceptorPoint.getInstanceMethodPoints()) {\n            try {\n                MethodAroundInterceptor interceptor = new MethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                return builder.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return builder;\n    }\n","date":"2021-01-04 15:25:24","endLine":107,"groupId":"11276","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptorInstanceMethodPoint","params":"(finalPluginInterceptorPointpluginInterceptorPoint@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/dd64494fa197c22864a2cfc47ab237392b43f6.src","preCode":"    private Builder<?> interceptorInstanceMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        for (InstanceMethodPoint each : pluginInterceptorPoint.getInstanceMethodPoints()) {\n            try {\n                MethodAroundInterceptor interceptor = new MethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                return builder.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return builder;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"cebe5944f891f3efc121b077611d1862d6e18a14","commitMessage":"@@@agent core package refactor (#8873)\n\n","date":"2021-01-04 15:25:24","modifiedFileCount":"9","status":"B","submitter":"xiaoyu"},{"authorTime":"2021-01-05 12:18:35","codes":[{"authorDate":"2021-01-05 12:18:35","commitOrder":2,"curCode":"    private Builder<?> interceptorClassStaticMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        Builder<?> result = builder;\n        for (ClassStaticMethodPoint each : pluginInterceptorPoint.getClassStaticMethodPoints()) {\n            try {\n                StaticMethodAroundInterceptor interceptor = new StaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                result = result.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-01-05 12:18:35","endLine":95,"groupId":"10119","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"interceptorClassStaticMethodPoint","params":"(finalPluginInterceptorPointpluginInterceptorPoint@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/94/c72663eb227a9c98cac89014eeb31bb9d323a7.src","preCode":"    private Builder<?> interceptorClassStaticMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        for (ClassStaticMethodPoint each : pluginInterceptorPoint.getClassStaticMethodPoints()) {\n            try {\n                StaticMethodAroundInterceptor interceptor = new StaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                return builder.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return builder;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2021-01-05 12:18:35","commitOrder":2,"curCode":"    private Builder<?> interceptorInstanceMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        Builder<?> result = builder;\n        for (InstanceMethodPoint each : pluginInterceptorPoint.getInstanceMethodPoints()) {\n            try {\n                MethodAroundInterceptor interceptor = new MethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                result = result.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-01-05 12:18:35","endLine":110,"groupId":"10119","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptorInstanceMethodPoint","params":"(finalPluginInterceptorPointpluginInterceptorPoint@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/94/c72663eb227a9c98cac89014eeb31bb9d323a7.src","preCode":"    private Builder<?> interceptorInstanceMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        for (InstanceMethodPoint each : pluginInterceptorPoint.getInstanceMethodPoints()) {\n            try {\n                MethodAroundInterceptor interceptor = new MethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                return builder.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return builder;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"3e374401d344037d620c30647a911f4a3dfbed3f","commitMessage":"@@@repair agent bug (#8888)\n\n","date":"2021-01-05 12:18:35","modifiedFileCount":"3","status":"M","submitter":"xiaoyu"},{"authorTime":"2021-01-12 10:35:24","codes":[{"authorDate":"2021-01-12 10:35:24","commitOrder":3,"curCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(md -> md.isStatic() && !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<ClassStaticMethodPoint> advices = classStaticMethodAroundPoints.stream()\n                            .filter(point -> point.getMatcher().matches(md))\n                            .collect(Collectors.toList());\n                    if (advices.isEmpty()) {\n                        return null;\n                    }\n                    if (advices.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new ClassStaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(advices.get(0).getAdvice())));\n                    } else {\n                        List<ClassStaticMethodAroundAdvice> collect = advices.stream()\n                                .map(ClassStaticMethodPoint::getAdvice)\n                                .map(advice -> (ClassStaticMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeClassStaticMethodAroundInterceptor(collect));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-01-12 10:35:24","endLine":149,"groupId":"10335","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"interceptorClassStaticMethodPoint","params":"(finalTypeDescriptiondescription@finalList<ClassStaticMethodPoint>classStaticMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1d/fc39d97a6be99e0944b62a472e8260ad384904.src","preCode":"    private Builder<?> interceptorClassStaticMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        Builder<?> result = builder;\n        for (ClassStaticMethodPoint each : pluginInterceptorPoint.getClassStaticMethodPoints()) {\n            try {\n                StaticMethodAroundInterceptor interceptor = new StaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                result = result.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2021-01-12 10:35:24","commitOrder":3,"curCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(md -> !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<InstanceMethodPoint> advices = instanceMethodAroundPoints.stream()\n                            .filter(point -> point.getMatcher().matches(md))\n                            .collect(Collectors.toList());\n                    if (advices.isEmpty()) {\n                        return null;\n                    }\n                    if (advices.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new InstanceMethodAroundInterceptor(pluginLoader.getOrCreateInstance(advices.get(0).getAdvice())));\n                    } else {\n                        List<InstanceMethodAroundAdvice> collect = advices.stream()\n                                .map(InstanceMethodPoint::getAdvice)\n                                .map(advice -> (InstanceMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeInstanceMethodAroundInterceptor(collect));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-01-12 10:35:24","endLine":185,"groupId":"10335","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptorInstanceMethodPoint","params":"(finalTypeDescriptiondescription@finalList<InstanceMethodPoint>instanceMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1d/fc39d97a6be99e0944b62a472e8260ad384904.src","preCode":"    private Builder<?> interceptorInstanceMethodPoint(final PluginInterceptorPoint pluginInterceptorPoint, final Builder<?> builder) {\n        Builder<?> result = builder;\n        for (InstanceMethodPoint each : pluginInterceptorPoint.getInstanceMethodPoints()) {\n            try {\n                MethodAroundInterceptor interceptor = new MethodAroundInterceptor(pluginLoader.getOrCreateInstance(each.getAdvice()));\n                result = result.method(each.getMatcher()).intercept(MethodDelegation.withDefaultConfiguration().to(interceptor));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", each.getAdvice(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"c75652dbf13f60b4572abc2f7a68c24bb84e6bd4","commitMessage":"@@@support to instrument the same method repeatedly (#8986)\n\n* support to instrument the same method repeatedly\n\n* fix wrong hand","date":"2021-01-12 10:35:24","modifiedFileCount":"32","status":"M","submitter":"Daming"},{"authorTime":"2021-01-12 14:25:05","codes":[{"authorDate":"2021-01-12 14:25:05","commitOrder":4,"curCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(md -> md.isStatic() && !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<ClassStaticMethodPoint> classStaticMethodPoints = classStaticMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (classStaticMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (classStaticMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new ClassStaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(classStaticMethodPoints.get(0).getAdvice())));\n                    } else {\n                        List<ClassStaticMethodAroundAdvice> classStaticMethodAroundAdvices = classStaticMethodPoints.stream()\n                                .map(ClassStaticMethodPoint::getAdvice)\n                                .map(advice -> (ClassStaticMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeClassStaticMethodAroundInterceptor(classStaticMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-01-12 14:25:05","endLine":145,"groupId":"12748","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"interceptorClassStaticMethodPoint","params":"(finalTypeDescriptiondescription@finalList<ClassStaticMethodPoint>classStaticMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f1/c0cb0a613ed6d3c7f750f7b7b11044ea4f6137.src","preCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(md -> md.isStatic() && !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<ClassStaticMethodPoint> advices = classStaticMethodAroundPoints.stream()\n                            .filter(point -> point.getMatcher().matches(md))\n                            .collect(Collectors.toList());\n                    if (advices.isEmpty()) {\n                        return null;\n                    }\n                    if (advices.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new ClassStaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(advices.get(0).getAdvice())));\n                    } else {\n                        List<ClassStaticMethodAroundAdvice> collect = advices.stream()\n                                .map(ClassStaticMethodPoint::getAdvice)\n                                .map(advice -> (ClassStaticMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeClassStaticMethodAroundInterceptor(collect));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2021-01-12 14:25:05","commitOrder":4,"curCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(md -> !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<InstanceMethodPoint> instanceMethodPoints = instanceMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (instanceMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (instanceMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new InstanceMethodAroundInterceptor(pluginLoader.getOrCreateInstance(instanceMethodPoints.get(0).getAdvice())));\n                    } else {\n                        List<InstanceMethodAroundAdvice> instanceMethodAroundAdvices = instanceMethodPoints.stream()\n                                .map(InstanceMethodPoint::getAdvice)\n                                .map(advice -> (InstanceMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeInstanceMethodAroundInterceptor(instanceMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-01-12 14:25:05","endLine":179,"groupId":"12748","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptorInstanceMethodPoint","params":"(finalTypeDescriptiondescription@finalList<InstanceMethodPoint>instanceMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f1/c0cb0a613ed6d3c7f750f7b7b11044ea4f6137.src","preCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(md -> !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<InstanceMethodPoint> advices = instanceMethodAroundPoints.stream()\n                            .filter(point -> point.getMatcher().matches(md))\n                            .collect(Collectors.toList());\n                    if (advices.isEmpty()) {\n                        return null;\n                    }\n                    if (advices.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new InstanceMethodAroundInterceptor(pluginLoader.getOrCreateInstance(advices.get(0).getAdvice())));\n                    } else {\n                        List<InstanceMethodAroundAdvice> collect = advices.stream()\n                                .map(InstanceMethodPoint::getAdvice)\n                                .map(advice -> (InstanceMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeInstanceMethodAroundInterceptor(collect));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"989579dc7aad74ae98951ef4cd2057a6e07e2bd2","commitMessage":"@@@agent code review (#8991)\n\n","date":"2021-01-12 14:25:05","modifiedFileCount":"23","status":"M","submitter":"xiaoyu"},{"authorTime":"2021-03-25 21:02:37","codes":[{"authorDate":"2021-03-25 21:02:37","commitOrder":5,"curCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(each -> each.isStatic() && !(each.isAbstract() || each.isSynthetic()))\n                .map(md -> {\n                    List<ClassStaticMethodPoint> classStaticMethodPoints = classStaticMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (classStaticMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (classStaticMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new ClassStaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(classStaticMethodPoints.get(0).getAdvice())));\n                    } else {\n                        Collection<ClassStaticMethodAroundAdvice> classStaticMethodAroundAdvices = classStaticMethodPoints.stream()\n                                .map(ClassStaticMethodPoint::getAdvice)\n                                .map(advice -> (ClassStaticMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeClassStaticMethodAroundInterceptor(classStaticMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-03-25 21:02:37","endLine":146,"groupId":"12748","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"interceptorClassStaticMethodPoint","params":"(finalTypeDescriptiondescription@finalList<ClassStaticMethodPoint>classStaticMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/10/d4782c8a442da6cdc5ebbf25a92d0e6b031d9f.src","preCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(md -> md.isStatic() && !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<ClassStaticMethodPoint> classStaticMethodPoints = classStaticMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (classStaticMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (classStaticMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new ClassStaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(classStaticMethodPoints.get(0).getAdvice())));\n                    } else {\n                        List<ClassStaticMethodAroundAdvice> classStaticMethodAroundAdvices = classStaticMethodPoints.stream()\n                                .map(ClassStaticMethodPoint::getAdvice)\n                                .map(advice -> (ClassStaticMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeClassStaticMethodAroundInterceptor(classStaticMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2021-03-25 21:02:37","commitOrder":5,"curCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(each -> !(each.isAbstract() || each.isSynthetic()))\n                .map(md -> {\n                    List<InstanceMethodPoint> instanceMethodPoints = instanceMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (instanceMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (instanceMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new InstanceMethodAroundInterceptor(pluginLoader.getOrCreateInstance(instanceMethodPoints.get(0).getAdvice())));\n                    } else {\n                        List<InstanceMethodAroundAdvice> instanceMethodAroundAdvices = instanceMethodPoints.stream()\n                                .map(InstanceMethodPoint::getAdvice)\n                                .map(advice -> (InstanceMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeInstanceMethodAroundInterceptor(instanceMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-03-25 21:02:37","endLine":180,"groupId":"12748","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptorInstanceMethodPoint","params":"(finalTypeDescriptiondescription@finalList<InstanceMethodPoint>instanceMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/10/d4782c8a442da6cdc5ebbf25a92d0e6b031d9f.src","preCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(md -> !(md.isAbstract() || md.isSynthetic()))\n                .map(md -> {\n                    List<InstanceMethodPoint> instanceMethodPoints = instanceMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (instanceMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (instanceMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new InstanceMethodAroundInterceptor(pluginLoader.getOrCreateInstance(instanceMethodPoints.get(0).getAdvice())));\n                    } else {\n                        List<InstanceMethodAroundAdvice> instanceMethodAroundAdvices = instanceMethodPoints.stream()\n                                .map(InstanceMethodPoint::getAdvice)\n                                .map(advice -> (InstanceMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeInstanceMethodAroundInterceptor(instanceMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"5c896a4328716e919fa581ad16b8a0d9fe0ac937","commitMessage":"@@@Remove useless @slf4j (#9823)\n\n* Remove @NonNull\n\n* Remove useless @Slf4j","date":"2021-03-25 21:02:37","modifiedFileCount":"23","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-16 19:09:56","codes":[{"authorDate":"2021-09-16 19:09:56","commitOrder":6,"curCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<?>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(each -> each.isStatic() && !(each.isAbstract() || each.isSynthetic()))\n                .map(methodDescription -> getStaticMethodPoint(methodDescription, classStaticMethodAroundPoints))\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<?> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-09-16 19:09:56","endLine":133,"groupId":"102210","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"interceptorClassStaticMethodPoint","params":"(finalTypeDescriptiondescription@finalList<ClassStaticMethodPoint>classStaticMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fc/a066b3962ffa3b15d436916979232476252966.src","preCode":"    private Builder<?> interceptorClassStaticMethodPoint(final TypeDescription description, final List<ClassStaticMethodPoint> classStaticMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor>> classStaticMethodAdvicePoints = description.getDeclaredMethods().stream()\n                .filter(each -> each.isStatic() && !(each.isAbstract() || each.isSynthetic()))\n                .map(md -> {\n                    List<ClassStaticMethodPoint> classStaticMethodPoints = classStaticMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (classStaticMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (classStaticMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new ClassStaticMethodAroundInterceptor(pluginLoader.getOrCreateInstance(classStaticMethodPoints.get(0).getAdvice())));\n                    } else {\n                        Collection<ClassStaticMethodAroundAdvice> classStaticMethodAroundAdvices = classStaticMethodPoints.stream()\n                                .map(ClassStaticMethodPoint::getAdvice)\n                                .map(advice -> (ClassStaticMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeClassStaticMethodAroundInterceptor(classStaticMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends ClassStaticMethodAroundInterceptor> each : classStaticMethodAdvicePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2021-09-16 19:09:56","commitOrder":6,"curCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<?>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(each -> !(each.isAbstract() || each.isSynthetic()))\n                .map(methodDescription -> getInstanceMethodPoint(methodDescription, instanceMethodAroundPoints))\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<?> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","date":"2021-09-16 19:09:56","endLine":171,"groupId":"102210","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"interceptorInstanceMethodPoint","params":"(finalTypeDescriptiondescription@finalList<InstanceMethodPoint>instanceMethodAroundPoints@finalBuilder<?>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fc/a066b3962ffa3b15d436916979232476252966.src","preCode":"    private Builder<?> interceptorInstanceMethodPoint(final TypeDescription description, final List<InstanceMethodPoint> instanceMethodAroundPoints, final Builder<?> builder) {\n        List<ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor>> instanceMethodAdviceComposePoints = description.getDeclaredMethods().stream()\n                .filter(each -> !(each.isAbstract() || each.isSynthetic()))\n                .map(md -> {\n                    List<InstanceMethodPoint> instanceMethodPoints = instanceMethodAroundPoints.stream().filter(point -> point.getMatcher().matches(md)).collect(Collectors.toList());\n                    if (instanceMethodPoints.isEmpty()) {\n                        return null;\n                    }\n                    if (instanceMethodPoints.size() == 1) {\n                        return new ShardingSphereTransformationPoint<>(md, new InstanceMethodAroundInterceptor(pluginLoader.getOrCreateInstance(instanceMethodPoints.get(0).getAdvice())));\n                    } else {\n                        List<InstanceMethodAroundAdvice> instanceMethodAroundAdvices = instanceMethodPoints.stream()\n                                .map(InstanceMethodPoint::getAdvice)\n                                .map(advice -> (InstanceMethodAroundAdvice) pluginLoader.getOrCreateInstance(advice))\n                                .collect(Collectors.toList());\n                        return new ShardingSphereTransformationPoint<>(md, new ComposeInstanceMethodAroundInterceptor(instanceMethodAroundAdvices));\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        Builder<?> result = builder;\n        for (ShardingSphereTransformationPoint<? extends InstanceMethodAroundInterceptor> each : instanceMethodAdviceComposePoints) {\n            try {\n                result = result.method(ElementMatchers.is(each.getDescription()))\n                        .intercept(MethodDelegation.withDefaultConfiguration().to(each.getInterceptor()));\n                \r\n            } catch (final Throwable ex) {\n                \r\n                log.error(\"Failed to load advice class: {}\", description.getTypeName(), ex);\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/bytebuddy/transformer/ShardingSphereTransformer.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"}],"commitId":"e8cef3fe3d275f22b3ed74bfd9b76c66718042c1","commitMessage":"@@@Refactor plugin loader (#12448)\n\n* Refactor plugin loader\n\n* Refactor code\n\n* Rename variable\n\n* Rename advice parameter name\n\n* Adjust class name\n\n* Fix checkstyle","date":"2021-09-16 19:09:56","modifiedFileCount":"11","status":"M","submitter":"Dachuan J"}]
