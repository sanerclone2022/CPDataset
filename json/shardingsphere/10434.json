[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertRoutingForShardingTableAndBroadcastTable() {\n        Set<String> sets = new HashSet<>();\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = new RouteContext();\n        unicastRoutingEngine.route(routeContext, shardingRule);\n        assertThat(routeContext.getRouteUnits().size(), is(1));\n    }\n","date":"2021-06-04 22:49:49","endLine":88,"groupId":"12084","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertRoutingForShardingTableAndBroadcastTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fd/1da05d1aae6bbd4eb03128d979e458d82c79b4.src","preCode":"    public void assertRoutingForShardingTableAndBroadcastTable() {\n        Set<String> sets = new HashSet<>();\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = new RouteContext();\n        unicastRoutingEngine.route(routeContext, shardingRule);\n        assertThat(routeContext.getRouteUnits().size(), is(1));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/unicast/ShardingUnicastRoutingEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertRouteForWithNoIntersection() {\n        Set<String> sets = new HashSet<>(3, 1);\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        sets.add(\"t_product\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = new RouteContext();\n        unicastRoutingEngine.route(routeContext, shardingRule);\n    }\n","date":"2021-06-04 22:49:49","endLine":99,"groupId":"8090","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertRouteForWithNoIntersection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fd/1da05d1aae6bbd4eb03128d979e458d82c79b4.src","preCode":"    public void assertRouteForWithNoIntersection() {\n        Set<String> sets = new HashSet<>(3, 1);\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        sets.add(\"t_product\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = new RouteContext();\n        unicastRoutingEngine.route(routeContext, shardingRule);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/unicast/ShardingUnicastRoutingEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-09-16 10:44:49","codes":[{"authorDate":"2021-09-16 10:44:49","commitOrder":2,"curCode":"    public void assertRoutingForShardingTableAndBroadcastTable() {\n        Set<String> sets = new HashSet<>();\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = unicastRoutingEngine.route(shardingRule);\n        assertThat(routeContext.getRouteUnits().size(), is(1));\n    }\n","date":"2021-09-16 10:44:49","endLine":83,"groupId":"10434","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertRoutingForShardingTableAndBroadcastTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f7/f195e97eb535b81e9022b1d956b363d24e8bd2.src","preCode":"    public void assertRoutingForShardingTableAndBroadcastTable() {\n        Set<String> sets = new HashSet<>();\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = new RouteContext();\n        unicastRoutingEngine.route(routeContext, shardingRule);\n        assertThat(routeContext.getRouteUnits().size(), is(1));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/unicast/ShardingUnicastRoutingEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2021-09-16 10:44:49","commitOrder":2,"curCode":"    public void assertRouteForWithNoIntersection() {\n        Set<String> sets = new HashSet<>(3, 1);\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        sets.add(\"t_product\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = unicastRoutingEngine.route(shardingRule);\n    }\n","date":"2021-09-16 10:44:49","endLine":93,"groupId":"10434","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertRouteForWithNoIntersection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f7/f195e97eb535b81e9022b1d956b363d24e8bd2.src","preCode":"    public void assertRouteForWithNoIntersection() {\n        Set<String> sets = new HashSet<>(3, 1);\n        sets.add(\"t_order\");\n        sets.add(\"t_config\");\n        sets.add(\"t_product\");\n        ShardingUnicastRoutingEngine unicastRoutingEngine = new ShardingUnicastRoutingEngine(sets);\n        RouteContext routeContext = new RouteContext();\n        unicastRoutingEngine.route(routeContext, shardingRule);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/unicast/ShardingUnicastRoutingEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"da387e577c285547374f3bec611c3b27e978b3e3","commitMessage":"@@@optimize sharding route logic (#12457)\n\n* remove sharding condition merge logic\n\n* optimize route logic\n\n* fix checkstyle\n\n* optimize param name\n\n* fix checkstyle\n\n* fix unit test\n\n* optimize merge logic\n\n* optimize java doc\n\n* optimize java collection type","date":"2021-09-16 10:44:49","modifiedFileCount":"26","status":"M","submitter":"Zhengqiang Duan"}]
