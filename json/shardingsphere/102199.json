[{"authorTime":"2021-06-06 23:39:57","codes":[{"authorDate":"2021-06-06 23:39:57","commitOrder":1,"curCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-06-06 23:39:57","endLine":127,"groupId":"9207","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/dd4b2fc6b2160d37f3e0cfcb4b20d85f5e0020.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"},{"authorDate":"2021-06-06 23:39:57","commitOrder":1,"curCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = Mockito.mock(ShardingSphereSchema.class);\n        Mockito.when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = Mockito.mock(TableMetaData.class);\n        Mockito.when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        Mockito.when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        Mockito.when(result.containsTable(\"t_account\")).thenReturn(true);\n        Mockito.when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = Mockito.mock(TableMetaData.class);\n        Mockito.when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Mockito.when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        Mockito.when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        Mockito.when(result.get(\"t_account_detail\")).thenReturn(Mockito.mock(TableMetaData.class));\n        Mockito.when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        Mockito.when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-06-06 23:39:57","endLine":122,"groupId":"9207","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b3/ca9103e023c78d2a33aac832c100be76899484.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = Mockito.mock(ShardingSphereSchema.class);\n        Mockito.when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = Mockito.mock(TableMetaData.class);\n        Mockito.when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        Mockito.when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        Mockito.when(result.containsTable(\"t_account\")).thenReturn(true);\n        Mockito.when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = Mockito.mock(TableMetaData.class);\n        Mockito.when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Mockito.when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        Mockito.when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        Mockito.when(result.get(\"t_account_detail\")).thenReturn(Mockito.mock(TableMetaData.class));\n        Mockito.when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        Mockito.when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"4f1f6246bf7e4971de22ca68e3b2fa4b10fcb470","commitMessage":"@@@Merge rewrite-test module (#10682)\n\n* Adjust sequence of pom order for feature import\n\n* Merge rewrite-test module\n\n* Merge rewrite-test module","date":"2021-06-06 23:39:57","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 21:31:26","codes":[{"authorDate":"2021-06-06 23:39:57","commitOrder":2,"curCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-06-06 23:39:57","endLine":127,"groupId":"9207","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/de/dd4b2fc6b2160d37f3e0cfcb4b20d85f5e0020.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"},{"authorDate":"2021-07-27 21:31:26","commitOrder":2,"curCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-07-27 21:31:26","endLine":125,"groupId":"9207","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f2/deaadcc713e03ec7fd9cf672d031925d4d9b92.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = Mockito.mock(ShardingSphereSchema.class);\n        Mockito.when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = Mockito.mock(TableMetaData.class);\n        Mockito.when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        Mockito.when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        Mockito.when(result.containsTable(\"t_account\")).thenReturn(true);\n        Mockito.when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = Mockito.mock(TableMetaData.class);\n        Mockito.when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Mockito.when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        Mockito.when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        Mockito.when(result.get(\"t_account_detail\")).thenReturn(Mockito.mock(TableMetaData.class));\n        Mockito.when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        Mockito.when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"d951f5f407d900fcd69bf73848b08e45091bbe05","commitMessage":"@@@Use static import with Mockito (#11543)\n\n","date":"2021-07-27 21:31:26","modifiedFileCount":"6","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 21:31:26","codes":[{"authorDate":"2021-07-30 09:34:37","commitOrder":3,"curCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        when(result.containsColumn(\"t_account\", \"account_id\")).thenReturn(true);\n        return result;\n    }\n","date":"2021-07-30 09:34:37","endLine":135,"groupId":"9207","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d0/6842d9003af2d014b3fbc9a8cd17fbd9cde9f0.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2021-07-27 21:31:26","commitOrder":3,"curCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-07-27 21:31:26","endLine":125,"groupId":"9207","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f2/deaadcc713e03ec7fd9cf672d031925d4d9b92.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"fe79fc6e4db4b87f6655507c6adf03c3332250a9","commitMessage":"@@@Issue 11386 2 (#11535)\n\n* union mysql route\n\n* union mysql route one data node support\n\n* union mysql route one data node support\n\n* union mysql route one data node support\n\n* union mysql route one data node support\n\n* union mysql route one data node support\n\n* union mysql route one data node support","date":"2021-07-30 09:34:37","modifiedFileCount":"3","status":"M","submitter":"tuichenchuxin"},{"authorTime":"2021-07-31 19:41:42","codes":[{"authorDate":"2021-07-31 19:41:42","commitOrder":4,"curCode":"    protected ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        when(result.containsColumn(\"t_account\", \"account_id\")).thenReturn(true);\n        return result;\n    }\n","date":"2021-07-31 19:41:42","endLine":97,"groupId":"9207","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/26/aab03b4c3494e9910b025a31229b13e3eb4af7.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        when(result.containsColumn(\"t_account\", \"account_id\")).thenReturn(true);\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-07-31 19:41:42","commitOrder":4,"curCode":"    protected ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-07-31 19:41:42","endLine":85,"groupId":"9207","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/92/01cf46a071fc69f719e9529855112926588a5b.src","preCode":"    private ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"16d2b99f9370f82b3c9b8a0d5df8e47dae5b3285","commitMessage":"@@@Simplify the rewrite-test. (#11527)\n\n* Simplify the rewrite-test.\n\n* merge master.\n\n* merge master.","date":"2021-07-31 19:41:42","modifiedFileCount":"4","status":"M","submitter":"totalo"},{"authorTime":"2021-07-31 19:41:42","codes":[{"authorDate":"2021-08-26 18:08:28","commitOrder":5,"curCode":"    protected ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(new ArrayList<>(Arrays.asList(\"account_id\", \"amount\", \"status\")));\n        when(result.containsColumn(\"t_account\", \"account_id\")).thenReturn(true);\n        return result;\n    }\n","date":"2021-08-26 18:08:28","endLine":98,"groupId":"102199","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/d8390e519067f766e92b95d940465d5fd5adb4.src","preCode":"    protected ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"amount\", \"status\"));\n        when(result.containsColumn(\"t_account\", \"account_id\")).thenReturn(true);\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/ShardingSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-07-31 19:41:42","commitOrder":5,"curCode":"    protected ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","date":"2021-07-31 19:41:42","endLine":85,"groupId":"102199","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"mockSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/92/01cf46a071fc69f719e9529855112926588a5b.src","preCode":"    protected ShardingSphereSchema mockSchema() {\n        ShardingSphereSchema result = mock(ShardingSphereSchema.class);\n        when(result.getAllTableNames()).thenReturn(Arrays.asList(\"t_account\", \"t_account_bak\", \"t_account_detail\"));\n        TableMetaData accountTableMetaData = mock(TableMetaData.class);\n        when(accountTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        Map<String, IndexMetaData> indexMetaDataMap = new HashMap<>(1, 1);\n        indexMetaDataMap.put(\"index_name\", new IndexMetaData(\"index_name\"));\n        when(accountTableMetaData.getIndexes()).thenReturn(indexMetaDataMap);\n        when(result.containsTable(\"t_account\")).thenReturn(true);\n        when(result.get(\"t_account\")).thenReturn(accountTableMetaData);\n        TableMetaData accountBakTableMetaData = mock(TableMetaData.class);\n        when(accountBakTableMetaData.getColumns()).thenReturn(createColumnMetaDataMap());\n        when(result.containsTable(\"t_account_bak\")).thenReturn(true);\n        when(result.get(\"t_account_bak\")).thenReturn(accountBakTableMetaData);\n        when(result.get(\"t_account_detail\")).thenReturn(mock(TableMetaData.class));\n        when(result.getAllColumnNames(\"t_account\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        when(result.getAllColumnNames(\"t_account_bak\")).thenReturn(Arrays.asList(\"account_id\", \"password\", \"amount\", \"status\"));\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/scenario/MixSQLRewriterParameterizedTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"}],"commitId":"8220f02f56c6c990eab5e920b90bddc8071e2488","commitMessage":"@@@optimize the logic of findTableName to batch (#12016)\n\n* optimize the logic of findTableName to batch\n\n* rename variable\n\n* optimize code\n\n* fix test case\n\n* fix test case\n\n* fix test case","date":"2021-08-26 18:08:28","modifiedFileCount":"6","status":"M","submitter":"Zhengqiang Duan"}]
