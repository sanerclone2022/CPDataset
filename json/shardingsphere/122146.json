[{"authorTime":"2021-03-24 18:00:29","codes":[{"authorDate":"2021-03-24 18:00:29","commitOrder":1,"curCode":"    private static Collection<ParameterizedArray> getAssertionParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getAssertionParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","date":"2021-03-24 18:00:29","endLine":78,"groupId":"12951","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAssertionParameterizedArray","params":"(finalIntegrationTestCaseContexttestCaseContext@finalSQLCommandTypesqlCommandType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3c/ca6f3871a2d0f07beaadd55e255735055c50ce.src","preCode":"    private static Collection<ParameterizedArray> getAssertionParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getAssertionParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/param/ParameterizedArrayFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2021-03-24 18:00:29","commitOrder":1,"curCode":"    private static Collection<ParameterizedArray> getCaseParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getCaseParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","date":"2021-03-24 18:00:29","endLine":138,"groupId":"12951","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getCaseParameterizedArray","params":"(finalIntegrationTestCaseContexttestCaseContext@finalSQLCommandTypesqlCommandType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3c/ca6f3871a2d0f07beaadd55e255735055c50ce.src","preCode":"    private static Collection<ParameterizedArray> getCaseParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getCaseParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/param/ParameterizedArrayFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"70176a68c9d7d55a47f4dde8391fdbb0d52cb231","commitMessage":"@@@refactor: it engine (#9725)\n\n* move packages\n\n* refactor dockerfile\n\n* Refactor IT engine\n\n* fix checkstyle and update it.yaml\n\n* optimize\n\n* fix\n\n* fix ci/it script\n\n* fix null pointer\n\n* fix checkstyle\n\n* fix nullpointer\n\n* code polish\n\n* revert\n\n* make adapter=jdbc available\n\n* fix\n\n* fix\n\n* following reviews\n\n* fix ci\n\n* Compatible with ci\n\n* support parallel\n\n* fix\n\n* fix\n\n* fix\n\n* fix\n\n* disable fail-fast\n\n* polish\n\n* fix health-chek\n\n* fix health-chek\n\n* fix health-chek\n\n* code polish\n\n* code polish\n\n* code polish\n\n* rollback\n\n* fix missing case\n\n* fix\n\n* fix skip dockerfile build\n\n* revert removed profile\n\n* remove dead code\n\nCo-authored-by: root <root@daming.sgp>","date":"2021-03-24 18:00:29","modifiedFileCount":"14","status":"B","submitter":"Daming"},{"authorTime":"2021-03-24 18:00:29","codes":[{"authorDate":"2021-03-29 19:40:36","commitOrder":2,"curCode":"    private static Collection<AssertionParameterizedArray> getAssertionParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<AssertionParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getAssertionParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","date":"2021-03-29 19:40:36","endLine":75,"groupId":"12951","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAssertionParameterizedArray","params":"(finalIntegrationTestCaseContexttestCaseContext@finalSQLCommandTypesqlCommandType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e0/fcea312cc3651c6afbfdedc303c8efae87a668.src","preCode":"    private static Collection<ParameterizedArray> getAssertionParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getAssertionParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/param/ParameterizedArrayFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2021-03-24 18:00:29","commitOrder":2,"curCode":"    private static Collection<ParameterizedArray> getCaseParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getCaseParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","date":"2021-03-24 18:00:29","endLine":138,"groupId":"12951","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getCaseParameterizedArray","params":"(finalIntegrationTestCaseContexttestCaseContext@finalSQLCommandTypesqlCommandType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3c/ca6f3871a2d0f07beaadd55e255735055c50ce.src","preCode":"    private static Collection<ParameterizedArray> getCaseParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getCaseParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/param/ParameterizedArrayFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"N"}],"commitId":"f7511d5d36b5cfb2692fa07c5d7e9e278205c1b4","commitMessage":"@@@Refactor: IT framework (#9857)\n\n* refactor it engine\n\n* following reviews and remove dead codes\n\nCo-authored-by: zhuanghaochao <zhuanghaochao@yy.com>","date":"2021-03-29 19:40:36","modifiedFileCount":"33","status":"M","submitter":"Daming"},{"authorTime":"2021-04-10 13:41:08","codes":[{"authorDate":"2021-04-10 13:41:08","commitOrder":3,"curCode":"    private static Collection<AssertionParameterizedArray> getAssertionParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<AssertionParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDatabaseTypes().contains(each)) {\n                result.addAll(getAssertionParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","date":"2021-04-10 13:41:08","endLine":74,"groupId":"122146","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getAssertionParameterizedArray","params":"(finalIntegrationTestCaseContexttestCaseContext@finalSQLCommandTypesqlCommandType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/40/438c89a272439d4942bae177ef6f6d416d5f3b.src","preCode":"    private static Collection<AssertionParameterizedArray> getAssertionParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<AssertionParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getAssertionParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/param/ParameterizedArrayFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2021-04-10 13:41:08","commitOrder":3,"curCode":"    private static Collection<ParameterizedArray> getCaseParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDatabaseTypes().contains(each)) {\n                result.addAll(getCaseParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","date":"2021-04-10 13:41:08","endLine":134,"groupId":"122146","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"getCaseParameterizedArray","params":"(finalIntegrationTestCaseContexttestCaseContext@finalSQLCommandTypesqlCommandType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/40/438c89a272439d4942bae177ef6f6d416d5f3b.src","preCode":"    private static Collection<ParameterizedArray> getCaseParameterizedArray(final IntegrationTestCaseContext testCaseContext, final SQLCommandType sqlCommandType) {\n        Collection<ParameterizedArray> result = new LinkedList<>();\n        for (DatabaseType each : getDatabaseTypes(testCaseContext.getTestCase().getDbTypes())) {\n            if (IntegrationTestEnvironment.getInstance().getDataSourceEnvironments().containsKey(each)) {\n                result.addAll(getCaseParameterizedArray(testCaseContext, each, sqlCommandType));\n            }\n        }\n        return result;\n    }\n","realPath":"shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/param/ParameterizedArrayFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"3a6225d4334af1f2f6a9ef9fb09f850bbc68c051","commitMessage":"@@@sweep test environment (#10017)\n\n","date":"2021-04-10 13:41:08","modifiedFileCount":"13","status":"M","submitter":"Daming"}]
