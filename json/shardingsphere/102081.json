[{"authorTime":"2021-07-01 17:47:55","codes":[{"authorDate":"2021-07-01 17:47:55","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateReadwriteSplittingRuleStatement actual, final CreateReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":57,"groupId":"6447","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalCreateReadwriteSplittingRuleStatementactual@finalCreateReadWriteSplittingRuleStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9b/b653be003c50019c3a5d326c982437c74f4aad.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateReadwriteSplittingRuleStatement actual, final CreateReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/create/impl/CreateReadwriteSplittingRuleStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2021-07-01 17:47:55","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final AlterReadwriteSplittingRuleStatement actual, final AlterReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","date":"2021-07-01 17:47:55","endLine":57,"groupId":"6447","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalAlterReadwriteSplittingRuleStatementactual@finalAlterReadWriteSplittingRuleStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/79/a1205ddfb0f0cf3ee6781c6ad15358fa3216b2.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final AlterReadwriteSplittingRuleStatement actual, final AlterReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/alter/impl/AlterReadwriteSplittingRuleStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"}],"commitId":"71c18596a4427b83e98bd0cb6b32319e297d1373","commitMessage":"@@@add new parser test module (#11083)\n\n","date":"2021-07-01 17:47:55","modifiedFileCount":"0","status":"B","submitter":"totalo"},{"authorTime":"2021-08-13 18:15:48","codes":[{"authorDate":"2021-08-13 18:15:48","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateReadwriteSplittingRuleStatement actual, final CreateReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual statement should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual statement should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","date":"2021-08-13 18:15:48","endLine":57,"groupId":"102081","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalCreateReadwriteSplittingRuleStatementactual@finalCreateReadWriteSplittingRuleStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ac/87c3b2340e789d90010fdb8ecbd4bad7cb3bac.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final CreateReadwriteSplittingRuleStatement actual, final CreateReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/create/impl/CreateReadwriteSplittingRuleStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2021-08-13 18:15:48","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final AlterReadwriteSplittingRuleStatement actual, final AlterReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual statement should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual statement should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","date":"2021-08-13 18:15:48","endLine":57,"groupId":"102081","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalAlterReadwriteSplittingRuleStatementactual@finalAlterReadWriteSplittingRuleStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/43/e2c26c4d71f09bf19d385c52b61b59690993fe.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final AlterReadwriteSplittingRuleStatement actual, final AlterReadWriteSplittingRuleStatementTestCase expected) {\n        if (null == expected) {\n            assertNull(assertContext.getText(\"Actual should not exist.\"), actual);\n        } else {\n            assertNotNull(assertContext.getText(\"Actual should exist.\"), actual);\n            assertReadwriteSplittingRule(assertContext, actual.getRules(), expected.getRules());\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/alter/impl/AlterReadwriteSplittingRuleStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"933ebab23d2431213c8fc9b01d9d096115eca4f8","commitMessage":"@@@Add advancedDistSQLStatement.  and implement 'preview sql'. (#11802)\n\n* Add advancedDistSQLStatement.  and implement 'preview sql'.\n\n* fix `Actual should not exist` syntax problem.","date":"2021-08-13 18:15:48","modifiedFileCount":"29","status":"M","submitter":"Raigor"}]
