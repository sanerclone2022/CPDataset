[{"authorTime":"2020-12-03 17:11:05","codes":[{"authorDate":"2020-11-21 17:20:14","commitOrder":7,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2020-11-21 17:20:14","endLine":67,"groupId":"12877","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/92/f2fbb9031030f3109b04a06335348f5299c98c.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"NB"},{"authorDate":"2020-12-03 17:11:05","commitOrder":7,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2020-12-03 17:11:05","endLine":78,"groupId":"12877","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/30/368c1be21111e0efdc434987f5f162c08b0104.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"a21d94826c2416401e6efdf88fc7db3971600510","commitMessage":"@@@Redesign TextProtocolBackendHandler  (#8493)\n\n* Remove useless null judge\n\n* Add SchemaBackendHandlerFactory\n\n* Add SchemaBackendHandler\n\n* Add environment package\n\n* Move database related to data package\n\n* Add data.impl package\n\n* Add DatabaseBackendHandlerFactory\n\n* Refactor TextProtocolBackendHandlerFactory\n\n* Move RDLBackendHandler package\n\n* Add default method for TextProtocolBackendHandler","date":"2020-12-03 17:11:05","modifiedFileCount":"9","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-12-11 07:32:04","codes":[{"authorDate":"2020-12-11 07:32:04","commitOrder":8,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2020-12-11 07:32:04","endLine":67,"groupId":"12877","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5a/a183fef8f4567ffb3ba63994f56a1effabc618.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2020-12-11 07:32:04","commitOrder":8,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2020-12-11 07:32:04","endLine":78,"groupId":"12877","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/42/7005aa0e12bbf2d0475d61fbbbf8b60b31eec3.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new Authentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"74a10c21f3c7d63c5dd4365b17873f6966ad0487","commitMessage":"@@@Add authentication SPI for external authentication (#8566)\n\n* Rename ShardingSphereUser\n\n* Add MemoryAuthentication\n\n* Rename UserYamlSwapper\n\n* Rename YamlUserConfiguration\n\n* Add memory package\n\n* Refactor usage of Authentication\n\n* Add AuthenticationEngine\n\n* Refactor StandardMetaDataContexts\n\n* Rename DefaultAuthentication\n\n* Resolve conflict","date":"2020-12-11 07:32:04","modifiedFileCount":"43","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-12-12 23:20:10","codes":[{"authorDate":"2020-12-12 23:20:10","commitOrder":9,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2020-12-12 23:20:10","endLine":69,"groupId":"5002","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c6/0f82e52c545e691c5c9b276dda4693ac312f46.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-12-12 23:20:10","commitOrder":9,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2020-12-12 23:20:10","endLine":79,"groupId":"12877","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1c/141e80ce669dbbcdc7b561457ca64ea6ad3fa7.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties()), new MySQLDatabaseType()));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"efdd25f4b72a85c3040d089ff58f418141cc72b2","commitMessage":"@@@Split backend database type from same one to multiple with each schema (#8596)\n\n* Use database type map instead of single database type\n\n* Add MetaDataContexts.getAllSchemas\n\n* Remove MetaDataContexts.getDatabaseTypes()\n\n* Add ShardingSphereResource.databaseType\n\n* Remove MetaDataContexts.getDatabaseType()\n\n* Remove StandardMetaDataContexts.databaseTypes\n\n* Use MetaDataContexts.getDefaultMetaData\n\n* Use MetaDataContexts.getDefaultMetaData\n\n* Add MetaDataContexts.getMetaData(String schemaName)\n\n* Remove MetaDataContexts.getMetaDataMap()\n\n* refactor MetaDataContextsBuilder","date":"2020-12-12 23:20:10","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-01 18:29:09","codes":[{"authorDate":"2021-04-01 18:29:09","commitOrder":10,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.emptyList()), new ConfigurationProperties(new Properties())));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-04-01 18:29:09","endLine":69,"groupId":"12877","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b8/388481a139d0ee78683362fb68c53e2ad6983b.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-04-01 18:29:09","commitOrder":10,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-04-01 18:29:09","endLine":82,"groupId":"12877","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/b4a514142ee08d1d0d1e7567a93767f34e9443.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"4954616af3db97b031b8a2005b2e40062b390929","commitMessage":"@@@Add AuthenticationContext and ShardingSphereUsers (#9906)\n\n* Add AuthenticationContext and ShardingSphereUsers\n\n* Remove MetaDataContexts.getAuthentication()\n\n* Fix test case\n\n* Move AuthenticationContext\n\n* Refactor SQLChecker\n\n* Use SQLChecker to check authrity\n\n* Fix compile error","date":"2021-04-01 18:29:09","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-08 16:15:03","codes":[{"authorDate":"2021-04-08 16:15:03","commitOrder":11,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.emptyList()), new ConfigurationProperties(new Properties())));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-04-08 16:15:03","endLine":70,"groupId":"12877","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6b/f2dd42a13b8854856a5d7684e8c6c5a87c4a23.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.emptyList()), new ConfigurationProperties(new Properties())));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-04-08 16:15:03","commitOrder":11,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-04-08 16:15:03","endLine":83,"groupId":"12877","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/be/5f56e453766690c9b850fa6abda1946cbfce5b.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"d6fe7c187b7f3bd2c05cad2d9920b9f664de5d11","commitMessage":"@@@Use SchemaRule and GlobalRule interface (#9989)\n\n* Use SchemaRule and GlobalRule interface\n\n* Fix compile error","date":"2021-04-08 16:15:03","modifiedFileCount":"67","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-08 16:15:03","codes":[{"authorDate":"2021-04-24 22:56:31","commitOrder":12,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.emptyList()), new ConfigurationProperties(new Properties())));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-04-24 22:56:31","endLine":70,"groupId":"12877","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7d/b84467375f4ac15ab9eb33de6b71324ade5acc.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.emptyList()), new ConfigurationProperties(new Properties())));\n        BinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-04-08 16:15:03","commitOrder":12,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-04-08 16:15:03","endLine":83,"groupId":"12877","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/be/5f56e453766690c9b850fa6abda1946cbfce5b.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"ff785bee7b455e016ed5f5336a5b6f59e4d36dec","commitMessage":"@@@Rename PostgreSQLBinaryStatementRegistry (#10183)\n\n* Add volatile for BackendConnection\n\n* Rename PostgreSQLBinaryStatementRegistry\n\n* Fix checkstyle","date":"2021-04-24 22:56:31","modifiedFileCount":"11","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-05-18 13:23:30","codes":[{"authorDate":"2021-05-18 13:23:30","commitOrder":13,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-05-18 13:23:30","endLine":69,"groupId":"12877","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6f/2ad0d763a727d4b9e00695976d0fcaf4d9bbb6.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.emptyList()), new ConfigurationProperties(new Properties())));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-05-18 13:23:30","commitOrder":13,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-05-18 13:23:30","endLine":80,"groupId":"12877","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e7/94c2cc64cd4b343c2f1590c75728724ab92f61.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"fe0ddc8c5d6c106f4f88af39bc42a4038f60b26b","commitMessage":"@@@Users  removed from StandardMetaDataContexts (#10310)\n\n* remove user\n\n* fix review\n\n* trigger ci\n\n* fix code\n\n* fix","date":"2021-05-18 13:23:30","modifiedFileCount":"39","status":"M","submitter":"Zhu jun"},{"authorTime":"2021-05-18 13:23:30","codes":[{"authorDate":"2021-06-09 18:43:06","commitOrder":14,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-06-09 18:43:06","endLine":73,"groupId":"12877","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/23/3a8070451108a95b5674502420a3c7bea27183.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-05-18 13:23:30","commitOrder":14,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-05-18 13:23:30","endLine":80,"groupId":"12877","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e7/94c2cc64cd4b343c2f1590c75728724ab92f61.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"}],"commitId":"be59cca18523e6b2955c665f81a7ce64e834ef08","commitMessage":"@@@Refactor PostgreSQL Proxy (#10736)\n\n* Refactor PostgreSQL Proxy\n\n* Fix empty SQL cause NPE\n\n* Fix empty SQL parsing error\n\n* Fix checkstyle\n\n* Fix PostgreSQLComDescribeExecutorTest\n\n* Refactor PostgreSQL Proxy protocol\n\n* Fix no data packet may be missing\n\n* Fix get Optional class mistake\n\n* Fix SQL command not found\n\n* Fix PostgreSQL frontend test cases\n\n* Add PostgreSQLNoDataPacketTest\n\n* Replace ThreadLocal with ConnectionContextRegistry\n\n* Fix checkstyle\n\n* Fix test case\n\n* Polish test case","date":"2021-06-09 18:43:06","modifiedFileCount":"25","status":"M","submitter":"???"},{"authorTime":"2021-07-01 11:29:35","codes":[{"authorDate":"2021-07-01 11:29:35","commitOrder":15,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-07-01 11:29:35","endLine":74,"groupId":"12877","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ea/1fc15589553a8c61021fb42d4e3c7ebe67347c.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2021-07-01 11:29:35","commitOrder":15,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-07-01 11:29:35","endLine":81,"groupId":"12877","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1a/865d6f6f24063fe37ec2a0d6eb4b6b9b21332e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"e560dc4352de5abc7caf4fbdc03b747985508961","commitMessage":"@@@improve code for #10840 (#11028)\n\n* improve code style for 10678\n\n* Remove unnecessary submitted code.\n\n* improve code\n\n* improve code\n\n* improve code for 10678","date":"2021-07-01 11:29:35","modifiedFileCount":"61","status":"M","submitter":"totalo"},{"authorTime":"2021-07-01 11:29:35","codes":[{"authorDate":"2021-07-08 18:31:57","commitOrder":16,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(connectionContext.getBinaryStatements()).thenReturn(new ConcurrentHashMap<>(1, 1));\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-07-08 18:31:57","endLine":73,"groupId":"12877","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/29/498a93a513257f904f0962501ba736773998dc.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getConnectionId()).thenReturn(1);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLBinaryStatementRegistry.getInstance().register(1);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2021-07-01 11:29:35","commitOrder":16,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-07-01 11:29:35","endLine":81,"groupId":"12877","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1a/865d6f6f24063fe37ec2a0d6eb4b6b9b21332e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"e967a998d98f343491cc25ad81306f6f7f86fd2c","commitMessage":"@@@Remove PostgreSQLBinaryStatementRegistry (#11215)\n\n* Remove PostgreSQLBinaryStatementRegistry\n\n* fix test\n\n* fix tests\n\n* fix tests\n\n* fix tests\n\n* fix tests","date":"2021-07-08 18:31:57","modifiedFileCount":"17","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2021-07-01 11:29:35","codes":[{"authorDate":"2021-07-10 16:37:20","commitOrder":17,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-07-10 16:37:20","endLine":71,"groupId":"12877","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/625d8fbb410b0424c752d56bf6ce44993c6074.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(connectionContext.getBinaryStatements()).thenReturn(new ConcurrentHashMap<>(1, 1));\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-07-01 11:29:35","commitOrder":17,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-07-01 11:29:35","endLine":81,"groupId":"12877","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1a/865d6f6f24063fe37ec2a0d6eb4b6b9b21332e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"e91d43e6ae147d70d011e82d5502aea6769bd4a0","commitMessage":"@@@Refactor PostgreSQLBinaryStatementRegistry (#11261)\n\n* Remove PostgreSQLBinaryStatementRegistry\n\n* fix test\n\n* fix tests\n\n* fix tests\n\n* fix tests\n\n* fix tests\n\n* Refactor PostgreSQLBinaryStatementRegistry\n\n* fix conflicts","date":"2021-07-10 16:37:20","modifiedFileCount":"24","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2021-07-01 11:29:35","codes":[{"authorDate":"2021-07-12 16:49:41","commitOrder":18,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-07-12 16:49:41","endLine":77,"groupId":"12877","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3c/fbbf0321511d186af51e09a3798f01273604a6.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(connectionContext, parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2021-07-01 11:29:35","commitOrder":18,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-07-01 11:29:35","endLine":81,"groupId":"12877","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1a/865d6f6f24063fe37ec2a0d6eb4b6b9b21332e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"89b2506156a91b18a14942608169db9feec2839e","commitMessage":"@@@Revert handling for unregister of PostgreSQLBinaryStatementRegistry (#11278)\n\n* Revert handling for unregister of PostgreSQLBinaryStatementRegistry\n\n* fix tests\n\n* remove redundant line\n\n* remove redundant line","date":"2021-07-12 16:49:41","modifiedFileCount":"15","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2021-07-24 22:50:31","codes":[{"authorDate":"2021-07-24 22:50:31","commitOrder":19,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-07-24 22:50:31","endLine":78,"groupId":"12877","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/7f5f85e42e5f118838ee56299a003dbdd52e1f.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2021-07-24 22:50:31","commitOrder":19,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-07-24 22:50:31","endLine":83,"groupId":"12877","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/3d8d04799eeac2522e759e12888124c4860cd0.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"717c99918248f66d683ef60a4f961ee37470c687","commitMessage":"@@@Use direct call to instead of event post on AddResourceBackendHandler (#11488)\n\n* Add MetaDataContexts.getConfigCenter()\n\n* Use direct call to refactor AddResourceBackendHandler\n\n* Use direct call to refactor AddResourceBackendHandler\n\n* Fix test case\n\n* Add DataSourcePersistService.append()\n\n* Add test case","date":"2021-07-24 22:50:31","modifiedFileCount":"44","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-26 14:43:21","codes":[{"authorDate":"2021-07-26 14:43:21","commitOrder":20,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-07-26 14:43:21","endLine":78,"groupId":"12877","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/5221ce5847899b92f851c148597c60f0becc14.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2021-07-26 14:43:21","commitOrder":20,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-07-26 14:43:21","endLine":83,"groupId":"12877","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/98/ba1e76e65f9b6175b5a04b1101171b9d07b0cd.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"3073e94515f9556d995dbf3a2d409630801788f4","commitMessage":"@@@Rename ConfigCenter to DistMetaDataPersistService (#11505)\n\n* Rename DistMetaDataPersistService\n\n* Rename DistMetaDataPersistRepository\n\n* Rename DistMetaDataPersistRepository\n\n* For checkstyle\n\n* For checkstyle","date":"2021-07-26 14:43:21","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 02:33:31","codes":[{"authorDate":"2021-08-15 02:33:31","commitOrder":21,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-08-15 02:33:31","endLine":82,"groupId":"13896","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/82/d29ac5ba4a36d5ddb5353b167e65e91029caa1.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-08-15 02:33:31","commitOrder":21,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-08-15 02:33:31","endLine":87,"groupId":"13896","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/76/2d53849e2fd376d4c3a7f4e3f1aafbe70251e1.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class)));\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"d6e424ba68c64ea1835a42b0f4b0fb7f69c95323","commitMessage":"@@@Add ContextManager (#11822)\n\n* Add ContextManager\n\n* Use ContextManager on GovernanceShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereConnection\n\n* Use ContextManager on ShardingSphereConnection\n\n* Refactor AbstractBaseExecutorTest\n\n* Use ContextManager on proxy\n\n* Fix test case","date":"2021-08-15 02:33:31","modifiedFileCount":"118","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 11:55:34","codes":[{"authorDate":"2021-08-15 11:55:34","commitOrder":22,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-08-15 11:55:34","endLine":82,"groupId":"13896","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a0/c39f99a1dbaf11d068b765145e6b6b7c43c24c.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-08-15 11:55:34","commitOrder":22,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-08-15 11:55:34","endLine":87,"groupId":"13896","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c4/40aaa847e3be1b02c7bda5c2aa87ae74d66a2e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"21a22f867f1709d878330ac64794a8a8880a116c","commitMessage":"@@@Merge StandardContexts and Contexts interface (#11826)\n\n","date":"2021-08-15 11:55:34","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-21 23:24:02","codes":[{"authorDate":"2021-08-21 23:24:02","commitOrder":23,"curCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","date":"2021-08-21 23:24:02","endLine":82,"groupId":"10830","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/ecdf6f3f330ae9e06c94766b08c993396ee2d4.src","preCode":"    public void assertNewInstance() throws NoSuchFieldException, IllegalAccessException {\n        when(parsePacket.getSql()).thenReturn(\"SELECT 1\");\n        when(parsePacket.getStatementId()).thenReturn(\"2\");\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        PostgreSQLComParseExecutor actual = new PostgreSQLComParseExecutor(parsePacket, backendConnection);\n        assertThat(actual.execute().iterator().next(), instanceOf(PostgreSQLParseCompletePacket.class));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-08-21 23:24:02","commitOrder":23,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","date":"2021-08-21 23:24:02","endLine":87,"groupId":"10830","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/87/d0b9cdb38cbe222cff61f187d9cd49275828c9.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        when(backendConnection.getSchemaName()).thenReturn(String.format(SCHEMA_PATTERN, 0));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/BroadcastDatabaseBackendHandlerTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"534fe5735969e87e2066a2087ba12618be530cbc","commitMessage":"@@@Refactor ShardingSphereMode (#11937)\n\n* Refactor ShardingSphereAutoConfiguration\n\n* Remove useless PersistRepositoryFactory\n\n* Add StandalonePersistRepository\n\n* Add generic type of ShardingSphereMode\n\n* Add generic type of ContextManagerBuilder\n\n* Refactor ShardingSphereMode\n\n* Rename LocalStandalonePersistRepository\n\n* Rename LocalRepository\n\n* Rename RegistryCenterRepository to ClusterPersistRepository\n\n* Rename ClusterPersistRepositoryFactory\n\n* Move StandalonePersistRepository\n\n* Move StandalonePersistRepositoryConfiguration\n\n* Rename DistMetaDataPersistService to PersistService","date":"2021-08-21 23:24:02","modifiedFileCount":"75","status":"M","submitter":"Liang Zhang"}]
