[{"authorTime":"2021-05-12 17:27:04","codes":[{"authorDate":"2021-05-12 17:27:04","commitOrder":1,"curCode":"    public void assertExecuteClosePreparedStatement() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PREPARED_STATEMENT);\n        when(packet.getName()).thenReturn(\"S_1\");\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLCloseCompletePacket.class)));\n    }\n","date":"2021-05-12 17:27:04","endLine":66,"groupId":"4939","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExecuteClosePreparedStatement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/747dbae72c5add2d46cbba18bb8127cf6ff53e.src","preCode":"    public void assertExecuteClosePreparedStatement() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PREPARED_STATEMENT);\n        when(packet.getName()).thenReturn(\"S_1\");\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLCloseCompletePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2021-05-12 17:27:04","commitOrder":1,"curCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","date":"2021-05-12 17:27:04","endLine":75,"groupId":"4939","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExecuteClosePortal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/747dbae72c5add2d46cbba18bb8127cf6ff53e.src","preCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"9e35377cdd8aa2297cb1c92cdca010ef4fa85a71","commitMessage":"@@@Support PostgreSQL Close command (#10316)\n\n","date":"2021-05-12 17:27:04","modifiedFileCount":"6","status":"B","submitter":"???"},{"authorTime":"2021-06-23 20:27:01","codes":[{"authorDate":"2021-06-23 20:27:01","commitOrder":2,"curCode":"    public void assertExecuteClosePreparedStatement() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PREPARED_STATEMENT);\n        when(packet.getName()).thenReturn(\"S_1\");\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(connectionContext, packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLCloseCompletePacket.class)));\n    }\n","date":"2021-06-23 20:27:01","endLine":70,"groupId":"10872","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExecuteClosePreparedStatement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/8453ed335e4c1d29fd8f7769d61566f3085921.src","preCode":"    public void assertExecuteClosePreparedStatement() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PREPARED_STATEMENT);\n        when(packet.getName()).thenReturn(\"S_1\");\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLCloseCompletePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2021-06-23 20:27:01","commitOrder":2,"curCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        String portalName = \"C_1\";\n        when(packet.getName()).thenReturn(portalName);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(connectionContext, packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLCloseCompletePacket.class)));\n        verify(connectionContext).closePortal(portalName);\n    }\n","date":"2021-06-23 20:27:01","endLine":82,"groupId":"10872","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExecuteClosePortal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/8453ed335e4c1d29fd8f7769d61566f3085921.src","preCode":"    public void assertExecuteClosePortal() throws SQLException {\n        when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL);\n        PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet, backendConnection);\n        Collection<DatabasePacket<?>> actual = closeExecutor.execute();\n        assertThat(actual.size(), is(1));\n        assertThat(actual.iterator().next(), is(instanceOf(PostgreSQLErrorResponsePacket.class)));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/close/PostgreSQLComCloseExecutorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"9094b20a512891fea7cc0f616231d94f3325431b","commitMessage":"@@@PostgreSQL Proxy support Portal (#10914)\n\n* Support portal for PostgreSQL Proxy\n\n* Support Close Portal for PostgreSQL\n\n* Enhance PostgreSQLComExecuteExecutor\n\n* Complete Portal implementation\n\n* Fix checkstyle\n\n* Fix test cases","date":"2021-06-23 20:27:01","modifiedFileCount":"14","status":"M","submitter":"???"}]
