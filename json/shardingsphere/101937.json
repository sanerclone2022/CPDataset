[{"authorTime":"2021-09-04 12:40:05","codes":[{"authorDate":"2021-09-04 12:40:05","commitOrder":1,"curCode":"    public static Collection<ShardingSphereRule> buildRules(final ShardingSphereRulesBuilderMaterials materials) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, SchemaRuleBuilder> entry : getRuleBuilderMap(materials).entrySet()) {\n            result.add(entry.getValue().build(materials, entry.getKey(), result));\n        }\n        return result;\n    }\n","date":"2021-09-04 12:40:05","endLine":63,"groupId":"1861","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRules","params":"(finalShardingSphereRulesBuilderMaterialsmaterials)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/67/af7cd265e5141ab22720f04bbc837a7de247bf.src","preCode":"    public static Collection<ShardingSphereRule> buildRules(final ShardingSphereRulesBuilderMaterials materials) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, SchemaRuleBuilder> entry : getRuleBuilderMap(materials).entrySet()) {\n            result.add(entry.getValue().build(materials, entry.getKey(), result));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/rule/builder/schema/SchemaRulesBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2021-09-04 12:40:05","commitOrder":1,"curCode":"    public static Collection<ShardingSphereRule> buildRules(final Collection<RuleConfiguration> globalRuleConfigs, final Map<String, ShardingSphereMetaData> mataDataMap) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, GlobalRuleBuilder> entry : getRuleBuilderMap(globalRuleConfigs).entrySet()) {\n            result.add(entry.getValue().build(entry.getKey(), mataDataMap));\n        }\n        return result;\n    }\n","date":"2021-09-04 12:40:05","endLine":60,"groupId":"1861","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"buildRules","params":"(finalCollection<RuleConfiguration>globalRuleConfigs@finalMap<String@ShardingSphereMetaData>mataDataMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/61/b8460e1887055be5cc88069d7a9751612cceb6.src","preCode":"    public static Collection<ShardingSphereRule> buildRules(final Collection<RuleConfiguration> globalRuleConfigs, final Map<String, ShardingSphereMetaData> mataDataMap) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, GlobalRuleBuilder> entry : getRuleBuilderMap(globalRuleConfigs).entrySet()) {\n            result.add(entry.getValue().build(entry.getKey(), mataDataMap));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/rule/builder/global/GlobalRulesBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"65d51b315dee944b907472138ea632afd9c5c96e","commitMessage":"@@@Split GlobalRulesBuilder and SchemaRulesBuilder (#12205)\n\n","date":"2021-09-04 12:40:05","modifiedFileCount":"28","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-09-04 12:40:05","codes":[{"authorDate":"2021-09-04 18:58:22","commitOrder":2,"curCode":"    public static Collection<ShardingSphereRule> buildRules(final SchemaRulesBuilderMaterials materials) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, SchemaRuleBuilder> entry : getRuleBuilderMap(materials).entrySet()) {\n            result.add(entry.getValue().build(materials, entry.getKey(), result));\n        }\n        return result;\n    }\n","date":"2021-09-04 18:58:22","endLine":62,"groupId":"101937","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"buildRules","params":"(finalSchemaRulesBuilderMaterialsmaterials)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/48/e25be38837443e1cfd734535681dbe3a84ee9d.src","preCode":"    public static Collection<ShardingSphereRule> buildRules(final ShardingSphereRulesBuilderMaterials materials) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, SchemaRuleBuilder> entry : getRuleBuilderMap(materials).entrySet()) {\n            result.add(entry.getValue().build(materials, entry.getKey(), result));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/rule/builder/schema/SchemaRulesBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2021-09-04 12:40:05","commitOrder":2,"curCode":"    public static Collection<ShardingSphereRule> buildRules(final Collection<RuleConfiguration> globalRuleConfigs, final Map<String, ShardingSphereMetaData> mataDataMap) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, GlobalRuleBuilder> entry : getRuleBuilderMap(globalRuleConfigs).entrySet()) {\n            result.add(entry.getValue().build(entry.getKey(), mataDataMap));\n        }\n        return result;\n    }\n","date":"2021-09-04 12:40:05","endLine":60,"groupId":"101937","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"buildRules","params":"(finalCollection<RuleConfiguration>globalRuleConfigs@finalMap<String@ShardingSphereMetaData>mataDataMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/61/b8460e1887055be5cc88069d7a9751612cceb6.src","preCode":"    public static Collection<ShardingSphereRule> buildRules(final Collection<RuleConfiguration> globalRuleConfigs, final Map<String, ShardingSphereMetaData> mataDataMap) {\n        Collection<ShardingSphereRule> result = new LinkedList<>();\n        for (Entry<RuleConfiguration, GlobalRuleBuilder> entry : getRuleBuilderMap(globalRuleConfigs).entrySet()) {\n            result.add(entry.getValue().build(entry.getKey(), mataDataMap));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/rule/builder/global/GlobalRulesBuilder.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"}],"commitId":"a8c655eaf51f230c724274dc0c1d6ba775c73d40","commitMessage":"@@@Add shardingsphere-single-table into kernel module (#12210)\n\n* Rename SchemaRulesBuilderMaterials\n\n* Add shardingsphere-single-table\n\n* Add shardingsphere-single-table\n\n* Revise javadoc\n\n* Move MetadataRefresher.findShardingSphereRulesByClass to ShardingSphereSchema\n\n* Add MutableDataNodeRule\n\n* Add SingleTableSchemaBuilderTest\n\n* Move single table rule\n\n* Move single table configuration\n\n* Revise java doc","date":"2021-09-04 18:58:22","modifiedFileCount":"54","status":"M","submitter":"Liang Zhang"}]
