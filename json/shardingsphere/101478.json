[{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":2,"curCode":"    public ASTNode visitTableFactor(final MySQLStatementParser.TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            MySQLSelectStatement subquery = (MySQLSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","date":"2020-10-22 20:53:42","endLine":1184,"groupId":"14560","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitTableFactor","params":"(finalMySQLStatementParser.TableFactorContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitTableFactor(final MySQLStatementParser.TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            MySQLSelectStatement subquery = (MySQLSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1166,"status":"B"},{"authorDate":"2020-10-22 16:47:44","commitOrder":2,"curCode":"    public ASTNode visitTableFactor(final TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            SQLServerSelectStatement subquery = (SQLServerSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","date":"2020-10-22 16:47:44","endLine":581,"groupId":"14560","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitTableFactor","params":"(finalTableFactorContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/54/efae3b1c34c073dd7620e0332712376daf7503.src","preCode":"    public ASTNode visitTableFactor(final TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            SQLServerSelectStatement subquery = (SQLServerSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerDMLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":563,"status":"NB"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 16:47:44","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":3,"curCode":"    public ASTNode visitTableFactor(final TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            MySQLSelectStatement subquery = (MySQLSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","date":"2020-11-16 12:59:49","endLine":1261,"groupId":"101478","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitTableFactor","params":"(finalTableFactorContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitTableFactor(final MySQLStatementParser.TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            MySQLSelectStatement subquery = (MySQLSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1243,"status":"M"},{"authorDate":"2020-10-22 16:47:44","commitOrder":3,"curCode":"    public ASTNode visitTableFactor(final TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            SQLServerSelectStatement subquery = (SQLServerSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","date":"2020-10-22 16:47:44","endLine":581,"groupId":"101478","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitTableFactor","params":"(finalTableFactorContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/54/efae3b1c34c073dd7620e0332712376daf7503.src","preCode":"    public ASTNode visitTableFactor(final TableFactorContext ctx) {\n        if (null != ctx.subquery()) {\n            SQLServerSelectStatement subquery = (SQLServerSelectStatement) visit(ctx.subquery());\n            SubquerySegment subquerySegment = new SubquerySegment(ctx.subquery().start.getStartIndex(), ctx.subquery().stop.getStopIndex(), subquery);\n            SubqueryTableSegment result = new SubqueryTableSegment(subquerySegment);\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableName()) {\n            SimpleTableSegment result = (SimpleTableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        return visit(ctx.tableReferences());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerDMLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":563,"status":"N"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"}]
