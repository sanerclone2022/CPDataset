[{"authorTime":"2020-09-27 11:35:50","codes":[{"authorDate":"2020-09-27 11:35:50","commitOrder":1,"curCode":"    public void assertSwitchToUsing() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(numberOfThreads, is(counter.get()));\n        assertThat(usingField.getBoolean(connectionStatus), is(true));\n    }\n","date":"2020-09-27 11:35:50","endLine":67,"groupId":"9570","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSwitchToUsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2a/cda4fdff4a9a648a29608bb23b65df6cd02131.src","preCode":"    public void assertSwitchToUsing() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(numberOfThreads, is(counter.get()));\n        assertThat(usingField.getBoolean(connectionStatus), is(true));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/ConnectionStatusTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2020-09-27 11:35:50","commitOrder":1,"curCode":"    public void assertSwitchToReleased() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                connectionStatus.switchToReleased();\n                counter.decrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(counter.get(), is(0));\n        assertThat(usingField.getBoolean(connectionStatus), is(false));\n    }\n","date":"2020-09-27 11:35:50","endLine":84,"groupId":"9571","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSwitchToReleased","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2a/cda4fdff4a9a648a29608bb23b65df6cd02131.src","preCode":"    public void assertSwitchToReleased() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                connectionStatus.switchToReleased();\n                counter.decrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(counter.get(), is(0));\n        assertThat(usingField.getBoolean(connectionStatus), is(false));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/ConnectionStatusTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"1c17c47d979c037d5e72962771348f492579438b","commitMessage":"@@@Add ConnectionStatus Test Case (#7615)\n\n","date":"2020-09-27 11:35:50","modifiedFileCount":"0","status":"B","submitter":"xbkaishui"},{"authorTime":"2021-07-27 13:27:26","codes":[{"authorDate":"2021-07-27 13:27:26","commitOrder":2,"curCode":"    public void assertSwitchToUsing() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(numberOfThreads, is(counter.get()));\n        assertTrue(usingField.getBoolean(connectionStatus));\n    }\n","date":"2021-07-27 13:27:26","endLine":69,"groupId":"10940","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertSwitchToUsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/78/cf064268729f250f7f3ae73b1e8bdbdaa163e2.src","preCode":"    public void assertSwitchToUsing() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(numberOfThreads, is(counter.get()));\n        assertThat(usingField.getBoolean(connectionStatus), is(true));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/ConnectionStatusTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-07-27 13:27:26","commitOrder":2,"curCode":"    public void assertSwitchToReleased() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                connectionStatus.switchToReleased();\n                counter.decrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(counter.get(), is(0));\n        assertFalse(usingField.getBoolean(connectionStatus));\n    }\n","date":"2021-07-27 13:27:26","endLine":86,"groupId":"10940","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertSwitchToReleased","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/78/cf064268729f250f7f3ae73b1e8bdbdaa163e2.src","preCode":"    public void assertSwitchToReleased() throws InterruptedException, IllegalAccessException {\n        AtomicInteger counter = new AtomicInteger();\n        for (int i = 0; i < numberOfThreads; i++) {\n            service.submit(() -> {\n                connectionStatus.switchToUsing();\n                counter.incrementAndGet();\n                connectionStatus.switchToReleased();\n                counter.decrementAndGet();\n                latch.countDown();\n            });\n        }\n        latch.await();\n        assertThat(counter.get(), is(0));\n        assertThat(usingField.getBoolean(connectionStatus), is(false));\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/ConnectionStatusTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"9a398fd85fea49169bfae411db0fc5080906a708","commitMessage":"@@@Use assertTrue to instead of assertThat(xxx.  is(true)) (#11528)\n\n","date":"2021-07-27 13:27:26","modifiedFileCount":"22","status":"M","submitter":"Liang Zhang"}]
