[{"authorTime":"2021-05-01 20:24:48","codes":[{"authorDate":"2020-06-13 19:59:43","commitOrder":3,"curCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return Collections.emptyList();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-13 19:59:43","endLine":71,"groupId":"3146","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseTableRulesConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/204d52f87e28aba123d089a684b4c36c2ce052.src","preCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return Collections.emptyList();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/rule/ShardingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"},{"authorDate":"2021-05-01 20:24:48","commitOrder":3,"curCode":"    private List<BeanDefinition> parseReadWriteSplittingDataSourceRuleConfigurations(final Element element) {\n        List<Element> dataSourceElements = DomUtils.getChildElementsByTagName(element, ReadWriteSplittingRuleBeanDefinitionTag.DATA_SOURCE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(dataSourceElements.size());\n        for (Element each : dataSourceElements) {\n            result.add(parseReadWriteSplittingDataSourceRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2021-05-01 20:24:48","endLine":58,"groupId":"3146","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseReadWriteSplittingDataSourceRuleConfigurations","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6e/985bd1470f9a15be5a35198cd2c2cc45b7c564.src","preCode":"    private List<BeanDefinition> parseReadWriteSplittingDataSourceRuleConfigurations(final Element element) {\n        List<Element> dataSourceElements = DomUtils.getChildElementsByTagName(element, ReadWriteSplittingRuleBeanDefinitionTag.DATA_SOURCE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(dataSourceElements.size());\n        for (Element each : dataSourceElements) {\n            result.add(parseReadWriteSplittingDataSourceRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-spring/shardingsphere-readwrite-splitting-spring-namespace/src/main/java/org/apache/shardingsphere/readwritesplitting/spring/namespace/parser/ReadWriteSplittingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"79e410bc4bdd18e0d50879c34137d674e3815e53","commitMessage":"@@@Rename module name from read-write-splitting to readwrite-splitting (#10235)\n\n","date":"2021-05-01 20:24:48","modifiedFileCount":"0","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-05-06 23:57:29","codes":[{"authorDate":"2020-06-13 19:59:43","commitOrder":4,"curCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return Collections.emptyList();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-13 19:59:43","endLine":71,"groupId":"10279","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseTableRulesConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/204d52f87e28aba123d089a684b4c36c2ce052.src","preCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return Collections.emptyList();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/rule/ShardingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2021-05-06 23:57:29","commitOrder":4,"curCode":"    private List<BeanDefinition> parseReadwriteSplittingDataSourceRuleConfigurations(final Element element) {\n        List<Element> dataSourceElements = DomUtils.getChildElementsByTagName(element, ReadwriteSplittingRuleBeanDefinitionTag.DATA_SOURCE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(dataSourceElements.size());\n        for (Element each : dataSourceElements) {\n            result.add(parseReadwriteSplittingDataSourceRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2021-05-06 23:57:29","endLine":58,"groupId":"10279","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseReadwriteSplittingDataSourceRuleConfigurations","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bd/f19e108592691ea921c58eab6276cc1a1af215.src","preCode":"    private List<BeanDefinition> parseReadWriteSplittingDataSourceRuleConfigurations(final Element element) {\n        List<Element> dataSourceElements = DomUtils.getChildElementsByTagName(element, ReadWriteSplittingRuleBeanDefinitionTag.DATA_SOURCE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(dataSourceElements.size());\n        for (Element each : dataSourceElements) {\n            result.add(parseReadWriteSplittingDataSourceRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-spring/shardingsphere-readwrite-splitting-spring-namespace/src/main/java/org/apache/shardingsphere/readwritesplitting/spring/namespace/parser/ReadwriteSplittingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"c0a66492b6656ca15aac8cd880350a91c1e45bb0","commitMessage":"@@@Rename ReadWrite to Readwrite (#10261)\n\n* Rename ReadWriteSplittingRule\n\n* Rename ReadwriteSplittingDataSourceRuleConfiguration\n\n* Rename ReadwriteSplittingSQLRouter\n\n* Rename ReadwriteSplittingDataSourceRouter\n\n* Rename ReadwriteSplittingRule\n\n* Rename ReadwriteSplittingDataSourceRule\n\n* Rename AlgorithmProvidedReadwriteSplittingRuleBuilder\n\n* Rename ReadwriteSplittingRuleBuilder\n\n* rename ReadwriteSplittingOrder\n\n* Rename AlgorithmProvidedReadwriteSplittingRuleConfiguration\n\n* Rename YamlReadwriteSplittingRuleConfiguration\n\n* Rename YamlReadwriteSplittingDataSourceRuleConfiguration\n\n* Rename AlterReadwriteSplittingRuleStatementConverter\n\n* Rename CreateReadwriteSplittingRuleStatementConverter\n\n* Rename ReadwriteSplittingRuleAlgorithmProviderConfigurationYamlSwapper\n\n* Rename ReadwriteSplittingRuleConfigurationYamlSwapper\n\n* Rename ReadwriteSplittingAlgorithmProvidedBeanRegistry\n\n* Rename ReadwriteSplittingSpringBootCondition\n\n* Rename YamlReadwriteSplittingRuleSpringBootConfiguration\n\n* Rename ReadwriteSplittingRuleSpringbootConfiguration\n\n* Rename ReadwriteSplittingSpringBootStarterTest\n\n* Rename YamlGovernanceReadwriteSplittingIntegrateTest\n\n* Rename CreateReadwriteSplittingRuleStatement\n\n* Rename ReadwriteSplittingRuleSegment\n\n* Rename GovernanceSpringBootRegistryReadwriteSplittingTest\n\n* Rename AlterReadwriteSplittingRuleStatement\n\n* Rename ReadwriteSplittingRuleConfigurationChecker\n\n* Rename LocalShardingReadwriteSplittingConfiguration\n\n* Rename ReadwriteSplittingRuleNotExistedException\n\n* Rename ReadwriteSplittingRuleCreateExistsException\n\n* Rename AddReadwriteSplittingRuleDataSourcesExistedException\n\n* Rename ReadwriteSplittingRuleDataSourcesNotExistedException\n\n* Rename ReadwriteSplittingRuleQueryBackendHandler\n\n* Rename DropReadwriteSplittingRuleBackendHandler\n\n* Rename GovernanceSpringBootReadwriteSplittingTest\n\n* Rename AlterReadwriteSplittingRuleBackendHandler\n\n* Rename CreateReadwriteSplittingRuleBackendHandler\n\n* Rename GovernanceShardingReadwriteSplittingNamespaceTest\n\n* Rename YamlGovernanceShardingWithReadwriteSplittingIntegrateTest\n\n* Rename CloudReadwriteSplittingConfiguration\n\n* Rename ShardingReadwriteSplittingConfigurationPrecise\n\n* Rename AbstractShardingSphereDataSourceForReadwriteSplittingTest\n\n* Rename AlgorithmProvidedReadwriteSplittingRuleConfigurationChecker\n\n* Rename ReadwriteSplittingSpringNamespaceTest\n\n* Rename ReadwriteSplittingRuleBeanDefinitionTag\n\n* Rename AbstractReadwriteSplittingRuleConfigurationChecker\n\n* Rename ReadwriteSplittingNamespaceHandler\n\n* Rename ReadwriteSplittingRuleBeanDefinitionParser\n\n* Rename ReadWrite to Readwrite with java class\n\n* Rename ReadWrite to Readwrite with docs","date":"2021-05-06 23:57:29","modifiedFileCount":"20","status":"M","submitter":"Liang Zhang"}]
