[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitDataType(final OracleStatementParser.DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":504,"groupId":"12694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitDataType","params":"(finalOracleStatementParser.DataTypeContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/57ffeacf154844f0a67f662de75ac1ba20bb29.src","preCode":"    public final ASTNode visitDataType(final OracleStatementParser.DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitDataType(final DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":498,"groupId":"12694","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDataType","params":"(finalDataTypeContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/9a1bb22eb18753b494aa2ff27c231d6d10b250.src","preCode":"    public final ASTNode visitDataType(final DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92StatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":2,"curCode":"    public final ASTNode visitDataType(final DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":497,"groupId":"101575","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitDataType","params":"(finalDataTypeContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/17/728b18b55a0356a237268be5af45cbe0f4629d.src","preCode":"    public final ASTNode visitDataType(final OracleStatementParser.DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"M"},{"authorDate":"2020-10-22 20:53:42","commitOrder":2,"curCode":"    public final ASTNode visitDataType(final DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":498,"groupId":"101575","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitDataType","params":"(finalDataTypeContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/9a1bb22eb18753b494aa2ff27c231d6d10b250.src","preCode":"    public final ASTNode visitDataType(final DataTypeContext ctx) {\n        DataTypeSegment result = new DataTypeSegment();\n        result.setDataTypeName(((KeywordValue) visit(ctx.dataTypeName())).getValue());\n        result.setStartIndex(ctx.start.getStartIndex());\n        result.setStopIndex(ctx.stop.getStopIndex());\n        if (null != ctx.dataTypeLength()) {\n            DataTypeLengthSegment dataTypeLengthSegment = (DataTypeLengthSegment) visit(ctx.dataTypeLength());\n            result.setDataLength(dataTypeLengthSegment);\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92StatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"N"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"}]
