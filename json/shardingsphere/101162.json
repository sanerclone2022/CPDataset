[{"authorTime":"2020-05-16 19:36:14","codes":[{"authorDate":"2020-05-16 19:36:14","commitOrder":1,"curCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            int[] columnIndexes = {1, 2};\n            Boolean result = statement.execute(SELECT_SQL, columnIndexes);\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","date":"2020-05-16 19:36:14","endLine":126,"groupId":"11117","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSelectWithExecuteWithProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1a/42afae1ed0f7e90977d42ebd4425b0f1ea4a4f.src","preCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            int[] columnIndexes = {1, 2};\n            Boolean result = statement.execute(SELECT_SQL, columnIndexes);\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"},{"authorDate":"2020-05-16 19:36:14","commitOrder":1,"curCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (PreparedStatement statement = getEncryptConnection().prepareStatement(SELECT_ALL_SQL, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            Boolean result = statement.execute();\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","date":"2020-05-16 19:36:14","endLine":170,"groupId":"11117","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSelectWithExecuteWithProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f3/f46d5385a650d5d3bc5a9bd69aade4786aed3b.src","preCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (PreparedStatement statement = getEncryptConnection().prepareStatement(SELECT_ALL_SQL, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            Boolean result = statement.execute();\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"}],"commitId":"468e4540f107bacea98e9785b7312b2e5bad0c7e","commitMessage":"@@@Rename sharding-jdbc to shardingsphere-jdbc (#5641)\n\n* Rename sharding-jdbc to shardingsphere-jdbc\n\n* rename org.apache.shardingsphere.shardingjdbc to org.apache.shardingsphere.driver\n\n* rename org.apache.shardingsphere.shardingjdbc to org.apache.shardingsphere.driver","date":"2020-05-16 19:36:14","modifiedFileCount":"32","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-07-23 08:02:58","codes":[{"authorDate":"2020-07-23 08:02:58","commitOrder":2,"curCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            int[] columnIndexes = {1, 2};\n            boolean result = statement.execute(SELECT_SQL, columnIndexes);\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","date":"2020-07-23 08:02:58","endLine":126,"groupId":"101162","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSelectWithExecuteWithProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/01/1f3434fd28b4bd15b02790adaed411b2c8e307.src","preCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            int[] columnIndexes = {1, 2};\n            Boolean result = statement.execute(SELECT_SQL, columnIndexes);\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-07-23 08:02:58","commitOrder":2,"curCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (PreparedStatement statement = getEncryptConnection().prepareStatement(SELECT_ALL_SQL, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            boolean result = statement.execute();\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","date":"2020-07-23 08:02:58","endLine":170,"groupId":"101162","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSelectWithExecuteWithProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/86/764935d30443429c23ec2ffd6e6c33023dba82.src","preCode":"    public void assertSelectWithExecuteWithProperties() throws SQLException {\n        try (PreparedStatement statement = getEncryptConnection().prepareStatement(SELECT_ALL_SQL, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT)) {\n            Boolean result = statement.execute();\n            assertTrue(result);\n            assertThat(statement.getResultSetType(), is(ResultSet.TYPE_FORWARD_ONLY));\n            assertThat(statement.getResultSetConcurrency(), is(ResultSet.CONCUR_READ_ONLY));\n            assertThat(statement.getResultSetHoldability(), is(ResultSet.HOLD_CURSORS_OVER_COMMIT));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"6b69fa1b79e36135634e9728a8a342401d14c1cc","commitMessage":"@@@Merge pull request #6407 from terrymanu/dev\n\nClean up codes","date":"2020-07-23 08:02:58","modifiedFileCount":"75","status":"M","submitter":"Haoran Meng"}]
