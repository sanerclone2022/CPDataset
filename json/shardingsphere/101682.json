[{"authorTime":"2020-12-11 11:20:06","codes":[{"authorDate":"2021-06-12 22:13:10","commitOrder":2,"curCode":"    public void assertParseTreeCacheLoader() {\n        SQLParserExecutor sqlParserExecutor = mock(SQLParserExecutor.class, Mockito.RETURNS_DEEP_STUBS);\n        ParseTreeCacheLoader loader = new ParseTreeCacheLoader(\"MySQL\");\n        Field sqlParserExecutorField = loader.getClass().getDeclaredField(\"sqlParserExecutor\");\n        sqlParserExecutorField.setAccessible(true);\n        sqlParserExecutorField.set(loader, sqlParserExecutor);\n        assertThat(loader.load(SQL), isA(ParseTree.class));\n    }\n","date":"2021-06-12 22:13:10","endLine":45,"groupId":"9582","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseTreeCacheLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d0/4c46492ecd04e4601f65ef3b13df85df7caae7.src","preCode":"    public void assertParseTreeCacheLoader() {\n        SQLParserExecutor sqlParserExecutor = mock(SQLParserExecutor.class, Mockito.RETURNS_DEEP_STUBS);\n        ParseTreeCacheLoader loader = new ParseTreeCacheLoader(\"MySQL\");\n        Field sqlParserExecutorField = loader.getClass().getDeclaredField(\"sqlParserExecutor\");\n        sqlParserExecutorField.setAccessible(true);\n        sqlParserExecutorField.set(loader, sqlParserExecutor);\n        assertThat(loader.load(SQL), isA(ParseTree.class));\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/core/database/cache/ParseTreeCacheLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2020-12-11 11:20:06","commitOrder":2,"curCode":"    public void assertSQLStatementCacheLoad() {\n        SQLStatementCacheLoader sqlStatementCacheLoader = new SQLStatementCacheLoader(\"MySQL\");\n        Field sqlStatementParserExecutorField = sqlStatementCacheLoader.getClass().getDeclaredField(\"sqlStatementParserExecutor\");\n        SQLStatementParserExecutor executor = mock(SQLStatementParserExecutor.class, Mockito.RETURNS_DEEP_STUBS);\n        sqlStatementParserExecutorField.setAccessible(true);\n        sqlStatementParserExecutorField.set(sqlStatementCacheLoader, executor);\n        assertThat(sqlStatementCacheLoader.load(SQL), isA(SQLStatement.class));\n        sqlStatementParserExecutorField.setAccessible(false);\n    }\n","date":"2020-12-11 11:20:06","endLine":46,"groupId":"8643","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSQLStatementCacheLoad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/46/9ff86cd062354a381862dee21dab7a75de143a.src","preCode":"    public void assertSQLStatementCacheLoad() {\n        SQLStatementCacheLoader sqlStatementCacheLoader = new SQLStatementCacheLoader(\"MySQL\");\n        Field sqlStatementParserExecutorField = sqlStatementCacheLoader.getClass().getDeclaredField(\"sqlStatementParserExecutor\");\n        SQLStatementParserExecutor executor = mock(SQLStatementParserExecutor.class, Mockito.RETURNS_DEEP_STUBS);\n        sqlStatementParserExecutorField.setAccessible(true);\n        sqlStatementParserExecutorField.set(sqlStatementCacheLoader, executor);\n        assertThat(sqlStatementCacheLoader.load(SQL), isA(SQLStatement.class));\n        sqlStatementParserExecutorField.setAccessible(false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-parser/src/test/java/org/apache/shardingsphere/infra/parser/cache/SQLStatementCacheLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"NB"}],"commitId":"63da4010442883c410a6a943b3edfbab7d66a4a7","commitMessage":"@@@Polish sql parser package (#10795)\n\n","date":"2021-06-12 22:13:10","modifiedFileCount":"12","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 21:31:26","codes":[{"authorDate":"2021-07-27 21:31:26","commitOrder":3,"curCode":"    public void assertParseTreeCacheLoader() throws NoSuchFieldException, IllegalAccessException {\n        SQLParserExecutor sqlParserExecutor = mock(SQLParserExecutor.class, RETURNS_DEEP_STUBS);\n        ParseTreeCacheLoader loader = new ParseTreeCacheLoader(\"MySQL\");\n        Field sqlParserExecutorField = loader.getClass().getDeclaredField(\"sqlParserExecutor\");\n        sqlParserExecutorField.setAccessible(true);\n        sqlParserExecutorField.set(loader, sqlParserExecutor);\n        assertThat(loader.load(SQL), isA(ParseTree.class));\n    }\n","date":"2021-07-27 21:31:26","endLine":43,"groupId":"9582","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseTreeCacheLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/c452b2468e1a56a3d119ad999c42de1e6008d6.src","preCode":"    public void assertParseTreeCacheLoader() {\n        SQLParserExecutor sqlParserExecutor = mock(SQLParserExecutor.class, Mockito.RETURNS_DEEP_STUBS);\n        ParseTreeCacheLoader loader = new ParseTreeCacheLoader(\"MySQL\");\n        Field sqlParserExecutorField = loader.getClass().getDeclaredField(\"sqlParserExecutor\");\n        sqlParserExecutorField.setAccessible(true);\n        sqlParserExecutorField.set(loader, sqlParserExecutor);\n        assertThat(loader.load(SQL), isA(ParseTree.class));\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/core/database/cache/ParseTreeCacheLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2021-07-27 21:31:26","commitOrder":3,"curCode":"    public void assertSQLStatementCacheLoad() {\n        SQLStatementCacheLoader sqlStatementCacheLoader = new SQLStatementCacheLoader(\"MySQL\");\n        Field sqlStatementParserExecutorField = sqlStatementCacheLoader.getClass().getDeclaredField(\"sqlStatementParserExecutor\");\n        SQLStatementParserExecutor executor = mock(SQLStatementParserExecutor.class, RETURNS_DEEP_STUBS);\n        sqlStatementParserExecutorField.setAccessible(true);\n        sqlStatementParserExecutorField.set(sqlStatementCacheLoader, executor);\n        assertThat(sqlStatementCacheLoader.load(SQL), isA(SQLStatement.class));\n        sqlStatementParserExecutorField.setAccessible(false);\n    }\n","date":"2021-07-27 21:31:26","endLine":46,"groupId":"8643","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSQLStatementCacheLoad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a5/a01019ec8c39b4d3a6289053d085935132f6a6.src","preCode":"    public void assertSQLStatementCacheLoad() {\n        SQLStatementCacheLoader sqlStatementCacheLoader = new SQLStatementCacheLoader(\"MySQL\");\n        Field sqlStatementParserExecutorField = sqlStatementCacheLoader.getClass().getDeclaredField(\"sqlStatementParserExecutor\");\n        SQLStatementParserExecutor executor = mock(SQLStatementParserExecutor.class, Mockito.RETURNS_DEEP_STUBS);\n        sqlStatementParserExecutorField.setAccessible(true);\n        sqlStatementParserExecutorField.set(sqlStatementCacheLoader, executor);\n        assertThat(sqlStatementCacheLoader.load(SQL), isA(SQLStatement.class));\n        sqlStatementParserExecutorField.setAccessible(false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-parser/src/test/java/org/apache/shardingsphere/infra/parser/cache/SQLStatementCacheLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"d951f5f407d900fcd69bf73848b08e45091bbe05","commitMessage":"@@@Use static import with Mockito (#11543)\n\n","date":"2021-07-27 21:31:26","modifiedFileCount":"6","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-16 19:04:46","codes":[{"authorDate":"2021-09-16 19:04:46","commitOrder":4,"curCode":"    public void assertParseTreeCacheLoader() throws NoSuchFieldException, IllegalAccessException {\n        SQLParserExecutor sqlParserExecutor = mock(SQLParserExecutor.class, RETURNS_DEEP_STUBS);\n        ParseTreeCacheLoader loader = new ParseTreeCacheLoader(\"MySQL\", false);\n        Field sqlParserExecutorField = loader.getClass().getDeclaredField(\"sqlParserExecutor\");\n        sqlParserExecutorField.setAccessible(true);\n        sqlParserExecutorField.set(loader, sqlParserExecutor);\n        assertThat(loader.load(SQL), isA(ParseContext.class));\n    }\n","date":"2021-09-16 19:04:46","endLine":43,"groupId":"101682","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertParseTreeCacheLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/38/f45f7fe3917a8bd5b868fe8d811c46a0e90a9b.src","preCode":"    public void assertParseTreeCacheLoader() throws NoSuchFieldException, IllegalAccessException {\n        SQLParserExecutor sqlParserExecutor = mock(SQLParserExecutor.class, RETURNS_DEEP_STUBS);\n        ParseTreeCacheLoader loader = new ParseTreeCacheLoader(\"MySQL\");\n        Field sqlParserExecutorField = loader.getClass().getDeclaredField(\"sqlParserExecutor\");\n        sqlParserExecutorField.setAccessible(true);\n        sqlParserExecutorField.set(loader, sqlParserExecutor);\n        assertThat(loader.load(SQL), isA(ParseTree.class));\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/core/database/cache/ParseTreeCacheLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2021-09-16 19:04:46","commitOrder":4,"curCode":"    public void assertSQLStatementCacheLoad() {\n        SQLStatementCacheLoader sqlStatementCacheLoader = new SQLStatementCacheLoader(\"MySQL\", false);\n        Field sqlStatementParserExecutorField = sqlStatementCacheLoader.getClass().getDeclaredField(\"sqlStatementParserExecutor\");\n        SQLStatementParserExecutor executor = mock(SQLStatementParserExecutor.class, RETURNS_DEEP_STUBS);\n        sqlStatementParserExecutorField.setAccessible(true);\n        sqlStatementParserExecutorField.set(sqlStatementCacheLoader, executor);\n        assertThat(sqlStatementCacheLoader.load(SQL), isA(SQLStatement.class));\n        sqlStatementParserExecutorField.setAccessible(false);\n    }\n","date":"2021-09-16 19:04:46","endLine":46,"groupId":"101682","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertSQLStatementCacheLoad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b4/6cec8dda4140bd13c64e44d3fd9c6064dd6600.src","preCode":"    public void assertSQLStatementCacheLoad() {\n        SQLStatementCacheLoader sqlStatementCacheLoader = new SQLStatementCacheLoader(\"MySQL\");\n        Field sqlStatementParserExecutorField = sqlStatementCacheLoader.getClass().getDeclaredField(\"sqlStatementParserExecutor\");\n        SQLStatementParserExecutor executor = mock(SQLStatementParserExecutor.class, RETURNS_DEEP_STUBS);\n        sqlStatementParserExecutorField.setAccessible(true);\n        sqlStatementParserExecutorField.set(sqlStatementCacheLoader, executor);\n        assertThat(sqlStatementCacheLoader.load(SQL), isA(SQLStatement.class));\n        sqlStatementParserExecutorField.setAccessible(false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-parser/src/test/java/org/apache/shardingsphere/infra/parser/cache/SQLStatementCacheLoaderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"ac7987451dd9e7fbde62c5add0224ba740bb20c9","commitMessage":"@@@Support sql annotation analysis (#12280)\n\n* Sql comments parse.\n\n* Add test case.\n\n* Add empty line.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* Add switch for sql comment parsing.\n\n* fix properties error.\n\n* fix properties error.\n\n* Revert \"fix properties error.\"\n\nThis reverts commit 2b50a4ef\n\n* Revert \"fix properties error.\"\n\nThis reverts commit 2ca3ca86\n\n* Revert \"Add switch for sql comment parsing.\"\n\nThis reverts commit 70ed1039\n\n* add switch for sql comment parse\n\n* add switch for sql comment parse\n\n* add switch for sql comment parse\n\n* add switch for sql comment parse\n\n* fix review suggestions\n\n* fix review suggestions","date":"2021-09-16 19:04:46","modifiedFileCount":"57","status":"M","submitter":"tuichenchuxin"}]
