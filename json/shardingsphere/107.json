[{"authorTime":"2021-01-06 16:11:47","codes":[{"authorDate":"2021-01-06 16:11:47","commitOrder":1,"curCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        JDBCExecutorCallbackAdviceTest.tracer = (MockTracer) fieldReader.read();\n        executeMethod = JDBCExecutorCallback.class.getDeclaredMethod(\"execute\", JDBCExecutionUnit.class, boolean.class, Map.class);\n    }\n","date":"2021-01-06 16:11:47","endLine":63,"groupId":"7151","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/17/139439b52b2635dad91bd44bc58b2dacec31b5.src","preCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        JDBCExecutorCallbackAdviceTest.tracer = (MockTracer) fieldReader.read();\n        executeMethod = JDBCExecutorCallback.class.getDeclaredMethod(\"execute\", JDBCExecutionUnit.class, boolean.class, Map.class);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/JDBCExecutorCallbackAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2021-01-06 16:11:47","commitOrder":1,"curCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        tracer = (MockTracer) fieldReader.read();\n        executeCommandMethod = CommandExecutorTask.class.getDeclaredMethod(\"executeCommand\", ChannelHandlerContext.class, PacketPayload.class, BackendConnection.class);\n    }\n","date":"2021-01-06 16:11:47","endLine":60,"groupId":"7151","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c4/fd85a4b44aeb1fcafce32312ece645d88f62b0.src","preCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        tracer = (MockTracer) fieldReader.read();\n        executeCommandMethod = CommandExecutorTask.class.getDeclaredMethod(\"executeCommand\", ChannelHandlerContext.class, PacketPayload.class, BackendConnection.class);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"190d66495ea798024b782d96fe4ca71a9d007797","commitMessage":"@@@add agent tracing test (#8910)\n\n","date":"2021-01-06 16:11:47","modifiedFileCount":"7","status":"B","submitter":"xiaoyu"},{"authorTime":"2021-01-06 16:11:47","codes":[{"authorDate":"2021-01-14 23:42:28","commitOrder":2,"curCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        tracer = (MockTracer) fieldReader.read();\n        executeMethod = JDBCExecutorCallback.class.getDeclaredMethod(\"execute\", JDBCExecutionUnit.class, boolean.class, Map.class);\n    }\n","date":"2021-01-14 23:42:28","endLine":64,"groupId":"107","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/14/4d61c47ef8c60f6d38419b952ac7c38d9c3920.src","preCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        JDBCExecutorCallbackAdviceTest.tracer = (MockTracer) fieldReader.read();\n        executeMethod = JDBCExecutorCallback.class.getDeclaredMethod(\"execute\", JDBCExecutionUnit.class, boolean.class, Map.class);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/JDBCExecutorCallbackAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-01-06 16:11:47","commitOrder":2,"curCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        tracer = (MockTracer) fieldReader.read();\n        executeCommandMethod = CommandExecutorTask.class.getDeclaredMethod(\"executeCommand\", ChannelHandlerContext.class, PacketPayload.class, BackendConnection.class);\n    }\n","date":"2021-01-06 16:11:47","endLine":60,"groupId":"107","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c4/fd85a4b44aeb1fcafce32312ece645d88f62b0.src","preCode":"    public static void setup() {\n        if (!GlobalTracer.isRegistered()) {\n            GlobalTracer.register(new MockTracer());\n        }\n        FieldReader fieldReader = new FieldReader(GlobalTracer.get(), GlobalTracer.class.getDeclaredField(\"tracer\"));\n        tracer = (MockTracer) fieldReader.read();\n        executeCommandMethod = CommandExecutorTask.class.getDeclaredMethod(\"executeCommand\", ChannelHandlerContext.class, PacketPayload.class, BackendConnection.class);\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"2e6c1ff962e05376950fc22cc516f7f3e23457e1","commitMessage":"@@@Refactor for code format (#9037)\n\n* Update code-conduct\n\n* For code format","date":"2021-01-14 23:42:28","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"}]
