[{"authorTime":"2021-02-08 23:22:42","codes":[{"authorDate":"2021-06-05 21:57:24","commitOrder":3,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/db-discovery-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootRuleConfigurations rootRuleConfigs = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class);\n        assertThat(rootRuleConfigs.getRules().size(), is(1));\n        assertHARule((YamlDatabaseDiscoveryRuleConfiguration) rootRuleConfigs.getRules().iterator().next());\n    }\n","date":"2021-06-05 21:57:24","endLine":63,"groupId":"11616","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ea/106f7bc076a326320a68b94b294f0c2522ef92.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/db-discovery-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootRuleConfigurations rootRuleConfigs = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class);\n        assertThat(rootRuleConfigs.getRules().size(), is(1));\n        assertHARule((YamlDatabaseDiscoveryRuleConfiguration) rootRuleConfigs.getRules().iterator().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlRootRuleConfigurationsForYamlDatabaseDiscoveryRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2021-02-08 23:22:42","commitOrder":3,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","date":"2021-02-08 23:22:42","endLine":66,"groupId":"10164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/b58881cf3abd83b2055b9dbfd0c764a15043cd.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"}],"commitId":"a62db753229d2d9d86f255f4ce4b600b2d4b898a","commitMessage":"@@@Merge db-discovery module (#10670)\n\n* Rename common package\n\n* Update pom\n\n* Merge db-discovery module","date":"2021-06-05 21:57:24","modifiedFileCount":"6","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-02-08 23:22:42","codes":[{"authorDate":"2021-08-14 13:32:42","commitOrder":4,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/db-discovery-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootConfiguration rootConfig = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class);\n        assertThat(rootConfig.getRules().size(), is(1));\n        assertDatabaseDiscoveryRule((YamlDatabaseDiscoveryRuleConfiguration) rootConfig.getRules().iterator().next());\n    }\n","date":"2021-08-14 13:32:42","endLine":63,"groupId":"11616","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8d/5b75aab451cc892dd2d8c6d9f03de704c8c0ea.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/db-discovery-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootRuleConfigurations rootRuleConfigs = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootRuleConfigurations.class);\n        assertThat(rootRuleConfigs.getRules().size(), is(1));\n        assertHARule((YamlDatabaseDiscoveryRuleConfiguration) rootRuleConfigs.getRules().iterator().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlRootRuleConfigurationsForYamlDatabaseDiscoveryRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-02-08 23:22:42","commitOrder":4,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","date":"2021-02-08 23:22:42","endLine":66,"groupId":"10164","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/b58881cf3abd83b2055b9dbfd0c764a15043cd.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"d3d70a09e37e922c9284aa7739cca41be654d0a2","commitMessage":"@@@Rename YamlRootRuleConfigurations to YamlRootConfiguration (#11815)\n\n* Rename YamlRootRuleConfigurations to YamlRootConfiguration\n\n* For checkstyle","date":"2021-08-14 13:32:42","modifiedFileCount":"17","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-02 22:47:56","codes":[{"authorDate":"2021-08-14 13:32:42","commitOrder":5,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/db-discovery-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootConfiguration rootConfig = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class);\n        assertThat(rootConfig.getRules().size(), is(1));\n        assertDatabaseDiscoveryRule((YamlDatabaseDiscoveryRuleConfiguration) rootConfig.getRules().iterator().next());\n    }\n","date":"2021-08-14 13:32:42","endLine":63,"groupId":"10611","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8d/5b75aab451cc892dd2d8c6d9f03de704c8c0ea.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/db-discovery-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRootConfiguration rootConfig = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRootConfiguration.class);\n        assertThat(rootConfig.getRules().size(), is(1));\n        assertDatabaseDiscoveryRule((YamlDatabaseDiscoveryRuleConfiguration) rootConfig.getRules().iterator().next());\n    }\n","realPath":"shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-core/src/test/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlRootRuleConfigurationsForYamlDatabaseDiscoveryRuleConfigurationTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2021-09-02 22:47:56","commitOrder":5,"curCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(System.lineSeparator());\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","date":"2021-09-02 22:47:56","endLine":62,"groupId":"10611","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertUnmarshalWithYamlBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/60/6a0f827ff21a55bb349b76f51f1cf498665d10.src","preCode":"    public void assertUnmarshalWithYamlBytes() throws IOException {\n        URL url = getClass().getClassLoader().getResource(\"yaml/fixture-rule.yaml\");\n        assertNotNull(url);\n        StringBuilder yamlContent = new StringBuilder();\n        try (\n                FileReader fileReader = new FileReader(url.getFile());\n                BufferedReader reader = new BufferedReader(fileReader)) {\n            String line;\n            while (null != (line = reader.readLine())) {\n                yamlContent.append(line).append(\"\\n\");\n            }\n        }\n        YamlRuleConfigurationFixture actual = YamlEngine.unmarshal(yamlContent.toString().getBytes(), YamlRuleConfigurationFixture.class);\n        assertThat(actual.getName(), is(\"test\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/YamlEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"1f7f8205e2bdc59b0067185662104ca2b33c1f0a","commitMessage":"@@@Fix the separator problem under window. (#12161)\n\n* Fixed #12157.\n\n* Get system separator for yaml conversion.\n\n* Fixes test case.\n\n* Load config form YAML.\n\n* Add new line.\n\n* Load config from YAML.\n\n* Fix code style.","date":"2021-09-02 22:47:56","modifiedFileCount":"9","status":"M","submitter":"Guocheng Tang"}]
