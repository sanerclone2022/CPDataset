[{"authorTime":"2020-05-16 19:36:14","codes":[{"authorDate":"2020-05-16 19:36:14","commitOrder":1,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, runtimeContext, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-05-16 19:36:14","endLine":110,"groupId":"12355","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/95d263dc08100db6a697781a23a7960d6ccfb6.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, runtimeContext, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2020-05-16 19:36:14","commitOrder":1,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, runtimeContext, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-05-16 19:36:14","endLine":121,"groupId":"12355","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/95d263dc08100db6a697781a23a7960d6ccfb6.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, runtimeContext, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"468e4540f107bacea98e9785b7312b2e5bad0c7e","commitMessage":"@@@Rename sharding-jdbc to shardingsphere-jdbc (#5641)\n\n* Rename sharding-jdbc to shardingsphere-jdbc\n\n* rename org.apache.shardingsphere.shardingjdbc to org.apache.shardingsphere.driver\n\n* rename org.apache.shardingsphere.shardingjdbc to org.apache.shardingsphere.driver","date":"2020-05-16 19:36:14","modifiedFileCount":"32","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-05-19 16:48:33","codes":[{"authorDate":"2020-05-19 16:48:33","commitOrder":2,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-05-19 16:48:33","endLine":119,"groupId":"12355","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/f610071b65b78f240e6a08cfece7365c0cbf59.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, runtimeContext, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2020-05-19 16:48:33","commitOrder":2,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-05-19 16:48:33","endLine":130,"groupId":"12355","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/f610071b65b78f240e6a08cfece7365c0cbf59.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, runtimeContext, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"a2b81549f5c64bf7313ffc8d6d18cc5389683228","commitMessage":"@@@Delete RuntimeContext (#5686)\n\n","date":"2020-05-19 16:48:33","modifiedFileCount":"47","status":"M","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-07-22 22:00:41","codes":[{"authorDate":"2020-07-22 22:00:41","commitOrder":3,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-07-22 22:00:41","endLine":121,"groupId":"12355","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/6992f7be8896c65367c269de7e048a01dd5e35.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-07-22 22:00:41","commitOrder":3,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-07-22 22:00:41","endLine":132,"groupId":"12355","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1b/6992f7be8896c65367c269de7e048a01dd5e35.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"28ab21fef0767a62081c34c67e1c729837079e6d","commitMessage":"@@@Fix codes for checkstyle (#6403)\n\n* Remove redundant suppression\n\n* Make field as final as possible","date":"2020-07-22 22:00:41","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-08-30 13:52:37","codes":[{"authorDate":"2020-08-30 13:52:37","commitOrder":4,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-08-30 13:52:37","endLine":126,"groupId":"12355","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/75f5b823cb6ec6bdc359e1b1696d1b59430e6f.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2020-08-30 13:52:37","commitOrder":4,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-08-30 13:52:37","endLine":137,"groupId":"12355","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/75f5b823cb6ec6bdc359e1b1696d1b59430e6f.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"5b0d98cb697d4b02fbab09716a55b434244a33e6","commitMessage":"@@@Remove transaction dependency for kernel module (#7145)\n\n* Add DataSourceChangeCompletedEvent\n\n* Add TransactionManagerEngineContexts\n\n* Use TransactionManagerEngineContexts\n\n* Rename TransactionContexts\n\n* Use TransactionContexts\n\n* Remove transaction dependency for kernel module\n\n* Add transaction dependency for orche schema module","date":"2020-08-30 13:52:37","modifiedFileCount":"34","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-09-30 19:31:28","codes":[{"authorDate":"2020-09-30 19:31:28","commitOrder":5,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-09-30 19:31:28","endLine":121,"groupId":"12355","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/75/51a26a4017f421a8c256735450c20a7290ebbd.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-09-30 19:31:28","commitOrder":5,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-09-30 19:31:28","endLine":132,"groupId":"12355","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/75/51a26a4017f421a8c256735450c20a7290ebbd.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getINVOCATIONS().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"6ee78a691571d47f7397818229c4e58b14f3302b","commitMessage":"@@@Use ShardingSphereSchema.name instead of SchemaContext.name (#7674)\n\n* Add ShardingSphereSchema.name\n\n* Use ShardingSphereSchema.name instead of SchemaContext.name\n\n* Use RETURNS_DEEP_STUBS ti simply mock\n\n* Use RETURNS_DEEP_STUBS ti simply mock\n\n* Use RETURNS_DEEP_STUBS ti simply mock\n\n* Use RETURNS_DEEP_STUBS ti simply mock\n\n* Use RETURNS_DEEP_STUBS ti simply mock\n\n* Remove SchemaContext.name\n\n* Remove SchemaContext.name\n\n* Add javadoc","date":"2020-09-30 19:31:28","modifiedFileCount":"27","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-09 20:30:31","codes":[{"authorDate":"2020-11-09 20:30:31","commitOrder":6,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, metaDataContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-11-09 20:30:31","endLine":121,"groupId":"12355","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cd/920df65b6adc325c087d08c26586cf3a4d07ab.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-11-09 20:30:31","commitOrder":6,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, metaDataContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2020-11-09 20:30:31","endLine":132,"groupId":"12355","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cd/920df65b6adc325c087d08c26586cf3a4d07ab.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, schemaContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"a6b2375ce66834335447254a0309cba2b3f71510","commitMessage":"@@@Rename MetaDataContexts (#8101)\n\n* Rename MetaDataContexts\n\n* Rename package name","date":"2020-11-09 20:30:31","modifiedFileCount":"92","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-09 16:45:36","codes":[{"authorDate":"2021-08-09 16:45:36","commitOrder":7,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, metaDataContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2021-08-09 16:45:36","endLine":122,"groupId":"12355","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1e/f25eeeb9052a8975895286d6f16adb7cb546dc.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, metaDataContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2021-08-09 16:45:36","commitOrder":7,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, metaDataContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2021-08-09 16:45:36","endLine":133,"groupId":"12355","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1e/f25eeeb9052a8975895286d6f16adb7cb546dc.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(dataSourceMap, metaDataContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"222aeb59cc07d5eb3edc858c68b9d95cc903bcec","commitMessage":"@@@JDBC-core module delete getDefaultMetaData() (#11714)\n\n* jdbc-core module delete getDefaultMetaData()\n\n* update\n\n* optimization","date":"2021-08-09 16:45:36","modifiedFileCount":"22","status":"M","submitter":"zhaojinchao"},{"authorTime":"2021-08-15 02:33:31","codes":[{"authorDate":"2021-08-15 02:33:31","commitOrder":8,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, contextManager, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2021-08-15 02:33:31","endLine":129,"groupId":"12355","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/74/41723e42e8537303499e90d7b18efef192dbc4.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, metaDataContexts, transactionContexts, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2021-08-15 02:33:31","commitOrder":8,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, contextManager, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2021-08-15 02:33:31","endLine":143,"groupId":"12355","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/74/41723e42e8537303499e90d7b18efef192dbc4.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, metaDataContexts, transactionContexts, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"d6e424ba68c64ea1835a42b0f4b0fb7f69c95323","commitMessage":"@@@Add ContextManager (#11822)\n\n* Add ContextManager\n\n* Use ContextManager on GovernanceShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereConnection\n\n* Use ContextManager on ShardingSphereConnection\n\n* Refactor AbstractBaseExecutorTest\n\n* Use ContextManager on proxy\n\n* Fix test case","date":"2021-08-15 02:33:31","modifiedFileCount":"118","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-29 11:55:51","codes":[{"authorDate":"2021-08-29 11:55:51","commitOrder":9,"curCode":"    public void assertXATransactionOperation() throws SQLException {\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, contextManager, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingSphereTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingSphereTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingSphereTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2021-08-29 11:55:51","endLine":129,"groupId":"101172","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"assertXATransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/afb743405741f515f8bbc55132f4d7e9d40d47.src","preCode":"    public void assertXATransactionOperation() throws SQLException {\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, contextManager, TransactionType.XA);\n        connection.setAutoCommit(false);\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(XAShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2021-08-29 11:55:51","commitOrder":9,"curCode":"    public void assertBASETransactionOperation() throws SQLException {\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, contextManager, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingSphereTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingSphereTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingSphereTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","date":"2021-08-29 11:55:51","endLine":143,"groupId":"101172","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"assertBASETransactionOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0d/afb743405741f515f8bbc55132f4d7e9d40d47.src","preCode":"    public void assertBASETransactionOperation() throws SQLException {\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        connection = new ShardingSphereConnection(connection.getSchemaName(), dataSourceMap, contextManager, TransactionType.BASE);\n        connection.setAutoCommit(false);\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.BEGIN));\n        connection.commit();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.COMMIT));\n        connection.rollback();\n        assertTrue(BASEShardingTransactionManagerFixture.getInvocations().contains(TransactionOperationType.ROLLBACK));\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ShardingSphereConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"d19a34f471034ad6f640477ee180752c9b37dfe8","commitMessage":"@@@Unify class name of transaction module (#12084)\n\n* Rename ShardingSphereTransactionManagerEngine\n\n* Unify class name of transaction module","date":"2021-08-29 11:55:51","modifiedFileCount":"26","status":"M","submitter":"Liang Zhang"}]
