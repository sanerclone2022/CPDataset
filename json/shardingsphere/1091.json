[{"authorTime":"2021-06-05 16:48:03","codes":[{"authorDate":"2021-06-05 16:48:03","commitOrder":1,"curCode":"    private SQLToken generateSQLTokenForQueryWithCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), getEncryptedValues(encryptCondition, originalValues));\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","date":"2021-06-05 16:48:03","endLine":90,"groupId":"8411","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateSQLTokenForQueryWithCipherColumn","params":"(finalEncryptConditionencryptCondition@finalList<Object>originalValues@finalintstartIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9d/98c502f7137df852d515c9b21a4f34d83bcaf9.src","preCode":"    private SQLToken generateSQLTokenForQueryWithCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), getEncryptedValues(encryptCondition, originalValues));\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2021-06-05 16:48:03","commitOrder":1,"curCode":"    private SQLToken generateSQLTokenForQueryWithoutCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), originalValues);\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","date":"2021-06-05 16:48:03","endLine":106,"groupId":"11597","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"generateSQLTokenForQueryWithoutCipherColumn","params":"(finalEncryptConditionencryptCondition@finalList<Object>originalValues@finalintstartIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9d/98c502f7137df852d515c9b21a4f34d83bcaf9.src","preCode":"    private SQLToken generateSQLTokenForQueryWithoutCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), originalValues);\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"78da9d03eb0ae28c28d4d8f4f45f84303a69986e","commitMessage":"@@@Merge encrypt feature to core module (#10667)\n\n* Merge encrypt feature to core module\n\n* Merge encrypt feature to core module\n\n* Merge encrypt feature to core module","date":"2021-06-05 16:48:03","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-06-05 16:48:03","codes":[{"authorDate":"2021-09-15 16:43:12","commitOrder":2,"curCode":"    private SQLToken generateSQLTokenForQueryWithCipherColumn(final String schemaName, final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), getEncryptedValues(schemaName, encryptCondition, originalValues));\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","date":"2021-09-15 16:43:12","endLine":91,"groupId":"1091","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"generateSQLTokenForQueryWithCipherColumn","params":"(finalStringschemaName@finalEncryptConditionencryptCondition@finalList<Object>originalValues@finalintstartIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2e/a422e0fa6a5df1bdc07aa2878b1f50dd5da0c9.src","preCode":"    private SQLToken generateSQLTokenForQueryWithCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), getEncryptedValues(encryptCondition, originalValues));\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-06-05 16:48:03","commitOrder":2,"curCode":"    private SQLToken generateSQLTokenForQueryWithoutCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), originalValues);\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","date":"2021-06-05 16:48:03","endLine":106,"groupId":"1091","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"generateSQLTokenForQueryWithoutCipherColumn","params":"(finalEncryptConditionencryptCondition@finalList<Object>originalValues@finalintstartIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9d/98c502f7137df852d515c9b21a4f34d83bcaf9.src","preCode":"    private SQLToken generateSQLTokenForQueryWithoutCipherColumn(final EncryptCondition encryptCondition, final List<Object> originalValues, final int startIndex) {\n        int stopIndex = encryptCondition.getStopIndex();\n        Map<Integer, Object> indexValues = getPositionValues(encryptCondition.getPositionValueMap().keySet(), originalValues);\n        Collection<Integer> parameterMarkerIndexes = encryptCondition.getPositionIndexMap().keySet();\n        return encryptCondition instanceof EncryptInCondition\n                ? new EncryptPredicateInRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes)\n                : new EncryptPredicateEqualRightValueToken(startIndex, stopIndex, indexValues, parameterMarkerIndexes);\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"}],"commitId":"619b0a53d69772fe1035482275430e1baa9d7743","commitMessage":"@@@using SchemaAvailable & EncryptPropertiesBuilder to pass schema. owner. table. column value into EncryptAlgorithm (#12372)\n\n* modify .gitignore to ignore .factorypath\n\n* using SchemaAvailable & EncryptPropertiesBuilder to pass schema. owner. table. column value into EncryptAlgorithm\n\n* fix testcase of EncryptAlgorithmMetaDataTest\n\n* refactor on process multiple tables\n\n* revert on process multiple tables\n\n* revert changes on EncryptProjectionTokenGenerator\n\n* remove unused imports\n\n* fix bug: properties override while set props in findEncryptor\n\n* fix bug: properties override while set props in findEncryptor\n\n* remove unused imports\n\n* fix bug: properties override while set props in findEncryptor\n\n* revoke pass schemaName on ddl statement\n\n* using simplify new properties to set schema.  owner.  table and column\n\n* fix to match develop rule\n\n* change method name to simpilify\n\n* implements schemaAvailable from DMLStatementContext\n\n* performance improvement and rat fix\n\n* revert schemaName on create and alter table statement\n\n* remove unused import","date":"2021-09-15 16:43:12","modifiedFileCount":"29","status":"M","submitter":"cheese8"}]
