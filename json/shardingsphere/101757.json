[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schemaMetaData, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schemaMetaData)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2020-10-11 18:46:54","endLine":259,"groupId":"3067","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/12/ce54ea1f85f20f5b259d36e44743b7bf8c1511.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schemaMetaData, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schemaMetaData)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schemaMetaData, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schemaMetaData)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2020-10-11 18:46:54","endLine":301,"groupId":"3067","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/12/ce54ea1f85f20f5b259d36e44743b7bf8c1511.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schemaMetaData, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schemaMetaData)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-11-09 17:01:30","codes":[{"authorDate":"2020-11-09 17:01:30","commitOrder":2,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2020-11-09 17:01:30","endLine":253,"groupId":"3067","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b0/ab9e2735bce622234417122ec0f9f481c9a525.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schemaMetaData, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schemaMetaData)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2020-11-09 17:01:30","commitOrder":2,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2020-11-09 17:01:30","endLine":295,"groupId":"3067","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b0/ab9e2735bce622234417122ec0f9f481c9a525.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schemaMetaData, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schemaMetaData)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"09281f69a6dd01c12dd73dcc6675397062498f90","commitMessage":"@@@Rename PhysicalSchemaMetaData to ShardingSphereSchema (#8094)\n\n* Rename PhysicalSchemaMetaData to ShardingSphereSchema\n\n* Fix checkstyle","date":"2020-11-09 17:01:30","modifiedFileCount":"153","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-01-08 15:49:04","codes":[{"authorDate":"2021-01-08 15:49:04","commitOrder":3,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-01-08 15:49:04","endLine":253,"groupId":"3067","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/22/6a5b62963f3174d69b8c825ddd3947b188eec0.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2021-01-08 15:49:04","commitOrder":3,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-01-08 15:49:04","endLine":295,"groupId":"3067","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/22/6a5b62963f3174d69b8c825ddd3947b188eec0.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"aded799e8e61c7b2eefa330e431f2a59dfe0dbbb","commitMessage":"@@@Fixes #8896 (#8950)\n\n* Refactor TableExtractor\n\n* Fix #8896\n\n* Add javadoc","date":"2021-01-08 15:49:04","modifiedFileCount":"7","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-06-02 17:05:09","codes":[{"authorDate":"2021-06-02 17:05:09","commitOrder":4,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-06-02 17:05:09","endLine":256,"groupId":"3067","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ba/ddbe2bf429d513212f46351b3b959aee425f3c.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2021-06-02 17:05:09","commitOrder":4,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-06-02 17:05:09","endLine":298,"groupId":"3067","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ba/ddbe2bf429d513212f46351b3b959aee425f3c.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList(), 0), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"5e4b14e4feefa5ab01167cfa1408092c1d437055","commitMessage":"@@@fix select with group by rewrite error (#10620)\n\n* fix select order by rewrite error\n\n* support oracle.  sqlserver & sql92\n\n* add sql parse test\n\n* add rewrite test case","date":"2021-06-02 17:05:09","modifiedFileCount":"31","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-07-02 20:44:49","codes":[{"authorDate":"2021-07-02 20:44:49","commitOrder":5,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-07-02 20:44:49","endLine":268,"groupId":"3067","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fd/1e157897eeb1f66d4805cadcd874c9fd4fe96d.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2021-07-02 20:44:49","commitOrder":5,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-07-02 20:44:49","endLine":310,"groupId":"3067","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fd/1e157897eeb1f66d4805cadcd874c9fd4fe96d.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = new SelectStatementContext(schema, new LinkedList<>(), selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"}],"commitId":"bfb784c9a0e47fd147c8a654c2f0b2a1e86c2c27","commitMessage":"@@@extract SchemaAvailable interface & add validate for SelectStatement (#11091)\n\n* refactor SchemaAvailable interface & add validate for SelectStatement\n\n* add final for InsertStatementContext field\n\n* fix test case error\n\n* fix rewrite test case error\n\n* refactor context new instance method\n\n* optimize test case\n\n* fix test case\n\n* optimize logic\n\n* fix test case\n\n* fix checkstyle","date":"2021-07-02 20:44:49","modifiedFileCount":"44","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":6,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-07-05 14:48:43","endLine":269,"groupId":"3067","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/91/dcf51fd8a2a4240f1151f8f90479e36a53675a.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":6,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-07-05 14:48:43","endLine":311,"groupId":"3067","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/91/dcf51fd8a2a4240f1151f8f90479e36a53675a.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(0, 0, new IdentifierValue(\"name\")));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-08-16 10:17:11","codes":[{"authorDate":"2021-08-16 10:17:11","commitOrder":7,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-08-16 10:17:11","endLine":273,"groupId":"3067","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/33/e3e2b53f663784b4ddec21e6aa5e5a10ec196a.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"},{"authorDate":"2021-08-16 10:17:11","commitOrder":7,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-08-16 10:17:11","endLine":315,"groupId":"3067","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/33/e3e2b53f663784b4ddec21e6aa5e5a10ec196a.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"}],"commitId":"5c7afb08d738709e3cc1ebf4636ff27131a11b35","commitMessage":"@@@reduce the call of TableExtractor in SelectStatementContext (#11833)\n\n","date":"2021-08-16 10:17:11","modifiedFileCount":"7","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-08-24 14:50:51","codes":[{"authorDate":"2021-08-24 14:50:51","commitOrder":8,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema, selectStatementContext.getDatabaseType())\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-08-24 14:50:51","endLine":273,"groupId":"3067","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/d56216e990aaef846ff15e734eb23f391aa98c.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"},{"authorDate":"2021-08-24 14:50:51","commitOrder":8,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema, selectStatementContext.getDatabaseType())\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-08-24 14:50:51","endLine":315,"groupId":"3067","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/d56216e990aaef846ff15e734eb23f391aa98c.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema)\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"}],"commitId":"ed71fb20f3fce018a38da050a9a6f68b9df16229","commitMessage":"@@@fix mysql & pg aggregation function set index error (#11971)\n\n* fix mysql & pg aggregation function set index error\n\n* add integrate test case\n\n* fix checkstyle\n\n* optimze code\n\n* fix test case\n\n* remove useless logic\n\n* remove useless logic\n\n* fix checkstyle\n\n* fix typo","date":"2021-08-24 14:50:51","modifiedFileCount":"11","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-09-05 14:15:46","codes":[{"authorDate":"2021-09-05 14:15:46","commitOrder":9,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        ProjectionsContext actual = new ProjectionsContextEngine(schema, selectStatementContext.getDatabaseType())\n                .createProjectionsContext(selectStatement.getFrom(), projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-09-05 14:15:46","endLine":267,"groupId":"101757","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/426640c4bd054f8254a4cb7dd0a4d1b28a4ba8.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema, selectStatementContext.getDatabaseType())\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2021-09-05 14:15:46","commitOrder":9,"curCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        ProjectionsContext actual = new ProjectionsContextEngine(schema, selectStatementContext.getDatabaseType())\n                .createProjectionsContext(selectStatement.getFrom(), projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","date":"2021-09-05 14:15:46","endLine":308,"groupId":"101757","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9e/426640c4bd054f8254a4cb7dd0a4d1b28a4ba8.src","preCode":"    private void assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent(final SelectStatement selectStatement) {\n        ProjectionsSegment projectionsSegment = new ProjectionsSegment(0, 0);\n        selectStatement.setProjections(projectionsSegment);\n        selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"name\"))));\n        ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0, 10);\n        OwnerSegment owner = new OwnerSegment(0, 10, new IdentifierValue(\"name\"));\n        shorthandProjectionSegment.setOwner(owner);\n        projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment));\n        OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0, 0, new IdentifierValue(\"name\")), OrderDirection.ASC));\n        OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem), true);\n        SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement);\n        Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables();\n        ProjectionsContext actual = new ProjectionsContextEngine(schema, selectStatementContext.getDatabaseType())\n                .createProjectionsContext(tables, projectionsSegment, new GroupByContext(Collections.emptyList()), orderByContext);\n        assertNotNull(actual);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionsContextEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"499fc0b734066b1a65a5a28d460fa7d7bc764bf6","commitMessage":"@@@fix oracle pagination wrong result (#12199)\n\n* fix oracle pagination wrong result\n\n* optimize logic\n\n* optimize logic","date":"2021-09-05 14:15:46","modifiedFileCount":"13","status":"M","submitter":"Zhengqiang Duan"}]
