[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexNotExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(false);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","date":"2021-06-04 22:49:49","endLine":65,"groupId":"1900","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertPreValidateCreateIndexWhenTableExistIndexNotExistForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/09ce998acaf609441d1f0b6862c1ab1b6a36d6.src","preCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexNotExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(false);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateIndexStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(true);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","date":"2021-06-04 22:49:49","endLine":90,"groupId":"1900","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertPreValidateCreateIndexWhenTableExistIndexExistForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/09ce998acaf609441d1f0b6862c1ab1b6a36d6.src","preCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(true);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateIndexStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexNotExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(false);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","date":"2021-07-05 14:48:43","endLine":67,"groupId":"10492","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertPreValidateCreateIndexWhenTableExistIndexNotExistForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/52ffed15f1f8645e37593ee24f4b8383c6fd59.src","preCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexNotExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(false);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateIndexStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(true);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","date":"2021-07-05 14:48:43","endLine":90,"groupId":"10492","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertPreValidateCreateIndexWhenTableExistIndexExistForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/52ffed15f1f8645e37593ee24f4b8383c6fd59.src","preCode":"    public void assertPreValidateCreateIndexWhenTableExistIndexExistForPostgreSQL() {\n        PostgreSQLCreateIndexStatement sqlStatement = new PostgreSQLCreateIndexStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setIndex(new IndexSegment(0, 0, new IdentifierValue(\"t_order_index\")));\n        when(schema.containsTable(\"t_order\")).thenReturn(true);\n        TableMetaData tableMetaData = mock(TableMetaData.class);\n        when(schema.get(\"t_order\")).thenReturn(tableMetaData);\n        Map<String, IndexMetaData> indexes = mock(HashMap.class);\n        when(tableMetaData.getIndexes()).thenReturn(indexes);\n        when(indexes.containsKey(\"t_order_index\")).thenReturn(true);\n        new ShardingCreateIndexStatementValidator().preValidate(shardingRule, new CreateIndexStatementContext(sqlStatement), Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateIndexStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"}]
