[{"authorTime":"2021-06-05 16:48:03","codes":[{"authorDate":"2021-06-05 16:48:03","commitOrder":1,"curCode":"    public void assertFindEncryptorByTableNameAndColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.of(\"t_order\"));\n        when(encryptRule.findEncryptor(\"t_order\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","date":"2021-06-05 16:48:03","endLine":91,"groupId":"6594","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFindEncryptorByTableNameAndColumnName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/38/5fb1fb00d6f37647b624ee1e74bcd86db232ea.src","preCode":"    public void assertFindEncryptorByTableNameAndColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.of(\"t_order\"));\n        when(encryptRule.findEncryptor(\"t_order\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptAlgorithmMetaDataTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2021-06-05 16:48:03","commitOrder":1,"curCode":"    public void assertFindEncryptorByColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.empty());\n        when(tablesContext.getTableNames()).thenReturn(Arrays.asList(\"t_user\", \"t_user_item\", \"t_order_item\"));\n        when(encryptRule.findEncryptor(\"t_order_item\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","date":"2021-06-05 16:48:03","endLine":102,"groupId":"6594","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFindEncryptorByColumnName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/38/5fb1fb00d6f37647b624ee1e74bcd86db232ea.src","preCode":"    public void assertFindEncryptorByColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.empty());\n        when(tablesContext.getTableNames()).thenReturn(Arrays.asList(\"t_user\", \"t_user_item\", \"t_order_item\"));\n        when(encryptRule.findEncryptor(\"t_order_item\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptAlgorithmMetaDataTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"78da9d03eb0ae28c28d4d8f4f45f84303a69986e","commitMessage":"@@@Merge encrypt feature to core module (#10667)\n\n* Merge encrypt feature to core module\n\n* Merge encrypt feature to core module\n\n* Merge encrypt feature to core module","date":"2021-06-05 16:48:03","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-09-15 16:43:12","codes":[{"authorDate":"2021-09-15 16:43:12","commitOrder":2,"curCode":"    public void assertFindEncryptorByTableNameAndColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.of(\"t_order\"));\n        when(encryptRule.findEncryptor(null, \"t_order\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","date":"2021-09-15 16:43:12","endLine":91,"groupId":"1052","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertFindEncryptorByTableNameAndColumnName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8b/41925ff07a3ffb89534fd48d047745a0d1900d.src","preCode":"    public void assertFindEncryptorByTableNameAndColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.of(\"t_order\"));\n        when(encryptRule.findEncryptor(\"t_order\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptAlgorithmMetaDataTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-09-15 16:43:12","commitOrder":2,"curCode":"    public void assertFindEncryptorByColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.empty());\n        when(tablesContext.getTableNames()).thenReturn(Arrays.asList(\"t_user\", \"t_user_item\", \"t_order_item\"));\n        when(encryptRule.findEncryptor(null, \"t_order_item\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","date":"2021-09-15 16:43:12","endLine":102,"groupId":"1052","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertFindEncryptorByColumnName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8b/41925ff07a3ffb89534fd48d047745a0d1900d.src","preCode":"    public void assertFindEncryptorByColumnName() {\n        when(tablesContext.findTableName(columnProjection, schema)).thenReturn(Optional.empty());\n        when(tablesContext.getTableNames()).thenReturn(Arrays.asList(\"t_user\", \"t_user_item\", \"t_order_item\"));\n        when(encryptRule.findEncryptor(\"t_order_item\", \"id\")).thenReturn(Optional.of(encryptAlgorithm));\n        EncryptAlgorithmMetaData encryptAlgorithmMetaData = new EncryptAlgorithmMetaData(schema, encryptRule, selectStatementContext);\n        Optional<EncryptAlgorithm> actualEncryptor = encryptAlgorithmMetaData.findEncryptor(1);\n        assertTrue(actualEncryptor.isPresent());\n        assertThat(actualEncryptor.get().getType(), is(\"MD5\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptAlgorithmMetaDataTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"619b0a53d69772fe1035482275430e1baa9d7743","commitMessage":"@@@using SchemaAvailable & EncryptPropertiesBuilder to pass schema. owner. table. column value into EncryptAlgorithm (#12372)\n\n* modify .gitignore to ignore .factorypath\n\n* using SchemaAvailable & EncryptPropertiesBuilder to pass schema. owner. table. column value into EncryptAlgorithm\n\n* fix testcase of EncryptAlgorithmMetaDataTest\n\n* refactor on process multiple tables\n\n* revert on process multiple tables\n\n* revert changes on EncryptProjectionTokenGenerator\n\n* remove unused imports\n\n* fix bug: properties override while set props in findEncryptor\n\n* fix bug: properties override while set props in findEncryptor\n\n* remove unused imports\n\n* fix bug: properties override while set props in findEncryptor\n\n* revoke pass schemaName on ddl statement\n\n* using simplify new properties to set schema.  owner.  table and column\n\n* fix to match develop rule\n\n* change method name to simpilify\n\n* implements schemaAvailable from DMLStatementContext\n\n* performance improvement and rat fix\n\n* revert schemaName on create and alter table statement\n\n* remove unused import","date":"2021-09-15 16:43:12","modifiedFileCount":"29","status":"M","submitter":"cheese8"}]
