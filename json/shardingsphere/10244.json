[{"authorTime":"2021-07-07 16:22:14","codes":[{"authorDate":"2021-07-13 22:18:08","commitOrder":2,"curCode":"    public static void main(String[] args) {\n        POSTGRESQL_PARSER_STATEMENT_LIST.forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"PostgreSQL\");\n            ParseTree tree = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"PostgreSQL\", \"STATEMENT\", new Properties());\n            PostgreSQLStatement sqlStatement = visitorEngine.visit(tree);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","date":"2021-07-13 22:18:08","endLine":60,"groupId":"1258","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5b/32333e031e3b385c3c8a9a5d283234a0ad2dfd.src","preCode":"    public static void main(String[] args) {\n        POSTGRESQL_PARSER_STATEMENT_LIST.forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"PostgreSQL\");\n            ParseTree tree = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"PostgreSQL\", \"STATEMENT\", new Properties());\n            PostgreSQLStatement sqlStatement = visitorEngine.visit(tree);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","realPath":"examples/shardingsphere-parser-example/src/main/java/org/apache/shardingsphere/example/parser/postgresql/statement/PostgreSQLParserStatementExample.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2021-07-07 16:22:14","commitOrder":2,"curCode":"    public static void main(String[] args) {\n        MYSQL_PARSER_STATEMENT_LIST.stream().forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"MySQL\");\n            ParseTree tree = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"MySQL\", \"STATEMENT\", new Properties());\n            MySQLStatement sqlStatement = visitorEngine.visit(tree);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","date":"2021-07-07 16:22:14","endLine":62,"groupId":"1258","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7e/d6dba705fea2381650d5c454f344578446c6c0.src","preCode":"    public static void main(String[] args) {\n        MYSQL_PARSER_STATEMENT_LIST.stream().forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"MySQL\");\n            ParseTree tree = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"MySQL\", \"STATEMENT\", new Properties());\n            MySQLStatement sqlStatement = visitorEngine.visit(tree);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","realPath":"examples/shardingsphere-parser-example/src/main/java/org/apache/shardingsphere/example/parser/mysql/statement/MySQLParserStatementExample.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"NB"}],"commitId":"a58c75a8e6b3e1a461b18ed36121668a8c3abe5e","commitMessage":"@@@add postgreSQL statement parser example (#11295)\n\nCo-authored-by: guoqing.yang <guoqing.yang@advance.ai>","date":"2021-07-13 22:18:08","modifiedFileCount":"0","status":"M","submitter":"TyrealBM"},{"authorTime":"2021-09-16 19:04:46","codes":[{"authorDate":"2021-09-16 19:04:46","commitOrder":3,"curCode":"    public static void main(String[] args) {\n        POSTGRESQL_PARSER_STATEMENT_LIST.forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"PostgreSQL\", false);\n            ParseContext parseContext = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"PostgreSQL\", \"STATEMENT\", new Properties());\n            PostgreSQLStatement sqlStatement = visitorEngine.visit(parseContext);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","date":"2021-09-16 19:04:46","endLine":60,"groupId":"10244","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/72/6f7c49392a570d5b75d5022ebfac285a36af05.src","preCode":"    public static void main(String[] args) {\n        POSTGRESQL_PARSER_STATEMENT_LIST.forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"PostgreSQL\");\n            ParseTree tree = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"PostgreSQL\", \"STATEMENT\", new Properties());\n            PostgreSQLStatement sqlStatement = visitorEngine.visit(tree);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","realPath":"examples/shardingsphere-parser-example/src/main/java/org/apache/shardingsphere/example/parser/postgresql/statement/PostgreSQLParserStatementExample.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-09-16 19:04:46","commitOrder":3,"curCode":"    public static void main(String[] args) {\n        MYSQL_PARSER_STATEMENT_LIST.stream().forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"MySQL\", false);\n            ParseContext parseContext = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"MySQL\", \"STATEMENT\", new Properties());\n            MySQLStatement sqlStatement = visitorEngine.visit(parseContext);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","date":"2021-09-16 19:04:46","endLine":62,"groupId":"10244","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/18/415f516bec8663e1ccce7f6d96002f648a16b5.src","preCode":"    public static void main(String[] args) {\n        MYSQL_PARSER_STATEMENT_LIST.stream().forEach(sql -> {\n            SQLParserEngine parserEngine = new SQLParserEngine(\"MySQL\");\n            ParseTree tree = parserEngine.parse(sql, false);\n            SQLVisitorEngine visitorEngine = new SQLVisitorEngine(\"MySQL\", \"STATEMENT\", new Properties());\n            MySQLStatement sqlStatement = visitorEngine.visit(tree);\n            System.out.println(sqlStatement.toString());\n        });\n    }\n","realPath":"examples/shardingsphere-parser-example/src/main/java/org/apache/shardingsphere/example/parser/mysql/statement/MySQLParserStatementExample.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"ac7987451dd9e7fbde62c5add0224ba740bb20c9","commitMessage":"@@@Support sql annotation analysis (#12280)\n\n* Sql comments parse.\n\n* Add test case.\n\n* Add empty line.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* fix review suggestion.\n\n* Add switch for sql comment parsing.\n\n* fix properties error.\n\n* fix properties error.\n\n* Revert \"fix properties error.\"\n\nThis reverts commit 2b50a4ef\n\n* Revert \"fix properties error.\"\n\nThis reverts commit 2ca3ca86\n\n* Revert \"Add switch for sql comment parsing.\"\n\nThis reverts commit 70ed1039\n\n* add switch for sql comment parse\n\n* add switch for sql comment parse\n\n* add switch for sql comment parse\n\n* add switch for sql comment parse\n\n* fix review suggestions\n\n* fix review suggestions","date":"2021-09-16 19:04:46","modifiedFileCount":"57","status":"M","submitter":"tuichenchuxin"}]
