[{"authorTime":"2020-11-18 09:45:31","codes":[{"authorDate":"2020-11-18 09:45:31","commitOrder":3,"curCode":"    public ASTNode visitSelectWithInto(final SelectWithIntoContext ctx) {\n        if (null != ctx.selectWithInto()) {\n            return visit(ctx.selectWithInto());\n        }\n        MySQLSelectStatement result = (MySQLSelectStatement) visit(ctx.queryExpression());\n        if (null != ctx.lockClauseList()) {\n            result.setLock((LockSegment) visit(ctx.lockClauseList()));\n        }\n        return result;\n    }\n","date":"2020-11-18 09:45:31","endLine":584,"groupId":"8979","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitSelectWithInto","params":"(finalSelectWithIntoContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/84/c0cc37dcd82c584fa07712c584e6785d4e48e6.src","preCode":"    public ASTNode visitSelectWithInto(final SelectWithIntoContext ctx) {\n        if (null != ctx.selectWithInto()) {\n            return visit(ctx.selectWithInto());\n        }\n        MySQLSelectStatement result = (MySQLSelectStatement) visit(ctx.queryExpression());\n        if (null != ctx.lockClauseList()) {\n            result.setLock((LockSegment) visit(ctx.lockClauseList()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"B"},{"authorDate":"2020-11-18 09:45:31","commitOrder":3,"curCode":"    public ASTNode visitSelect(final SelectContext ctx) {\n        \r\n        MySQLSelectStatement result;\n        if (null != ctx.queryExpression()) {\n            result = (MySQLSelectStatement) visit(ctx.queryExpression());\n            if (null != ctx.lockClauseList()) {\n                result.setLock((LockSegment) visit(ctx.lockClauseList()));\n            }\n        } else if (null != ctx.selectWithInto()) {\n            result = (MySQLSelectStatement) visit(ctx.selectWithInto());\n        } else {\n            result = (MySQLSelectStatement) visit(ctx.getChild(0));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-11-18 09:45:31","endLine":1099,"groupId":"9810","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitSelect","params":"(finalSelectContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/84/c0cc37dcd82c584fa07712c584e6785d4e48e6.src","preCode":"    public ASTNode visitSelect(final SelectContext ctx) {\n        \r\n        MySQLSelectStatement result;\n        if (null != ctx.queryExpression()) {\n            result = (MySQLSelectStatement) visit(ctx.queryExpression());\n            if (null != ctx.lockClauseList()) {\n                result.setLock((LockSegment) visit(ctx.lockClauseList()));\n            }\n        } else if (null != ctx.selectWithInto()) {\n            result = (MySQLSelectStatement) visit(ctx.selectWithInto());\n        } else {\n            result = (MySQLSelectStatement) visit(ctx.getChild(0));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1084,"status":"MB"}],"commitId":"87f9a5ce9f3878483b110811b5f24b0c67fe0dd9","commitMessage":"@@@Fix problem about delete multi table .  select into and select lock statement. (#8160)\n\n* Fix parse problem in delete multi table statement and select into statement (#7978)\n  * Added missing logic for selectWithInto when visit select.\n  * Added test cases for select-into statements; case 'select_into_out_file_with_fields_and_escaped'\n    and 'select_into_with_lock_before_into' are supported in MySQL 8.0 but not in MySQL 5.7.\n  * Table names should split with COMMA_ ('. ') in multipleTablesClause.\n  * Added test cases for delete multi table statements.\n\n* Replace multipleTableNames with tableAliasRefList (#7978)\n  * Use name tableAliasRefList like MySQL source code do.  and delete unused multipleTableNames\n\n* Support of table for select lock statement in MySQL (#7978)\n  * Fix definition of lockClause\n  * Add test cases for select lock statement\n  * Add assertLockClause for SelectStatementTestCase\n  * For table rewriting.  change definition of LockSegment and add extractTablesFromLock in TableExtractor\n\n* Support table assert for DeleteStatementTestCase (#7978)\n\n* Add missing test case for Oracle and PostgreSQL. And fix problem when parsing select for update statement in Oracle. (#7978)\n\n* Format code.  remove extra black lines. (#7978)\n\n* Format code.  add new line at end of file.\n\n* Rename ofTables to tables in LockSegment.  and initialize it directly in the class.","date":"2020-11-18 09:45:31","modifiedFileCount":"8","status":"M","submitter":"Albert Li"},{"authorTime":"2020-12-24 00:26:44","codes":[{"authorDate":"2020-11-18 09:45:31","commitOrder":4,"curCode":"    public ASTNode visitSelectWithInto(final SelectWithIntoContext ctx) {\n        if (null != ctx.selectWithInto()) {\n            return visit(ctx.selectWithInto());\n        }\n        MySQLSelectStatement result = (MySQLSelectStatement) visit(ctx.queryExpression());\n        if (null != ctx.lockClauseList()) {\n            result.setLock((LockSegment) visit(ctx.lockClauseList()));\n        }\n        return result;\n    }\n","date":"2020-11-18 09:45:31","endLine":584,"groupId":"101373","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitSelectWithInto","params":"(finalSelectWithIntoContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/84/c0cc37dcd82c584fa07712c584e6785d4e48e6.src","preCode":"    public ASTNode visitSelectWithInto(final SelectWithIntoContext ctx) {\n        if (null != ctx.selectWithInto()) {\n            return visit(ctx.selectWithInto());\n        }\n        MySQLSelectStatement result = (MySQLSelectStatement) visit(ctx.queryExpression());\n        if (null != ctx.lockClauseList()) {\n            result.setLock((LockSegment) visit(ctx.lockClauseList()));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"N"},{"authorDate":"2020-12-24 00:26:44","commitOrder":4,"curCode":"    public ASTNode visitSelect(final SelectContext ctx) {\n        \r\n        MySQLSelectStatement result;\n        if (null != ctx.queryExpression()) {\n            result = (MySQLSelectStatement) visit(ctx.queryExpression());\n            if (null != ctx.lockClauseList()) {\n                result.setLock((LockSegment) visit(ctx.lockClauseList()));\n            }\n        } else if (null != ctx.selectWithInto()) {\n            result = (MySQLSelectStatement) visit(ctx.selectWithInto());\n        } else {\n            result = (MySQLSelectStatement) visit(ctx.getChild(0));\n        }\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","date":"2020-12-24 00:26:44","endLine":1151,"groupId":"101373","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitSelect","params":"(finalSelectContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e2/b2a499c30d408203074c056c50c8e15fe2c4f6.src","preCode":"    public ASTNode visitSelect(final SelectContext ctx) {\n        \r\n        MySQLSelectStatement result;\n        if (null != ctx.queryExpression()) {\n            result = (MySQLSelectStatement) visit(ctx.queryExpression());\n            if (null != ctx.lockClauseList()) {\n                result.setLock((LockSegment) visit(ctx.lockClauseList()));\n            }\n        } else if (null != ctx.selectWithInto()) {\n            result = (MySQLSelectStatement) visit(ctx.selectWithInto());\n        } else {\n            result = (MySQLSelectStatement) visit(ctx.getChild(0));\n        }\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":1136,"status":"M"}],"commitId":"ab45b9dba391d6bd904ff8da6b596f1d1299a241","commitMessage":"@@@Refactor for code format (#8743)\n\n* Refactor MySQLSQLStatVisitor\n\n* For code format","date":"2020-12-24 00:26:44","modifiedFileCount":"15","status":"M","submitter":"Liang Zhang"}]
