[{"authorTime":"2021-08-27 16:03:46","codes":[{"authorDate":"2021-08-27 16:03:46","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLRevokeStatement actual, final RevokeStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.emptyList()));\n        }\n    }\n","date":"2021-08-27 16:03:46","endLine":53,"groupId":"5748","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalMySQLRevokeStatementactual@finalRevokeStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6a/201fc03af629dcf1e2b588eff9e07da93f262e.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLRevokeStatement actual, final RevokeStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.emptyList()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dcl/impl/mysql/MySQLRevokeStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2021-08-27 16:03:46","commitOrder":1,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLGrantStatement actual, final GrantStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.EMPTY_LIST));\n        }\n    }\n","date":"2021-08-27 16:03:46","endLine":52,"groupId":"5748","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalMySQLGrantStatementactual@finalGrantStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cd/67b4598bd8efac5946dfead3dcc58e72608e59.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLGrantStatement actual, final GrantStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.EMPTY_LIST));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dcl/impl/mysql/MySQLGrantStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"}],"commitId":"ca8ee0079175a984c8acf2757733dd33a161ecf7","commitMessage":"@@@Add more assert test. (#12037)\n\n* fix test case error.\n\n* Add more assert test.\n\n* Fix code style.","date":"2021-08-27 16:03:46","modifiedFileCount":"2","status":"B","submitter":"Guocheng Tang"},{"authorTime":"2021-08-27 16:31:25","codes":[{"authorDate":"2021-08-27 16:03:46","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLRevokeStatement actual, final RevokeStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.emptyList()));\n        }\n    }\n","date":"2021-08-27 16:03:46","endLine":53,"groupId":"102128","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalMySQLRevokeStatementactual@finalRevokeStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6a/201fc03af629dcf1e2b588eff9e07da93f262e.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLRevokeStatement actual, final RevokeStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.emptyList()));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dcl/impl/mysql/MySQLRevokeStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2021-08-27 16:31:25","commitOrder":2,"curCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLGrantStatement actual, final GrantStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.emptyList()));\n        }\n    }\n","date":"2021-08-27 16:31:25","endLine":52,"groupId":"102128","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertIs","params":"(finalSQLCaseAssertContextassertContext@finalMySQLGrantStatementactual@finalGrantStatementTestCaseexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c8/d7f15846c1be4236462dfafcb3a86d2fee99c1.src","preCode":"    public static void assertIs(final SQLCaseAssertContext assertContext, final MySQLGrantStatement actual, final GrantStatementTestCase expected) {\n        if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n            assertThat(expected.getTables().size(), is(1));\n            GrantLevelSegmentAssert.assertIs(assertContext, actual.getLevel(), expected.getTables());\n        } else {\n            assertThat(assertContext.getText(\"Actual table should not exist.\"), actual.getTables(), is(Collections.EMPTY_LIST));\n        }\n    }\n","realPath":"shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dcl/impl/mysql/MySQLGrantStatementAssert.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"75f1f108a77b4510ae8a502893e7e077459f519c","commitMessage":"@@@Revise #12037 (#12051)\n\n* Revise #12037\n\n* Revise #12037","date":"2021-08-27 16:31:25","modifiedFileCount":"3","status":"M","submitter":"Liang Zhang"}]
