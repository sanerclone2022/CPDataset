[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(SchemaMetaData.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","date":"2020-10-11 18:46:54","endLine":73,"groupId":"4973","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFindTableNameWhenColumnSegmentOwnerPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e7/c77249c610d156a2fa8e4f54974a877700dfd5.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(SchemaMetaData.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        SchemaMetaData schemaMetaData = mock(SchemaMetaData.class);\n        when(schemaMetaData.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schemaMetaData);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","date":"2020-10-11 18:46:54","endLine":92,"groupId":"4975","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e7/c77249c610d156a2fa8e4f54974a877700dfd5.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        SchemaMetaData schemaMetaData = mock(SchemaMetaData.class);\n        when(schemaMetaData.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schemaMetaData);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-10-13 16:56:26","codes":[{"authorDate":"2020-10-13 16:56:26","commitOrder":2,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(PhysicalSchemaMetaData.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","date":"2020-10-13 16:56:26","endLine":73,"groupId":"4973","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFindTableNameWhenColumnSegmentOwnerPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b1/a4b92741e90d4b56f1f711c160ecd47712d6a0.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(SchemaMetaData.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2020-10-13 16:56:26","commitOrder":2,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        PhysicalSchemaMetaData schemaMetaData = mock(PhysicalSchemaMetaData.class);\n        when(schemaMetaData.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schemaMetaData);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","date":"2020-10-13 16:56:26","endLine":92,"groupId":"4975","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b1/a4b92741e90d4b56f1f711c160ecd47712d6a0.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        SchemaMetaData schemaMetaData = mock(SchemaMetaData.class);\n        when(schemaMetaData.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schemaMetaData);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"5bde8b2aa27657e9459fb20929cfd4ef83dcddcf","commitMessage":"@@@Rename metadata.model.physical package (#7771)\n\n* Rename metadata.model.physical package\n\n* Rename JDBCSchemaHandler\n\n* rename PhysicalXXXMetaData","date":"2020-10-13 16:56:26","modifiedFileCount":"136","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-09 17:01:30","codes":[{"authorDate":"2020-11-09 17:01:30","commitOrder":3,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(ShardingSphereSchema.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","date":"2020-11-09 17:01:30","endLine":73,"groupId":"4973","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFindTableNameWhenColumnSegmentOwnerPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/68f7dde980ac4ba3cd3f31fcca59be476c3e5f.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(PhysicalSchemaMetaData.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2020-11-09 17:01:30","commitOrder":3,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schema);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","date":"2020-11-09 17:01:30","endLine":92,"groupId":"5616","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/21/68f7dde980ac4ba3cd3f31fcca59be476c3e5f.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        PhysicalSchemaMetaData schemaMetaData = mock(PhysicalSchemaMetaData.class);\n        when(schemaMetaData.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schemaMetaData);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"09281f69a6dd01c12dd73dcc6675397062498f90","commitMessage":"@@@Rename PhysicalSchemaMetaData to ShardingSphereSchema (#8094)\n\n* Rename PhysicalSchemaMetaData to ShardingSphereSchema\n\n* Fix checkstyle","date":"2020-11-09 17:01:30","modifiedFileCount":"153","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-26 18:08:28","codes":[{"authorDate":"2021-08-26 18:08:28","commitOrder":4,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Map<String, String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(Collections.singletonList(columnSegment), mock(ShardingSphereSchema.class));\n        assertFalse(actual.isEmpty());\n        assertThat(actual.get(\"table_1.col\"), is(\"table_1\"));\n    }\n","date":"2021-08-26 18:08:28","endLine":75,"groupId":"101737","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"assertFindTableNameWhenColumnSegmentOwnerPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7d/a9e932df90e5f5ff7f6e0767941fb56186e01f.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerPresent() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ColumnSegment columnSegment = createColumnSegment();\n        columnSegment.setOwner(new OwnerSegment(0, 10, new IdentifierValue(\"table_1\")));\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(columnSegment, mock(ShardingSphereSchema.class));\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2021-08-26 18:08:28","commitOrder":4,"curCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.getAllColumnNames(\"table_1\")).thenReturn(Collections.singletonList(\"col\"));\n        Map<String, String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(Collections.singletonList(createColumnSegment()), schema);\n        assertFalse(actual.isEmpty());\n        assertThat(actual.get(\"col\"), is(\"table_1\"));\n    }\n","date":"2021-08-26 18:08:28","endLine":94,"groupId":"101737","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7d/a9e932df90e5f5ff7f6e0767941fb56186e01f.src","preCode":"    public void assertFindTableNameWhenColumnSegmentOwnerAbsentAndSchemaMetaDataContainsColumn() {\n        SimpleTableSegment tableSegment1 = createTableSegment(\"table_1\", \"tbl_1\");\n        SimpleTableSegment tableSegment2 = createTableSegment(\"table_2\", \"tbl_2\");\n        ShardingSphereSchema schema = mock(ShardingSphereSchema.class);\n        when(schema.containsColumn(anyString(), anyString())).thenReturn(true);\n        Optional<String> actual = new TablesContext(Arrays.asList(tableSegment1, tableSegment2)).findTableName(createColumnSegment(), schema);\n        assertTrue(actual.isPresent());\n        assertThat(actual.get(), is(\"table_1\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/table/TablesContextTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"8220f02f56c6c990eab5e920b90bddc8071e2488","commitMessage":"@@@optimize the logic of findTableName to batch (#12016)\n\n* optimize the logic of findTableName to batch\n\n* rename variable\n\n* optimize code\n\n* fix test case\n\n* fix test case\n\n* fix test case","date":"2021-08-26 18:08:28","modifiedFileCount":"6","status":"M","submitter":"Zhengqiang Duan"}]
