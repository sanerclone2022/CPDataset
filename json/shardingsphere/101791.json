[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>(), 0);\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems, selectStatement.getGroupBy().get().getStopIndex());\n    }\n","date":"2020-10-11 18:46:54","endLine":53,"groupId":"2079","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createGroupByContext","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9c/9df1bfe90a9277d95ed409394e1904e61440f8.src","preCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>(), 0);\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems, selectStatement.getGroupBy().get().getStopIndex());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/groupby/engine/GroupByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    public OrderByContext createOrderBy(final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            OrderByContext orderByItems = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n            return null != orderByItems ? orderByItems : new OrderByContext(groupByContext.getItems(), !groupByContext.getItems().isEmpty());\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","date":"2020-10-11 18:46:54","endLine":60,"groupId":"2079","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrderBy","params":"(finalSelectStatementselectStatement@finalGroupByContextgroupByContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/08/fd74d6c2b5e5bccd29524355c371ff5578c072.src","preCode":"    public OrderByContext createOrderBy(final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            OrderByContext orderByItems = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n            return null != orderByItems ? orderByItems : new OrderByContext(groupByContext.getItems(), !groupByContext.getItems().isEmpty());\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/orderby/engine/OrderByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-01-27 18:52:03","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":2,"curCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>(), 0);\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems, selectStatement.getGroupBy().get().getStopIndex());\n    }\n","date":"2020-10-11 18:46:54","endLine":53,"groupId":"2079","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createGroupByContext","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/9c/9df1bfe90a9277d95ed409394e1904e61440f8.src","preCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>(), 0);\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems, selectStatement.getGroupBy().get().getStopIndex());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/groupby/engine/GroupByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"N"},{"authorDate":"2021-01-27 18:52:03","commitOrder":2,"curCode":"    public OrderByContext createOrderBy(final ShardingSphereSchema schema, final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            if (groupByContext.getItems().isEmpty() && selectStatement.getProjections().isDistinctRow()) {\n                OrderByContext result = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n                return null != result ? result : getDefaultOrderByContextWithoutOrderBy(groupByContext);\n            } else if (selectStatement instanceof MySQLSelectStatement) {\n                Optional<OrderByContext> result = createOrderByContextForMySQLSelectWithoutOrderBy(schema, selectStatement, groupByContext);\n                return result.orElse(getDefaultOrderByContextWithoutOrderBy(groupByContext));\n            }\n            return getDefaultOrderByContextWithoutOrderBy(groupByContext);\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","date":"2021-01-27 18:52:03","endLine":75,"groupId":"8414","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrderBy","params":"(finalShardingSphereSchemaschema@finalSelectStatementselectStatement@finalGroupByContextgroupByContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/51/9e5beefdd3ddbafa8cb6a4c1618da87c1f73af.src","preCode":"    public OrderByContext createOrderBy(final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            OrderByContext orderByItems = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n            return null != orderByItems ? orderByItems : new OrderByContext(groupByContext.getItems(), !groupByContext.getItems().isEmpty());\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/orderby/engine/OrderByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"783f702ed62ff5f24c1bfd300b3ab0b4b4017467","commitMessage":"@@@Order by primary keys ascending if simple query sql without order by clause for MySQL (#9133)\n\n* Order by primary keys ascending if simple sql without order by for MySQL\n\n* Update unit test\n\n* Updates follow review\n\n* Compatible with unit tests\n\n* Updates follow review","date":"2021-01-27 18:52:03","modifiedFileCount":"3","status":"M","submitter":"sandynz"},{"authorTime":"2021-01-27 18:52:03","codes":[{"authorDate":"2021-06-02 17:05:09","commitOrder":3,"curCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>());\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems);\n    }\n","date":"2021-06-02 17:05:09","endLine":53,"groupId":"2079","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createGroupByContext","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7b/94dcd4c6705b4df104f9dc3a9bc6f3a77c35d3.src","preCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>(), 0);\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems, selectStatement.getGroupBy().get().getStopIndex());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/groupby/engine/GroupByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2021-01-27 18:52:03","commitOrder":3,"curCode":"    public OrderByContext createOrderBy(final ShardingSphereSchema schema, final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            if (groupByContext.getItems().isEmpty() && selectStatement.getProjections().isDistinctRow()) {\n                OrderByContext result = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n                return null != result ? result : getDefaultOrderByContextWithoutOrderBy(groupByContext);\n            } else if (selectStatement instanceof MySQLSelectStatement) {\n                Optional<OrderByContext> result = createOrderByContextForMySQLSelectWithoutOrderBy(schema, selectStatement, groupByContext);\n                return result.orElse(getDefaultOrderByContextWithoutOrderBy(groupByContext));\n            }\n            return getDefaultOrderByContextWithoutOrderBy(groupByContext);\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","date":"2021-01-27 18:52:03","endLine":75,"groupId":"8414","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrderBy","params":"(finalShardingSphereSchemaschema@finalSelectStatementselectStatement@finalGroupByContextgroupByContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/51/9e5beefdd3ddbafa8cb6a4c1618da87c1f73af.src","preCode":"    public OrderByContext createOrderBy(final ShardingSphereSchema schema, final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            if (groupByContext.getItems().isEmpty() && selectStatement.getProjections().isDistinctRow()) {\n                OrderByContext result = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n                return null != result ? result : getDefaultOrderByContextWithoutOrderBy(groupByContext);\n            } else if (selectStatement instanceof MySQLSelectStatement) {\n                Optional<OrderByContext> result = createOrderByContextForMySQLSelectWithoutOrderBy(schema, selectStatement, groupByContext);\n                return result.orElse(getDefaultOrderByContextWithoutOrderBy(groupByContext));\n            }\n            return getDefaultOrderByContextWithoutOrderBy(groupByContext);\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/orderby/engine/OrderByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"5e4b14e4feefa5ab01167cfa1408092c1d437055","commitMessage":"@@@fix select with group by rewrite error (#10620)\n\n* fix select order by rewrite error\n\n* support oracle.  sqlserver & sql92\n\n* add sql parse test\n\n* add rewrite test case","date":"2021-06-02 17:05:09","modifiedFileCount":"31","status":"M","submitter":"Zhengqiang Duan"},{"authorTime":"2021-07-22 23:48:43","codes":[{"authorDate":"2021-06-02 17:05:09","commitOrder":4,"curCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>());\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems);\n    }\n","date":"2021-06-02 17:05:09","endLine":53,"groupId":"101791","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"createGroupByContext","params":"(finalSelectStatementselectStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7b/94dcd4c6705b4df104f9dc3a9bc6f3a77c35d3.src","preCode":"    public GroupByContext createGroupByContext(final SelectStatement selectStatement) {\n        if (!selectStatement.getGroupBy().isPresent()) {\n            return new GroupByContext(new LinkedList<>());\n        }\n        Collection<OrderByItem> groupByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getGroupBy().get().getGroupByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            groupByItems.add(orderByItem);\n        }\n        return new GroupByContext(groupByItems);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/groupby/engine/GroupByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"N"},{"authorDate":"2021-07-22 23:48:43","commitOrder":4,"curCode":"    public OrderByContext createOrderBy(final ShardingSphereSchema schema, final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            if (groupByContext.getItems().isEmpty() && selectStatement.getProjections().isDistinctRow()) {\n                OrderByContext result = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n                return null != result ? result : getDefaultOrderByContextWithoutOrderBy(groupByContext);\n            } else if (selectStatement instanceof MySQLSelectStatement) {\n                Optional<OrderByContext> result = createOrderByContextForMySQLSelectWithoutOrderBy(schema, selectStatement, groupByContext);\n                return result.orElseGet(() -> getDefaultOrderByContextWithoutOrderBy(groupByContext));\n            }\n            return getDefaultOrderByContextWithoutOrderBy(groupByContext);\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","date":"2021-07-22 23:48:43","endLine":77,"groupId":"101791","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"createOrderBy","params":"(finalShardingSphereSchemaschema@finalSelectStatementselectStatement@finalGroupByContextgroupByContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ab/b16b1b5796b0ce02c0d0341d7cae8c21c1591a.src","preCode":"    public OrderByContext createOrderBy(final ShardingSphereSchema schema, final SelectStatement selectStatement, final GroupByContext groupByContext) {\n        if (!selectStatement.getOrderBy().isPresent() || selectStatement.getOrderBy().get().getOrderByItems().isEmpty()) {\n            if (groupByContext.getItems().isEmpty() && selectStatement.getProjections().isDistinctRow()) {\n                OrderByContext result = createOrderByContextForDistinctRowWithoutGroupBy(selectStatement, groupByContext);\n                return null != result ? result : getDefaultOrderByContextWithoutOrderBy(groupByContext);\n            } else if (selectStatement instanceof MySQLSelectStatement) {\n                Optional<OrderByContext> result = createOrderByContextForMySQLSelectWithoutOrderBy(schema, selectStatement, groupByContext);\n                return result.orElse(getDefaultOrderByContextWithoutOrderBy(groupByContext));\n            }\n            return getDefaultOrderByContextWithoutOrderBy(groupByContext);\n        }\n        List<OrderByItem> orderByItems = new LinkedList<>();\n        for (OrderByItemSegment each : selectStatement.getOrderBy().get().getOrderByItems()) {\n            OrderByItem orderByItem = new OrderByItem(each);\n            if (each instanceof IndexOrderByItemSegment) {\n                orderByItem.setIndex(((IndexOrderByItemSegment) each).getColumnIndex());\n            }\n            orderByItems.add(orderByItem);\n        }\n        return new OrderByContext(orderByItems, false);\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/orderby/engine/OrderByContextEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"47bf9f433f5055b461332da8eebee6f95d717049","commitMessage":"@@@Correct usage of Optional and reduce redundant calculations (#11459)\n\n* Correct usage of Optional\n\n* Optimize filter in SingleTableRule","date":"2021-07-22 23:48:43","modifiedFileCount":"13","status":"M","submitter":"???"}]
