[{"authorTime":"2020-12-12 23:20:10","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":4,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2020-12-12 23:20:10","commitOrder":4,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-12 23:20:10","endLine":54,"groupId":"12877","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0b/bfae7aeca99909d501aae46e3ec04f419bf127.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"NB"}],"commitId":"91ad64e00d152216460d6f79fff5233662e9589e","commitMessage":"@@@Fixed an index out-of-bounds exception when useServerPrepStmts was enabled to get the query response row set (#8810)\n\n","date":"2020-12-29 20:21:22","modifiedFileCount":"1","status":"M","submitter":"AlphaPo"},{"authorTime":"2021-04-01 18:29:09","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":5,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-04-01 18:29:09","commitOrder":5,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-04-01 18:29:09","endLine":56,"groupId":"11371","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8d/80b385337f882323deb517d54952cfe7cd701e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), \n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"4954616af3db97b031b8a2005b2e40062b390929","commitMessage":"@@@Add AuthenticationContext and ShardingSphereUsers (#9906)\n\n* Add AuthenticationContext and ShardingSphereUsers\n\n* Remove MetaDataContexts.getAuthentication()\n\n* Fix test case\n\n* Move AuthenticationContext\n\n* Refactor SQLChecker\n\n* Use SQLChecker to check authrity\n\n* Fix compile error","date":"2021-04-01 18:29:09","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-08 16:15:03","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":6,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-04-08 16:15:03","commitOrder":6,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-04-08 16:15:03","endLine":57,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/27/5780c2c02f63bf59cccf287092e85ba089399e.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"d6fe7c187b7f3bd2c05cad2d9920b9f664de5d11","commitMessage":"@@@Use SchemaRule and GlobalRule interface (#9989)\n\n* Use SchemaRule and GlobalRule interface\n\n* Fix compile error","date":"2021-04-08 16:15:03","modifiedFileCount":"67","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-05-18 13:23:30","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":7,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-05-18 13:23:30","commitOrder":7,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-05-18 13:23:30","endLine":55,"groupId":"0","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b9/a1b188a48781115c97f33bcbe3eee6d5ead7eb.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ShardingSphereUsers(Collections.singleton(new ShardingSphereUser(\"root\", \"root\", \"\"))), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"fe0ddc8c5d6c106f4f88af39bc42a4038f60b26b","commitMessage":"@@@Users  removed from StandardMetaDataContexts (#10310)\n\n* remove user\n\n* fix review\n\n* trigger ci\n\n* fix code\n\n* fix","date":"2021-05-18 13:23:30","modifiedFileCount":"39","status":"M","submitter":"Zhu jun"},{"authorTime":"2021-07-01 11:29:35","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":8,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-07-01 11:29:35","commitOrder":8,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), getOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-07-01 11:29:35","endLine":58,"groupId":"217","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/99/5fdf5ce4c8e0396d8f1995c288d1335d6043da.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"e560dc4352de5abc7caf4fbdc03b747985508961","commitMessage":"@@@improve code for #10840 (#11028)\n\n* improve code style for 10678\n\n* Remove unnecessary submitted code.\n\n* improve code\n\n* improve code\n\n* improve code for 10678","date":"2021-07-01 11:29:35","modifiedFileCount":"61","status":"M","submitter":"totalo"},{"authorTime":"2021-07-24 22:50:31","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":9,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-07-24 22:50:31","commitOrder":9,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), getOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-07-24 22:50:31","endLine":59,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ae/4b4be948ee663c3ec5e8f6348e3d98fd1633a8.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), getOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"717c99918248f66d683ef60a4f961ee37470c687","commitMessage":"@@@Use direct call to instead of event post on AddResourceBackendHandler (#11488)\n\n* Add MetaDataContexts.getConfigCenter()\n\n* Use direct call to refactor AddResourceBackendHandler\n\n* Use direct call to refactor AddResourceBackendHandler\n\n* Fix test case\n\n* Add DataSourcePersistService.append()\n\n* Add test case","date":"2021-07-24 22:50:31","modifiedFileCount":"44","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-26 14:43:21","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":10,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-07-26 14:43:21","commitOrder":10,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), getOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-07-26 14:43:21","endLine":59,"groupId":"4345","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/20/cda0cd186989d240b290b8241d653d6c7ff81d.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(ConfigCenter.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), getOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"3073e94515f9556d995dbf3a2d409630801788f4","commitMessage":"@@@Rename ConfigCenter to DistMetaDataPersistService (#11505)\n\n* Rename DistMetaDataPersistService\n\n* Rename DistMetaDataPersistRepository\n\n* Rename DistMetaDataPersistRepository\n\n* For checkstyle\n\n* For checkstyle","date":"2021-07-26 14:43:21","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 07:22:30","codes":[{"authorDate":"2020-12-29 20:21:22","commitOrder":11,"curCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2020-12-29 20:21:22","endLine":73,"groupId":"12877","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/44/3afb2525e8a1e7ac277d78d838007323966156.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-07-27 07:22:30","commitOrder":11,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-07-27 07:22:30","endLine":57,"groupId":"4345","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d4/4618f946b679d2e5ce14f35537bda77e6f10ef.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), getOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"6d7e3fe33533f8d8dd098e81d667ce57aabd625a","commitMessage":"@@@Use raw new HashMap to instead of guava (#11517)\n\n* Use raw new HashMap to instead of guava\n\n* Use raw new HashMap to instead of guava","date":"2021-07-27 07:22:30","modifiedFileCount":"69","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 02:33:31","codes":[{"authorDate":"2021-08-15 02:33:31","commitOrder":12,"curCode":"    public void setUp() {\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(\n                mock(DistMetaDataPersistService.class), mockMetaDataMap(), mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class),\n                new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        ProxyContext.getInstance().init(contextManager);\n    }\n","date":"2021-08-15 02:33:31","endLine":97,"groupId":"7672","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/af/90a47837c4aebf67a5c3979bcb5716874c1127.src","preCode":"    public void setUp() throws NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        FieldSetter.setField(ProxyContext.getInstance(), metaDataContexts,\n                new StandardMetaDataContexts(getMetaDataMap(), mock(ExecutorEngine.class), new DefaultAuthentication(), new ConfigurationProperties(new Properties())));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-08-15 02:33:31","commitOrder":12,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-08-15 02:33:31","endLine":61,"groupId":"7672","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/49/4b6bdd926cf7eec54df7a8ee627d0fa29a3bcb.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\");\n        metaDataContexts.setAccessible(true);\n        metaDataContexts.set(ProxyContext.getInstance(), new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class), \n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory()));\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"d6e424ba68c64ea1835a42b0f4b0fb7f69c95323","commitMessage":"@@@Add ContextManager (#11822)\n\n* Add ContextManager\n\n* Use ContextManager on GovernanceShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereConnection\n\n* Use ContextManager on ShardingSphereConnection\n\n* Refactor AbstractBaseExecutorTest\n\n* Use ContextManager on proxy\n\n* Fix test case","date":"2021-08-15 02:33:31","modifiedFileCount":"118","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 11:55:34","codes":[{"authorDate":"2021-08-15 11:55:34","commitOrder":13,"curCode":"    public void setUp() {\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        MetaDataContexts metaDataContexts = new MetaDataContexts(\n                mock(DistMetaDataPersistService.class), mockMetaDataMap(), mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class),\n                new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        ProxyContext.getInstance().init(contextManager);\n    }\n","date":"2021-08-15 11:55:34","endLine":97,"groupId":"7672","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/98/5f430d6c368f94e3f2603f667b4f9633c90e7d.src","preCode":"    public void setUp() {\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(\n                mock(DistMetaDataPersistService.class), mockMetaDataMap(), mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class),\n                new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        ProxyContext.getInstance().init(contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-08-15 11:55:34","commitOrder":13,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-08-15 11:55:34","endLine":61,"groupId":"7672","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1f/c52d4095516eb1662b3c5e99aa8c8d3f1f0361.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"21a22f867f1709d878330ac64794a8a8880a116c","commitMessage":"@@@Merge StandardContexts and Contexts interface (#11826)\n\n","date":"2021-08-15 11:55:34","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-21 23:24:02","codes":[{"authorDate":"2021-08-21 23:24:02","commitOrder":14,"curCode":"    public void setUp() {\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        MetaDataContexts metaDataContexts = new MetaDataContexts(\n                mock(PersistService.class), mockMetaDataMap(), mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class),\n                new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        ProxyContext.getInstance().init(contextManager);\n    }\n","date":"2021-08-21 23:24:02","endLine":97,"groupId":"10943","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/18/aff91df77d07235b5f54b74e28fd06b0172ab7.src","preCode":"    public void setUp() {\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        MetaDataContexts metaDataContexts = new MetaDataContexts(\n                mock(DistMetaDataPersistService.class), mockMetaDataMap(), mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class),\n                new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        ProxyContext.getInstance().init(contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-08-21 23:24:02","commitOrder":14,"curCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","date":"2021-08-21 23:24:02","endLine":61,"groupId":"10943","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7a/cc19fb6a2a6c7a2543554ef9d75864c1240846.src","preCode":"    public void setUp() throws IllegalAccessException, NoSuchFieldException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), getMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mockOptimizeContextFactory());\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n        BackendConnection backendConnection = mock(BackendConnection.class, RETURNS_DEEP_STUBS);\n        when(backendConnection.getSchemaName()).thenReturn(\"schema\");\n        when(backendConnection.isSerialExecute()).thenReturn(true);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngineFactoryTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"534fe5735969e87e2066a2087ba12618be530cbc","commitMessage":"@@@Refactor ShardingSphereMode (#11937)\n\n* Refactor ShardingSphereAutoConfiguration\n\n* Remove useless PersistRepositoryFactory\n\n* Add StandalonePersistRepository\n\n* Add generic type of ShardingSphereMode\n\n* Add generic type of ContextManagerBuilder\n\n* Refactor ShardingSphereMode\n\n* Rename LocalStandalonePersistRepository\n\n* Rename LocalRepository\n\n* Rename RegistryCenterRepository to ClusterPersistRepository\n\n* Rename ClusterPersistRepositoryFactory\n\n* Move StandalonePersistRepository\n\n* Move StandalonePersistRepositoryConfiguration\n\n* Rename DistMetaDataPersistService to PersistService","date":"2021-08-21 23:24:02","modifiedFileCount":"75","status":"M","submitter":"Liang Zhang"}]
