[{"authorTime":"2020-10-11 18:46:54","codes":[{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void appendAverageDistinctDerivedProjection(final AggregationDistinctProjection averageDistinctProjection) {\n        String innerExpression = averageDistinctProjection.getInnerExpression();\n        String distinctInnerExpression = averageDistinctProjection.getDistinctInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection countDistinctProjection = new AggregationDistinctProjection(0, 0, AggregationType.COUNT, innerExpression, countAlias, distinctInnerExpression);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection sumDistinctProjection = new AggregationDistinctProjection(0, 0, AggregationType.SUM, innerExpression, sumAlias, distinctInnerExpression);\n        averageDistinctProjection.getDerivedAggregationProjections().add(countDistinctProjection);\n        averageDistinctProjection.getDerivedAggregationProjections().add(sumDistinctProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","date":"2020-10-11 18:46:54","endLine":152,"groupId":"7386","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"appendAverageDistinctDerivedProjection","params":"(finalAggregationDistinctProjectionaverageDistinctProjection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6d/1a94504045bd13e96bbd6a969fc4c11fa91ddc.src","preCode":"    private void appendAverageDistinctDerivedProjection(final AggregationDistinctProjection averageDistinctProjection) {\n        String innerExpression = averageDistinctProjection.getInnerExpression();\n        String distinctInnerExpression = averageDistinctProjection.getDistinctInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection countDistinctProjection = new AggregationDistinctProjection(0, 0, AggregationType.COUNT, innerExpression, countAlias, distinctInnerExpression);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection sumDistinctProjection = new AggregationDistinctProjection(0, 0, AggregationType.SUM, innerExpression, sumAlias, distinctInnerExpression);\n        averageDistinctProjection.getDerivedAggregationProjections().add(countDistinctProjection);\n        averageDistinctProjection.getDerivedAggregationProjections().add(sumDistinctProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"},{"authorDate":"2020-10-11 18:46:54","commitOrder":1,"curCode":"    private void appendAverageDerivedProjection(final AggregationProjection averageProjection) {\n        String innerExpression = averageProjection.getInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection countProjection = new AggregationProjection(AggregationType.COUNT, innerExpression, countAlias);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection sumProjection = new AggregationProjection(AggregationType.SUM, innerExpression, sumAlias);\n        averageProjection.getDerivedAggregationProjections().add(countProjection);\n        averageProjection.getDerivedAggregationProjections().add(sumProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","date":"2020-10-11 18:46:54","endLine":163,"groupId":"7386","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"appendAverageDerivedProjection","params":"(finalAggregationProjectionaverageProjection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/6d/1a94504045bd13e96bbd6a969fc4c11fa91ddc.src","preCode":"    private void appendAverageDerivedProjection(final AggregationProjection averageProjection) {\n        String innerExpression = averageProjection.getInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection countProjection = new AggregationProjection(AggregationType.COUNT, innerExpression, countAlias);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection sumProjection = new AggregationProjection(AggregationType.SUM, innerExpression, sumAlias);\n        averageProjection.getDerivedAggregationProjections().add(countProjection);\n        averageProjection.getDerivedAggregationProjections().add(sumProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"}],"commitId":"cc40a511b9a93c556bd4ec53665239bd8c6790af","commitMessage":"@@@Move shardingsphere-infra-binder to infra module and rename (#7744)\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* Move shardingsphere-infra-binder to infra module and rename\n\n* rename package name","date":"2020-10-11 18:46:54","modifiedFileCount":"224","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-24 14:50:51","codes":[{"authorDate":"2021-08-24 14:50:51","commitOrder":2,"curCode":"    private void appendAverageDistinctDerivedProjection(final AggregationDistinctProjection averageDistinctProjection) {\n        String innerExpression = averageDistinctProjection.getInnerExpression();\n        String distinctInnerExpression = averageDistinctProjection.getDistinctInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection countDistinctProjection = new AggregationDistinctProjection(\n                0, 0, AggregationType.COUNT, innerExpression, countAlias, distinctInnerExpression, databaseType);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection sumDistinctProjection = new AggregationDistinctProjection(\n                0, 0, AggregationType.SUM, innerExpression, sumAlias, distinctInnerExpression, databaseType);\n        averageDistinctProjection.getDerivedAggregationProjections().add(countDistinctProjection);\n        averageDistinctProjection.getDerivedAggregationProjections().add(sumDistinctProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","date":"2021-08-24 14:50:51","endLine":167,"groupId":"101796","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"appendAverageDistinctDerivedProjection","params":"(finalAggregationDistinctProjectionaverageDistinctProjection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/dd/ccea79573b2e8707046aab1032699513ddd761.src","preCode":"    private void appendAverageDistinctDerivedProjection(final AggregationDistinctProjection averageDistinctProjection) {\n        String innerExpression = averageDistinctProjection.getInnerExpression();\n        String distinctInnerExpression = averageDistinctProjection.getDistinctInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection countDistinctProjection = new AggregationDistinctProjection(0, 0, AggregationType.COUNT, innerExpression, countAlias, distinctInnerExpression);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationDistinctProjection sumDistinctProjection = new AggregationDistinctProjection(0, 0, AggregationType.SUM, innerExpression, sumAlias, distinctInnerExpression);\n        averageDistinctProjection.getDerivedAggregationProjections().add(countDistinctProjection);\n        averageDistinctProjection.getDerivedAggregationProjections().add(sumDistinctProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2021-08-24 14:50:51","commitOrder":2,"curCode":"    private void appendAverageDerivedProjection(final AggregationProjection averageProjection) {\n        String innerExpression = averageProjection.getInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection countProjection = new AggregationProjection(AggregationType.COUNT, innerExpression, countAlias, databaseType);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection sumProjection = new AggregationProjection(AggregationType.SUM, innerExpression, sumAlias, databaseType);\n        averageProjection.getDerivedAggregationProjections().add(countProjection);\n        averageProjection.getDerivedAggregationProjections().add(sumProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","date":"2021-08-24 14:50:51","endLine":178,"groupId":"101796","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"appendAverageDerivedProjection","params":"(finalAggregationProjectionaverageProjection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/dd/ccea79573b2e8707046aab1032699513ddd761.src","preCode":"    private void appendAverageDerivedProjection(final AggregationProjection averageProjection) {\n        String innerExpression = averageProjection.getInnerExpression();\n        String countAlias = DerivedColumn.AVG_COUNT_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection countProjection = new AggregationProjection(AggregationType.COUNT, innerExpression, countAlias);\n        String sumAlias = DerivedColumn.AVG_SUM_ALIAS.getDerivedColumnAlias(aggregationAverageDerivedColumnCount);\n        AggregationProjection sumProjection = new AggregationProjection(AggregationType.SUM, innerExpression, sumAlias);\n        averageProjection.getDerivedAggregationProjections().add(countProjection);\n        averageProjection.getDerivedAggregationProjections().add(sumProjection);\n        aggregationAverageDerivedColumnCount++;\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"ed71fb20f3fce018a38da050a9a6f68b9df16229","commitMessage":"@@@fix mysql & pg aggregation function set index error (#11971)\n\n* fix mysql & pg aggregation function set index error\n\n* add integrate test case\n\n* fix checkstyle\n\n* optimze code\n\n* fix test case\n\n* remove useless logic\n\n* remove useless logic\n\n* fix checkstyle\n\n* fix typo","date":"2021-08-24 14:50:51","modifiedFileCount":"11","status":"M","submitter":"Zhengqiang Duan"}]
