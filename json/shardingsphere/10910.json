[{"authorTime":"2021-08-15 02:33:31","codes":[{"authorDate":"2021-08-15 02:33:31","commitOrder":1,"curCode":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        StandardTransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","date":"2021-08-15 02:33:31","endLine":80,"groupId":"65","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/29285ad133767990527585e55d5a6ae704e07c.src","preCode":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        StandardTransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/datasource/JDBCBackendDataSourceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2021-08-15 02:33:31","commitOrder":1,"curCode":"    private void setContextManager() throws ReflectiveOperationException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        StandardTransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","date":"2021-08-15 02:33:31","endLine":104,"groupId":"65","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setContextManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bc/f8b54e452bf6a924e7121aadcc3bdd6bf175f9.src","preCode":"    private void setContextManager() throws ReflectiveOperationException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        StandardTransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"d6e424ba68c64ea1835a42b0f4b0fb7f69c95323","commitMessage":"@@@Add ContextManager (#11822)\n\n* Add ContextManager\n\n* Use ContextManager on GovernanceShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereDataSource\n\n* Use ContextManager on ShardingSphereConnection\n\n* Use ContextManager on ShardingSphereConnection\n\n* Refactor AbstractBaseExecutorTest\n\n* Use ContextManager on proxy\n\n* Fix test case","date":"2021-08-15 02:33:31","modifiedFileCount":"118","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-15 11:55:34","codes":[{"authorDate":"2021-08-15 11:55:34","commitOrder":2,"curCode":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        TransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","date":"2021-08-15 11:55:34","endLine":80,"groupId":"65","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a2/8de127d7d6599a0dfceb3d6528edd95a8f403d.src","preCode":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        StandardTransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/datasource/JDBCBackendDataSourceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-08-15 11:55:34","commitOrder":2,"curCode":"    private void setContextManager() throws ReflectiveOperationException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        TransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","date":"2021-08-15 11:55:34","endLine":104,"groupId":"65","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setContextManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/15/05826262abdefcce5d5827d698bb65f4d187b6.src","preCode":"    private void setContextManager() throws ReflectiveOperationException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        StandardTransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"21a22f867f1709d878330ac64794a8a8880a116c","commitMessage":"@@@Merge StandardContexts and Contexts interface (#11826)\n\n","date":"2021-08-15 11:55:34","modifiedFileCount":"53","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-21 23:24:02","codes":[{"authorDate":"2021-08-21 23:24:02","commitOrder":3,"curCode":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class), createMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        TransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","date":"2021-08-21 23:24:02","endLine":80,"groupId":"10910","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f7/5177a3360ba2b6040e73d2a848dbad2ae44334.src","preCode":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(), mock(ShardingSphereRuleMetaData.class),\n                mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        TransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/datasource/JDBCBackendDataSourceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-08-21 23:24:02","commitOrder":3,"curCode":"    private void setContextManager() throws ReflectiveOperationException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(PersistService.class), createMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        TransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","date":"2021-08-21 23:24:02","endLine":104,"groupId":"10910","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setContextManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/61/d475ee7e940d50ed45b9ba79da6b0255c60caa.src","preCode":"    private void setContextManager() throws ReflectiveOperationException {\n        Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\");\n        contextManagerField.setAccessible(true);\n        ContextManager contextManager = mock(ContextManager.class, RETURNS_DEEP_STUBS);\n        MetaDataContexts metaDataContexts = new MetaDataContexts(mock(DistMetaDataPersistService.class), createMetaDataMap(),\n                mock(ShardingSphereRuleMetaData.class), mock(ExecutorEngine.class), new ConfigurationProperties(new Properties()), mock(OptimizeContextFactory.class));\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        TransactionContexts transactionContexts = createTransactionContexts();\n        when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts);\n        when(contextManager.getTransactionContexts()).thenReturn(transactionContexts);\n        contextManagerField.set(ProxyContext.getInstance(), contextManager);\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/connection/BackendConnectionTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"534fe5735969e87e2066a2087ba12618be530cbc","commitMessage":"@@@Refactor ShardingSphereMode (#11937)\n\n* Refactor ShardingSphereAutoConfiguration\n\n* Remove useless PersistRepositoryFactory\n\n* Add StandalonePersistRepository\n\n* Add generic type of ShardingSphereMode\n\n* Add generic type of ContextManagerBuilder\n\n* Refactor ShardingSphereMode\n\n* Rename LocalStandalonePersistRepository\n\n* Rename LocalRepository\n\n* Rename RegistryCenterRepository to ClusterPersistRepository\n\n* Rename ClusterPersistRepositoryFactory\n\n* Move StandalonePersistRepository\n\n* Move StandalonePersistRepositoryConfiguration\n\n* Rename DistMetaDataPersistService to PersistService","date":"2021-08-21 23:24:02","modifiedFileCount":"75","status":"M","submitter":"Liang Zhang"}]
