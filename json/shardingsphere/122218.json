[{"authorTime":"2021-08-13 19:38:46","codes":[{"authorDate":"2021-08-13 19:38:46","commitOrder":3,"curCode":"    public Optional<GaugeMetricFamily> createGaugeMetricFamily(final String id) {\n        Optional<Map> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"GAUGEMETRICFAMILY\":\n                return createGaugeMetricFamily(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","date":"2021-08-13 19:38:46","endLine":77,"groupId":"8066","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createGaugeMetricFamily","params":"(finalStringid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ee864241b58e9ce6c82a659aa1fd0b6dcc084b.src","preCode":"    public Optional<GaugeMetricFamily> createGaugeMetricFamily(final String id) {\n        Optional<Map> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"GAUGEMETRICFAMILY\":\n                return createGaugeMetricFamily(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2021-08-13 19:38:46","commitOrder":3,"curCode":"    private Optional<MetricsWrapper> createById(final String id) {\n        Optional<Map> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"COUNTER\":\n                return createCounter(metric);\n            case \"GAUGE\":\n                return createGauge(metric);\n            case \"HISTOGRAM\":\n                return createHistogram(metric);\n            case \"SUMMARY\":\n                return createSummary(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","date":"2021-08-13 19:38:46","endLine":108,"groupId":"8066","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createById","params":"(finalStringid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e4/ee864241b58e9ce6c82a659aa1fd0b6dcc084b.src","preCode":"    private Optional<MetricsWrapper> createById(final String id) {\n        Optional<Map> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"COUNTER\":\n                return createCounter(metric);\n            case \"GAUGE\":\n                return createGauge(metric);\n            case \"HISTOGRAM\":\n                return createHistogram(metric);\n            case \"SUMMARY\":\n                return createSummary(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"MB"}],"commitId":"6433e6036ceccc997cc522f5f0bfd6b34499cc28","commitMessage":"@@@Refactor metrics (#11804)\n\n","date":"2021-08-13 19:38:46","modifiedFileCount":"5","status":"M","submitter":"Dachuan J"},{"authorTime":"2021-08-15 18:31:45","codes":[{"authorDate":"2021-08-15 18:31:45","commitOrder":4,"curCode":"    public Optional<GaugeMetricFamily> createGaugeMetricFamily(final String id) {\n        Optional<Map<String, Object>> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map<String, Object> metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        if (\"GAUGEMETRICFAMILY\".equalsIgnoreCase(getType(metric))) {\n            return createGaugeMetricFamily(metric);\n        } else {\n            return Optional.empty();\n        }\n    }\n","date":"2021-08-15 18:31:45","endLine":87,"groupId":"122218","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createGaugeMetricFamily","params":"(finalStringid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/17363a9581315c9d3645f722d8a9c039b0f58b.src","preCode":"    public Optional<GaugeMetricFamily> createGaugeMetricFamily(final String id) {\n        Optional<Map> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"GAUGEMETRICFAMILY\":\n                return createGaugeMetricFamily(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2021-08-15 18:31:45","commitOrder":4,"curCode":"    private Optional<MetricsWrapper> createById(final String id) {\n        Optional<Map<String, Object>> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map<String, Object> metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"COUNTER\":\n                return createCounter(metric);\n            case \"GAUGE\":\n                return createGauge(metric);\n            case \"HISTOGRAM\":\n                return createHistogram(metric);\n            case \"SUMMARY\":\n                return createSummary(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","date":"2021-08-15 18:31:45","endLine":118,"groupId":"122218","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createById","params":"(finalStringid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/17363a9581315c9d3645f722d8a9c039b0f58b.src","preCode":"    private Optional<MetricsWrapper> createById(final String id) {\n        Optional<Map> metricMap = findById(id);\n        if (!metricMap.isPresent()) {\n            return Optional.empty();\n        }\n        Map metric = metricMap.get();\n        if (null == getType(metric)) {\n            return Optional.empty();\n        }\n        switch (getType(metric).toUpperCase()) {\n            case \"COUNTER\":\n                return createCounter(metric);\n            case \"GAUGE\":\n                return createGauge(metric);\n            case \"HISTOGRAM\":\n                return createHistogram(metric);\n            case \"SUMMARY\":\n                return createSummary(metric);\n            default:\n                return Optional.empty();\n        }\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/main/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/PrometheusWrapperFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"11b86de893b6597f1661a171957ab37c019c1eba","commitMessage":"@@@Fix code warnings (#11828)\n\n","date":"2021-08-15 18:31:45","modifiedFileCount":"14","status":"M","submitter":"Dachuan J"}]
