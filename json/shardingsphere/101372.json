[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":353,"groupId":"8877","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/e15c503fad699f0ee0c02d397eedfdb12b8071.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":343,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":339,"groupId":"8877","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/9a1bb22eb18753b494aa2ff27c231d6d10b250.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92StatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-11-01 14:32:14","codes":[{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        return new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n    }\n","date":"2020-11-01 14:32:14","endLine":345,"groupId":"101372","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/aa/fade47bfb9b4768bf12e30db28682f53f7750f.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/statement/impl/SQLServerStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"},{"authorDate":"2020-11-01 14:32:14","commitOrder":2,"curCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        return new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n    }\n","date":"2020-11-01 14:32:14","endLine":331,"groupId":"101372","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitBitExpr","params":"(finalBitExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3a/7a75a3bfafca34aa8d464961db6d79614f9b16.src","preCode":"    public final ASTNode visitBitExpr(final BitExprContext ctx) {\n        if (null != ctx.simpleExpr()) {\n            return createExpressionSegment(visit(ctx.simpleExpr()), ctx);\n        }\n        ExpressionSegment left = (ExpressionSegment) visit(ctx.getChild(0));\n        ExpressionSegment right = (ExpressionSegment) visit(ctx.getChild(2));\n        String operator = ctx.getChild(1).getText();\n        String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(), ctx.stop.getStopIndex()));\n        BinaryOperationExpression result = new BinaryOperationExpression(ctx.start.getStartIndex(), ctx.stop.getStopIndex(), left, right, operator, text);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92StatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"}],"commitId":"5d7ca41942d298dad2cc0d8efc5fc5c6872e2aec","commitMessage":"@@@Fix checkstyle (#8001)\n\n","date":"2020-11-01 14:32:14","modifiedFileCount":"16","status":"M","submitter":"Liang Zhang"}]
