[{"authorTime":"2021-08-02 17:49:58","codes":[{"authorDate":"2021-08-02 17:49:58","commitOrder":1,"curCode":"    public void assertCreate() {\n        Gauge gauge = Gauge.build().name(\"a\").help(\"help\").create();\n        GaugeWrapper gaugeWrapper = new GaugeWrapper(gauge);\n        gaugeWrapper.gaugeInc();\n        gaugeWrapper.gaugeInc(1);\n        gauge = (Gauge) ReflectiveUtil.getFieldValue(gaugeWrapper, \"gauge\");\n        org.hamcrest.MatcherAssert.assertThat(gauge.get(), Matchers.is(2.0));\n    }\n","date":"2021-08-02 17:49:58","endLine":35,"groupId":"4141","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bb/0064da5fbe4bc8ab15f3ca22da9368f5b49e1b.src","preCode":"    public void assertCreate() {\n        Gauge gauge = Gauge.build().name(\"a\").help(\"help\").create();\n        GaugeWrapper gaugeWrapper = new GaugeWrapper(gauge);\n        gaugeWrapper.gaugeInc();\n        gaugeWrapper.gaugeInc(1);\n        gauge = (Gauge) ReflectiveUtil.getFieldValue(gaugeWrapper, \"gauge\");\n        org.hamcrest.MatcherAssert.assertThat(gauge.get(), Matchers.is(2.0));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/test/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/GaugeWrapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"B"},{"authorDate":"2021-08-02 17:49:58","commitOrder":1,"curCode":"    public void assertCreate() {\n        Counter counter = Counter.build().name(\"a\").help(\"help\").create();\n        CounterWrapper counterWrapper = new CounterWrapper(counter);\n        counterWrapper.counterInc();\n        counterWrapper.counterInc(1);\n        counter = (Counter) ReflectiveUtil.getFieldValue(counterWrapper, \"counter\");\n        org.hamcrest.MatcherAssert.assertThat(counter.get(), Matchers.is(2.0));\n    }\n","date":"2021-08-02 17:49:58","endLine":35,"groupId":"1994","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7a/9e07197475fd21c270d9dbed796a8d81ec0cac.src","preCode":"    public void assertCreate() {\n        Counter counter = Counter.build().name(\"a\").help(\"help\").create();\n        CounterWrapper counterWrapper = new CounterWrapper(counter);\n        counterWrapper.counterInc();\n        counterWrapper.counterInc(1);\n        counter = (Counter) ReflectiveUtil.getFieldValue(counterWrapper, \"counter\");\n        org.hamcrest.MatcherAssert.assertThat(counter.get(), Matchers.is(2.0));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/test/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/CounterWrapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"B"}],"commitId":"fcad18cd188a1a15d723a1a9de774445f0cf5b31","commitMessage":"@@@Refactor the metrics module in agent plugin and add transfer bytes metrics (#11585)\n\n* Refactor the metrics module in agent plugin and add request/response metrics\n\n* Change some parameters settings and fix some code style\n\n* Add some test cases.\n\n* Change ProxyInfoCollectorTest test cases.","date":"2021-08-02 17:49:58","modifiedFileCount":"16","status":"B","submitter":"Dachuan J"},{"authorTime":"2021-08-04 13:10:40","codes":[{"authorDate":"2021-08-04 13:10:40","commitOrder":2,"curCode":"    public void assertCreate() {\n        Gauge gauge = Gauge.build().name(\"a\").help(\"help\").create();\n        GaugeWrapper gaugeWrapper = new GaugeWrapper(gauge);\n        gaugeWrapper.inc();\n        gaugeWrapper.inc(1);\n        gauge = (Gauge) ReflectiveUtil.getFieldValue(gaugeWrapper, \"gauge\");\n        org.hamcrest.MatcherAssert.assertThat(gauge.get(), Matchers.is(2.0));\n    }\n","date":"2021-08-04 13:10:40","endLine":35,"groupId":"102217","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d3/4941c601a8df01d92d2fedc71de8bdeea0e92e.src","preCode":"    public void assertCreate() {\n        Gauge gauge = Gauge.build().name(\"a\").help(\"help\").create();\n        GaugeWrapper gaugeWrapper = new GaugeWrapper(gauge);\n        gaugeWrapper.gaugeInc();\n        gaugeWrapper.gaugeInc(1);\n        gauge = (Gauge) ReflectiveUtil.getFieldValue(gaugeWrapper, \"gauge\");\n        org.hamcrest.MatcherAssert.assertThat(gauge.get(), Matchers.is(2.0));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/test/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/GaugeWrapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2021-08-04 13:10:40","commitOrder":2,"curCode":"    public void assertCreate() {\n        Counter counter = Counter.build().name(\"a\").help(\"help\").create();\n        CounterWrapper counterWrapper = new CounterWrapper(counter);\n        counterWrapper.inc();\n        counterWrapper.inc(1);\n        counter = (Counter) ReflectiveUtil.getFieldValue(counterWrapper, \"counter\");\n        org.hamcrest.MatcherAssert.assertThat(counter.get(), Matchers.is(2.0));\n    }\n","date":"2021-08-04 13:10:40","endLine":35,"groupId":"102217","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/99/bf8401a61c1bed45743a7fdb6461f39811825b.src","preCode":"    public void assertCreate() {\n        Counter counter = Counter.build().name(\"a\").help(\"help\").create();\n        CounterWrapper counterWrapper = new CounterWrapper(counter);\n        counterWrapper.counterInc();\n        counterWrapper.counterInc(1);\n        counter = (Counter) ReflectiveUtil.getFieldValue(counterWrapper, \"counter\");\n        org.hamcrest.MatcherAssert.assertThat(counter.get(), Matchers.is(2.0));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-metrics/shardingsphere-agent-metrics-prometheus/src/test/java/org/apache/shardingsphere/agent/metrics/prometheus/wrapper/CounterWrapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"}],"commitId":"ef45079f96d9f1ceb23956c5a8e6cd9a99f28549","commitMessage":"@@@Add meta data metrics about schema count and database count (#11619)\n\n* Add meta data metrics about schema count and database count.\n\n* Fix some code and yaml end line\n\n* Remove log for github build again.","date":"2021-08-04 13:10:40","modifiedFileCount":"24","status":"M","submitter":"Dachuan J"}]
