[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), (OracleSelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return visit(ctx.parameterMarker());\n        }\n        if (null != ctx.literals()) {\n            return visit(ctx.literals());\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }\n","date":"2020-10-22 20:53:42","endLine":388,"groupId":"4188","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitSimpleExpr","params":"(finalSimpleExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/57ffeacf154844f0a67f662de75ac1ba20bb29.src","preCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), (OracleSelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return visit(ctx.parameterMarker());\n        }\n        if (null != ctx.literals()) {\n            return visit(ctx.literals());\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), (SQL92SelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return visit(ctx.parameterMarker());\n        }\n        if (null != ctx.literals()) {\n            return visit(ctx.literals());\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }\n","date":"2020-10-22 20:53:42","endLine":381,"groupId":"4188","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitSimpleExpr","params":"(finalSimpleExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5e/9a1bb22eb18753b494aa2ff27c231d6d10b250.src","preCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), (SQL92SelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return visit(ctx.parameterMarker());\n        }\n        if (null != ctx.literals()) {\n            return visit(ctx.literals());\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92StatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2021-05-06 17:18:56","codes":[{"authorDate":"2021-05-06 17:18:56","commitOrder":2,"curCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        int startIndex = ctx.getStart().getStartIndex();\n        int stopIndex = ctx.getStop().getStopIndex();\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(startIndex, stopIndex, (OracleSelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return new ParameterMarkerExpressionSegment(startIndex, stopIndex, ((ParameterMarkerValue) visit(ctx.parameterMarker())).getValue());\n        }\n        if (null != ctx.literals()) {\n            return SQLUtil.createLiteralExpression(visit(ctx.literals()), startIndex, stopIndex, ctx.literals().start.getInputStream().getText(new Interval(startIndex, stopIndex)));\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(startIndex, stopIndex, ctx.getText());\n    }\n","date":"2021-05-06 17:18:56","endLine":406,"groupId":"101568","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitSimpleExpr","params":"(finalSimpleExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/90/95244827137cb9bffbbee6df47842cb06b2a56.src","preCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), (OracleSelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return visit(ctx.parameterMarker());\n        }\n        if (null != ctx.literals()) {\n            return visit(ctx.literals());\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"},{"authorDate":"2021-05-06 17:18:56","commitOrder":2,"curCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        int startIndex = ctx.getStart().getStartIndex();\n        int stopIndex = ctx.getStop().getStopIndex();\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(startIndex, stopIndex, (SQL92SelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return new ParameterMarkerExpressionSegment(startIndex, stopIndex, ((ParameterMarkerValue) visit(ctx.parameterMarker())).getValue());\n        }\n        if (null != ctx.literals()) {\n            return SQLUtil.createLiteralExpression(visit(ctx.literals()), startIndex, stopIndex, ctx.literals().start.getInputStream().getText(new Interval(startIndex, stopIndex)));\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(startIndex, stopIndex, ctx.getText());\n    }\n","date":"2021-05-06 17:18:56","endLine":381,"groupId":"101568","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitSimpleExpr","params":"(finalSimpleExprContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7f/beccb2946cc183ce806e37eff72b9071cbf938.src","preCode":"    public final ASTNode visitSimpleExpr(final SimpleExprContext ctx) {\n        if (null != ctx.subquery()) {\n            return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), (SQL92SelectStatement) visit(ctx.subquery()));\n        }\n        if (null != ctx.parameterMarker()) {\n            return visit(ctx.parameterMarker());\n        }\n        if (null != ctx.literals()) {\n            return visit(ctx.literals());\n        }\n        if (null != ctx.functionCall()) {\n            return visit(ctx.functionCall());\n        }\n        if (null != ctx.columnName()) {\n            return visit(ctx.columnName());\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/statement/impl/SQL92StatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"}],"commitId":"53097869c17c6b571e4bb72f73f23f44859affb3","commitMessage":"@@@fix oracle & sql92 like query parse exception (#10255)\n\n* fix oracle like query parse exception\n\n* extract common method to SQLUtil\n\n* modify sql parse test case db types","date":"2021-05-06 17:18:56","modifiedFileCount":"5","status":"M","submitter":"Zhengqiang Duan"}]
