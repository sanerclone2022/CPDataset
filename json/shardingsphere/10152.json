[{"authorTime":"2020-05-17 16:36:04","codes":[{"authorDate":"2020-05-17 16:36:04","commitOrder":1,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/master-slave.yaml\"));\n            case SHARDING_MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-master-slave.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2020-05-17 16:36:04","endLine":45,"groupId":"841","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a9/d65cf5681e070a08fdbefc60cf5e7b9818c18c.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/master-slave.yaml\"));\n            case SHARDING_MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-master-slave.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"},{"authorDate":"2020-05-17 16:36:04","commitOrder":1,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/master-slave.yaml\"));\n            case SHARDING_MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-master-slave-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2020-05-17 16:36:04","endLine":45,"groupId":"841","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/be8eea515d9c2f06474f56a9b99ef4e1e2d142.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/master-slave.yaml\"));\n            case SHARDING_MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-master-slave-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlRangeDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"}],"commitId":"cf5ac7e245ec30c8da4be46dca6a65795758a99c","commitMessage":"@@@Revise exapmles (#5656)\n\n* fix example pom\n\n* rename sharding-jdbc-example to shardingsphere-jdbc-example\n\n* rename sharding-proxy-example to shardingsphere-proxy-example\n\n* for code style\n\n* fix log\n\n* revise code with sharding-proxy","date":"2020-05-17 16:36:04","modifiedFileCount":"7","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-09-24 19:06:37","codes":[{"authorDate":"2020-09-24 19:06:37","commitOrder":2,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/primary-replica-replication.yaml\"));\n            case SHARDING_PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-primary-replica-replication.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2020-09-24 19:06:37","endLine":45,"groupId":"841","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/09/cf1fcc562ff20b8eeb02fdd2340440546935e4.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/master-slave.yaml\"));\n            case SHARDING_MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-master-slave.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2020-09-24 19:06:37","commitOrder":2,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/primary-replica-replication.yaml\"));\n            case SHARDING_PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-primary-replica-replication-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2020-09-24 19:06:37","endLine":45,"groupId":"841","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/ff4ecc71530578e871750dd3db262c6b5d4a0f.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/master-slave.yaml\"));\n            case SHARDING_MASTER_SLAVE:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-master-slave-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlRangeDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"}],"commitId":"82b1b9d51cbceeb283573a80c684a98091fa43d7","commitMessage":"@@@Rename PrimaryReplicaReplication in code - part 4 (#7589)\n\n* Rename ShardingType\n\n* Rename ShardingType\n\n* Rename master-slave to primary-replica-replication\n\n* Refactor HintManager\n\n* Rename HintSetPrimaryOnlyCommand\n\n* Refactor HintShowStatusExecutor\n\n* Refactor ShardingCTLHintBackendHandlerTest\n\n* Refactor ReplicaLoadBalanceAlgorithm\n\n* Refactor test cases\n\n* Refactor test cases\n\n* Refactor integrate test cases\n\n* Refactor integrate test cases","date":"2020-09-24 19:06:37","modifiedFileCount":"51","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-10-28 17:04:04","codes":[{"authorDate":"2020-10-28 17:04:04","commitOrder":3,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/replica-query.yaml\"));\n            case SHARDING_REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-replica-query.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2020-10-28 17:04:04","endLine":45,"groupId":"6439","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b6/e8d369277229b272e1324605193cd38004d395.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/primary-replica-replication.yaml\"));\n            case SHARDING_PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-primary-replica-replication.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2020-10-28 17:04:04","commitOrder":3,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/replica-query.yaml\"));\n            case SHARDING_REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-replica-query-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2020-10-28 17:04:04","endLine":45,"groupId":"6439","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/63/1664d2d817ed7e0dac3d690e164c0c793a395f.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/primary-replica-replication.yaml\"));\n            case SHARDING_PRIMARY_REPLICA_REPLICATION:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-primary-replica-replication-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlRangeDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"}],"commitId":"82e5f038b9cffb1a371c9fbd3c3cd24d5dffcfd5","commitMessage":"@@@Rename module name from primary-replica-replication to replica-query (#7943)\n\n* Update doc for SQLParserFacade\n\n* Rename module name from primary-replica-replication to replica-query\n\n* Rename primary-replica-replication to replica-query\n\n* Rename Primary-Replica Replication to replica query\n\n* Rename primary_replica_replication to replica_query\n\n* Rename primary replica replication to replica query\n\n* Rename PrimaryReplicaReplication to ReplicaQuery\n\n* Rename read-write-split to replica-query","date":"2020-10-28 17:04:04","modifiedFileCount":"46","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-03-12 12:16:05","codes":[{"authorDate":"2021-03-12 12:16:05","commitOrder":4,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/read-write-splitting.yaml\"));\n            case SHARDING_READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-read-write-splitting.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2021-03-12 12:16:05","endLine":45,"groupId":"841","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fc/0756186f5be5fb2eee85eaf69ef945d16b0223.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/replica-query.yaml\"));\n            case SHARDING_REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-replica-query.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2021-03-12 12:16:05","commitOrder":4,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/read-write-splitting.yaml\"));\n            case SHARDING_READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-read-write-splitting.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2021-03-12 12:16:05","endLine":45,"groupId":"841","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/52/43a7a19bca6b79baeff214752f600e0c258263.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/replica-query.yaml\"));\n            case SHARDING_REPLICA_QUERY:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-replica-query-range.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlRangeDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"}],"commitId":"1c1016d1b98fd3dd8cd95b08d22a3c6b1a688a40","commitMessage":"@@@Merge pull request #9638 from yu199195/rename-replica-query\n\nrefactor replica query to read-write-splitting","date":"2021-03-12 12:16:05","modifiedFileCount":"54","status":"M","submitter":"Zhang Yonglun"},{"authorTime":"2021-05-02 00:11:18","codes":[{"authorDate":"2021-05-02 00:11:18","commitOrder":5,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case READWRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/readwrite-splitting.yaml\"));\n            case SHARDING_READWRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-readwrite-splitting.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2021-05-02 00:11:18","endLine":45,"groupId":"10152","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/75/77606fde48cc2379391d19c9155076f4156555.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables.yaml\"));\n            case READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/read-write-splitting.yaml\"));\n            case SHARDING_READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-read-write-splitting.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2021-05-02 00:11:18","commitOrder":5,"curCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case READWRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/readwrite-splitting.yaml\"));\n            case SHARDING_READWRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-readwrite-splitting.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","date":"2021-05-02 00:11:18","endLine":45,"groupId":"10152","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"newInstance","params":"(finalShardingTypeshardingType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/81/ac3cc6bb38fef5fa0c9af53e25b9cce6fdcfba.src","preCode":"    public static DataSource newInstance(final ShardingType shardingType) throws SQLException, IOException {\n        switch (shardingType) {\n            case SHARDING_DATABASES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-range.yaml\"));\n            case SHARDING_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-tables-range.yaml\"));\n            case SHARDING_DATABASES_AND_TABLES:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-databases-tables-range.yaml\"));\n            case READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/read-write-splitting.yaml\"));\n            case SHARDING_READ_WRITE_SPLITTING:\n                return YamlShardingSphereDataSourceFactory.createDataSource(getFile(\"/META-INF/sharding-read-write-splitting.yaml\"));\n            default:\n                throw new UnsupportedOperationException(shardingType.name());\n        }\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlRangeDataSourceFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"}],"commitId":"6e3458eda6daab54143ad794c3b1ad04f7ed95b0","commitMessage":"@@@Rename read-write to readwrite (#10236)\n\n* Update doc\n\n* Rename read-write to readwrite","date":"2021-05-02 00:11:18","modifiedFileCount":"76","status":"M","submitter":"Liang Zhang"}]
