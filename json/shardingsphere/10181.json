[{"authorTime":"2021-03-12 12:16:05","codes":[{"authorDate":"2021-03-12 12:16:05","commitOrder":1,"curCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-03-12 12:16:05","endLine":90,"groupId":"12988","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createReadWriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/32f932e92ea3d9b98cb23ea81ba9ad1a81fde2.src","preCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadWriteSplittingConfigurationRange.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2021-03-12 12:16:05","commitOrder":1,"curCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-03-12 12:16:05","endLine":89,"groupId":"12988","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createReadWriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/d9e6636dc105543cab4028e131c29a5a8f31b3.src","preCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadWriteSplittingConfigurationPrecise.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"1c1016d1b98fd3dd8cd95b08d22a3c6b1a688a40","commitMessage":"@@@Merge pull request #9638 from yu199195/rename-replica-query\n\nrefactor replica query to read-write-splitting","date":"2021-03-12 12:16:05","modifiedFileCount":"54","status":"B","submitter":"Zhang Yonglun"},{"authorTime":"2021-03-19 15:05:10","codes":[{"authorDate":"2021-03-19 15:05:10","commitOrder":2,"curCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-03-19 15:05:10","endLine":90,"groupId":"3589","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createReadWriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ea/62bbde6e35dbe9bd7f93f4300c7352666e5496.src","preCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadWriteSplittingConfigurationRange.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-03-19 15:05:10","commitOrder":2,"curCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-03-19 15:05:10","endLine":89,"groupId":"3589","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createReadWriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/51/9cba93a7b50724f533480d292d02199cdf1149.src","preCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadWriteSplittingConfigurationPrecise.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"dc53bdb803018d00baac0f2cb0efb2f333da43e8","commitMessage":"@@@database discovery and read write splitting integration aware (#9734)\n\n* database discovery and read write splitting integration\n\n* database discovery and read write splitting integration\n\n* fix checkstyle\n\n* fix examples","date":"2021-03-19 15:05:10","modifiedFileCount":"28","status":"M","submitter":"xiaoyu"},{"authorTime":"2021-05-06 23:57:29","codes":[{"authorDate":"2021-05-06 23:57:29","commitOrder":3,"curCode":"    private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-05-06 23:57:29","endLine":90,"groupId":"3589","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createReadwriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/04/5585bda022c0ccd4c076daa60276e5e6fe2036.src","preCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadwriteSplittingConfigurationRange.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-05-06 23:57:29","commitOrder":3,"curCode":"    private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-05-06 23:57:29","endLine":89,"groupId":"3589","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createReadwriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0c/dbc2ca8256501483c00eb520e40de7e0ddd081.src","preCode":"    private static ReadWriteSplittingRuleConfiguration createReadWriteSplittingConfiguration() {\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadwriteSplittingConfigurationPrecise.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"c0a66492b6656ca15aac8cd880350a91c1e45bb0","commitMessage":"@@@Rename ReadWrite to Readwrite (#10261)\n\n* Rename ReadWriteSplittingRule\n\n* Rename ReadwriteSplittingDataSourceRuleConfiguration\n\n* Rename ReadwriteSplittingSQLRouter\n\n* Rename ReadwriteSplittingDataSourceRouter\n\n* Rename ReadwriteSplittingRule\n\n* Rename ReadwriteSplittingDataSourceRule\n\n* Rename AlgorithmProvidedReadwriteSplittingRuleBuilder\n\n* Rename ReadwriteSplittingRuleBuilder\n\n* rename ReadwriteSplittingOrder\n\n* Rename AlgorithmProvidedReadwriteSplittingRuleConfiguration\n\n* Rename YamlReadwriteSplittingRuleConfiguration\n\n* Rename YamlReadwriteSplittingDataSourceRuleConfiguration\n\n* Rename AlterReadwriteSplittingRuleStatementConverter\n\n* Rename CreateReadwriteSplittingRuleStatementConverter\n\n* Rename ReadwriteSplittingRuleAlgorithmProviderConfigurationYamlSwapper\n\n* Rename ReadwriteSplittingRuleConfigurationYamlSwapper\n\n* Rename ReadwriteSplittingAlgorithmProvidedBeanRegistry\n\n* Rename ReadwriteSplittingSpringBootCondition\n\n* Rename YamlReadwriteSplittingRuleSpringBootConfiguration\n\n* Rename ReadwriteSplittingRuleSpringbootConfiguration\n\n* Rename ReadwriteSplittingSpringBootStarterTest\n\n* Rename YamlGovernanceReadwriteSplittingIntegrateTest\n\n* Rename CreateReadwriteSplittingRuleStatement\n\n* Rename ReadwriteSplittingRuleSegment\n\n* Rename GovernanceSpringBootRegistryReadwriteSplittingTest\n\n* Rename AlterReadwriteSplittingRuleStatement\n\n* Rename ReadwriteSplittingRuleConfigurationChecker\n\n* Rename LocalShardingReadwriteSplittingConfiguration\n\n* Rename ReadwriteSplittingRuleNotExistedException\n\n* Rename ReadwriteSplittingRuleCreateExistsException\n\n* Rename AddReadwriteSplittingRuleDataSourcesExistedException\n\n* Rename ReadwriteSplittingRuleDataSourcesNotExistedException\n\n* Rename ReadwriteSplittingRuleQueryBackendHandler\n\n* Rename DropReadwriteSplittingRuleBackendHandler\n\n* Rename GovernanceSpringBootReadwriteSplittingTest\n\n* Rename AlterReadwriteSplittingRuleBackendHandler\n\n* Rename CreateReadwriteSplittingRuleBackendHandler\n\n* Rename GovernanceShardingReadwriteSplittingNamespaceTest\n\n* Rename YamlGovernanceShardingWithReadwriteSplittingIntegrateTest\n\n* Rename CloudReadwriteSplittingConfiguration\n\n* Rename ShardingReadwriteSplittingConfigurationPrecise\n\n* Rename AbstractShardingSphereDataSourceForReadwriteSplittingTest\n\n* Rename AlgorithmProvidedReadwriteSplittingRuleConfigurationChecker\n\n* Rename ReadwriteSplittingSpringNamespaceTest\n\n* Rename ReadwriteSplittingRuleBeanDefinitionTag\n\n* Rename AbstractReadwriteSplittingRuleConfigurationChecker\n\n* Rename ReadwriteSplittingNamespaceHandler\n\n* Rename ReadwriteSplittingRuleBeanDefinitionParser\n\n* Rename ReadWrite to Readwrite with java class\n\n* Rename ReadWrite to Readwrite with docs","date":"2021-05-06 23:57:29","modifiedFileCount":"20","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-09-05 19:00:52","codes":[{"authorDate":"2021-09-05 19:00:52","commitOrder":4,"curCode":"    private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null, false);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null, false);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-09-05 19:00:52","endLine":90,"groupId":"10181","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"createReadwriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7c/22b081c3a8a3c5738d46e4c45d028a90174687.src","preCode":"    private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadwriteSplittingConfigurationRange.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-09-05 19:00:52","commitOrder":4,"curCode":"    private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null, false);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null, false);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","date":"2021-09-05 19:00:52","endLine":89,"groupId":"10181","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createReadwriteSplittingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/47/731452dc3ba2a45d74981b8e06d9a98bd33d22.src","preCode":"    private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n","realPath":"examples/shardingsphere-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/config/ShardingReadwriteSplittingConfigurationPrecise.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"b25419ae9f4af7a98255740bc603c34d82f34e97","commitMessage":"@@@Fixes #12158.  add configuration for whether enable consistent routing for readwrite splitting. (#12209)\n\n* For #12158.  Add the consistencyEnabled configuration for readwrite-splitting API & core.\n\n* For #12158.  Add the consistencyEnabled default value for DistSQL handler.\n\n* Add consistencyEnabled configuration and parser for Spring Namespace.\n\n* Add consistencyEnabled configuration for examples.\n\n* update documents of readwrite splitting.\n\n* fix CI.\n\n* update more test cases.\n\n* Change `consistencyEnabled` to `queryConsistent`.\n\n* revert blank line.","date":"2021-09-05 19:00:52","modifiedFileCount":"30","status":"M","submitter":"Raigor"}]
