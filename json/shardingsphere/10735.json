[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    private static Optional<ShardingStatementValidator> getDDLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof CreateTableStatement) {\n            return Optional.of(new ShardingCreateTableStatementValidator());\n        }\n        if (sqlStatement instanceof CreateFunctionStatement) {\n            return Optional.of(new ShardingCreateFunctionStatementValidator());\n        }\n        if (sqlStatement instanceof CreateProcedureStatement) {\n            return Optional.of(new ShardingCreateProcedureStatementValidator());\n        }\n        if (sqlStatement instanceof CreateViewStatement) {\n            return Optional.of(new ShardingCreateViewStatementValidator());\n        }\n        if (sqlStatement instanceof CreateIndexStatement) {\n            return Optional.of(new ShardingCreateIndexStatementValidator());\n        }\n        if (sqlStatement instanceof AlterTableStatement) {\n            return Optional.of(new ShardingAlterTableStatementValidator());\n        }\n        if (sqlStatement instanceof AlterViewStatement) {\n            return Optional.of(new ShardingAlterViewStatementValidator());\n        }\n        if (sqlStatement instanceof AlterIndexStatement) {\n            return Optional.of(new ShardingAlterIndexStatementValidator());\n        }\n        if (sqlStatement instanceof DropTableStatement) {\n            return Optional.of(new ShardingDropTableStatementValidator());\n        }\n        if (sqlStatement instanceof DropIndexStatement) {\n            return Optional.of(new ShardingDropIndexStatementValidator());\n        }\n        if (sqlStatement instanceof PostgreSQLPrepareStatement) {\n            return Optional.of(new ShardingPrepareStatementValidator());\n        }\n        return Optional.empty();\n    }\n","date":"2021-06-04 22:49:49","endLine":115,"groupId":"11074","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDDLStatementValidator","params":"(finalSQLStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/f881a441ef4ba981c3a95cdca3e4c2de89a5da.src","preCode":"    private static Optional<ShardingStatementValidator> getDDLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof CreateTableStatement) {\n            return Optional.of(new ShardingCreateTableStatementValidator());\n        }\n        if (sqlStatement instanceof CreateFunctionStatement) {\n            return Optional.of(new ShardingCreateFunctionStatementValidator());\n        }\n        if (sqlStatement instanceof CreateProcedureStatement) {\n            return Optional.of(new ShardingCreateProcedureStatementValidator());\n        }\n        if (sqlStatement instanceof CreateViewStatement) {\n            return Optional.of(new ShardingCreateViewStatementValidator());\n        }\n        if (sqlStatement instanceof CreateIndexStatement) {\n            return Optional.of(new ShardingCreateIndexStatementValidator());\n        }\n        if (sqlStatement instanceof AlterTableStatement) {\n            return Optional.of(new ShardingAlterTableStatementValidator());\n        }\n        if (sqlStatement instanceof AlterViewStatement) {\n            return Optional.of(new ShardingAlterViewStatementValidator());\n        }\n        if (sqlStatement instanceof AlterIndexStatement) {\n            return Optional.of(new ShardingAlterIndexStatementValidator());\n        }\n        if (sqlStatement instanceof DropTableStatement) {\n            return Optional.of(new ShardingDropTableStatementValidator());\n        }\n        if (sqlStatement instanceof DropIndexStatement) {\n            return Optional.of(new ShardingDropIndexStatementValidator());\n        }\n        if (sqlStatement instanceof PostgreSQLPrepareStatement) {\n            return Optional.of(new ShardingPrepareStatementValidator());\n        }\n        return Optional.empty();\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/ShardingStatementValidatorFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    private static Optional<ShardingStatementValidator> getDMLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof InsertStatement) {\n            return Optional.of(new ShardingInsertStatementValidator());\n        }\n        if (sqlStatement instanceof UpdateStatement) {\n            return Optional.of(new ShardingUpdateStatementValidator());\n        }\n        if (sqlStatement instanceof DeleteStatement) {\n            return Optional.of(new ShardingDeleteStatementValidator());\n        }\n        if (sqlStatement instanceof SelectStatement) {\n            return Optional.of(new ShardingSelectStatementValidator());\n        }\n        return Optional.empty();\n    }\n","date":"2021-06-04 22:49:49","endLine":131,"groupId":"11074","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDMLStatementValidator","params":"(finalSQLStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/f881a441ef4ba981c3a95cdca3e4c2de89a5da.src","preCode":"    private static Optional<ShardingStatementValidator> getDMLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof InsertStatement) {\n            return Optional.of(new ShardingInsertStatementValidator());\n        }\n        if (sqlStatement instanceof UpdateStatement) {\n            return Optional.of(new ShardingUpdateStatementValidator());\n        }\n        if (sqlStatement instanceof DeleteStatement) {\n            return Optional.of(new ShardingDeleteStatementValidator());\n        }\n        if (sqlStatement instanceof SelectStatement) {\n            return Optional.of(new ShardingSelectStatementValidator());\n        }\n        return Optional.empty();\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/ShardingStatementValidatorFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-08-16 18:35:28","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":2,"curCode":"    private static Optional<ShardingStatementValidator> getDDLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof CreateTableStatement) {\n            return Optional.of(new ShardingCreateTableStatementValidator());\n        }\n        if (sqlStatement instanceof CreateFunctionStatement) {\n            return Optional.of(new ShardingCreateFunctionStatementValidator());\n        }\n        if (sqlStatement instanceof CreateProcedureStatement) {\n            return Optional.of(new ShardingCreateProcedureStatementValidator());\n        }\n        if (sqlStatement instanceof CreateViewStatement) {\n            return Optional.of(new ShardingCreateViewStatementValidator());\n        }\n        if (sqlStatement instanceof CreateIndexStatement) {\n            return Optional.of(new ShardingCreateIndexStatementValidator());\n        }\n        if (sqlStatement instanceof AlterTableStatement) {\n            return Optional.of(new ShardingAlterTableStatementValidator());\n        }\n        if (sqlStatement instanceof AlterViewStatement) {\n            return Optional.of(new ShardingAlterViewStatementValidator());\n        }\n        if (sqlStatement instanceof AlterIndexStatement) {\n            return Optional.of(new ShardingAlterIndexStatementValidator());\n        }\n        if (sqlStatement instanceof DropTableStatement) {\n            return Optional.of(new ShardingDropTableStatementValidator());\n        }\n        if (sqlStatement instanceof DropIndexStatement) {\n            return Optional.of(new ShardingDropIndexStatementValidator());\n        }\n        if (sqlStatement instanceof PostgreSQLPrepareStatement) {\n            return Optional.of(new ShardingPrepareStatementValidator());\n        }\n        return Optional.empty();\n    }\n","date":"2021-06-04 22:49:49","endLine":115,"groupId":"10735","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDDLStatementValidator","params":"(finalSQLStatementsqlStatement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/f881a441ef4ba981c3a95cdca3e4c2de89a5da.src","preCode":"    private static Optional<ShardingStatementValidator> getDDLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof CreateTableStatement) {\n            return Optional.of(new ShardingCreateTableStatementValidator());\n        }\n        if (sqlStatement instanceof CreateFunctionStatement) {\n            return Optional.of(new ShardingCreateFunctionStatementValidator());\n        }\n        if (sqlStatement instanceof CreateProcedureStatement) {\n            return Optional.of(new ShardingCreateProcedureStatementValidator());\n        }\n        if (sqlStatement instanceof CreateViewStatement) {\n            return Optional.of(new ShardingCreateViewStatementValidator());\n        }\n        if (sqlStatement instanceof CreateIndexStatement) {\n            return Optional.of(new ShardingCreateIndexStatementValidator());\n        }\n        if (sqlStatement instanceof AlterTableStatement) {\n            return Optional.of(new ShardingAlterTableStatementValidator());\n        }\n        if (sqlStatement instanceof AlterViewStatement) {\n            return Optional.of(new ShardingAlterViewStatementValidator());\n        }\n        if (sqlStatement instanceof AlterIndexStatement) {\n            return Optional.of(new ShardingAlterIndexStatementValidator());\n        }\n        if (sqlStatement instanceof DropTableStatement) {\n            return Optional.of(new ShardingDropTableStatementValidator());\n        }\n        if (sqlStatement instanceof DropIndexStatement) {\n            return Optional.of(new ShardingDropIndexStatementValidator());\n        }\n        if (sqlStatement instanceof PostgreSQLPrepareStatement) {\n            return Optional.of(new ShardingPrepareStatementValidator());\n        }\n        return Optional.empty();\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/ShardingStatementValidatorFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"},{"authorDate":"2021-08-16 18:35:28","commitOrder":2,"curCode":"    private static Optional<ShardingStatementValidator> getDMLStatementValidator(final SQLStatement sqlStatement, final ShardingConditions shardingConditions) {\n        if (sqlStatement instanceof InsertStatement) {\n            return Optional.of(new ShardingInsertStatementValidator(shardingConditions));\n        }\n        if (sqlStatement instanceof UpdateStatement) {\n            return Optional.of(new ShardingUpdateStatementValidator());\n        }\n        if (sqlStatement instanceof DeleteStatement) {\n            return Optional.of(new ShardingDeleteStatementValidator());\n        }\n        if (sqlStatement instanceof SelectStatement) {\n            return Optional.of(new ShardingSelectStatementValidator(shardingConditions));\n        }\n        return Optional.empty();\n    }\n","date":"2021-08-16 18:35:28","endLine":133,"groupId":"10735","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getDMLStatementValidator","params":"(finalSQLStatementsqlStatement@finalShardingConditionsshardingConditions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3b/cfb44e4056095abc934814dcfdddd43f8bb468.src","preCode":"    private static Optional<ShardingStatementValidator> getDMLStatementValidator(final SQLStatement sqlStatement) {\n        if (sqlStatement instanceof InsertStatement) {\n            return Optional.of(new ShardingInsertStatementValidator());\n        }\n        if (sqlStatement instanceof UpdateStatement) {\n            return Optional.of(new ShardingUpdateStatementValidator());\n        }\n        if (sqlStatement instanceof DeleteStatement) {\n            return Optional.of(new ShardingDeleteStatementValidator());\n        }\n        if (sqlStatement instanceof SelectStatement) {\n            return Optional.of(new ShardingSelectStatementValidator());\n        }\n        return Optional.empty();\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/ShardingStatementValidatorFactory.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"618115e290001a48aabff2b02c4feb61b16fd0d0","commitMessage":"@@@Reduce the creation of sharding conditions (#11841)\n\n* Reduce the creation of sharding conditions\n\n* optimize code\n\n* optimize code\n\n* fix checkstyle\n\n* optimize code","date":"2021-08-16 18:35:28","modifiedFileCount":"9","status":"M","submitter":"Zhengqiang Duan"}]
