[{"authorTime":"2021-09-07 22:18:12","codes":[{"authorDate":"2021-09-07 22:18:12","commitOrder":1,"curCode":"    public synchronized void renew(final DisabledStateChangedEvent event) {\n        GovernanceSchema governanceSchema = event.getGovernanceSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(governanceSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new DataSourceNameDisabledEvent(governanceSchema.getDataSourceName(), event.isDisabled()));\n            }\n        }\n    }\n","date":"2021-09-07 22:18:12","endLine":220,"groupId":"7825","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"renew","params":"(finalDisabledStateChangedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/49/cea816f454bf483ff6cf17d4b99e3d169cb3a7.src","preCode":"    public synchronized void renew(final DisabledStateChangedEvent event) {\n        GovernanceSchema governanceSchema = event.getGovernanceSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(governanceSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new DataSourceNameDisabledEvent(governanceSchema.getDataSourceName(), event.isDisabled()));\n            }\n        }\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"B"},{"authorDate":"2021-09-07 22:18:12","commitOrder":1,"curCode":"    public synchronized void renew(final PrimaryStateChangedEvent event) {\n        GovernanceSchema governanceSchema = event.getGovernanceSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(governanceSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new PrimaryDataSourceChangedEvent(governanceSchema.getSchemaName(), governanceSchema.getDataSourceName(), event.getPrimaryDataSourceName()));\n            }\n        }\n    }\n","date":"2021-09-07 22:18:12","endLine":236,"groupId":"7825","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"renew","params":"(finalPrimaryStateChangedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/49/cea816f454bf483ff6cf17d4b99e3d169cb3a7.src","preCode":"    public synchronized void renew(final PrimaryStateChangedEvent event) {\n        GovernanceSchema governanceSchema = event.getGovernanceSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(governanceSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new PrimaryDataSourceChangedEvent(governanceSchema.getSchemaName(), governanceSchema.getDataSourceName(), event.getPrimaryDataSourceName()));\n            }\n        }\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"B"}],"commitId":"e73cb20c8a97bdf8c7bd7b46eb40d30034898a90","commitMessage":"@@@Split ContextManagerBuilder for build one time only and put renew into coordinator (#12276)\n\n","date":"2021-09-07 22:18:12","modifiedFileCount":"1","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-09-09 21:32:32","codes":[{"authorDate":"2021-09-09 21:32:32","commitOrder":2,"curCode":"    public synchronized void renew(final DisabledStateChangedEvent event) {\n        ClusterSchema clusterSchema = event.getClusterSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(clusterSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new DataSourceNameDisabledEvent(clusterSchema.getDataSourceName(), event.isDisabled()));\n            }\n        }\n    }\n","date":"2021-09-09 21:32:32","endLine":219,"groupId":"111969","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"renew","params":"(finalDisabledStateChangedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/852793ca9a75f048cd63e3f2c0160fcb5e93b5.src","preCode":"    public synchronized void renew(final DisabledStateChangedEvent event) {\n        GovernanceSchema governanceSchema = event.getGovernanceSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(governanceSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new DataSourceNameDisabledEvent(governanceSchema.getDataSourceName(), event.isDisabled()));\n            }\n        }\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"},{"authorDate":"2021-09-09 21:32:32","commitOrder":2,"curCode":"    public synchronized void renew(final PrimaryStateChangedEvent event) {\n        ClusterSchema clusterSchema = event.getClusterSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(clusterSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new PrimaryDataSourceChangedEvent(clusterSchema.getSchemaName(), clusterSchema.getDataSourceName(), event.getPrimaryDataSourceName()));\n            }\n        }\n    }\n","date":"2021-09-09 21:32:32","endLine":235,"groupId":"111969","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"renew","params":"(finalPrimaryStateChangedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ed/852793ca9a75f048cd63e3f2c0160fcb5e93b5.src","preCode":"    public synchronized void renew(final PrimaryStateChangedEvent event) {\n        GovernanceSchema governanceSchema = event.getGovernanceSchema();\n        Collection<ShardingSphereRule> rules = contextManager.getMetaDataContexts().getMetaDataMap().get(governanceSchema.getSchemaName()).getRuleMetaData().getRules();\n        for (ShardingSphereRule each : rules) {\n            if (each instanceof StatusContainedRule) {\n                ((StatusContainedRule) each).updateStatus(new PrimaryDataSourceChangedEvent(governanceSchema.getSchemaName(), governanceSchema.getDataSourceName(), event.getPrimaryDataSourceName()));\n            }\n        }\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"b354239dc47b022c13df242bfd853f10ed2aacb6","commitMessage":"@@@Move governance package to coordinator (#12319)\n\n* Move governance package to coordinator\n\n* Move governance package to coordinator","date":"2021-09-09 21:32:32","modifiedFileCount":"9","status":"M","submitter":"Liang Zhang"}]
