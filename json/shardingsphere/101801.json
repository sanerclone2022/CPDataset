[{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-05-16 16:30:07","commitOrder":1,"curCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResult(queryResult);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-05-16 16:30:07","endLine":68,"groupId":"9876","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0f/a24f2764d4dc068404bdfa9ae0e76849274464.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResult(queryResult);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/stream/StreamMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2020-05-16 16:30:07","commitOrder":1,"curCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResult);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-05-16 16:30:07","endLine":71,"groupId":"2588","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bd/47f04f46b4e1879517613b0f089449ed38cffc.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResult);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"60b82df2df371512c4a2d40f562a6ffa1349c2e1","commitMessage":"@@@Rename shardingsphere-underlying to shardingsphere-infra (#5638)\n\n* Rename shardingsphere-underlying to shardingsphere-infra\n\n* Rename shardingsphere-infra's subprojects\n\n* Rename shardingsphere-infra's subprojects\n\n* rename package from org.apache.shardingsphere.underlying.common to org.apache.shardingsphere.infra\n\n* rename package from org.apache.shardingsphere.underlying.executor to org.apache.shardingsphere.infra.executor\n\n* rename package from org.apache.shardingsphere.underlying.merge to org.apache.shardingsphere.infra.merge\n\n* rename package from org.apache.shardingsphere.underlying.route to org.apache.shardingsphere.infra.route\n\n* rename package from org.apache.shardingsphere.underlying.rewrite to org.apache.shardingsphere.infra.rewrite","date":"2020-05-16 16:30:07","modifiedFileCount":"488","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-11-26 20:18:06","codes":[{"authorDate":"2020-11-26 20:18:06","commitOrder":2,"curCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResultSet queryResultSet = mock(QueryResultSet.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResultSet(queryResultSet);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-26 20:18:06","endLine":68,"groupId":"11027","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d0/edd845b29fb574efc801a0b0057813c65f43c7.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResult(queryResult);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/stream/StreamMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-11-26 20:18:06","commitOrder":2,"curCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResultSet queryResultSet = mock(QueryResultSet.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResultSet);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-26 20:18:06","endLine":71,"groupId":"897","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5d/e0ca9f026c63dc606df19319fd4fe3661b0b33.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResult);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"c3f4d5967f8265e4b06ef2163396db54d3f09014","commitMessage":"@@@Rename QueryResult to QueryResultSet (#8365)\n\n","date":"2020-11-26 20:18:06","modifiedFileCount":"68","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-28 00:27:33","codes":[{"authorDate":"2020-11-28 00:27:33","commitOrder":3,"curCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResultSet = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResultSet(queryResultSet);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-28 00:27:33","endLine":68,"groupId":"11027","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7b/af96f5005a28226f0773cdd8c50a7911c3ca59.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResultSet queryResultSet = mock(QueryResultSet.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResultSet(queryResultSet);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/stream/StreamMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-11-28 00:27:33","commitOrder":3,"curCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResultSet = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResultSet);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-28 00:27:33","endLine":71,"groupId":"897","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/39/9f461d1f7b4e58934758bd0248123957cfd21b.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResultSet queryResultSet = mock(QueryResultSet.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResultSet);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"e90bce71f102ae14ab97b92895a5ebdcf1b5d527","commitMessage":"@@@Add more methods of QueryResultSet for decouple ResultSetMetaData (#8389)\n\n* Refactor ProxyJDBCExecutorCallback\n\n* Add more methods of QueryResultSet for decouple ResultSetMetaData\n\n* Remove useless QueryHeaderBuilder method\n\n* Merge QueryResultSet and ExecuteQueryResult\n\n* Merge QueryResultSet and ExecuteQueryResult","date":"2020-11-28 00:27:33","modifiedFileCount":"69","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-28 01:55:00","codes":[{"authorDate":"2020-11-28 01:55:00","commitOrder":4,"curCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResult = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResult(queryResult);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-28 01:55:00","endLine":68,"groupId":"9876","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/91/9b954e88f9f827eec90cc49775975298875f3b.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResultSet = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResultSet(queryResultSet);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/stream/StreamMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-11-28 01:55:00","commitOrder":4,"curCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResult = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResult);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-28 01:55:00","endLine":71,"groupId":"2588","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/43/37ef612f35e16731d02150f994dd6daa531c60.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResultSet = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResultSet.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResultSet);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"655940e8c62e04cd1395d3de7a9e394f667a934c","commitMessage":"@@@Rename QueryResultSet to ExecuteQueryResult (#8393)\n\n","date":"2020-11-28 01:55:00","modifiedFileCount":"64","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-28 20:13:42","codes":[{"authorDate":"2020-11-28 20:13:42","commitOrder":5,"curCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResult(queryResult);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-28 20:13:42","endLine":68,"groupId":"101801","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/25/a9d03ac8b9af4762922859055efcc6a831b18a.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResult = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        streamMergedResult.setCurrentQueryResult(queryResult);\n        assertThat(streamMergedResult.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/stream/StreamMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-11-28 20:13:42","commitOrder":5,"curCode":"    public void assertGetInputStream() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResult);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","date":"2020-11-28 20:13:42","endLine":71,"groupId":"101801","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"assertGetInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/dd/b46e9f5053032458367a2afe199a9e5ee10cdd.src","preCode":"    public void assertGetInputStream() throws SQLException {\n        ExecuteQueryResult queryResult = mock(ExecuteQueryResult.class);\n        InputStream value = mock(InputStream.class);\n        when(queryResult.getInputStream(1, \"Ascii\")).thenReturn(value);\n        TransparentMergedResult actual = new TransparentMergedResult(queryResult);\n        assertThat(actual.getInputStream(1, \"Ascii\"), is(value));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"240920940faa05e33f8734bef9103a7f02aa62f9","commitMessage":"@@@Rename QueryResult & UpdateResult (#8398)\n\n* Rename UpdateResult\n\n* Rename QueryResult","date":"2020-11-28 20:13:42","modifiedFileCount":"70","status":"M","submitter":"Liang Zhang"}]
