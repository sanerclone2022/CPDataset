[{"authorTime":"2020-06-13 15:30:35","codes":[{"authorDate":"2020-06-13 15:30:35","commitOrder":1,"curCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return new LinkedList<>();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-13 15:30:35","endLine":95,"groupId":"3146","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseTableRulesConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/06/6975e981154b057c6f70c69da90e3daef75513.src","preCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return new LinkedList<>();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/rule/ShardingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2020-06-13 15:30:35","commitOrder":1,"curCode":"    private List<BeanDefinition> parseAutoTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return new LinkedList<>();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseAutoTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-13 15:30:35","endLine":139,"groupId":"3146","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseAutoTableRulesConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/06/6975e981154b057c6f70c69da90e3daef75513.src","preCode":"    private List<BeanDefinition> parseAutoTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return new LinkedList<>();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseAutoTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/rule/ShardingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"6d4e2ef742bd629162dd6466ad1fe1fbeb7f29d4","commitMessage":"@@@Add shardingsphere-jdbc-spring-infra module (#6025)\n\n* refactor org.apache.shardingsphere.sharding.spring.namespace.parser structure\n\n* Add KeyGenerateStrategyBeanDefinitionTag\n\n* refactor ShardingRuleBeanDefinitionTag\n\n* refactor KeyGenerateStrategyBeanDefinitionTag\n\n* rename ShardingAlgorithmBeanDefinitionTag\n\n* Add shardingsphere-jdbc-spring-infra module\n\n* rename shardingsphere-jdbc-spring-boot-starter-infra module","date":"2020-06-13 15:30:35","modifiedFileCount":"1","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-06-13 19:59:43","codes":[{"authorDate":"2020-06-13 19:59:43","commitOrder":2,"curCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return Collections.emptyList();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-13 19:59:43","endLine":71,"groupId":"10278","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseTableRulesConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/204d52f87e28aba123d089a684b4c36c2ce052.src","preCode":"    private List<BeanDefinition> parseTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return new LinkedList<>();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/rule/ShardingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-06-13 19:59:43","commitOrder":2,"curCode":"    private List<BeanDefinition> parseAutoTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return Collections.emptyList();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseAutoTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","date":"2020-06-13 19:59:43","endLine":115,"groupId":"10278","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseAutoTableRulesConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/204d52f87e28aba123d089a684b4c36c2ce052.src","preCode":"    private List<BeanDefinition> parseAutoTableRulesConfiguration(final Element element) {\n        Element tableRulesElement = DomUtils.getChildElementByTagName(element, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULES_TAG);\n        if (null == tableRulesElement) {\n            return new LinkedList<>();\n        }\n        List<Element> tableRuleElements = DomUtils.getChildElementsByTagName(tableRulesElement, ShardingRuleBeanDefinitionTag.AUTO_TABLE_RULE_TAG);\n        List<BeanDefinition> result = new ManagedList<>(tableRuleElements.size());\n        for (Element each : tableRuleElements) {\n            result.add(parseAutoTableRuleConfiguration(each));\n        }\n        return result;\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/rule/ShardingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"8c79331f53a6f380450e91bc91acf01bd0fe5b08","commitMessage":"@@@Add shardingsphere-jdbc-spring-namespace-infra module (#6026)\n\n* Add shardingsphere-jdbc-spring-namespace-infra module\n\n* Add ShardingSphereAlgorithmBeanDefinitionParser\n\n* Refactor ShardingSphereAlgorithmBeanDefinitionParser\n\n* Refactor tag\n\n* remove useless codes\n\n* Add ShardingSphereAlgorithmBeanRegistry\n\n* refactor AlgorithmProvidedEncryptRuleConfiguration\n\n* refactor AlgorithmProvidedShardingRuleConfiguration\n\n* for code style","date":"2020-06-13 19:59:43","modifiedFileCount":"19","status":"M","submitter":"Liang Zhang"}]
