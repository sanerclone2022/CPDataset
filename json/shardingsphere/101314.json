[{"authorTime":"2020-05-16 14:46:06","codes":[{"authorDate":"2020-05-16 14:46:06","commitOrder":1,"curCode":"    public void assertWrite() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        new MySQLHandshakePacket(1000, authPluginData).write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.SERVER_VERSION);\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsUpper());\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n    }\n","date":"2020-05-16 14:46:06","endLine":103,"groupId":"250","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cd/c9bbabe94093e6b9d77bb2eabb2427215ae1a1.src","preCode":"    public void assertWrite() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        new MySQLHandshakePacket(1000, authPluginData).write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.SERVER_VERSION);\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsUpper());\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/handshake/MySQLHandshakePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2020-05-16 14:46:06","commitOrder":1,"curCode":"    public void assertWriteWithClientPluginAuth() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        MySQLHandshakePacket actual = new MySQLHandshakePacket(1000, authPluginData);\n        actual.setAuthPluginName(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION);\n        actual.write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.SERVER_VERSION);\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue() >> 16);\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n        verify(payload).writeStringNul(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION.getMethodName());\n    }\n","date":"2020-05-16 14:46:06","endLine":123,"groupId":"5976","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertWriteWithClientPluginAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/cd/c9bbabe94093e6b9d77bb2eabb2427215ae1a1.src","preCode":"    public void assertWriteWithClientPluginAuth() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        MySQLHandshakePacket actual = new MySQLHandshakePacket(1000, authPluginData);\n        actual.setAuthPluginName(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION);\n        actual.write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.SERVER_VERSION);\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue() >> 16);\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n        verify(payload).writeStringNul(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION.getMethodName());\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/handshake/MySQLHandshakePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"d928165ea4f6ecf2983b2a3a8670ff66ffe63647","commitMessage":"@@@Rename shardingsphere-database-protocol to shardingsphere-db-protocol (#5637)\n\n* rename shardingsphere-database-protocol to shardingsphere-db-protocol\n\n* rename package org.apache.shardingsphere.database to org.apache.shardingsphere.db","date":"2020-05-16 14:46:06","modifiedFileCount":"60","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-07-06 15:11:20","codes":[{"authorDate":"2020-07-06 15:11:20","commitOrder":2,"curCode":"    public void assertWrite() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        new MySQLHandshakePacket(1000, authPluginData).write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.getServerVersion());\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsUpper());\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n    }\n","date":"2020-07-06 15:11:20","endLine":103,"groupId":"250","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/70/3571066263f1a3c01b6194d2c052e2c3a0a706.src","preCode":"    public void assertWrite() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        new MySQLHandshakePacket(1000, authPluginData).write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.SERVER_VERSION);\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsUpper());\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/handshake/MySQLHandshakePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2020-07-06 15:11:20","commitOrder":2,"curCode":"    public void assertWriteWithClientPluginAuth() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        MySQLHandshakePacket actual = new MySQLHandshakePacket(1000, authPluginData);\n        actual.setAuthPluginName(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION);\n        actual.write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.getServerVersion());\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue() >> 16);\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n        verify(payload).writeStringNul(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION.getMethodName());\n    }\n","date":"2020-07-06 15:11:20","endLine":123,"groupId":"5976","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertWriteWithClientPluginAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/70/3571066263f1a3c01b6194d2c052e2c3a0a706.src","preCode":"    public void assertWriteWithClientPluginAuth() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        MySQLHandshakePacket actual = new MySQLHandshakePacket(1000, authPluginData);\n        actual.setAuthPluginName(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION);\n        actual.write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.SERVER_VERSION);\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue() >> 16);\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n        verify(payload).writeStringNul(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION.getMethodName());\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/handshake/MySQLHandshakePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"7809caa085355a81f81544f7101aab42a01d37fa","commitMessage":"@@@Fix 6239 (#6270)\n\n* add usage for proxy startup command\n\n* dynamic set server version when proxy startup\n\n* fix check style\n\n* fix code review suggestions\n\n* fix code review suggestions\n\n* fix code review suggestions","date":"2020-07-06 15:11:20","modifiedFileCount":"5","status":"M","submitter":"xbkaishui"},{"authorTime":"2021-04-12 18:54:17","codes":[{"authorDate":"2021-04-12 18:54:17","commitOrder":3,"curCode":"    public void assertWrite() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        new MySQLHandshakePacket(1000, authPluginData).write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.getServerVersion());\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsUpper());\n        verify(payload).writeInt1(authPluginData.getAuthenticationPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n    }\n","date":"2021-04-12 18:54:17","endLine":103,"groupId":"101314","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b5/6e47fe63d866485569923073798d66040f8a36.src","preCode":"    public void assertWrite() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        new MySQLHandshakePacket(1000, authPluginData).write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.getServerVersion());\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsUpper());\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/handshake/MySQLHandshakePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-04-12 18:54:17","commitOrder":3,"curCode":"    public void assertWriteWithClientPluginAuth() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        MySQLHandshakePacket actual = new MySQLHandshakePacket(1000, authPluginData);\n        actual.setAuthPluginName(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION);\n        actual.write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.getServerVersion());\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue() >> 16);\n        verify(payload).writeInt1(authPluginData.getAuthenticationPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n        verify(payload).writeStringNul(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION.getMethodName());\n    }\n","date":"2021-04-12 18:54:17","endLine":123,"groupId":"101314","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertWriteWithClientPluginAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b5/6e47fe63d866485569923073798d66040f8a36.src","preCode":"    public void assertWriteWithClientPluginAuth() {\n        MySQLAuthPluginData authPluginData = new MySQLAuthPluginData(part1, part2);\n        MySQLHandshakePacket actual = new MySQLHandshakePacket(1000, authPluginData);\n        actual.setAuthPluginName(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION);\n        actual.write(payload);\n        verify(payload).writeInt1(MySQLServerInfo.PROTOCOL_VERSION);\n        verify(payload).writeStringNul(MySQLServerInfo.getServerVersion());\n        verify(payload).writeInt4(1000);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart1()));\n        verify(payload).writeInt2(MySQLCapabilityFlag.calculateHandshakeCapabilityFlagsLower());\n        verify(payload).writeInt1(MySQLServerInfo.CHARSET);\n        verify(payload).writeInt2(MySQLStatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue());\n        verify(payload).writeInt2(MySQLCapabilityFlag.CLIENT_PLUGIN_AUTH.getValue() >> 16);\n        verify(payload).writeInt1(authPluginData.getAuthPluginData().length + 1);\n        verify(payload).writeReserved(10);\n        verify(payload).writeStringNul(new String(authPluginData.getAuthPluginDataPart2()));\n        verify(payload).writeStringNul(MySQLAuthenticationMethod.SECURE_PASSWORD_AUTHENTICATION.getMethodName());\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/handshake/MySQLHandshakePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"20af443ee6670aac77a9a3fcb1ee9dbc1c3c28df","commitMessage":"@@@Rename auth to authentication or authenticated for meaningful and clear reason (#10050)\n\n","date":"2021-04-12 18:54:17","modifiedFileCount":"17","status":"M","submitter":"Liang Zhang"}]
