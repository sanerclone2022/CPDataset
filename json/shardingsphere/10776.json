[{"authorTime":"2021-06-08 11:37:47","codes":[{"authorDate":"2021-06-08 11:37:47","commitOrder":1,"curCode":"    public void assertSwapToYamlWithLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = \n                new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), \"roundRobin\");\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(new ReadwriteSplittingRuleConfiguration(\n                Collections.singleton(dataSourceConfig), ImmutableMap.of(\"roundRobin\", new ShardingSphereAlgorithmConfiguration(\"ROUND_ROBIN\", new Properties()))));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertThat(actual.getDataSources().get(\"ds\").getLoadBalancerName(), is(\"roundRobin\"));\n    }\n","date":"2021-06-08 11:37:47","endLine":60,"groupId":"11943","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSwapToYamlWithLoadBalanceAlgorithm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/db/b7d48b3315eb0b160051636c7257e71f06ac9b.src","preCode":"    public void assertSwapToYamlWithLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = \n                new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), \"roundRobin\");\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(new ReadwriteSplittingRuleConfiguration(\n                Collections.singleton(dataSourceConfig), ImmutableMap.of(\"roundRobin\", new ShardingSphereAlgorithmConfiguration(\"ROUND_ROBIN\", new Properties()))));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertThat(actual.getDataSources().get(\"ds\").getLoadBalancerName(), is(\"roundRobin\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/swapper/ReadwriteSplittingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2021-06-08 11:37:47","commitOrder":1,"curCode":"    public void assertSwapToYamlWithoutLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), null);\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(\n                new ReadwriteSplittingRuleConfiguration(Collections.singleton(dataSourceConfig), Collections.emptyMap()));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertNull(actual.getDataSources().get(\"ds\").getLoadBalancerName());\n    }\n","date":"2021-06-08 11:37:47","endLine":70,"groupId":"9091","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSwapToYamlWithoutLoadBalanceAlgorithm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/db/b7d48b3315eb0b160051636c7257e71f06ac9b.src","preCode":"    public void assertSwapToYamlWithoutLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), null);\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(\n                new ReadwriteSplittingRuleConfiguration(Collections.singleton(dataSourceConfig), Collections.emptyMap()));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertNull(actual.getDataSources().get(\"ds\").getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/swapper/ReadwriteSplittingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"064bffe3e00d9db5179d52f81d8d5dad9620a3a5","commitMessage":"@@@Correct packages and generic types (#10710)\n\n","date":"2021-06-08 11:37:47","modifiedFileCount":"0","status":"B","submitter":"???"},{"authorTime":"2021-09-05 19:00:52","codes":[{"authorDate":"2021-09-05 19:00:52","commitOrder":2,"curCode":"    public void assertSwapToYamlWithLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = \n                new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), \"roundRobin\", false);\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(new ReadwriteSplittingRuleConfiguration(\n                Collections.singleton(dataSourceConfig), ImmutableMap.of(\"roundRobin\", new ShardingSphereAlgorithmConfiguration(\"ROUND_ROBIN\", new Properties()))));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertThat(actual.getDataSources().get(\"ds\").getLoadBalancerName(), is(\"roundRobin\"));\n        assertFalse(actual.getDataSources().get(\"ds\").isQueryConsistent());\n    }\n","date":"2021-09-05 19:00:52","endLine":61,"groupId":"10776","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertSwapToYamlWithLoadBalanceAlgorithm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0e/69cbaa6ca6ab47ba5b9ef79db824afa6691ce1.src","preCode":"    public void assertSwapToYamlWithLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = \n                new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), \"roundRobin\");\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(new ReadwriteSplittingRuleConfiguration(\n                Collections.singleton(dataSourceConfig), ImmutableMap.of(\"roundRobin\", new ShardingSphereAlgorithmConfiguration(\"ROUND_ROBIN\", new Properties()))));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertThat(actual.getDataSources().get(\"ds\").getLoadBalancerName(), is(\"roundRobin\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/swapper/ReadwriteSplittingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-09-05 19:00:52","commitOrder":2,"curCode":"    public void assertSwapToYamlWithoutLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), null, false);\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(\n                new ReadwriteSplittingRuleConfiguration(Collections.singleton(dataSourceConfig), Collections.emptyMap()));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertNull(actual.getDataSources().get(\"ds\").getLoadBalancerName());\n        assertFalse(actual.getDataSources().get(\"ds\").isQueryConsistent());\n    }\n","date":"2021-09-05 19:00:52","endLine":72,"groupId":"10776","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertSwapToYamlWithoutLoadBalanceAlgorithm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0e/69cbaa6ca6ab47ba5b9ef79db824afa6691ce1.src","preCode":"    public void assertSwapToYamlWithoutLoadBalanceAlgorithm() {\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\", \"\", \"write\", Collections.singletonList(\"read\"), null);\n        YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(\n                new ReadwriteSplittingRuleConfiguration(Collections.singleton(dataSourceConfig), Collections.emptyMap()));\n        assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(), is(\"write\"));\n        assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(), is(Collections.singletonList(\"read\")));\n        assertNull(actual.getDataSources().get(\"ds\").getLoadBalancerName());\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/swapper/ReadwriteSplittingRuleConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"b25419ae9f4af7a98255740bc603c34d82f34e97","commitMessage":"@@@Fixes #12158.  add configuration for whether enable consistent routing for readwrite splitting. (#12209)\n\n* For #12158.  Add the consistencyEnabled configuration for readwrite-splitting API & core.\n\n* For #12158.  Add the consistencyEnabled default value for DistSQL handler.\n\n* Add consistencyEnabled configuration and parser for Spring Namespace.\n\n* Add consistencyEnabled configuration for examples.\n\n* update documents of readwrite splitting.\n\n* fix CI.\n\n* update more test cases.\n\n* Change `consistencyEnabled` to `queryConsistent`.\n\n* revert blank line.","date":"2021-09-05 19:00:52","modifiedFileCount":"30","status":"M","submitter":"Raigor"}]
