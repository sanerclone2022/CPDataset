[{"authorTime":"2021-01-06 16:11:47","codes":[{"authorDate":"2021-01-06 16:11:47","commitOrder":1,"curCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-01-06 16:11:47","endLine":71,"groupId":"12093","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/21b85e406caff4818b06767ca2372ee531ecab.src","preCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2021-01-06 16:11:47","commitOrder":1,"curCode":"    public void assertMethod() {\n        final MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","date":"2021-01-06 16:11:47","endLine":76,"groupId":"12093","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c4/fd85a4b44aeb1fcafce32312ece645d88f62b0.src","preCode":"    public void assertMethod() {\n        final MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"190d66495ea798024b782d96fe4ca71a9d007797","commitMessage":"@@@add agent tracing test (#8910)\n\n","date":"2021-01-06 16:11:47","modifiedFileCount":"7","status":"B","submitter":"xiaoyu"},{"authorTime":"2021-01-12 10:35:24","codes":[{"authorDate":"2021-01-12 10:35:24","commitOrder":2,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-01-12 10:35:24","endLine":71,"groupId":"12093","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/83/8f3b5bf3cbc715c6b3cc11d71f516a953b2d3d.src","preCode":"    public void assertMethod() {\n        MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2021-01-12 10:35:24","commitOrder":2,"curCode":"    public void assertMethod() {\n        final MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","date":"2021-01-12 10:35:24","endLine":76,"groupId":"12093","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d3/5e9a436b1bc3eb27421aa5618f50f358f3a9f2.src","preCode":"    public void assertMethod() {\n        final MockTargetObject targetObject = new MockTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"c75652dbf13f60b4572abc2f7a68c24bb84e6bd4","commitMessage":"@@@support to instrument the same method repeatedly (#8986)\n\n* support to instrument the same method repeatedly\n\n* fix wrong hand","date":"2021-01-12 10:35:24","modifiedFileCount":"32","status":"M","submitter":"Daming"},{"authorTime":"2021-01-14 23:42:28","codes":[{"authorDate":"2021-01-12 10:35:24","commitOrder":3,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-01-12 10:35:24","endLine":71,"groupId":"12093","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/83/8f3b5bf3cbc715c6b3cc11d71f516a953b2d3d.src","preCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2021-01-14 23:42:28","commitOrder":3,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","date":"2021-01-14 23:42:28","endLine":77,"groupId":"12093","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4d/6aa8d109053fbd374f5f5d582ff43794d8899f.src","preCode":"    public void assertMethod() {\n        final MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"2e6c1ff962e05376950fc22cc516f7f3e23457e1","commitMessage":"@@@Refactor for code format (#9037)\n\n* Update code-conduct\n\n* For code format","date":"2021-01-14 23:42:28","modifiedFileCount":"8","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-07-27 13:57:46","codes":[{"authorDate":"2021-07-27 13:57:46","commitOrder":4,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertTrue(spans.get(0).logEntries().isEmpty());\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","date":"2021-07-27 13:57:46","endLine":72,"groupId":"1059","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/96/1111ddbdc9fa02ff9550d408c836e85cb28707.src","preCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, parserMethod, new Object[]{\"select 1\"}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, parserMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/parseSQL/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/SQLParserEngineAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2021-07-27 13:57:46","commitOrder":4,"curCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertTrue(spans.get(0).logEntries().isEmpty());\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","date":"2021-07-27 13:57:46","endLine":78,"groupId":"1059","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"assertMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/43/677245e7da901dd4c3a0d961aa2fc4d264e076.src","preCode":"    public void assertMethod() {\n        MockAdviceTargetObject targetObject = new MockAdviceTargetObject();\n        ADVICE.beforeMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        ADVICE.afterMethod(targetObject, executeCommandMethod, new Object[]{}, new MethodInvocationResult());\n        List<MockSpan> spans = tracer.finishedSpans();\n        assertThat(spans.size(), is(1));\n        assertThat(spans.get(0).logEntries().size(), is(0));\n        assertThat(spans.get(0).operationName(), is(\"/ShardingSphere/rootInvoke/\"));\n    }\n","realPath":"shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/CommandExecutorTaskAdviceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"a2a03362cd71d2e11d4067f9215ca2bd344b5a5d","commitMessage":"@@@Use assertTrue(xxx.isEmpty()) to instead of assertThat(xxx.size().  is(0)) (#11531)\n\n","date":"2021-07-27 13:57:46","modifiedFileCount":"21","status":"M","submitter":"Liang Zhang"}]
