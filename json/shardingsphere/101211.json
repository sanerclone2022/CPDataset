[{"authorTime":"2020-08-24 21:12:21","codes":[{"authorDate":"2020-08-24 21:12:21","commitOrder":1,"curCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n        assertThat(actual.toString(), is(\"PostgreSQLComQueryPacket(sql=sql)\"));\n    }\n","date":"2020-08-24 21:12:21","endLine":46,"groupId":"194","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/b764024f11d7af1620744bf470eb4ed51a89f8.src","preCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n        assertThat(actual.toString(), is(\"PostgreSQLComQueryPacket(sql=sql)\"));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/text/PostgreSQLComQueryPacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2020-08-24 21:12:21","commitOrder":1,"curCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n        assertTrue(actual.toString().startsWith(\"PostgreSQLComParsePacket(statementId=sql, sql=sql, binaryStatementParameterTypes=[\"));\n    }\n","date":"2020-08-24 21:12:21","endLine":58,"groupId":"2164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/66/5fcc21db41fa97c65dfe143d68c2319eda22b3.src","preCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n        assertTrue(actual.toString().startsWith(\"PostgreSQLComParsePacket(statementId=sql, sql=sql, binaryStatementParameterTypes=[\"));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"45d0cc11b441163338c03eb5cb4d648006e39113","commitMessage":"@@@add test cases (#7030)\n\n* add test cases\n\n* add test cases\n\n* add test cases","date":"2020-08-24 21:12:21","modifiedFileCount":"0","status":"B","submitter":"Yanjie Zhou"},{"authorTime":"2020-12-01 18:57:15","codes":[{"authorDate":"2020-08-24 21:12:21","commitOrder":2,"curCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n        assertThat(actual.toString(), is(\"PostgreSQLComQueryPacket(sql=sql)\"));\n    }\n","date":"2020-08-24 21:12:21","endLine":46,"groupId":"194","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/68/b764024f11d7af1620744bf470eb4ed51a89f8.src","preCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n        assertThat(actual.toString(), is(\"PostgreSQLComQueryPacket(sql=sql)\"));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/text/PostgreSQLComQueryPacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"},{"authorDate":"2020-12-01 18:57:15","commitOrder":2,"curCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n        assertTrue(actual.toString().startsWith(\"PostgreSQLComParsePacket(statementId=sql, sql=sql, binaryStatementParameterTypes=[\"));\n    }\n","date":"2020-12-01 18:57:15","endLine":58,"groupId":"2164","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7a/9d3ec259219741676438f48995ecdfb2f8b1b8.src","preCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n        assertTrue(actual.toString().startsWith(\"PostgreSQLComParsePacket(statementId=sql, sql=sql, binaryStatementParameterTypes=[\"));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"a62d3daaa0771449880b6af3bdb62d3b0a1482d6","commitMessage":"@@@Add BinaryResultSetRow to refactor BinaryResultSetRowPacket (#8452)\n\n* Fix javadoc\n\n* Move PostgreSQLColumnType and MySQLSQLColumnType usage into protocol modules\n\n* Add MySQLBinaryResultSetRow to refactor MySQLBinaryResultSetRowPacket\n\n* Add BinaryResultSetRow to refactor BinaryResultSetRowPacket\n\n* Add BinaryResultSetRow to refactor BinaryResultSetRowPacket\n\n* Add SQLColumnType interface\n\n* Add BinaryResultSetRow\n\n* Rename BinaryColumnType\n\n* Add BinaryColumnType.getValue\n\n* Remove PostgreSQLBinaryResultSetRow and MySQLBinaryResultSetRow\n\n* Remove generic type for BinaryResultSetRow\n\n* Update javadoc","date":"2020-12-01 18:57:15","modifiedFileCount":"39","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-12 22:43:13","codes":[{"authorDate":"2021-04-12 22:43:13","commitOrder":3,"curCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n    }\n","date":"2021-04-12 22:43:13","endLine":45,"groupId":"194","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/2c/f0d4da64cb28d2a2221dd369e7d96269c160a4.src","preCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n        assertThat(actual.toString(), is(\"PostgreSQLComQueryPacket(sql=sql)\"));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/text/PostgreSQLComQueryPacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2021-04-12 22:43:13","commitOrder":3,"curCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","date":"2021-04-12 22:43:13","endLine":56,"groupId":"2164","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/90/c593e686b74285c8302e180ff9ed99224be2ae.src","preCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n        assertTrue(actual.toString().startsWith(\"PostgreSQLComParsePacket(statementId=sql, sql=sql, binaryStatementParameterTypes=[\"));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"e51cfb76caa3c1b62baf8c7ad2520b416ae5808a","commitMessage":"@@@Remove unnecessary assertions (#10057)\n\n","date":"2021-04-12 22:43:13","modifiedFileCount":"2","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-13 17:47:26","codes":[{"authorDate":"2021-04-13 17:47:26","commitOrder":4,"curCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getIdentifier(), is('Q'));\n    }\n","date":"2021-04-13 17:47:26","endLine":45,"groupId":"194","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/57/bd30789514f7c781d44bfbf3790248ed6104e9.src","preCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getMessageType(), is('Q'));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/text/PostgreSQLComQueryPacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2021-04-13 17:47:26","commitOrder":4,"curCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getIdentifier(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","date":"2021-04-13 17:47:26","endLine":56,"groupId":"7345","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b9/cdc689cced6febc30e1b3447047a571eae5995.src","preCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getMessageType(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"029a9f8a8336794cff5d8fc8db0f0cd04a7cc694","commitMessage":"@@@Rename PostgreSQLIdentifierPacket.getMessageType() to PostgreSQLIdentifierPacket.getIdentifier() (#10072)\n\n","date":"2021-04-13 17:47:26","modifiedFileCount":"41","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-04-13 21:54:27","codes":[{"authorDate":"2021-04-13 21:54:27","commitOrder":5,"curCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getIdentifier(), is(PostgreSQLCommandPacketType.SIMPLE_QUERY));\n    }\n","date":"2021-04-13 21:54:27","endLine":46,"groupId":"194","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ea/84173b66a1aa25f56eac05da2affe525f132d7.src","preCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getIdentifier(), is('Q'));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/text/PostgreSQLComQueryPacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2021-04-13 21:54:27","commitOrder":5,"curCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getIdentifier(), is(PostgreSQLCommandPacketType.PARSE_COMMAND));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","date":"2021-04-13 21:54:27","endLine":57,"groupId":"7345","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a3/95faed11c508bf214345212c86f0d75978f435.src","preCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getIdentifier(), is('P'));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"7bfc288fbe10baf38500285456c4cb66d6da46ff","commitMessage":"@@@Refactor PostgreSQLIdentifierPacket (#10078)\n\n","date":"2021-04-13 21:54:27","modifiedFileCount":"42","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-05-15 09:21:57","codes":[{"authorDate":"2021-04-13 21:54:27","commitOrder":6,"curCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getIdentifier(), is(PostgreSQLCommandPacketType.SIMPLE_QUERY));\n    }\n","date":"2021-04-13 21:54:27","endLine":46,"groupId":"101211","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/ea/84173b66a1aa25f56eac05da2affe525f132d7.src","preCode":"    public void assertNewInstance() {\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComQueryPacket actual = new PostgreSQLComQueryPacket(payload);\n        actual.write(payload);\n        verify(payload).readInt4();\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getIdentifier(), is(PostgreSQLCommandPacketType.SIMPLE_QUERY));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/text/PostgreSQLComQueryPacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"},{"authorDate":"2021-05-15 09:21:57","commitOrder":6,"curCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getIdentifier(), is(PostgreSQLCommandPacketType.PARSE_COMMAND));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryColumnType> types = actual.getBinaryStatementColumnTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","date":"2021-05-15 09:21:57","endLine":56,"groupId":"101211","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNewInstance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/b4/929a1ed6cd4175fc525da58d238eb170bb9bad.src","preCode":"    public void assertNewInstance() {\n        when(payload.readInt2()).thenReturn(1);\n        when(payload.readInt4()).thenReturn(0);\n        when(payload.readStringNul()).thenReturn(\"sql\");\n        PostgreSQLComParsePacket actual = new PostgreSQLComParsePacket(payload);\n        actual.write(payload);\n        assertThat(actual.getIdentifier(), is(PostgreSQLCommandPacketType.PARSE_COMMAND));\n        assertThat(actual.getSql(), is(\"sql\"));\n        assertThat(actual.getStatementId(), is(\"sql\"));\n        List<PostgreSQLBinaryStatementParameterType> types = actual.getBinaryStatementParameterTypes();\n        assertNotNull(types);\n        assertThat(types.size(), equalTo(1));\n        assertThat(types.get(0).getColumnType(), is(PostgreSQLBinaryColumnType.POSTGRESQL_TYPE_UNSPECIFIED));\n    }\n","realPath":"shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacketTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"270d70160454e5d5db841251c81e0ff0784fbc65","commitMessage":"@@@extract to single class (#10334)\n\n","date":"2021-05-15 09:21:57","modifiedFileCount":"7","status":"M","submitter":"totalo"}]
