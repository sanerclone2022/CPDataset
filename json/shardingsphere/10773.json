[{"authorTime":"2020-08-20 23:23:36","codes":[{"authorDate":"2020-08-20 23:23:36","commitOrder":1,"curCode":"    public void assertBindingRule() {\n        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigurations = bindingRule.getTables();\n        assertThat(actualBindingTableRuleConfigurations.size(), is(4));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigurations.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(2));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n    }\n","date":"2020-08-20 23:23:36","endLine":219,"groupId":"12665","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertBindingRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/69/05506701775fbfbccfbc5dfc1fff0e93f08620.src","preCode":"    public void assertBindingRule() {\n        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigurations = bindingRule.getTables();\n        assertThat(actualBindingTableRuleConfigurations.size(), is(4));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigurations.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(2));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"},{"authorDate":"2020-08-20 23:23:36","commitOrder":1,"curCode":"    public void assertBroadcastRule() {\n        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigurations = broadcastRule.getTables();\n        assertThat(actualBroadcastTableConfigurations.size(), is(2));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigurations.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n        assertThat(broadcastTables.size(), is(2));\n        assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\", \"t_address\")));\n        Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(1));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\")));\n    }\n","date":"2020-08-20 23:23:36","endLine":234,"groupId":"12665","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBroadcastRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/69/05506701775fbfbccfbc5dfc1fff0e93f08620.src","preCode":"    public void assertBroadcastRule() {\n        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigurations = broadcastRule.getTables();\n        assertThat(actualBroadcastTableConfigurations.size(), is(2));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigurations.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n        assertThat(broadcastTables.size(), is(2));\n        assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\", \"t_address\")));\n        Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(1));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\")));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"B"}],"commitId":"78f6477c99bf21b06e083c5eb3ecb099786bbc37","commitMessage":"@@@fix issue 6909 (#6941)\n\n* fix issue 6909\n\n* modify variable name\n\n* Optimize the assertion","date":"2020-08-20 23:23:36","modifiedFileCount":"1","status":"B","submitter":"Serendipity"},{"authorTime":"2020-09-17 08:59:11","codes":[{"authorDate":"2020-09-17 08:59:11","commitOrder":2,"curCode":"    public void assertBindingRule() {\n        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigus = bindingRule.getTables();\n        assertThat(actualBindingTableRuleConfigus.size(), is(4));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigus.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(2));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n    }\n","date":"2020-09-17 08:59:11","endLine":220,"groupId":"12665","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertBindingRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a4/2ea528c2ee4591d83cde2d907dc72bbdb8d39c.src","preCode":"    public void assertBindingRule() {\n        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigurations = bindingRule.getTables();\n        assertThat(actualBindingTableRuleConfigurations.size(), is(4));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigurations.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(2));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2020-09-17 08:59:11","commitOrder":2,"curCode":"    public void assertBroadcastRule() {\n        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigs = broadcastRule.getTables();\n        assertThat(actualBroadcastTableConfigs.size(), is(2));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigs.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n        assertThat(broadcastTables.size(), is(2));\n        assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\", \"t_address\")));\n        Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(1));\n        assertTrue(actualBindingTableGroups.contains(\"t_order, t_order_item\"));\n    }\n","date":"2020-09-17 08:59:11","endLine":235,"groupId":"12665","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBroadcastRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a4/2ea528c2ee4591d83cde2d907dc72bbdb8d39c.src","preCode":"    public void assertBroadcastRule() {\n        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigurations = broadcastRule.getTables();\n        assertThat(actualBroadcastTableConfigurations.size(), is(2));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigurations.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n        assertThat(broadcastTables.size(), is(2));\n        assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\", \"t_address\")));\n        Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(1));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\")));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"e8297b02c37bfbfb188ee8f4af9ad7a6b78a1ce2","commitMessage":"@@@For checkstyle (#7495)\n\n* For checkstyle\n\n* Remove redundant suppression\n\n* For checkstyle\n\n* For checkstyle\n\n* For checkstyle\n\n* For checkstyle\n\n* For checkstyle\n\n* For checkstyle\n\n* For checkstyle\n\n* Add final for classes which not design for extension\n\n* Rename return value to result\n\n* Rename exception variable name","date":"2020-09-17 08:59:11","modifiedFileCount":"139","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-09-17 08:59:11","codes":[{"authorDate":"2020-11-01 14:32:14","commitOrder":3,"curCode":"    public void assertBindingRule() {\n        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigs = bindingRule.getTables();\n        assertThat(actualBindingTableRuleConfigs.size(), is(4));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigs.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(2));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n    }\n","date":"2020-11-01 14:32:14","endLine":220,"groupId":"10773","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertBindingRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/3d/9ead7a75d2a499d7a65edbb93feb1a9b83770b.src","preCode":"    public void assertBindingRule() {\n        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigus = bindingRule.getTables();\n        assertThat(actualBindingTableRuleConfigus.size(), is(4));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigus.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(2));\n        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2020-09-17 08:59:11","commitOrder":3,"curCode":"    public void assertBroadcastRule() {\n        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigs = broadcastRule.getTables();\n        assertThat(actualBroadcastTableConfigs.size(), is(2));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigs.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n        assertThat(broadcastTables.size(), is(2));\n        assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\", \"t_address\")));\n        Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(1));\n        assertTrue(actualBindingTableGroups.contains(\"t_order, t_order_item\"));\n    }\n","date":"2020-09-17 08:59:11","endLine":235,"groupId":"10773","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBroadcastRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a4/2ea528c2ee4591d83cde2d907dc72bbdb8d39c.src","preCode":"    public void assertBroadcastRule() {\n        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigs = broadcastRule.getTables();\n        assertThat(actualBroadcastTableConfigs.size(), is(2));\n        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigs.iterator();\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n        assertThat(broadcastTables.size(), is(2));\n        assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\", \"t_address\")));\n        Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups();\n        assertThat(actualBindingTableGroups.size(), is(1));\n        assertTrue(actualBindingTableGroups.contains(\"t_order, t_order_item\"));\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"N"}],"commitId":"5d7ca41942d298dad2cc0d8efc5fc5c6872e2aec","commitMessage":"@@@Fix checkstyle (#8001)\n\n","date":"2020-11-01 14:32:14","modifiedFileCount":"16","status":"M","submitter":"Liang Zhang"}]
