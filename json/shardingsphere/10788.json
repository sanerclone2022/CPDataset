[{"authorTime":"2021-08-27 16:01:46","codes":[{"authorDate":"2021-05-06 23:57:29","commitOrder":4,"curCode":"    private BeanDefinition parseReadwriteSplittingDataSourceRuleConfiguration(final Element element) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ReadwriteSplittingDataSourceRuleConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE));\n        factory.addConstructorArgValue(parseReadDataSourcesRef(element));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE));\n        return factory.getBeanDefinition();\n    }\n","date":"2021-05-06 23:57:29","endLine":68,"groupId":"4266","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseReadwriteSplittingDataSourceRuleConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/bd/f19e108592691ea921c58eab6276cc1a1af215.src","preCode":"    private BeanDefinition parseReadwriteSplittingDataSourceRuleConfiguration(final Element element) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ReadwriteSplittingDataSourceRuleConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE));\n        factory.addConstructorArgValue(parseReadDataSourcesRef(element));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE));\n        return factory.getBeanDefinition();\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-spring/shardingsphere-readwrite-splitting-spring-namespace/src/main/java/org/apache/shardingsphere/readwritesplitting/spring/namespace/parser/ReadwriteSplittingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"},{"authorDate":"2021-08-27 16:01:46","commitOrder":4,"curCode":"    protected AbstractBeanDefinition parseInternal(final Element element, final ParserContext parserContext) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ClusterPersistRepositoryConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.TYPE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.NAMESPACE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.SERVER_LISTS_ATTRIBUTE));\n        factory.addConstructorArgValue(parseProperties(element, parserContext));\n        return factory.getBeanDefinition();\n    }\n","date":"2021-08-27 16:01:46","endLine":44,"groupId":"1517","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"parseInternal","params":"(finalElementelement@finalParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f6/ad6fef94c6eb5ea7c182d6c282421ab50f3393.src","preCode":"    protected AbstractBeanDefinition parseInternal(final Element element, final ParserContext parserContext) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ClusterPersistRepositoryConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.TYPE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.NAMESPACE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.SERVER_LISTS_ATTRIBUTE));\n        factory.addConstructorArgValue(parseProperties(element, parserContext));\n        return factory.getBeanDefinition();\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-core-spring/shardingsphere-jdbc-core-spring-namespace/src/main/java/org/apache/shardingsphere/spring/namespace/parser/mode/ClusterPersistRepositoryConfigurationBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"3b11fc21895f8aeec0438e59447f6499223098cf","commitMessage":"@@@Remove shardingsphere-jdbc-governance-spring-namespace module (#12050)\n\n* Fix example compile error\n\n* Merge shardingsphere-jdbc-governance-spring-namespace and shardingsphere-jdbc-spring-namespace\n\n* Remove shardingsphere-jdbc-governance-spring-namespace\n\n* Rename test cases\n\n* Move package\n\n* Refactor test cases\n\n* Unify class names","date":"2021-08-27 16:01:46","modifiedFileCount":"1","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-08-27 16:01:46","codes":[{"authorDate":"2021-09-05 19:00:52","commitOrder":5,"curCode":"    private BeanDefinition parseReadwriteSplittingDataSourceRuleConfiguration(final Element element) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ReadwriteSplittingDataSourceRuleConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE));\n        factory.addConstructorArgValue(parseReadDataSourcesRef(element));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.QUERY_CONSISTENT));\n        return factory.getBeanDefinition();\n    }\n","date":"2021-09-05 19:00:52","endLine":69,"groupId":"10788","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"parseReadwriteSplittingDataSourceRuleConfiguration","params":"(finalElementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/11a77e04ceb92edaa3bf274daa5d735f78270d.src","preCode":"    private BeanDefinition parseReadwriteSplittingDataSourceRuleConfiguration(final Element element) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ReadwriteSplittingDataSourceRuleConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE));\n        factory.addConstructorArgValue(parseReadDataSourcesRef(element));\n        factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE));\n        return factory.getBeanDefinition();\n    }\n","realPath":"shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-spring/shardingsphere-readwrite-splitting-spring-namespace/src/main/java/org/apache/shardingsphere/readwritesplitting/spring/namespace/parser/ReadwriteSplittingRuleBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2021-08-27 16:01:46","commitOrder":5,"curCode":"    protected AbstractBeanDefinition parseInternal(final Element element, final ParserContext parserContext) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ClusterPersistRepositoryConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.TYPE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.NAMESPACE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.SERVER_LISTS_ATTRIBUTE));\n        factory.addConstructorArgValue(parseProperties(element, parserContext));\n        return factory.getBeanDefinition();\n    }\n","date":"2021-08-27 16:01:46","endLine":44,"groupId":"10788","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"parseInternal","params":"(finalElementelement@finalParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f6/ad6fef94c6eb5ea7c182d6c282421ab50f3393.src","preCode":"    protected AbstractBeanDefinition parseInternal(final Element element, final ParserContext parserContext) {\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(ClusterPersistRepositoryConfiguration.class);\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.TYPE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.NAMESPACE_ATTRIBUTE));\n        factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.SERVER_LISTS_ATTRIBUTE));\n        factory.addConstructorArgValue(parseProperties(element, parserContext));\n        return factory.getBeanDefinition();\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-core-spring/shardingsphere-jdbc-core-spring-namespace/src/main/java/org/apache/shardingsphere/spring/namespace/parser/mode/ClusterPersistRepositoryConfigurationBeanDefinitionParser.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"}],"commitId":"b25419ae9f4af7a98255740bc603c34d82f34e97","commitMessage":"@@@Fixes #12158.  add configuration for whether enable consistent routing for readwrite splitting. (#12209)\n\n* For #12158.  Add the consistencyEnabled configuration for readwrite-splitting API & core.\n\n* For #12158.  Add the consistencyEnabled default value for DistSQL handler.\n\n* Add consistencyEnabled configuration and parser for Spring Namespace.\n\n* Add consistencyEnabled configuration for examples.\n\n* update documents of readwrite splitting.\n\n* fix CI.\n\n* update more test cases.\n\n* Change `consistencyEnabled` to `queryConsistent`.\n\n* revert blank line.","date":"2021-09-05 19:00:52","modifiedFileCount":"30","status":"M","submitter":"Raigor"}]
