[{"authorTime":"2021-08-24 19:35:28","codes":[{"authorDate":"2021-08-24 19:35:28","commitOrder":1,"curCode":"    public void assertBuildWithConfigurationsAndDataSources() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.singletonMap(\"ds\", new MockedDataSource())),\n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertDataSources(actual);\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","date":"2021-08-24 19:35:28","endLine":77,"groupId":"559","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertBuildWithConfigurationsAndDataSources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d6/c474912ad342e7dba280930ebb87e6678cceb6.src","preCode":"    public void assertBuildWithConfigurationsAndDataSources() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.singletonMap(\"ds\", new MockedDataSource())),\n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertDataSources(actual);\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/metadata/MetaDataContextsBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2021-08-24 19:35:28","commitOrder":1,"curCode":"    public void assertBuildWithAuthorityRuleConfigurations() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        ShardingSphereUser user = new ShardingSphereUser(\"root\", \"root\", \"\");\n        AuthorityRuleConfiguration authorityRuleConfig = new AuthorityRuleConfiguration(Collections.singleton(user), null);\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.emptyMap()), \n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), \n                Collections.singleton(authorityRuleConfig), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertTrue(actual.getMetaData(\"logic_db\").getResource().getDataSources().isEmpty());\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","date":"2021-08-24 19:35:28","endLine":92,"groupId":"13785","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertBuildWithAuthorityRuleConfigurations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d6/c474912ad342e7dba280930ebb87e6678cceb6.src","preCode":"    public void assertBuildWithAuthorityRuleConfigurations() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        ShardingSphereUser user = new ShardingSphereUser(\"root\", \"root\", \"\");\n        AuthorityRuleConfiguration authorityRuleConfig = new AuthorityRuleConfiguration(Collections.singleton(user), null);\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.emptyMap()), \n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), \n                Collections.singleton(authorityRuleConfig), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertTrue(actual.getMetaData(\"logic_db\").getResource().getDataSources().isEmpty());\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/metadata/MetaDataContextsBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"4bf7077c3aea87257b77c5bff0982680571cdc96","commitMessage":"@@@Move MetaDataContexts to mode core module (#11988)\n\n","date":"2021-08-24 19:35:28","modifiedFileCount":"56","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-09-08 14:50:28","codes":[{"authorDate":"2021-08-24 19:35:28","commitOrder":2,"curCode":"    public void assertBuildWithConfigurationsAndDataSources() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.singletonMap(\"ds\", new MockedDataSource())),\n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertDataSources(actual);\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","date":"2021-08-24 19:35:28","endLine":77,"groupId":"101978","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertBuildWithConfigurationsAndDataSources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d6/c474912ad342e7dba280930ebb87e6678cceb6.src","preCode":"    public void assertBuildWithConfigurationsAndDataSources() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.singletonMap(\"ds\", new MockedDataSource())),\n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertDataSources(actual);\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/metadata/MetaDataContextsBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2021-09-08 14:50:28","commitOrder":2,"curCode":"    public void assertBuildWithAuthorityRuleConfigurations() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        ShardingSphereUser user = new ShardingSphereUser(\"root\", \"root\", \"\");\n        AuthorityRuleConfiguration authorityRuleConfig = new AuthorityRuleConfiguration(Collections.singleton(user), \n                new ShardingSphereAlgorithmConfiguration(\"ALL_PRIVILEGES_PERMITTED\", new Properties()));\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.emptyMap()), \n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), \n                Collections.singleton(authorityRuleConfig), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertTrue(actual.getMetaData(\"logic_db\").getResource().getDataSources().isEmpty());\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","date":"2021-09-08 14:50:28","endLine":94,"groupId":"101978","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertBuildWithAuthorityRuleConfigurations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1d/e89e1a8cd5444f868bc7b8a9b624b667adcc0b.src","preCode":"    public void assertBuildWithAuthorityRuleConfigurations() throws SQLException {\n        Properties props = new Properties();\n        props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(), \"1\");\n        ShardingSphereUser user = new ShardingSphereUser(\"root\", \"root\", \"\");\n        AuthorityRuleConfiguration authorityRuleConfig = new AuthorityRuleConfiguration(Collections.singleton(user), null);\n        MetaDataContexts actual = new MetaDataContextsBuilder(Collections.singletonMap(\"logic_db\", Collections.emptyMap()), \n                Collections.singletonMap(\"logic_db\", Collections.singletonList(new FixtureRuleConfiguration())), \n                Collections.singleton(authorityRuleConfig), props).build(mock(PersistService.class));\n        assertRules(actual);\n        assertTrue(actual.getMetaData(\"logic_db\").getResource().getDataSources().isEmpty());\n        assertThat(actual.getProps().getProps().size(), is(1));\n        assertThat(actual.getProps().getValue(ConfigurationPropertyKey.EXECUTOR_SIZE), is(1));\n    }\n","realPath":"shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/metadata/MetaDataContextsBuilderTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"29f6932d2b161e03ba62a7862c66ba3d85f0d67e","commitMessage":"@@@Update default global rule builder (#12282)\n\n* Fixes #12264.  change default auth rule configuration from `NATIVE` to `ALL_PRIVILEGES_PERMITTED`.\n\n* Add default transaction rule configuration.\n\n* merge from master.","date":"2021-09-08 14:50:28","modifiedFileCount":"8","status":"M","submitter":"Raigor"}]
