[{"authorTime":"2021-08-11 18:33:26","codes":[{"authorDate":"2021-08-11 18:33:26","commitOrder":1,"curCode":"    public void assertSwapToYamlConfiguration() {\n        ShadowDataSourceConfiguration shadowDataSourceConfiguration = new ShadowDataSourceConfiguration(\"ds\", \"ds-shadow\");\n        ShadowDataSourceConfigurationYamlSwapper swapper = new ShadowDataSourceConfigurationYamlSwapper();\n        YamlShadowDataSourceConfiguration configuration = swapper.swapToYamlConfiguration(shadowDataSourceConfiguration);\n        assertThat(shadowDataSourceConfiguration.getSourceDataSourceName(), is(configuration.getSourceDataSourceName()));\n        assertThat(shadowDataSourceConfiguration.getShadowDataSourceName(), is(configuration.getShadowDataSourceName()));\n    }\n","date":"2021-08-11 18:33:26","endLine":37,"groupId":"8902","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"assertSwapToYamlConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/97/a54cd86a93f677c191738a624a3909e767615d.src","preCode":"    public void assertSwapToYamlConfiguration() {\n        ShadowDataSourceConfiguration shadowDataSourceConfiguration = new ShadowDataSourceConfiguration(\"ds\", \"ds-shadow\");\n        ShadowDataSourceConfigurationYamlSwapper swapper = new ShadowDataSourceConfigurationYamlSwapper();\n        YamlShadowDataSourceConfiguration configuration = swapper.swapToYamlConfiguration(shadowDataSourceConfiguration);\n        assertThat(shadowDataSourceConfiguration.getSourceDataSourceName(), is(configuration.getSourceDataSourceName()));\n        assertThat(shadowDataSourceConfiguration.getShadowDataSourceName(), is(configuration.getShadowDataSourceName()));\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/datasource/ShadowDataSourceConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"B"},{"authorDate":"2021-08-11 18:33:26","commitOrder":1,"curCode":"    public void assertSwapToObject() {\n        buildYamlShadowRuleConfiguration();\n        ShadowRuleAlgorithmProviderConfigurationYamlSwapper swapper = new ShadowRuleAlgorithmProviderConfigurationYamlSwapper();\n        AlgorithmProvidedShadowRuleConfiguration targetConfiguration = swapper.swapToObject(yamlShadowRuleConfiguration);\n        assertThat(targetConfiguration.getColumn(), is(yamlShadowRuleConfiguration.getColumn()));\n        assertThat(targetConfiguration.getShadowDataSourceNames(), is(yamlShadowRuleConfiguration.getShadowDataSourceNames()));\n        assertThat(targetConfiguration.getSourceDataSourceNames(), is(yamlShadowRuleConfiguration.getSourceDataSourceNames()));\n        targetConfiguration.getDataSources().entrySet().forEach(each -> {\n            YamlShadowDataSourceConfiguration yamlShadowDataSourceConfiguration = yamlShadowRuleConfiguration.getDataSources().get(each.getKey());\n            assertNotNull(yamlShadowDataSourceConfiguration);\n            assertThat(each.getValue().getShadowDataSourceName(), is(yamlShadowDataSourceConfiguration.getShadowDataSourceName()));\n            assertThat(each.getValue().getSourceDataSourceName(), is(yamlShadowDataSourceConfiguration.getSourceDataSourceName()));\n        });\n        targetConfiguration.getShadowTables().entrySet().forEach(each -> {\n            YamlShadowTableConfiguration yamlShadowTableConfiguration = yamlShadowRuleConfiguration.getShadowTables().get(each.getKey());\n            assertNotNull(yamlShadowTableConfiguration);\n            assertThat(each.getValue().getShadowAlgorithmNames(), is(yamlShadowTableConfiguration.getShadowAlgorithmNames()));\n        });\n        targetConfiguration.getShadowAlgorithms().entrySet().forEach(each -> {\n            YamlShardingSphereAlgorithmConfiguration yamlShardingSphereAlgorithmConfiguration = yamlShadowRuleConfiguration.getShadowAlgorithms().get(each.getKey());\n            assertNotNull(yamlShardingSphereAlgorithmConfiguration);\n            assertThat(each.getValue().getType(), is(yamlShardingSphereAlgorithmConfiguration.getType()));\n        });\n    }\n","date":"2021-08-11 18:33:26","endLine":94,"groupId":"3646","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSwapToObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/c5/443ce14e4d7398e78d802e881333840de61097.src","preCode":"    public void assertSwapToObject() {\n        buildYamlShadowRuleConfiguration();\n        ShadowRuleAlgorithmProviderConfigurationYamlSwapper swapper = new ShadowRuleAlgorithmProviderConfigurationYamlSwapper();\n        AlgorithmProvidedShadowRuleConfiguration targetConfiguration = swapper.swapToObject(yamlShadowRuleConfiguration);\n        assertThat(targetConfiguration.getColumn(), is(yamlShadowRuleConfiguration.getColumn()));\n        assertThat(targetConfiguration.getShadowDataSourceNames(), is(yamlShadowRuleConfiguration.getShadowDataSourceNames()));\n        assertThat(targetConfiguration.getSourceDataSourceNames(), is(yamlShadowRuleConfiguration.getSourceDataSourceNames()));\n        targetConfiguration.getDataSources().entrySet().forEach(each -> {\n            YamlShadowDataSourceConfiguration yamlShadowDataSourceConfiguration = yamlShadowRuleConfiguration.getDataSources().get(each.getKey());\n            assertNotNull(yamlShadowDataSourceConfiguration);\n            assertThat(each.getValue().getShadowDataSourceName(), is(yamlShadowDataSourceConfiguration.getShadowDataSourceName()));\n            assertThat(each.getValue().getSourceDataSourceName(), is(yamlShadowDataSourceConfiguration.getSourceDataSourceName()));\n        });\n        targetConfiguration.getShadowTables().entrySet().forEach(each -> {\n            YamlShadowTableConfiguration yamlShadowTableConfiguration = yamlShadowRuleConfiguration.getShadowTables().get(each.getKey());\n            assertNotNull(yamlShadowTableConfiguration);\n            assertThat(each.getValue().getShadowAlgorithmNames(), is(yamlShadowTableConfiguration.getShadowAlgorithmNames()));\n        });\n        targetConfiguration.getShadowAlgorithms().entrySet().forEach(each -> {\n            YamlShardingSphereAlgorithmConfiguration yamlShardingSphereAlgorithmConfiguration = yamlShadowRuleConfiguration.getShadowAlgorithms().get(each.getKey());\n            assertNotNull(yamlShardingSphereAlgorithmConfiguration);\n            assertThat(each.getValue().getType(), is(yamlShardingSphereAlgorithmConfiguration.getType()));\n        });\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/ShadowRuleAlgorithmProviderConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"dbf26a247d4d8a57657fb3d551d4b7e4e11ffbf2","commitMessage":"@@@FIX #11687 issue add unit test (#11754)\n\n* FIX #11687 issue add unit test\n\n* FIX #11687 issue add unit test","date":"2021-08-11 18:33:26","modifiedFileCount":"0","status":"B","submitter":"hoorf"},{"authorTime":"2021-08-12 19:36:08","codes":[{"authorDate":"2021-08-11 18:33:26","commitOrder":2,"curCode":"    public void assertSwapToYamlConfiguration() {\n        ShadowDataSourceConfiguration shadowDataSourceConfiguration = new ShadowDataSourceConfiguration(\"ds\", \"ds-shadow\");\n        ShadowDataSourceConfigurationYamlSwapper swapper = new ShadowDataSourceConfigurationYamlSwapper();\n        YamlShadowDataSourceConfiguration configuration = swapper.swapToYamlConfiguration(shadowDataSourceConfiguration);\n        assertThat(shadowDataSourceConfiguration.getSourceDataSourceName(), is(configuration.getSourceDataSourceName()));\n        assertThat(shadowDataSourceConfiguration.getShadowDataSourceName(), is(configuration.getShadowDataSourceName()));\n    }\n","date":"2021-08-11 18:33:26","endLine":37,"groupId":"10382","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertSwapToYamlConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/97/a54cd86a93f677c191738a624a3909e767615d.src","preCode":"    public void assertSwapToYamlConfiguration() {\n        ShadowDataSourceConfiguration shadowDataSourceConfiguration = new ShadowDataSourceConfiguration(\"ds\", \"ds-shadow\");\n        ShadowDataSourceConfigurationYamlSwapper swapper = new ShadowDataSourceConfigurationYamlSwapper();\n        YamlShadowDataSourceConfiguration configuration = swapper.swapToYamlConfiguration(shadowDataSourceConfiguration);\n        assertThat(shadowDataSourceConfiguration.getSourceDataSourceName(), is(configuration.getSourceDataSourceName()));\n        assertThat(shadowDataSourceConfiguration.getShadowDataSourceName(), is(configuration.getShadowDataSourceName()));\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/datasource/ShadowDataSourceConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"N"},{"authorDate":"2021-08-12 19:36:08","commitOrder":2,"curCode":"    public void assertSwapToObject() {\n        YamlShadowRuleConfiguration expectedConfiguration = buildYamlShadowRuleConfiguration();\n        AlgorithmProvidedShadowRuleConfiguration actualConfiguration = swapper.swapToObject(expectedConfiguration);\n        assertBasicAlgorithmShadowRule(actualConfiguration, expectedConfiguration);\n        assertThat(actualConfiguration.isEnable(), is(expectedConfiguration.isEnable()));\n        actualConfiguration.getDataSources().entrySet().forEach(each -> {\n            YamlShadowDataSourceConfiguration yamlShadowDataSourceConfiguration = expectedConfiguration.getDataSources().get(each.getKey());\n            assertNotNull(yamlShadowDataSourceConfiguration);\n            assertThat(each.getValue().getShadowDataSourceName(), is(yamlShadowDataSourceConfiguration.getShadowDataSourceName()));\n            assertThat(each.getValue().getSourceDataSourceName(), is(yamlShadowDataSourceConfiguration.getSourceDataSourceName()));\n        });\n        actualConfiguration.getTables().entrySet().forEach(each -> {\n            YamlShadowTableConfiguration yamlShadowTableConfiguration = expectedConfiguration.getTables().get(each.getKey());\n            assertNotNull(yamlShadowTableConfiguration);\n            assertThat(each.getValue().getShadowAlgorithmNames(), is(yamlShadowTableConfiguration.getShadowAlgorithmNames()));\n        });\n        actualConfiguration.getShadowAlgorithms().entrySet().forEach(each -> {\n            YamlShardingSphereAlgorithmConfiguration yamlShardingSphereAlgorithmConfiguration = expectedConfiguration.getShadowAlgorithms().get(each.getKey());\n            assertNotNull(yamlShardingSphereAlgorithmConfiguration);\n            assertThat(each.getValue().getType(), is(yamlShardingSphereAlgorithmConfiguration.getType()));\n        });\n    }\n","date":"2021-08-12 19:36:08","endLine":115,"groupId":"10382","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSwapToObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/48/34439bfd49d9b918295ff1a0bb924fc640df28.src","preCode":"    public void assertSwapToObject() {\n        buildYamlShadowRuleConfiguration();\n        ShadowRuleAlgorithmProviderConfigurationYamlSwapper swapper = new ShadowRuleAlgorithmProviderConfigurationYamlSwapper();\n        AlgorithmProvidedShadowRuleConfiguration targetConfiguration = swapper.swapToObject(yamlShadowRuleConfiguration);\n        assertThat(targetConfiguration.getColumn(), is(yamlShadowRuleConfiguration.getColumn()));\n        assertThat(targetConfiguration.getShadowDataSourceNames(), is(yamlShadowRuleConfiguration.getShadowDataSourceNames()));\n        assertThat(targetConfiguration.getSourceDataSourceNames(), is(yamlShadowRuleConfiguration.getSourceDataSourceNames()));\n        targetConfiguration.getDataSources().entrySet().forEach(each -> {\n            YamlShadowDataSourceConfiguration yamlShadowDataSourceConfiguration = yamlShadowRuleConfiguration.getDataSources().get(each.getKey());\n            assertNotNull(yamlShadowDataSourceConfiguration);\n            assertThat(each.getValue().getShadowDataSourceName(), is(yamlShadowDataSourceConfiguration.getShadowDataSourceName()));\n            assertThat(each.getValue().getSourceDataSourceName(), is(yamlShadowDataSourceConfiguration.getSourceDataSourceName()));\n        });\n        targetConfiguration.getShadowTables().entrySet().forEach(each -> {\n            YamlShadowTableConfiguration yamlShadowTableConfiguration = yamlShadowRuleConfiguration.getShadowTables().get(each.getKey());\n            assertNotNull(yamlShadowTableConfiguration);\n            assertThat(each.getValue().getShadowAlgorithmNames(), is(yamlShadowTableConfiguration.getShadowAlgorithmNames()));\n        });\n        targetConfiguration.getShadowAlgorithms().entrySet().forEach(each -> {\n            YamlShardingSphereAlgorithmConfiguration yamlShardingSphereAlgorithmConfiguration = yamlShadowRuleConfiguration.getShadowAlgorithms().get(each.getKey());\n            assertNotNull(yamlShardingSphereAlgorithmConfiguration);\n            assertThat(each.getValue().getType(), is(yamlShardingSphereAlgorithmConfiguration.getType()));\n        });\n    }\n","realPath":"shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/swapper/ShadowRuleAlgorithmProviderConfigurationYamlSwapperTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"56acbfff6b98149a5f397e00b454bd6da861d3ad","commitMessage":"@@@Add shadow switch and optimize API parameters. (#11785)\n\n","date":"2021-08-12 19:36:08","modifiedFileCount":"15","status":"M","submitter":"gin"}]
