[{"authorTime":"2020-10-22 20:53:42","codes":[{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public ASTNode visitInsert(final MySQLStatementParser.InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":759,"groupId":"2969","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitInsert","params":"(finalMySQLStatementParser.InsertContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitInsert(final MySQLStatementParser.InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":742,"status":"B"},{"authorDate":"2020-10-22 20:53:42","commitOrder":1,"curCode":"    public ASTNode visitReplace(final MySQLStatementParser.ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-10-22 20:53:42","endLine":814,"groupId":"2969","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitReplace","params":"(finalMySQLStatementParser.ReplaceContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/0a/89cc0e02e2670f6f8473ef3801a86053637eba.src","preCode":"    public ASTNode visitReplace(final MySQLStatementParser.ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":800,"status":"B"}],"commitId":"07d1a8f96418e776a4e44de6610500f428d2c30b","commitMessage":"@@@refactor SQLVisitorFacadeFactory (#7891)\n\n","date":"2020-10-22 20:53:42","modifiedFileCount":"21","status":"B","submitter":"Juan Pan(Trista)"},{"authorTime":"2020-11-16 12:59:49","codes":[{"authorDate":"2020-11-16 12:59:49","commitOrder":2,"curCode":"    public ASTNode visitInsert(final InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":858,"groupId":"2969","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitInsert","params":"(finalInsertContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitInsert(final MySQLStatementParser.InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":841,"status":"M"},{"authorDate":"2020-11-16 12:59:49","commitOrder":2,"curCode":"    public ASTNode visitReplace(final ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":913,"groupId":"2969","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitReplace","params":"(finalReplaceContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitReplace(final MySQLStatementParser.ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":899,"status":"M"}],"commitId":"37bee90a59cc18242274e37895d7b22b51356031","commitMessage":"@@@Format input parameters for MySQL and Oracle visitor functions (#8149)\n\n* Format input parameters for msql visitor functions\n\n* Format input parameters for oracle visitor functions\n\n* Delete git\n\ndelete invalid file\n\n* Format input parameters for Oracle visitor functions\n\n* format\n\n* format-add four blank at empty line","date":"2020-11-16 12:59:49","modifiedFileCount":"4","status":"M","submitter":"wenweibin"},{"authorTime":"2020-11-16 12:59:49","codes":[{"authorDate":"2020-12-24 00:26:44","commitOrder":3,"curCode":"    public ASTNode visitInsert(final InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","date":"2020-12-24 00:26:44","endLine":899,"groupId":"2969","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitInsert","params":"(finalInsertContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e2/b2a499c30d408203074c056c50c8e15fe2c4f6.src","preCode":"    public ASTNode visitInsert(final InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":882,"status":"M"},{"authorDate":"2020-11-16 12:59:49","commitOrder":3,"curCode":"    public ASTNode visitReplace(final ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","date":"2020-11-16 12:59:49","endLine":913,"groupId":"2969","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitReplace","params":"(finalReplaceContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8f/addd9c26cc0a8ac9e954ca68fb7aae7725a7ea.src","preCode":"    public ASTNode visitReplace(final ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":899,"status":"N"}],"commitId":"ab45b9dba391d6bd904ff8da6b596f1d1299a241","commitMessage":"@@@Refactor for code format (#8743)\n\n* Refactor MySQLSQLStatVisitor\n\n* For code format","date":"2020-12-24 00:26:44","modifiedFileCount":"15","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-02-06 00:37:52","codes":[{"authorDate":"2020-12-24 00:26:44","commitOrder":4,"curCode":"    public ASTNode visitInsert(final InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","date":"2020-12-24 00:26:44","endLine":899,"groupId":"101448","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"visitInsert","params":"(finalInsertContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e2/b2a499c30d408203074c056c50c8e15fe2c4f6.src","preCode":"    public ASTNode visitInsert(final InsertContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.insertValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertValuesClause());\n        } else if (null != ctx.insertSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.insertSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        if (null != ctx.onDuplicateKeyClause()) {\n            result.setOnDuplicateKeyColumns((OnDuplicateKeyColumnsSegment) visit(ctx.onDuplicateKeyClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":882,"status":"N"},{"authorDate":"2021-02-06 00:37:52","commitOrder":4,"curCode":"    public ASTNode visitReplace(final ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(currentParameterIndex);\n        return result;\n    }\n","date":"2021-02-06 00:37:52","endLine":970,"groupId":"101448","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"visitReplace","params":"(finalReplaceContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d7/c7847ab51bf288ea90051e6be690a5989dd313.src","preCode":"    public ASTNode visitReplace(final ReplaceContext ctx) {\n        \r\n        MySQLInsertStatement result;\n        if (null != ctx.replaceValuesClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceValuesClause());\n        } else if (null != ctx.replaceSelectClause()) {\n            result = (MySQLInsertStatement) visit(ctx.replaceSelectClause());\n        } else {\n            result = new MySQLInsertStatement();\n            result.setSetAssignment((SetAssignmentSegment) visit(ctx.setAssignmentsClause()));\n        }\n        result.setTable((SimpleTableSegment) visit(ctx.tableName()));\n        result.setParameterCount(getCurrentParameterIndex());\n        return result;\n    }\n","realPath":"shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":956,"status":"M"}],"commitId":"9424b261f6a125a06890c706bf56f7dd410423f3","commitMessage":"@@@For code style (#9355)\n\n* Remove useless codes\n\n* For code style\n\n* For code style\n\n* For code style","date":"2021-02-06 00:37:52","modifiedFileCount":"77","status":"M","submitter":"Liang Zhang"}]
