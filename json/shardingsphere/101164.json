[{"authorTime":"2020-05-16 19:36:14","codes":[{"authorDate":"2020-05-16 19:36:14","commitOrder":1,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-05-16 19:36:14","endLine":184,"groupId":"330","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectplain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/1a/42afae1ed0f7e90977d42ebd4425b0f1ea4a4f.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"},{"authorDate":"2020-05-16 19:36:14","commitOrder":1,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-05-16 19:36:14","endLine":186,"groupId":"7505","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectassistPwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/f3/f46d5385a650d5d3bc5a9bd69aade4786aed3b.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"B"}],"commitId":"468e4540f107bacea98e9785b7312b2e5bad0c7e","commitMessage":"@@@Rename sharding-jdbc to shardingsphere-jdbc (#5641)\n\n* Rename sharding-jdbc to shardingsphere-jdbc\n\n* rename org.apache.shardingsphere.shardingjdbc to org.apache.shardingsphere.driver\n\n* rename org.apache.shardingsphere.shardingjdbc to org.apache.shardingsphere.driver","date":"2020-05-16 19:36:14","modifiedFileCount":"32","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-07-22 22:00:41","codes":[{"authorDate":"2020-07-22 22:00:41","commitOrder":2,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDATABASE_TYPE_MAP().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-07-22 22:00:41","endLine":184,"groupId":"330","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectplain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a7/45cabddf23d288d15c9d02e63834070884ade2.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2020-07-22 22:00:41","commitOrder":2,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDATABASE_TYPE_MAP().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-07-22 22:00:41","endLine":186,"groupId":"7505","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectassistPwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/06/e0a79bfd6a57d1aea06e890fb3736e458cf61b.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"28ab21fef0767a62081c34c67e1c729837079e6d","commitMessage":"@@@Fix codes for checkstyle (#6403)\n\n* Remove redundant suppression\n\n* Make field as final as possible","date":"2020-07-22 22:00:41","modifiedFileCount":"59","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-09-23 23:09:40","codes":[{"authorDate":"2020-09-23 23:09:40","commitOrder":3,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-09-23 23:09:40","endLine":184,"groupId":"330","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectplain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/36/0ad4f1a8f6d54312902d04a3707762bfd9e056.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDATABASE_TYPE_MAP().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2020-09-23 23:09:40","commitOrder":3,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-09-23 23:09:40","endLine":186,"groupId":"7505","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectassistPwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8e/336b192b49b2ae33cd1182e1fcd111684d60c8.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDATABASE_TYPE_MAP().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"e83962e7acc670c071a81edfdaeea367eb3d5856","commitMessage":"@@@Rename PrimaryReplicaReplication in code (#7579)\n\n* Rename PrimaryReplicaReplication in code\n\n* Rename PrimaryReplicaReplication in integrated test cases\n\n* Rename PrimaryReplicaReplication in integrated test cases\n\n* Fix data\n\n* Fix data\n\n* Refactor test case for shardingsphere-jdbc-governance-spring-namespace","date":"2020-09-23 23:09:40","modifiedFileCount":"47","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-10-18 18:03:07","codes":[{"authorDate":"2020-10-18 18:03:07","commitOrder":4,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypeRegistry.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-10-18 18:03:07","endLine":184,"groupId":"330","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectplain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/61/4e6f9472dfad8eff167ef145ea585e0a21f4b1.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2020-10-18 18:03:07","commitOrder":4,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypeRegistry.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2020-10-18 18:03:07","endLine":186,"groupId":"7505","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectassistPwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/7e/0c4251b181d4e0b4c6f1a8d6ab7d7a5af96759.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypes.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"c82441ba41bc9913a997147b70dbcc9dbb47ae60","commitMessage":"@@@Rename DatabaseTypes to DatabaseTypeRegistry (#7834)\n\n","date":"2020-10-18 18:03:07","modifiedFileCount":"76","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-01-24 00:03:28","codes":[{"authorDate":"2021-01-24 00:03:28","commitOrder":5,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getActualDataSources().get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2021-01-24 00:03:28","endLine":183,"groupId":"101164","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectplain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4e/254773017d64f9098c4f2706e8d5bfb5903377.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object plain) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypeRegistry.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_SQL_TO_ASSERT);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(resultSet.getObject(\"cipher_pwd\"), is(pwd));\n                    assertThat(resultSet.getObject(\"plain_pwd\"), is(plain));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2021-01-24 00:03:28","commitOrder":5,"curCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getActualDataSources().get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","date":"2021-01-24 00:03:28","endLine":185,"groupId":"101164","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertResultSet","params":"(finalintresultSetCount@finalintid@finalObjectpwd@finalObjectassistPwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/99/6420ce6207af041290fe27c27919a60f674fca.src","preCode":"    private void assertResultSet(final int resultSetCount, final int id, final Object pwd, final Object assistPwd) throws SQLException {\n        try (Connection conn = getDatabaseTypeMap().get(DatabaseTypeRegistry.getActualDatabaseType(\"H2\")).get(\"encrypt\").getConnection();\n             Statement stmt = conn.createStatement()) {\n            ResultSet resultSet = stmt.executeQuery(SELECT_ALL_SQL);\n            int count = 1;\n            while (resultSet.next()) {\n                if (id == count) {\n                    assertThat(pwd, is(resultSet.getObject(\"cipher_pwd\")));\n                    assertThat(assistPwd, is(resultSet.getObject(\"assist_pwd\")));\n                }\n                count += 1;\n            }\n            assertThat(count - 1, is(resultSetCount));\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/EncryptPreparedStatementTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"8ef17ca80623b471b870fd824c8cbdfb1be07476","commitMessage":"@@@Use H2 test AbstractSQLTest only (#9142)\n\n* Remove useless codes of DatabaseEnvironment\n\n* Remove DatabaseEnvironment\n\n* Add DataSourceBuilder\n\n* Use try with resource for connection with init data\n\n* Simplify AbstractSQLTest\n\n* Simplify AbstractSQLTest\n\n* Simplify AbstractSQLCalciteTest\n\n* Use H2 test AbstractSQLTest only","date":"2021-01-24 00:03:28","modifiedFileCount":"11","status":"M","submitter":"Liang Zhang"}]
