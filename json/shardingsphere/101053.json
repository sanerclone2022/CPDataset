[{"authorTime":"2021-04-01 17:33:10","codes":[{"authorDate":"2021-04-01 16:40:41","commitOrder":3,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, tableName, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-04-01 16:40:41","endLine":92,"groupId":"6655","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e5/fcb565eb5b55afc191bd585d886f7aeae5ac8a.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, tableName, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/ProxyLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"NB"},{"authorDate":"2021-04-01 17:33:10","commitOrder":3,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", tableName, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-04-01 17:33:10","endLine":101,"groupId":"6655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/77/4a91cfcf77944acd04b40c34cfd2b2a0836a68.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", tableName, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/JDBCLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"b85ecda284aa6f866887ea54b6583c7ff5215382","commitMessage":"@@@Add lock engine for jdbc (#9905)\n\n* Add lock engine for jdbc\n\n* Add lock engine for jdbc","date":"2021-04-01 17:33:10","modifiedFileCount":"3","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-05-01 14:50:28","codes":[{"authorDate":"2021-04-01 16:40:41","commitOrder":4,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, tableName, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-04-01 16:40:41","endLine":92,"groupId":"6655","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/e5/fcb565eb5b55afc191bd585d886f7aeae5ac8a.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, tableName, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/ProxyLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"},{"authorDate":"2021-05-01 14:50:28","commitOrder":4,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, each);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", each, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-05-01 14:50:28","endLine":101,"groupId":"6655","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4a/df330c728dbe5f07e69bcb41abd8e355736ca8.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", tableName, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/JDBCLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"ddcab50140fb76c18075d350ef73e183e2cdbf24","commitMessage":"@@@Refactor JDBCLockEngine (#10227)\n\n","date":"2021-05-01 14:50:28","modifiedFileCount":"1","status":"M","submitter":"Liang Zhang"},{"authorTime":"2021-05-01 14:50:28","codes":[{"authorDate":"2021-07-13 19:10:48","commitOrder":5,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, each);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, each, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-07-13 19:10:48","endLine":92,"groupId":"6655","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8a/df1bb9bf021089f642d87d18ed6bb26ee176dd.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String tableName : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, tableName);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, tableName, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/ProxyLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-05-01 14:50:28","commitOrder":5,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, each);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", each, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-05-01 14:50:28","endLine":101,"groupId":"6655","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/4a/df330c728dbe5f07e69bcb41abd8e355736ca8.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, each);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", each, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/JDBCLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"N"}],"commitId":"d0f26f1ba57042de6cc59d1034c003245a272e76","commitMessage":"@@@Refactor distribute lock (#11311)\n\n* Refactor distribute lock\n\n* Refactor distribute lock","date":"2021-07-13 19:10:48","modifiedFileCount":"5","status":"M","submitter":"Haoran Meng"},{"authorTime":"2021-08-09 16:45:36","codes":[{"authorDate":"2021-07-13 19:10:48","commitOrder":6,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, each);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, each, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-07-13 19:10:48","endLine":92,"groupId":"101053","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8a/df1bb9bf021089f642d87d18ed6bb26ee176dd.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, each);\n            if (!lock.tryLock(lockName)) {\n                throw new TableLockWaitTimeoutException(schemaName, each, lock.getDefaultTimeOut());\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/ProxyLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"},{"authorDate":"2021-08-09 16:45:36","commitOrder":6,"curCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(schemaName, each);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", each, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","date":"2021-08-09 16:45:36","endLine":104,"groupId":"101053","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"tryTableLock","params":"(finalShardingSphereLocklock@finalCollection<String>tableNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/8b/d54f88ad1330e4eede71242bfe7e344462fc2f.src","preCode":"    private void tryTableLock(final ShardingSphereLock lock, final Collection<String> tableNames) throws SQLException {\n        for (String each : tableNames) {\n            String lockName = LockNameUtil.getTableLockName(DefaultSchema.LOGIC_NAME, each);\n            if (!lock.tryLock(lockName)) {\n                throw new SQLException(String.format(\"Table %s lock wait timeout of %s ms exceeded\", each, lock.getDefaultTimeOut()));\n            }\n            lockNames.add(lockName);\n        }\n    }\n","realPath":"shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/JDBCLockEngine.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"222aeb59cc07d5eb3edc858c68b9d95cc903bcec","commitMessage":"@@@JDBC-core module delete getDefaultMetaData() (#11714)\n\n* jdbc-core module delete getDefaultMetaData()\n\n* update\n\n* optimization","date":"2021-08-09 16:45:36","modifiedFileCount":"22","status":"M","submitter":"zhaojinchao"}]
