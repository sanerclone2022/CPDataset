[{"authorTime":"2021-06-04 22:49:49","codes":[{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setRenameTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order_new\")));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-06-04 22:49:49","endLine":94,"groupId":"13781","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/15/3070fd2e667c6dc124dd200a26243dca03bf6e.src","preCode":"    public void assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setRenameTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order_new\")));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingAlterTableStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2021-06-04 22:49:49","commitOrder":1,"curCode":"    public void assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setRenameTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order_new\")));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(false);\n        when(shardingRule.isBroadcastTable(\"t_order\")).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-06-04 22:49:49","endLine":105,"groupId":"13781","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/15/3070fd2e667c6dc124dd200a26243dca03bf6e.src","preCode":"    public void assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setRenameTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order_new\")));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(false);\n        when(shardingRule.isBroadcastTable(\"t_order\")).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingAlterTableStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"6b157b44d0336e4d9c61f940b0ec19c26758af84","commitMessage":"@@@Merge sharding feature to core module (#10662)\n\n* Merge dependencies\n\n* Merge sharding feature to api module\n\n* Merge sharding feature to core module","date":"2021-06-04 22:49:49","modifiedFileCount":"0","status":"B","submitter":"Liang Zhang"},{"authorTime":"2021-07-05 14:48:43","codes":[{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        sqlStatement.setRenameTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order_new\"))));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-07-05 14:48:43","endLine":95,"groupId":"10460","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/cdde1e03d14fc888dc5f9e05eebc6f19f87c6f.src","preCode":"    public void assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setRenameTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order_new\")));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingAlterTableStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2021-07-05 14:48:43","commitOrder":2,"curCode":"    public void assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order\"))));\n        sqlStatement.setRenameTable(new SimpleTableSegment(new TableNameSegment(0, 0, new IdentifierValue(\"t_order_new\"))));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(false);\n        when(shardingRule.isBroadcastTable(\"t_order\")).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","date":"2021-07-05 14:48:43","endLine":106,"groupId":"10460","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/88/cdde1e03d14fc888dc5f9e05eebc6f19f87c6f.src","preCode":"    public void assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL() {\n        PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement();\n        sqlStatement.setTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order\")));\n        sqlStatement.setRenameTable(new SimpleTableSegment(0, 0, new IdentifierValue(\"t_order_new\")));\n        SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement);\n        when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\", \"t_order_new\"))).thenReturn(false);\n        when(shardingRule.isBroadcastTable(\"t_order\")).thenReturn(true);\n        new ShardingAlterTableStatementValidator().preValidate(shardingRule, sqlStatementContext, Collections.emptyList(), schema);\n    }\n","realPath":"shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingAlterTableStatementValidatorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"bd4980624aaa0c9fb3c9c87e260177715f835ede","commitMessage":"@@@support sql with schema for all features (#11150)\n\n* support sql with schema for all features\n\n* optimize logic\n\n* fix test case\n\n* fix multi remove token rewrite error\n\n* correct some test case param\n\n* optimize remove token generate\n\n* optimize remove token generate","date":"2021-07-05 14:48:43","modifiedFileCount":"64","status":"M","submitter":"Zhengqiang Duan"}]
