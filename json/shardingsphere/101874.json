[{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-05-16 16:30:07","commitOrder":1,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.INT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.INT_OBJECT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.LONG_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.LONG_OBJECT_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.STRING_VALUE.getKey(), \"new_value\");\n        TestTypedProperties actual = new TestTypedProperties(props);\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"new_value\"));\n    }\n","date":"2020-05-16 16:30:07","endLine":52,"groupId":"6724","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/4bbdce5d879f40add32e8f5e5c68db7b19f2bc.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.INT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.INT_OBJECT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.LONG_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.LONG_OBJECT_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.STRING_VALUE.getKey(), \"new_value\");\n        TestTypedProperties actual = new TestTypedProperties(props);\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"new_value\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/properties/TypedPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2020-05-16 16:30:07","commitOrder":1,"curCode":"    public void assertGetDefaultValue() {\n        TestTypedProperties actual = new TestTypedProperties(new Properties());\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"value\"));\n    }\n","date":"2020-05-16 16:30:07","endLine":64,"groupId":"4506","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/4bbdce5d879f40add32e8f5e5c68db7b19f2bc.src","preCode":"    public void assertGetDefaultValue() {\n        TestTypedProperties actual = new TestTypedProperties(new Properties());\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"value\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/properties/TypedPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"}],"commitId":"60b82df2df371512c4a2d40f562a6ffa1349c2e1","commitMessage":"@@@Rename shardingsphere-underlying to shardingsphere-infra (#5638)\n\n* Rename shardingsphere-underlying to shardingsphere-infra\n\n* Rename shardingsphere-infra's subprojects\n\n* Rename shardingsphere-infra's subprojects\n\n* rename package from org.apache.shardingsphere.underlying.common to org.apache.shardingsphere.infra\n\n* rename package from org.apache.shardingsphere.underlying.executor to org.apache.shardingsphere.infra.executor\n\n* rename package from org.apache.shardingsphere.underlying.merge to org.apache.shardingsphere.infra.merge\n\n* rename package from org.apache.shardingsphere.underlying.route to org.apache.shardingsphere.infra.route\n\n* rename package from org.apache.shardingsphere.underlying.rewrite to org.apache.shardingsphere.infra.rewrite","date":"2020-05-16 16:30:07","modifiedFileCount":"488","status":"B","submitter":"Liang Zhang"},{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-06-12 16:34:42","commitOrder":2,"curCode":"    public void assertGetValue() {\n        Properties properties = new Properties();\n        properties.setProperty(TestTypedPropertyKey.BOOLEAN_VALUE.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(TestTypedPropertyKey.INT_VALUE.getKey(), \"100\");\n        properties.setProperty(TestTypedPropertyKey.INT_OBJECT_VALUE.getKey(), \"100\");\n        properties.setProperty(TestTypedPropertyKey.LONG_VALUE.getKey(), \"10000\");\n        properties.setProperty(TestTypedPropertyKey.LONG_OBJECT_VALUE.getKey(), \"10000\");\n        properties.setProperty(TestTypedPropertyKey.STRING_VALUE.getKey(), \"new_value\");\n        TestTypedProperties actual = new TestTypedProperties(properties);\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"new_value\"));\n    }\n","date":"2020-06-12 16:34:42","endLine":52,"groupId":"4506","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/87/0bf242ccc812ccb40f654f84baf50d52de7b0e.src","preCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.INT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.INT_OBJECT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.LONG_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.LONG_OBJECT_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.STRING_VALUE.getKey(), \"new_value\");\n        TestTypedProperties actual = new TestTypedProperties(props);\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"new_value\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/properties/TypedPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-05-16 16:30:07","commitOrder":2,"curCode":"    public void assertGetDefaultValue() {\n        TestTypedProperties actual = new TestTypedProperties(new Properties());\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"value\"));\n    }\n","date":"2020-05-16 16:30:07","endLine":64,"groupId":"4506","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/4bbdce5d879f40add32e8f5e5c68db7b19f2bc.src","preCode":"    public void assertGetDefaultValue() {\n        TestTypedProperties actual = new TestTypedProperties(new Properties());\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"value\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/properties/TypedPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"b200ed8e6833ebdfa95f88f7cbd1b16af1f65d16","commitMessage":"@@@Refactor key generator api (#6010)\n\n* rename KeyGeneratorConfiguration.algorithm\n\n* rename KeyGenerateStrategyConfiguration\n\n* refactor org.apache.shardingsphere.sharding.api.config.strategy package\n\n* add builder package\n\n* refactor key generator api\n\n* refactor key generator api\n\n* unify props and properties","date":"2020-06-12 16:34:42","modifiedFileCount":"79","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-05-16 16:30:07","codes":[{"authorDate":"2020-06-13 11:39:32","commitOrder":3,"curCode":"    public void assertGetValue() {\n        Properties props = new Properties();\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE.getKey(), Boolean.TRUE.toString());\n        props.setProperty(TestTypedPropertyKey.INT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.INT_OBJECT_VALUE.getKey(), \"100\");\n        props.setProperty(TestTypedPropertyKey.LONG_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.LONG_OBJECT_VALUE.getKey(), \"10000\");\n        props.setProperty(TestTypedPropertyKey.STRING_VALUE.getKey(), \"new_value\");\n        TestTypedProperties actual = new TestTypedProperties(props);\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"new_value\"));\n    }\n","date":"2020-06-13 11:39:32","endLine":52,"groupId":"101874","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/4bbdce5d879f40add32e8f5e5c68db7b19f2bc.src","preCode":"    public void assertGetValue() {\n        Properties properties = new Properties();\n        properties.setProperty(TestTypedPropertyKey.BOOLEAN_VALUE.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE.getKey(), Boolean.TRUE.toString());\n        properties.setProperty(TestTypedPropertyKey.INT_VALUE.getKey(), \"100\");\n        properties.setProperty(TestTypedPropertyKey.INT_OBJECT_VALUE.getKey(), \"100\");\n        properties.setProperty(TestTypedPropertyKey.LONG_VALUE.getKey(), \"10000\");\n        properties.setProperty(TestTypedPropertyKey.LONG_OBJECT_VALUE.getKey(), \"10000\");\n        properties.setProperty(TestTypedPropertyKey.STRING_VALUE.getKey(), \"new_value\");\n        TestTypedProperties actual = new TestTypedProperties(properties);\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertTrue(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(100));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(10000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"new_value\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/properties/TypedPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-05-16 16:30:07","commitOrder":3,"curCode":"    public void assertGetDefaultValue() {\n        TestTypedProperties actual = new TestTypedProperties(new Properties());\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"value\"));\n    }\n","date":"2020-05-16 16:30:07","endLine":64,"groupId":"101874","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertGetDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/d2/4bbdce5d879f40add32e8f5e5c68db7b19f2bc.src","preCode":"    public void assertGetDefaultValue() {\n        TestTypedProperties actual = new TestTypedProperties(new Properties());\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_VALUE));\n        assertFalse(actual.getValue(TestTypedPropertyKey.BOOLEAN_OBJECT_VALUE));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.INT_OBJECT_VALUE), is(10));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.LONG_OBJECT_VALUE), is(1000L));\n        assertThat(actual.getValue(TestTypedPropertyKey.STRING_VALUE), is(\"value\"));\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/properties/TypedPropertiesTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"75824a28d2ffe9387ccaf9849f4fbc91a0037257","commitMessage":"@@@Unify properties and props (#6019)\n\n* Unify properties and props\n\n* Unify properties and props\n\n* Merge branch 'master' into dev\n\n# Conflicts:\n#\tshardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-common/src/main/java/org/apache/shardingsphere/sharding/strategy/algorithm/sharding/ModuloShardingAlgorithm.java\n#\tshardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/standard/ShardingStandardRoutingEngine.java\n#\tshardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/Bootstrap.java","date":"2020-06-13 11:39:32","modifiedFileCount":"243","status":"M","submitter":"Liang Zhang"}]
