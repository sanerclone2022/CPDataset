[{"authorTime":"2020-08-08 15:14:06","codes":[{"authorDate":"2020-08-08 15:14:06","commitOrder":1,"curCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(SchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","date":"2020-08-08 15:14:06","endLine":41,"groupId":"6379","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecorateQueryResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/cd402dbed84b0018d26f0f4e6774294a04d8bf.src","preCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(SchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2020-08-08 15:14:06","commitOrder":1,"curCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(SchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","date":"2020-08-08 15:14:06","endLine":50,"groupId":"6379","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecorateMergedResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/a1/cd402dbed84b0018d26f0f4e6774294a04d8bf.src","preCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(SchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"51651c17e50a153f7ef67bef3942f7d7f87e8cfc","commitMessage":"@@@Merge pull request #6700 from terrymanu/dev\n\nAdd test coverage to 97% for shardingsphere-infra-merge module","date":"2020-08-08 15:14:06","modifiedFileCount":"15","status":"B","submitter":"xiaoyu"},{"authorTime":"2020-10-13 16:56:26","codes":[{"authorDate":"2020-10-13 16:56:26","commitOrder":2,"curCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(PhysicalSchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","date":"2020-10-13 16:56:26","endLine":41,"groupId":"6379","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecorateQueryResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/d2799051034dd49c3e5afd13dc276b864111eb.src","preCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(SchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-10-13 16:56:26","commitOrder":2,"curCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(PhysicalSchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","date":"2020-10-13 16:56:26","endLine":50,"groupId":"6379","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecorateMergedResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/13/d2799051034dd49c3e5afd13dc276b864111eb.src","preCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(SchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"5bde8b2aa27657e9459fb20929cfd4ef83dcddcf","commitMessage":"@@@Rename metadata.model.physical package (#7771)\n\n* Rename metadata.model.physical package\n\n* Rename JDBCSchemaHandler\n\n* rename PhysicalXXXMetaData","date":"2020-10-13 16:56:26","modifiedFileCount":"136","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-09 17:01:30","codes":[{"authorDate":"2020-11-09 17:01:30","commitOrder":3,"curCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(ShardingSphereSchema.class));\n        assertTrue(actual.next());\n    }\n","date":"2020-11-09 17:01:30","endLine":41,"groupId":"6379","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecorateQueryResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/aa/9a957a73f1e1e7d5cc556f9b0c1f04dc5f76a4.src","preCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(PhysicalSchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-11-09 17:01:30","commitOrder":3,"curCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(ShardingSphereSchema.class));\n        assertTrue(actual.next());\n    }\n","date":"2020-11-09 17:01:30","endLine":50,"groupId":"6379","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecorateMergedResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/aa/9a957a73f1e1e7d5cc556f9b0c1f04dc5f76a4.src","preCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(PhysicalSchemaMetaData.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"09281f69a6dd01c12dd73dcc6675397062498f90","commitMessage":"@@@Rename PhysicalSchemaMetaData to ShardingSphereSchema (#8094)\n\n* Rename PhysicalSchemaMetaData to ShardingSphereSchema\n\n* Fix checkstyle","date":"2020-11-09 17:01:30","modifiedFileCount":"153","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-12 07:07:11","codes":[{"authorDate":"2020-11-12 07:07:11","commitOrder":4,"curCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","date":"2020-11-12 07:07:11","endLine":40,"groupId":"6379","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecorateQueryResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fb/f0f72b5cda32ff0fc66fdcc0e9897dc3747b18.src","preCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), mock(ShardingSphereSchema.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2020-11-12 07:07:11","commitOrder":4,"curCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","date":"2020-11-12 07:07:11","endLine":49,"groupId":"6379","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecorateMergedResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fb/f0f72b5cda32ff0fc66fdcc0e9897dc3747b18.src","preCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), mock(ShardingSphereSchema.class));\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"ab325a0ff50bedc37a1bef92d2ef8c13ad2d3237","commitMessage":"@@@Remove EncryptColumnMetaData (#8140)\n\n* Decouple EncryptColumnMetaData\n\n* Remove EncryptColumnMetaData","date":"2020-11-12 07:07:11","modifiedFileCount":"17","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-12 07:07:11","codes":[{"authorDate":"2020-11-28 01:55:00","commitOrder":5,"curCode":"    public void assertDecorateQueryResult() throws SQLException {\n        ExecuteQueryResult queryResult = mock(ExecuteQueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","date":"2020-11-28 01:55:00","endLine":40,"groupId":"6379","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDecorateQueryResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/5c/8961d90a6a8d9b719faeaad555ccdd2189d58a.src","preCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2020-11-12 07:07:11","commitOrder":5,"curCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","date":"2020-11-12 07:07:11","endLine":49,"groupId":"6379","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecorateMergedResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fb/f0f72b5cda32ff0fc66fdcc0e9897dc3747b18.src","preCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"}],"commitId":"655940e8c62e04cd1395d3de7a9e394f667a934c","commitMessage":"@@@Rename QueryResultSet to ExecuteQueryResult (#8393)\n\n","date":"2020-11-28 01:55:00","modifiedFileCount":"64","status":"M","submitter":"Liang Zhang"},{"authorTime":"2020-11-12 07:07:11","codes":[{"authorDate":"2020-11-28 20:13:42","commitOrder":6,"curCode":"    public void assertDecorateQueryResult() throws SQLException {\n        QueryResult queryResult = mock(QueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","date":"2020-11-28 20:13:42","endLine":40,"groupId":"1050","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"assertDecorateQueryResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/dd/a81e7c0f9d9542fa11e138901fdefecfb7e872.src","preCode":"    public void assertDecorateQueryResult() throws SQLException {\n        ExecuteQueryResult queryResult = mock(ExecuteQueryResult.class);\n        when(queryResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(queryResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2020-11-12 07:07:11","commitOrder":6,"curCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","date":"2020-11-12 07:07:11","endLine":49,"groupId":"1050","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDecorateMergedResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-shardingsphere-10-0.7/blobInfo/CC_OUT/blobs/fb/f0f72b5cda32ff0fc66fdcc0e9897dc3747b18.src","preCode":"    public void assertDecorateMergedResult() throws SQLException {\n        MergedResult mergedResult = mock(MergedResult.class);\n        when(mergedResult.next()).thenReturn(true);\n        TransparentResultDecorator decorator = new TransparentResultDecorator();\n        MergedResult actual = decorator.decorate(mergedResult, mock(SQLStatementContext.class), new TransparentRule());\n        assertTrue(actual.next());\n    }\n","realPath":"shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/engine/decorator/impl/TransparentResultDecoratorTest.java","repoName":"shardingsphere","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"}],"commitId":"240920940faa05e33f8734bef9103a7f02aa62f9","commitMessage":"@@@Rename QueryResult & UpdateResult (#8398)\n\n* Rename UpdateResult\n\n* Rename QueryResult","date":"2020-11-28 20:13:42","modifiedFileCount":"70","status":"M","submitter":"Liang Zhang"}]
