[{"authorTime":"2010-04-04 18:37:17","codes":[{"authorDate":"2010-04-04 18:37:17","commitOrder":1,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIPHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2010-04-04 18:37:17","endLine":270,"groupId":"2947","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d0/c339c9f86b0fed074736286b21646b5d8d5323.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIPHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"},{"authorDate":"2010-04-04 18:37:17","commitOrder":1,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIPHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, proxy1, proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2010-04-04 18:37:17","endLine":335,"groupId":"2949","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d0/c339c9f86b0fed074736286b21646b5d8d5323.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIPHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, proxy1, proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"B"}],"commitId":"d9330a97c0f39c583292a2db551fddb2ee3398b4","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49014\nAdd test cases for the RemoteIpFilter\nPatch provided by Cyrille Le Clerc \n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@930659 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-04 18:37:17","modifiedFileCount":"0","status":"B","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-06-19 17:41:35","codes":[{"authorDate":"2010-06-19 17:41:35","commitOrder":2,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2010-06-19 17:41:35","endLine":270,"groupId":"2947","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b7/fbe0ab202544638aceaba5cb195a2ded312f92.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIPHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2010-06-19 17:41:35","commitOrder":2,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, proxy1, proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2010-06-19 17:41:35","endLine":335,"groupId":"2949","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b7/fbe0ab202544638aceaba5cb195a2ded312f92.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIPHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, proxy1, proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"M"}],"commitId":"c6df8dc7c51f9bc84d369a23756cb2aa828e4582","commitMessage":"@@@Fix Gump failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@956209 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-19 17:41:35","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-01-05 23:05:42","codes":[{"authorDate":"2011-01-05 23:05:42","commitOrder":3,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2011-01-05 23:05:42","endLine":274,"groupId":"2947","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/ad43b5c5781c2c688f77d9ad5580769e34d449.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2011-01-05 23:05:42","commitOrder":3,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2011-01-05 23:05:42","endLine":341,"groupId":"6328","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/ad43b5c5781c2c688f77d9ad5580769e34d449.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.setHeader(\"x-forwarded-for\", \"140.211.11.130, proxy1, proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"3541fc6110d302db0c1c0efb1d20eeebfc1447c1","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50453\nCorrectly handle multiple X-Forwarded-For headers\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1055482 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-05 23:05:42","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-01-07 22:56:50","codes":[{"authorDate":"2011-01-07 22:56:50","commitOrder":4,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2011-01-07 22:56:50","endLine":274,"groupId":"2947","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/cfd5d4f17643f00fab1015d8f5c47ea99e9279.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10, 192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2011-01-07 22:56:50","commitOrder":4,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2011-01-07 22:56:50","endLine":341,"groupId":"6328","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/cfd5d4f17643f00fab1015d8f5c47ea99e9279.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1, 192\\\\.168\\\\..*, another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"5e33b4298304fcf3680f2db5bb39aedababc32bf","commitMessage":"@@@Fix tests after regex changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1056340 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-07 22:56:50","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-01-07 22:56:50","codes":[{"authorDate":"2011-01-16 03:33:06","commitOrder":5,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2011-01-16 03:33:06","endLine":274,"groupId":"2947","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/31/de47d91cd59315b37fc60b2fe7c07aabce702b.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1, proxy2, proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2011-01-07 22:56:50","commitOrder":5,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2011-01-07 22:56:50","endLine":341,"groupId":"6328","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/cfd5d4f17643f00fab1015d8f5c47ea99e9279.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"}],"commitId":"2c1468fc269bee5859fd0f6fc6251d266f27e3b4","commitMessage":"@@@Update JMX descriptions.  tests.  documentation and examples in documentation for using a single regex for attributes in RemoteIpFilter.  RemoteIpValve.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1059398 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-16 03:33:06","modifiedFileCount":"3","status":"M","submitter":"Konstantin Kolinko"},{"authorTime":"2015-04-28 04:13:05","codes":[{"authorDate":"2015-04-28 04:13:05","commitOrder":6,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request).getRequest();\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2015-04-28 04:13:05","endLine":318,"groupId":"16954","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/df/9f833d5629a8a1ee7ee72fdbb3902d18664f5f.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"},{"authorDate":"2015-04-28 04:13:05","commitOrder":6,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request).getRequest();\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2015-04-28 04:13:05","endLine":387,"groupId":"16953","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/df/9f833d5629a8a1ee7ee72fdbb3902d18664f5f.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request);\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"M"}],"commitId":"4921e131879a1aa4a77db51ae2ac3a226176f619","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57856\nEnsure that any scheme/port changes implemented by the RemoteIpFilter also affect HttpServletResponse.sendRedirect()\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1676364 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-04-28 04:13:05","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"},{"authorTime":"2017-11-13 18:49:13","codes":[{"authorDate":"2017-11-13 18:49:13","commitOrder":7,"curCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request).getRequest();\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        Assert.assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        Assert.assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        Assert.assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        Assert.assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2017-11-13 18:49:13","endLine":313,"groupId":"101714","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0f/6d8345ebddf2c9e3b5beacc8bf7febe360aa64.src","preCode":"    public void testInvokeAllProxiesAreInternal() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"192\\\\.168\\\\.0\\\\.10|192\\\\.168\\\\.0\\\\.11\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130, 192.168.0.10, 192.168.0.11\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request).getRequest();\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are internal, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertNull(\"all proxies are internal, x-forwarded-by must be null\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2017-11-13 18:49:13","commitOrder":7,"curCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request).getRequest();\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        Assert.assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        Assert.assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        Assert.assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        Assert.assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","date":"2017-11-13 18:49:13","endLine":382,"groupId":"101714","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0f/6d8345ebddf2c9e3b5beacc8bf7febe360aa64.src","preCode":"    public void testInvokeAllProxiesAreTrustedAndRemoteAddrMatchRegexp() throws Exception {\n\n        \r\n        FilterDef filterDef = new FilterDef();\n        filterDef.addInitParameter(\"internalProxies\", \"127\\\\.0\\\\.0\\\\.1|192\\\\.168\\\\..*|another-internal-proxy\");\n        filterDef.addInitParameter(\"trustedProxies\", \"proxy1|proxy2|proxy3\");\n        filterDef.addInitParameter(\"remoteIpHeader\", \"x-forwarded-for\");\n        filterDef.addInitParameter(\"proxiesHeader\", \"x-forwarded-by\");\n\n        MockHttpServletRequest request = new MockHttpServletRequest();\n        request.setRemoteAddr(\"192.168.0.10\");\n        request.setRemoteHost(\"remote-host-original-value\");\n        request.addHeader(\"x-forwarded-for\", \"140.211.11.130\");\n        request.addHeader(\"x-forwarded-for\", \"proxy1\");\n        request.addHeader(\"x-forwarded-for\", \"proxy2\");\n\n        \r\n        HttpServletRequest actualRequest = testRemoteIpFilter(filterDef, request).getRequest();\n\n        \r\n        String actualXForwardedFor = actualRequest.getHeader(\"x-forwarded-for\");\n        assertNull(\"all proxies are trusted, x-forwarded-for must be null\", actualXForwardedFor);\n\n        String actualXForwardedBy = actualRequest.getHeader(\"x-forwarded-by\");\n        assertEquals(\"all proxies are trusted, they must appear in x-forwarded-by\", \"proxy1, proxy2\", actualXForwardedBy);\n\n        String actualRemoteAddr = actualRequest.getRemoteAddr();\n        assertEquals(\"remoteAddr\", \"140.211.11.130\", actualRemoteAddr);\n\n        String actualRemoteHost = actualRequest.getRemoteHost();\n        assertEquals(\"remoteHost\", \"140.211.11.130\", actualRemoteHost);\n    }\n","realPath":"test/org/apache/catalina/filters/TestRemoteIpFilter.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"M"}],"commitId":"e1b3882ee74368e5d4e7fd90679e009280cdd69b","commitMessage":"@@@Remove use of all static Assert.* imports\n- fixes Gump errors with latest Checkstyle\n- doesn't introduce errors for older Checkstyle\n- makes unit tests consistent mwith use of Assert\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1815079 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2017-11-13 18:49:13","modifiedFileCount":"105","status":"M","submitter":"Mark Thomas"}]
