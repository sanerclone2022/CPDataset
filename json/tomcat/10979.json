[{"authorTime":"2010-10-20 03:52:28","codes":[{"authorDate":"2010-10-20 03:52:28","commitOrder":1,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestInitialized(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(Globals.EXCEPTION_ATTR,t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2010-10-20 03:52:28","endLine":5545,"groupId":"3295","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/982c7a964801834d4afa6350ca370c3358a4d3.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestInitialized(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(Globals.EXCEPTION_ATTR,t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5511,"status":"B"},{"authorDate":"2010-10-20 03:52:28","commitOrder":1,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestDestroyed(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(Globals.EXCEPTION_ATTR,t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2010-10-20 03:52:28","endLine":5583,"groupId":"14490","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/982c7a964801834d4afa6350ca370c3358a4d3.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestDestroyed(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(Globals.EXCEPTION_ATTR,t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5549,"status":"B"}],"commitId":"99fad7ea9206c27ab2e8667da506444c733bb9c0","commitMessage":"@@@Re-factor ServletRequestListener events with an eye to https://issues.apache.org/bugzilla/show_bug.cgi?id=49991 and any possible future changes in the Servlet spec\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1024381 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-10-20 03:52:28","modifiedFileCount":"3","status":"B","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-12-10 20:28:20","codes":[{"authorDate":"2010-12-10 20:28:20","commitOrder":2,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestInitialized(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2010-12-10 20:28:20","endLine":5759,"groupId":"3295","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/5f/9a9bc75a11fd26ed9ba5de8ecd4b0f50a42577.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestInitialized(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(Globals.EXCEPTION_ATTR,t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5725,"status":"M"},{"authorDate":"2010-12-10 20:28:20","commitOrder":2,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestDestroyed(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2010-12-10 20:28:20","endLine":5797,"groupId":"14490","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/5f/9a9bc75a11fd26ed9ba5de8ecd4b0f50a42577.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestDestroyed(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(Globals.EXCEPTION_ATTR,t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5763,"status":"M"}],"commitId":"4956bdbd217024d874b48e6140b788aed97784e7","commitMessage":"@@@Avoid duplicate constant definition.\nUse Constants defined by the Servlet/JSP specs where appropriate\nUse Constants in preference to local Strings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1044326 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-12-10 20:28:20","modifiedFileCount":"27","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-16 22:18:12","codes":[{"authorDate":"2011-02-16 22:18:12","commitOrder":3,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            \r\n            if (!DispatcherType.ASYNC.equals(request.getDispatcherType())) {\n                \n                ServletRequestEvent event = \n                        new ServletRequestEvent(getServletContext(), request);\n    \n                for (int i = 0; i < instances.length; i++) {\n                    if (instances[i] == null)\n                        continue;\n                    if (!(instances[i] instanceof ServletRequestListener))\n                        continue;\n                    ServletRequestListener listener =\n                        (ServletRequestListener) instances[i];\n                    \n                    try {\n                        listener.requestInitialized(event);\n                    } catch (Throwable t) {\n                        ExceptionUtils.handleThrowable(t);\n                        getLogger().error(sm.getString(\n                                \"standardContext.requestListener.requestInit\",\n                                instances[i].getClass().getName()), t);\n                        request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","date":"2011-02-16 22:18:12","endLine":5848,"groupId":"3295","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c7/bc03bb57123fc1bb8e2706525b7bdb9a15f3da.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestInitialized(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5814,"status":"M"},{"authorDate":"2011-02-16 22:18:12","commitOrder":3,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            \r\n            if (!DispatcherType.ASYNC.equals(request.getDispatcherType())) {\n\n                ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n                for (int i = 0; i < instances.length; i++) {\n                    int j = (instances.length -1) -i;\n                    if (instances[j] == null)\n                        continue;\n                    if (!(instances[j] instanceof ServletRequestListener))\n                        continue;\n                    ServletRequestListener listener =\n                        (ServletRequestListener) instances[j];\n                    \n                    try {\n                        listener.requestDestroyed(event);\n                    } catch (Throwable t) {\n                        ExceptionUtils.handleThrowable(t);\n                        getLogger().error(sm.getString(\n                                \"standardContext.requestListener.requestInit\",\n                                instances[j].getClass().getName()), t);\n                        request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","date":"2011-02-16 22:18:12","endLine":5886,"groupId":"14941","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c7/bc03bb57123fc1bb8e2706525b7bdb9a15f3da.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    \r\n                    if (!DispatcherType.ASYNC.equals(\n                            request.getDispatcherType())) {\n                        listener.requestDestroyed(event);\n                    }\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5852,"status":"M"}],"commitId":"c70bbb23b71e1a3c1f334f81916b09a45de3996f","commitMessage":"@@@Move test outside the loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1071262 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-16 22:18:12","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-17 01:35:24","codes":[{"authorDate":"2011-02-17 01:35:24","commitOrder":4,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n                \n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2011-02-17 01:35:24","endLine":5843,"groupId":"3295","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/4889a09fbd697ab43cca8326b27529a267ac66.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            \r\n            if (!DispatcherType.ASYNC.equals(request.getDispatcherType())) {\n                \n                ServletRequestEvent event = \n                        new ServletRequestEvent(getServletContext(), request);\n    \n                for (int i = 0; i < instances.length; i++) {\n                    if (instances[i] == null)\n                        continue;\n                    if (!(instances[i] instanceof ServletRequestListener))\n                        continue;\n                    ServletRequestListener listener =\n                        (ServletRequestListener) instances[i];\n                    \n                    try {\n                        listener.requestInitialized(event);\n                    } catch (Throwable t) {\n                        ExceptionUtils.handleThrowable(t);\n                        getLogger().error(sm.getString(\n                                \"standardContext.requestListener.requestInit\",\n                                instances[i].getClass().getName()), t);\n                        request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5813,"status":"M"},{"authorDate":"2011-02-17 01:35:24","commitOrder":4,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2011-02-17 01:35:24","endLine":5877,"groupId":"14941","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/4889a09fbd697ab43cca8326b27529a267ac66.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            \r\n            if (!DispatcherType.ASYNC.equals(request.getDispatcherType())) {\n\n                ServletRequestEvent event = \n                    new ServletRequestEvent(getServletContext(), request);\n\n                for (int i = 0; i < instances.length; i++) {\n                    int j = (instances.length -1) -i;\n                    if (instances[j] == null)\n                        continue;\n                    if (!(instances[j] instanceof ServletRequestListener))\n                        continue;\n                    ServletRequestListener listener =\n                        (ServletRequestListener) instances[j];\n                    \n                    try {\n                        listener.requestDestroyed(event);\n                    } catch (Throwable t) {\n                        ExceptionUtils.handleThrowable(t);\n                        getLogger().error(sm.getString(\n                                \"standardContext.requestListener.requestInit\",\n                                instances[j].getClass().getName()), t);\n                        request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5847,"status":"M"}],"commitId":"72418baa099c6d4d3d401aab1172399cd0826605","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50793\nCorrectly fire request init/destroy events for astnc requests\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1071321 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-17 01:35:24","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-17 01:35:24","codes":[{"authorDate":"2020-04-23 05:49:33","commitOrder":5,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (Object instance : instances) {\n                if (instance == null)\n                    continue;\n                if (!(instance instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                        (ServletRequestListener) instance;\n\n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instance.getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2020-05-04 15:18:37","endLine":5865,"groupId":"13911","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/95/390202067edde54ddb2e1b1032ec1cdcec4fbc.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                if (instances[i] == null)\n                    continue;\n                if (!(instances[i] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[i];\n\n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[i].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5835,"status":"M"},{"authorDate":"2011-02-17 01:35:24","commitOrder":5,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2011-02-17 01:35:24","endLine":5877,"groupId":"14941","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/4889a09fbd697ab43cca8326b27529a267ac66.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5847,"status":"N"}],"commitId":"af4ecdfe038f1b4bf3e8ce880385b6e095956912","commitMessage":"@@@Replace indexed for loops and iterator while with foreach\n","date":"2020-05-04 15:18:37","modifiedFileCount":"197","status":"M","submitter":"Lars Grefer"},{"authorTime":"2011-02-17 01:35:24","codes":[{"authorDate":"2020-05-02 06:13:26","commitOrder":6,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (Object instance : instances) {\n                if (instance == null) {\n                    continue;\n                }\n                if (!(instance instanceof ServletRequestListener)) {\n                    continue;\n                }\n                ServletRequestListener listener = (ServletRequestListener) instance;\n\n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instance.getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2020-05-04 15:19:05","endLine":5866,"groupId":"13911","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/8d/49891d2daa3d37d0df35fd95879a7ac11ff820.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (Object instance : instances) {\n                if (instance == null)\n                    continue;\n                if (!(instance instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                        (ServletRequestListener) instance;\n\n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instance.getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5835,"status":"M"},{"authorDate":"2011-02-17 01:35:24","commitOrder":6,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2011-02-17 01:35:24","endLine":5877,"groupId":"14941","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/4889a09fbd697ab43cca8326b27529a267ac66.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event = \n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n                \n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5847,"status":"N"}],"commitId":"f3c9fdd40bdbc3dc22b512596954e2bc6d424d5a","commitMessage":"@@@Additional clean-up after enhanced for loop changes","date":"2020-05-04 15:19:05","modifiedFileCount":"44","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-05-25 16:15:13","codes":[{"authorDate":"2020-05-02 06:13:26","commitOrder":7,"curCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (Object instance : instances) {\n                if (instance == null) {\n                    continue;\n                }\n                if (!(instance instanceof ServletRequestListener)) {\n                    continue;\n                }\n                ServletRequestListener listener = (ServletRequestListener) instance;\n\n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instance.getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2020-05-04 15:19:05","endLine":5866,"groupId":"10979","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"fireRequestInitEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/8d/49891d2daa3d37d0df35fd95879a7ac11ff820.src","preCode":"    public boolean fireRequestInitEvent(ServletRequest request) {\n\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                    new ServletRequestEvent(getServletContext(), request);\n\n            for (Object instance : instances) {\n                if (instance == null) {\n                    continue;\n                }\n                if (!(instance instanceof ServletRequestListener)) {\n                    continue;\n                }\n                ServletRequestListener listener = (ServletRequestListener) instance;\n\n                try {\n                    listener.requestInitialized(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instance.getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5835,"status":"N"},{"authorDate":"2021-05-25 16:15:13","commitOrder":7,"curCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null) {\n                    continue;\n                }\n                if (!(instances[j] instanceof ServletRequestListener)) {\n                    continue;\n                }\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n\n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2021-05-25 16:15:13","endLine":5989,"groupId":"10979","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"fireRequestDestroyEvent","params":"(ServletRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a1/2ed93e986871f6f9d6629073006cca10079f2e.src","preCode":"    public boolean fireRequestDestroyEvent(ServletRequest request) {\n        Object instances[] = getApplicationEventListeners();\n\n        if ((instances != null) && (instances.length > 0)) {\n\n            ServletRequestEvent event =\n                new ServletRequestEvent(getServletContext(), request);\n\n            for (int i = 0; i < instances.length; i++) {\n                int j = (instances.length -1) -i;\n                if (instances[j] == null)\n                    continue;\n                if (!(instances[j] instanceof ServletRequestListener))\n                    continue;\n                ServletRequestListener listener =\n                    (ServletRequestListener) instances[j];\n\n                try {\n                    listener.requestDestroyed(event);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    getLogger().error(sm.getString(\n                            \"standardContext.requestListener.requestInit\",\n                            instances[j].getClass().getName()), t);\n                    request.setAttribute(RequestDispatcher.ERROR_EXCEPTION, t);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5957,"status":"M"}],"commitId":"513a158ee793b52cc1c0fac7780423760818b631","commitMessage":"@@@Code clean-up. Add braces for clarity.","date":"2021-05-25 16:15:13","modifiedFileCount":"37","status":"M","submitter":"Mark Thomas"}]
