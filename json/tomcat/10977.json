[{"authorTime":"2010-05-01 21:31:46","codes":[{"authorDate":"2010-05-01 21:31:46","commitOrder":1,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        if( oname != null ) { \n            \r\n            Notification notification = \n                new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        } \n        super.destroyInternal();\n\n        \r\n        fireLifecycleEvent(DESTROY_EVENT, null);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n    }\n","date":"2010-05-01 21:31:46","endLine":5033,"groupId":"5086","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/06/29e847ae912a93a668967b2afc74f5a930d389.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        if( oname != null ) { \n            \r\n            Notification notification = \n                new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        } \n        super.destroyInternal();\n\n        \r\n        fireLifecycleEvent(DESTROY_EVENT, null);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5016,"status":"B"},{"authorDate":"2010-05-01 21:31:46","commitOrder":1,"curCode":"    protected void initInternal() throws LifecycleException {\n\n        if( this.getParent() == null ) {\n            ObjectName parentName;\n            try {\n                parentName = getParentName();\n            } catch (MalformedObjectNameException e1) {\n                throw new LifecycleException(e1);\n            }\n            \n            if( ! mserver.isRegistered(parentName)) {\n                if(log.isDebugEnabled())\n                    log.debug(\"No host, creating one \" + parentName);\n                StandardHost host=new StandardHost();\n                host.setName(hostName);\n                host.setAutoDeploy(false);\n                try {\n                    Registry.getRegistry(null, null)\n                        .registerComponent(host, parentName, null);\n                } catch (Exception e) {\n                    throw new LifecycleException(e);\n                }\n                \r\n                \r\n                \r\n                host.init();\n            }\n            \n            \r\n            LifecycleListener config = null;\n            try {\n                String configClassName = null;\n                try {\n                    configClassName = String.valueOf(mserver.getAttribute(parentName, \"configClass\"));\n                } catch (AttributeNotFoundException e) {\n                    \r\n                }\n                if (configClassName != null) {\n                    Class<?> clazz = Class.forName(configClassName);\n                    config = (LifecycleListener) clazz.newInstance();\n                } else {\n                    config = new ContextConfig();\n                }\n            } catch (Exception e) {\n                log.warn(\"Error creating ContextConfig for \" + parentName, e);\n                throw new LifecycleException(e);\n            }\n            this.addLifecycleListener(config);\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"AddChild \" + parentName + \" \" + this);\n            }\n            try {\n                mserver.invoke(parentName, \"addChild\", new Object[] { this },\n                        new String[] {\"org.apache.catalina.Container\"});\n            } catch (Exception e) {\n                throw new LifecycleException(e);\n            }\n        }\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        super.initInternal();\n        \n        \r\n        fireLifecycleEvent(INIT_EVENT, null);\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.state.starting\", \n                                                        this.getObjectName(), \n                                                        sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n        \n    }\n","date":"2010-05-01 21:31:46","endLine":5724,"groupId":"8937","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/06/29e847ae912a93a668967b2afc74f5a930d389.src","preCode":"    protected void initInternal() throws LifecycleException {\n\n        if( this.getParent() == null ) {\n            ObjectName parentName;\n            try {\n                parentName = getParentName();\n            } catch (MalformedObjectNameException e1) {\n                throw new LifecycleException(e1);\n            }\n            \n            if( ! mserver.isRegistered(parentName)) {\n                if(log.isDebugEnabled())\n                    log.debug(\"No host, creating one \" + parentName);\n                StandardHost host=new StandardHost();\n                host.setName(hostName);\n                host.setAutoDeploy(false);\n                try {\n                    Registry.getRegistry(null, null)\n                        .registerComponent(host, parentName, null);\n                } catch (Exception e) {\n                    throw new LifecycleException(e);\n                }\n                \r\n                \r\n                \r\n                host.init();\n            }\n            \n            \r\n            LifecycleListener config = null;\n            try {\n                String configClassName = null;\n                try {\n                    configClassName = String.valueOf(mserver.getAttribute(parentName, \"configClass\"));\n                } catch (AttributeNotFoundException e) {\n                    \r\n                }\n                if (configClassName != null) {\n                    Class<?> clazz = Class.forName(configClassName);\n                    config = (LifecycleListener) clazz.newInstance();\n                } else {\n                    config = new ContextConfig();\n                }\n            } catch (Exception e) {\n                log.warn(\"Error creating ContextConfig for \" + parentName, e);\n                throw new LifecycleException(e);\n            }\n            this.addLifecycleListener(config);\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"AddChild \" + parentName + \" \" + this);\n            }\n            try {\n                mserver.invoke(parentName, \"addChild\", new Object[] { this },\n                        new String[] {\"org.apache.catalina.Container\"});\n            } catch (Exception e) {\n                throw new LifecycleException(e);\n            }\n        }\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        super.initInternal();\n        \n        \r\n        fireLifecycleEvent(INIT_EVENT, null);\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.state.starting\", \n                                                        this.getObjectName(), \n                                                        sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n        \n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5648,"status":"B"}],"commitId":"9af344b2b39a621ff830fca5fe91956f6b6126c0","commitMessage":"@@@Add init() and destroy() to the Lifecycle interface\nNote that this commit breaks the shutdown hook. I'll fix that in a following commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@940008 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-01 21:31:46","modifiedFileCount":"31","status":"B","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-01 21:31:46","codes":[{"authorDate":"2010-05-04 05:40:52","commitOrder":2,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        if( oname != null ) { \n            \r\n            Notification notification = \n                new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        } \n        super.destroyInternal();\n\n        \r\n        fireLifecycleEvent(DESTROY_EVENT, null);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n    }\n","date":"2010-05-04 05:40:52","endLine":5049,"groupId":"5086","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/57/941aa556955ff60a35753e11e8f45009c2f221.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        if( oname != null ) { \n            \r\n            Notification notification = \n                new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        } \n        super.destroyInternal();\n\n        \r\n        fireLifecycleEvent(DESTROY_EVENT, null);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5016,"status":"M"},{"authorDate":"2010-05-01 21:31:46","commitOrder":2,"curCode":"    protected void initInternal() throws LifecycleException {\n\n        if( this.getParent() == null ) {\n            ObjectName parentName;\n            try {\n                parentName = getParentName();\n            } catch (MalformedObjectNameException e1) {\n                throw new LifecycleException(e1);\n            }\n            \n            if( ! mserver.isRegistered(parentName)) {\n                if(log.isDebugEnabled())\n                    log.debug(\"No host, creating one \" + parentName);\n                StandardHost host=new StandardHost();\n                host.setName(hostName);\n                host.setAutoDeploy(false);\n                try {\n                    Registry.getRegistry(null, null)\n                        .registerComponent(host, parentName, null);\n                } catch (Exception e) {\n                    throw new LifecycleException(e);\n                }\n                \r\n                \r\n                \r\n                host.init();\n            }\n            \n            \r\n            LifecycleListener config = null;\n            try {\n                String configClassName = null;\n                try {\n                    configClassName = String.valueOf(mserver.getAttribute(parentName, \"configClass\"));\n                } catch (AttributeNotFoundException e) {\n                    \r\n                }\n                if (configClassName != null) {\n                    Class<?> clazz = Class.forName(configClassName);\n                    config = (LifecycleListener) clazz.newInstance();\n                } else {\n                    config = new ContextConfig();\n                }\n            } catch (Exception e) {\n                log.warn(\"Error creating ContextConfig for \" + parentName, e);\n                throw new LifecycleException(e);\n            }\n            this.addLifecycleListener(config);\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"AddChild \" + parentName + \" \" + this);\n            }\n            try {\n                mserver.invoke(parentName, \"addChild\", new Object[] { this },\n                        new String[] {\"org.apache.catalina.Container\"});\n            } catch (Exception e) {\n                throw new LifecycleException(e);\n            }\n        }\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        super.initInternal();\n        \n        \r\n        fireLifecycleEvent(INIT_EVENT, null);\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.state.starting\", \n                                                        this.getObjectName(), \n                                                        sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n        \n    }\n","date":"2010-05-01 21:31:46","endLine":5724,"groupId":"8937","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/06/29e847ae912a93a668967b2afc74f5a930d389.src","preCode":"    protected void initInternal() throws LifecycleException {\n\n        if( this.getParent() == null ) {\n            ObjectName parentName;\n            try {\n                parentName = getParentName();\n            } catch (MalformedObjectNameException e1) {\n                throw new LifecycleException(e1);\n            }\n            \n            if( ! mserver.isRegistered(parentName)) {\n                if(log.isDebugEnabled())\n                    log.debug(\"No host, creating one \" + parentName);\n                StandardHost host=new StandardHost();\n                host.setName(hostName);\n                host.setAutoDeploy(false);\n                try {\n                    Registry.getRegistry(null, null)\n                        .registerComponent(host, parentName, null);\n                } catch (Exception e) {\n                    throw new LifecycleException(e);\n                }\n                \r\n                \r\n                \r\n                host.init();\n            }\n            \n            \r\n            LifecycleListener config = null;\n            try {\n                String configClassName = null;\n                try {\n                    configClassName = String.valueOf(mserver.getAttribute(parentName, \"configClass\"));\n                } catch (AttributeNotFoundException e) {\n                    \r\n                }\n                if (configClassName != null) {\n                    Class<?> clazz = Class.forName(configClassName);\n                    config = (LifecycleListener) clazz.newInstance();\n                } else {\n                    config = new ContextConfig();\n                }\n            } catch (Exception e) {\n                log.warn(\"Error creating ContextConfig for \" + parentName, e);\n                throw new LifecycleException(e);\n            }\n            this.addLifecycleListener(config);\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"AddChild \" + parentName + \" \" + this);\n            }\n            try {\n                mserver.invoke(parentName, \"addChild\", new Object[] { this },\n                        new String[] {\"org.apache.catalina.Container\"});\n            } catch (Exception e) {\n                throw new LifecycleException(e);\n            }\n        }\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        super.initInternal();\n        \n        \r\n        fireLifecycleEvent(INIT_EVENT, null);\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.state.starting\", \n                                                        this.getObjectName(), \n                                                        sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n        \n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5648,"status":"N"}],"commitId":"4a2830c5ba1765d10aa8c1c0bc6aab722d655f64","commitMessage":"@@@With the benefit of some sleep.  refactor the MBean support for Lifecycle (still some components to convert)\nFix https://issues.apache.org/bugzilla/show_bug.cgi?id=49134\nThanks to Marc Guillemot whose test case for 49134 provided the basis of o.a.c.mbeans.TestRegistration\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@940634 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-04 05:40:52","modifiedFileCount":"12","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-11 00:17:22","codes":[{"authorDate":"2010-05-11 00:17:22","commitOrder":3,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                            sequenceNumber++);\n        broadcaster.sendNotification(notification);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2010-05-11 00:17:22","endLine":4994,"groupId":"5086","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/0a6e29de493f77c42b130f8166c8334a623f5b.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        if( oname != null ) { \n            \r\n            Notification notification = \n                new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        } \n        super.destroyInternal();\n\n        \r\n        fireLifecycleEvent(DESTROY_EVENT, null);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":4965,"status":"M"},{"authorDate":"2010-05-11 00:17:22","commitOrder":3,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\n                                                \"j2ee.object.created\", \n                                                this.getObjectName(), \n                                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2010-05-11 00:17:22","endLine":5547,"groupId":"7865","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/0a6e29de493f77c42b130f8166c8334a623f5b.src","preCode":"    protected void initInternal() throws LifecycleException {\n\n        if( this.getParent() == null ) {\n            ObjectName parentName;\n            try {\n                parentName = getParentName();\n            } catch (MalformedObjectNameException e1) {\n                throw new LifecycleException(e1);\n            }\n            \n            if( ! mserver.isRegistered(parentName)) {\n                if(log.isDebugEnabled())\n                    log.debug(\"No host, creating one \" + parentName);\n                StandardHost host=new StandardHost();\n                host.setName(hostName);\n                host.setAutoDeploy(false);\n                try {\n                    Registry.getRegistry(null, null)\n                        .registerComponent(host, parentName, null);\n                } catch (Exception e) {\n                    throw new LifecycleException(e);\n                }\n                \r\n                \r\n                \r\n                host.init();\n            }\n            \n            \r\n            LifecycleListener config = null;\n            try {\n                String configClassName = null;\n                try {\n                    configClassName = String.valueOf(mserver.getAttribute(parentName, \"configClass\"));\n                } catch (AttributeNotFoundException e) {\n                    \r\n                }\n                if (configClassName != null) {\n                    Class<?> clazz = Class.forName(configClassName);\n                    config = (LifecycleListener) clazz.newInstance();\n                } else {\n                    config = new ContextConfig();\n                }\n            } catch (Exception e) {\n                log.warn(\"Error creating ContextConfig for \" + parentName, e);\n                throw new LifecycleException(e);\n            }\n            this.addLifecycleListener(config);\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"AddChild \" + parentName + \" \" + this);\n            }\n            try {\n                mserver.invoke(parentName, \"addChild\", new Object[] { this },\n                        new String[] {\"org.apache.catalina.Container\"});\n            } catch (Exception e) {\n                throw new LifecycleException(e);\n            }\n        }\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        super.initInternal();\n        \n        \r\n        fireLifecycleEvent(INIT_EVENT, null);\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.state.starting\", \n                                                        this.getObjectName(), \n                                                        sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n        \n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5532,"status":"M"}],"commitId":"c169c761002186b131323bef30e433d4aec1b51c","commitMessage":"@@@Extend Lifecycle/MBean refactoring to ContainerBase\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@942813 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-11 00:17:22","modifiedFileCount":"16","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-26 06:43:45","codes":[{"authorDate":"2010-05-26 06:43:45","commitOrder":4,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                            sequenceNumber++);\n        broadcaster.sendNotification(notification);\n\n        unregister(onameNamingResoucres);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2010-05-26 06:43:45","endLine":5005,"groupId":"5086","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9b/393d885d030b83da0c01e3ac4db8ae4e23a31e.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                            sequenceNumber++);\n        broadcaster.sendNotification(notification);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":4974,"status":"M"},{"authorDate":"2010-05-26 06:43:45","commitOrder":4,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            onameNamingResoucres = register(namingResources,\n                    \"type=NamingResources,\" + getObjectNameKeyProperties());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\n                                                \"j2ee.object.created\", \n                                                this.getObjectName(), \n                                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2010-05-26 06:43:45","endLine":5564,"groupId":"7865","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9b/393d885d030b83da0c01e3ac4db8ae4e23a31e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\n                                                \"j2ee.object.created\", \n                                                this.getObjectName(), \n                                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5543,"status":"M"}],"commitId":"b5b64f2123268dcf243e06a04682643c140b279c","commitMessage":"@@@Restore the naming resource MBeans\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@948232 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-26 06:43:45","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-07-02 03:37:40","codes":[{"authorDate":"2010-07-02 03:37:40","commitOrder":5,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                            sequenceNumber++);\n        broadcaster.sendNotification(notification);\n\n        unregister(onameNamingResources);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2010-07-02 03:37:40","endLine":5037,"groupId":"5086","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/08/1536354084f54a5cc1ba2424e6e90b2d1a5a7c.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                            sequenceNumber++);\n        broadcaster.sendNotification(notification);\n\n        unregister(onameNamingResoucres);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5006,"status":"M"},{"authorDate":"2010-07-02 03:37:40","commitOrder":5,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            onameNamingResources = register(namingResources,\n                    \"type=NamingResources,\" + getObjectNameKeyProperties());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\n                                                \"j2ee.object.created\", \n                                                this.getObjectName(), \n                                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2010-07-02 03:37:40","endLine":5600,"groupId":"7865","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/08/1536354084f54a5cc1ba2424e6e90b2d1a5a7c.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            onameNamingResoucres = register(namingResources,\n                    \"type=NamingResources,\" + getObjectNameKeyProperties());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\n                                                \"j2ee.object.created\", \n                                                this.getObjectName(), \n                                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5579,"status":"M"}],"commitId":"c7bfc757baa9efa4efbc80bc429bef4c7e7d73a4","commitMessage":"@@@Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@959756 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-07-02 03:37:40","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-12-13 22:50:17","codes":[{"authorDate":"2010-12-13 22:50:17","commitOrder":6,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                             sequenceNumber.getAndIncrement());\n        broadcaster.sendNotification(notification);\n\n        unregister(onameNamingResources);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2010-12-13 22:50:17","endLine":5348,"groupId":"5086","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/04/e22c6c284addf2ab690d5e46de259e91b945ee.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                            sequenceNumber++);\n        broadcaster.sendNotification(notification);\n\n        unregister(onameNamingResources);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5317,"status":"M"},{"authorDate":"2010-12-13 22:50:17","commitOrder":6,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            onameNamingResources = register(namingResources,\n                    \"type=NamingResources,\" + getObjectNameKeyProperties());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2010-12-13 22:50:17","endLine":6006,"groupId":"7865","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/04/e22c6c284addf2ab690d5e46de259e91b945ee.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            onameNamingResources = register(namingResources,\n                    \"type=NamingResources,\" + getObjectNameKeyProperties());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\n                                                \"j2ee.object.created\", \n                                                this.getObjectName(), \n                                                sequenceNumber++);\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5987,"status":"M"}],"commitId":"108bab7293a589c481babb5ce5fca20a9f2caa4f","commitMessage":"@@@Fix various FindBugs and Eclipse warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1045156 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-12-13 22:50:17","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2011-02-08 22:30:17","commitOrder":7,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                             sequenceNumber.getAndIncrement());\n        broadcaster.sendNotification(notification);\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2011-02-08 22:30:17","endLine":5459,"groupId":"5086","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                             sequenceNumber.getAndIncrement());\n        broadcaster.sendNotification(notification);\n\n        unregister(onameNamingResources);\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5426,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":7,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            onameNamingResources = register(namingResources,\n                    \"type=NamingResources,\" + getObjectNameKeyProperties());\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"M"}],"commitId":"527ace4321400d0e0baa6325186e6ff7d51b068c","commitMessage":"@@@Make NamingResources implement MBeanLifecycle\nEnvironments.  Resources and ResourceLinks are once again available via JMX\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1068416 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-08 22:30:17","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2011-02-25 01:25:38","commitOrder":8,"curCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) { \n            \r\n            Notification notification = \n                new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2011-02-25 01:25:38","endLine":5508,"groupId":"5086","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/42/91d39780e056647c931400f6de4564166dce80.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n        \n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        Notification notification = \n            new Notification(\"j2ee.object.deleted\", this.getObjectName(), \n                             sequenceNumber.getAndIncrement());\n        broadcaster.sendNotification(notification);\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5471,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":8,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"9d542ed0cdab0d5ef58af4bddfbbcb5482e9ef98","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50826\nAvoid IAE when Tomcat instance is destroyed without every being started.\nAdd a test case for this.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1074225 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-25 01:25:38","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2011-11-30 03:48:04","commitOrder":9,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        Realm realm = getRealm();\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2011-11-30 03:48:04","endLine":5481,"groupId":"5086","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4c/6ad391bed2a50c6e31201c9f10d23e545e1845.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5443,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":9,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"80a7aff3e20045f428b33727a5277e62da6ba4d2","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52259\nRegression caused by bug 46264. Prevent deadlock if no Realm is\nconfigured.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1208046 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-11-30 03:48:04","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2011-11-30 05:57:04","commitOrder":10,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        Realm realm = getRealmInternal();\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2011-11-30 05:57:04","endLine":5481,"groupId":"5086","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a5/90cef4671be0edcd46c8ec4af79a61f3d02e2b.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        Realm realm = getRealm();\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5443,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":10,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"ea1438235a266f36413b322743f53d7ac9bc6800","commitMessage":"@@@Retain thread safety for ContainerBase.realm but don't try and\nstart/stop it multiple times\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1208096 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-11-30 05:57:04","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2012-01-13 04:33:45","commitOrder":11,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        Realm realm = getRealmInternal();\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-01-13 04:33:45","endLine":5486,"groupId":"0","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/d13df8d9a5a12e810c8924771e388f6d6bd734.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        Realm realm = getRealmInternal();\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((logger != null) && (logger instanceof Lifecycle)) {\n            ((Lifecycle) logger).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5451,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":11,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"f7aa0b1aa11072871f8c57c92eab3f7c76e5f616","commitMessage":"@@@Logger will not implement Lifecycle. This was a leftover from the\npre-JULI logger implementation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1230763 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-13 04:33:45","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2012-01-13 04:34:24","commitOrder":12,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-01-13 04:34:24","endLine":5472,"groupId":"5086","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/72/46f74260ddc3fd541614b02c67e873d37eb8e2.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n        Realm realm = getRealmInternal();\n        if ((realm != null) && (realm instanceof Lifecycle)) {\n            ((Lifecycle) realm).destroy();\n        }\n        if ((cluster != null) && (cluster instanceof Lifecycle)) {\n            ((Lifecycle) cluster).destroy();\n        }\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5451,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":12,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"3ba4a5ef2352ef12f026594b10226ce9f8c4ad42","commitMessage":"@@@Move destruction of ContainerBase objects to ContainerBase to ensure\nthat they are destroyed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1230765 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-13 04:34:24","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2012-07-05 05:20:46","commitOrder":13,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-07-05 05:20:46","endLine":5524,"groupId":"5086","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/7a/9d612a175207e04359fa7b09eb4204fb133f75.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5499,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":13,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"cee23a8da7ce4ab4f4889c094843c6e99009ed28","commitMessage":"@@@Move Resources and Loader from Container to Context\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1357412 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-05 05:20:46","modifiedFileCount":"17","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2012-07-05 05:22:03","commitOrder":14,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-07-05 05:22:03","endLine":5576,"groupId":"5086","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4c/c328ca9e5fbdfba3aa07f77959600b6421d46a.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5547,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":14,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"53f1d9ae102fc4bafcb10b3e6800cc036a6087d5","commitMessage":"@@@Move Manager from Container to Context\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1357413 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-05 05:22:03","modifiedFileCount":"6","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-08 22:30:17","codes":[{"authorDate":"2012-07-13 21:38:08","commitOrder":15,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-07-13 21:38:08","endLine":5639,"groupId":"5086","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/47/de48e6264c64ebe09d814431d438d51c0a010b.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5608,"status":"M"},{"authorDate":"2011-02-08 22:30:17","commitOrder":15,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2011-02-08 22:30:17","endLine":6113,"groupId":"7865","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/4ec795d26805baa1bf72d523a27a976509bd6e.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6095,"status":"N"}],"commitId":"3883c752d7b3047956800fab99cde75499dbde23","commitMessage":"@@@Fix Findbugs warnings. Sync only on setter. Use ReadWriteLock instead.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1361213 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-13 21:38:08","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2012-10-24 06:38:16","codes":[{"authorDate":"2012-10-24 06:38:16","commitOrder":16,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-10-24 06:38:16","endLine":5448,"groupId":"5086","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/11/37a0c94f344baeee18df3083fccbd221a87cc4.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5413,"status":"M"},{"authorDate":"2012-10-24 06:38:16","commitOrder":16,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2012-10-24 06:38:16","endLine":6097,"groupId":"7865","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/11/37a0c94f344baeee18df3083fccbd221a87cc4.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6075,"status":"M"}],"commitId":"527baba1736d3111596fb19dba367460fdb2808c","commitMessage":"@@@Merge new resources implementation from sandbox/trunk-resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1401503 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-10-24 06:38:16","modifiedFileCount":"27","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-08-11 05:53:43","codes":[{"authorDate":"2012-10-24 06:38:16","commitOrder":17,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2012-10-24 06:38:16","endLine":5448,"groupId":"5086","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/11/37a0c94f344baeee18df3083fccbd221a87cc4.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5413,"status":"N"},{"authorDate":"2013-08-11 05:53:43","commitOrder":17,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2013-08-11 05:53:43","endLine":6350,"groupId":"7865","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ed/2ceaba9df93f0f4223ebb505fb1593c8dea273.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6332,"status":"M"}],"commitId":"486ff311fa59e86e45883719af673a7e3a7a157b","commitMessage":"@@@Refactor Catalina's TLD processing into Jasper's ServletContainerInitializer.\nReplaces the TldConfig lifecycle listener with code the SCI to scan for TLDs and register listeners dynamically.\nRemoves the \"processTld\" property from StandardContext and deprecates other TLD related properties on Context\nDoes not yet address refactoring Jasper's own TLD processing into the SCI.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1512826 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-11 05:53:43","modifiedFileCount":"4","status":"M","submitter":"Jeremy Boynes"},{"authorTime":"2013-08-11 05:53:43","codes":[{"authorDate":"2014-12-14 20:32:22","commitOrder":18,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if (loader instanceof Lifecycle) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if (manager instanceof Lifecycle) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2014-12-14 20:32:22","endLine":5477,"groupId":"13888","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/54/04987b1d792eb571c15ef0078037a2c8abadd5.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if ((loader != null) && (loader instanceof Lifecycle)) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if ((manager != null) && (manager instanceof Lifecycle)) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5442,"status":"M"},{"authorDate":"2013-08-11 05:53:43","commitOrder":18,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2013-08-11 05:53:43","endLine":6350,"groupId":"7865","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ed/2ceaba9df93f0f4223ebb505fb1593c8dea273.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6332,"status":"N"}],"commitId":"4765802b6648d13d7920cfdf6bd1fe05b7f3af8b","commitMessage":"@@@Remove unnecessary \"x != null\" tests before \"x instanceof ...\" tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1645449 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-14 20:32:22","modifiedFileCount":"19","status":"M","submitter":"Mark Thomas"},{"authorTime":"2013-08-11 05:53:43","codes":[{"authorDate":"2016-01-05 03:38:59","commitOrder":19,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        Loader loader = getLoader();\n        if (loader instanceof Lifecycle) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if (manager instanceof Lifecycle) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2016-01-05 03:38:59","endLine":5527,"groupId":"1806","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a6/eb1b06c8c567a00ad3171d87a9dca9727054fa.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        synchronized (instanceListenersLock) {\n            instanceListeners = new String[0];\n        }\n\n        Loader loader = getLoader();\n        if (loader instanceof Lifecycle) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if (manager instanceof Lifecycle) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5496,"status":"M"},{"authorDate":"2013-08-11 05:53:43","commitOrder":19,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2013-08-11 05:53:43","endLine":6350,"groupId":"7865","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ed/2ceaba9df93f0f4223ebb505fb1593c8dea273.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6332,"status":"N"}],"commitId":"eaf6c6bdf176df92f914af8381779ec0cb08e2de","commitMessage":"@@@Remove InstanceListener.  InstanceEvent and InstanceSupport\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1722946 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-05 03:38:59","modifiedFileCount":"11","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-06-20 21:05:17","codes":[{"authorDate":"2016-01-05 03:38:59","commitOrder":20,"curCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        Loader loader = getLoader();\n        if (loader instanceof Lifecycle) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if (manager instanceof Lifecycle) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","date":"2016-01-05 03:38:59","endLine":5527,"groupId":"10977","id":39,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a6/eb1b06c8c567a00ad3171d87a9dca9727054fa.src","preCode":"    protected void destroyInternal() throws LifecycleException {\n\n        \r\n        \r\n        if (getObjectName() != null) {\n            \r\n            Notification notification =\n                new Notification(\"j2ee.object.deleted\", this.getObjectName(),\n                                 sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n\n        if (namingResources != null) {\n            namingResources.destroy();\n        }\n\n        Loader loader = getLoader();\n        if (loader instanceof Lifecycle) {\n            ((Lifecycle) loader).destroy();\n        }\n\n        Manager manager = getManager();\n        if (manager instanceof Lifecycle) {\n            ((Lifecycle) manager).destroy();\n        }\n\n        if (resources != null) {\n            resources.destroy();\n        }\n\n        super.destroyInternal();\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":5496,"status":"N"},{"authorDate":"2016-06-20 21:05:17","commitOrder":20,"curCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","date":"2016-06-20 21:05:17","endLine":6220,"groupId":"10977","id":40,"instanceNumber":2,"isCurCommit":0,"methodName":"initInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/00/087c591c000761f8f06297498b39cc14001e8c.src","preCode":"    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n\n        \r\n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        if (resources != null) {\n            resources.start();\n        }\n\n        \r\n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardContext.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":6206,"status":"M"}],"commitId":"1426559cd6e15bf9cf0f907ec160983db6d9ff6e","commitMessage":"@@@Do not attempt to start web resources during a web application's initialisation phase since the web application is not fully configured at that point and the web resources may not be correctly configured.\nFollow-up to https://lists.apache.org/thread.html/8c27e780a079a15169c915a8481ef129e6fc2322d548075d00753a5c@%3Cusers.tomcat.apache.org%3E\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1749328 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-06-20 21:05:17","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"}]
