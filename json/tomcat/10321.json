[{"authorTime":"2006-07-20 20:50:34","codes":[{"authorDate":"2006-07-20 20:50:34","commitOrder":1,"curCode":"    private void makeSpace(int count)\n    {\n\tbyte[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new byte[desiredSize];\n\t}\n\t\n\t\r\n\t\r\n\tif( desiredSize <= buff.length ) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, 0, end-start);\n\tbuff = tmp;\n\ttmp = null;\n\tend=end-start;\n\tstart=0;\n    }\n","date":"2006-07-20 20:50:34","endLine":481,"groupId":"16712","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/71/678228dd5af407c0a11bab87d21b3a6696f510.src","preCode":"    private void makeSpace(int count)\n    {\n\tbyte[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new byte[desiredSize];\n\t}\n\t\n\t\r\n\t\r\n\tif( desiredSize <= buff.length ) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, 0, end-start);\n\tbuff = tmp;\n\ttmp = null;\n\tend=end-start;\n\tstart=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":440,"status":"B"},{"authorDate":"2006-07-20 20:50:34","commitOrder":1,"curCode":"    private void makeSpace(int count)\n    {\n\tchar[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new char[desiredSize];\n\t}\n\n\t\r\n\t\r\n\tif( desiredSize <= buff.length) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, start, end-start);\n\tbuff = tmp;\n\ttmp = null;\n    }\n","date":"2006-07-20 20:50:34","endLine":485,"groupId":"2154","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6a/542a92e996c665d3c61ab3e96c88c23328517a.src","preCode":"    private void makeSpace(int count)\n    {\n\tchar[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new char[desiredSize];\n\t}\n\n\t\r\n\t\r\n\tif( desiredSize <= buff.length) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, start, end-start);\n\tbuff = tmp;\n\ttmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"B"}],"commitId":"eae54419c6e196933998f63358367040edaa4a8c","commitMessage":"@@@Phase 1: Setting eol and mime types\n@echo off\nif \"%OS%\" == \"Windows_NT\" setlocal\n\nif \"%1\" == \"\" (\nset SCRIPT_NAME=%~f0\n) else (\nset SCRIPT_NAME=%~f1\n)\n\nfor /D %%i in (*) do (\ncd %%i\nsvn propset svn:eol-style native *.java\nsvn propset svn:eol-style native *.properties\nsvn propset svn:eol-style native *.xml\nsvn propset svn:eol-style native *.xsd\nsvn propset svn:eol-style native *.xsl\nsvn propset svn:eol-style native *.dtd\nsvn propset svn:eol-style native *.tld\nsvn propset svn:eol-style native *.html\nsvn propset svn:eol-style native *.txt\nsvn propset svn:eol-style native *.jsp\nsvn propset svn:eol-style native *.jspx\nsvn propset svn:eol-style native *.jspf\nsvn propset svn:eol-style native *.sh\nsvn propset svn:eol-style native *.bat\nsvn propset svn:eol-style native *.svg\nsvn propset svn:mime-type image/gif *.gif\nsvn propset svn:mime-type image/jpeg *.jpg\nsvn propset svn:mime-type image/bmp *.bmp\nsvn propset svn:mime-type application/pdf *.pdf\nsvn propset svn:mime-type application/pdf *.pdf\nsvn propset svn:mime-type image/x-icon *.ico\n\ncall %SCRIPT_NAME% %SCRIPT_NAME%\ncd ..\n)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@423920 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-07-20 20:50:34","modifiedFileCount":"858","status":"B","submitter":"Mladen Turk"},{"authorTime":"2008-04-08 06:43:52","codes":[{"authorDate":"2006-07-20 20:50:34","commitOrder":2,"curCode":"    private void makeSpace(int count)\n    {\n\tbyte[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new byte[desiredSize];\n\t}\n\t\n\t\r\n\t\r\n\tif( desiredSize <= buff.length ) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, 0, end-start);\n\tbuff = tmp;\n\ttmp = null;\n\tend=end-start;\n\tstart=0;\n    }\n","date":"2006-07-20 20:50:34","endLine":481,"groupId":"16712","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/71/678228dd5af407c0a11bab87d21b3a6696f510.src","preCode":"    private void makeSpace(int count)\n    {\n\tbyte[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new byte[desiredSize];\n\t}\n\t\n\t\r\n\t\r\n\tif( desiredSize <= buff.length ) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new byte[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, 0, end-start);\n\tbuff = tmp;\n\ttmp = null;\n\tend=end-start;\n\tstart=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":440,"status":"N"},{"authorDate":"2008-04-08 06:43:52","commitOrder":2,"curCode":"    private void makeSpace(int count)\n    {\n\tchar[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new char[desiredSize];\n\t}\n\n\t\r\n\t\r\n\tif( desiredSize <= buff.length) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, 0, tmp, 0, end);\n\tbuff = tmp;\n\ttmp = null;\n    }\n","date":"2008-04-08 06:43:52","endLine":486,"groupId":"2154","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e9/157fd54ec2195b9b3d49ffb196d557ce02b1ce.src","preCode":"    private void makeSpace(int count)\n    {\n\tchar[] tmp = null;\n\n\tint newSize;\n\tint desiredSize=end + count;\n\n\t\r\n\tif( limit > 0 &&\n\t    desiredSize > limit) {\n\t    desiredSize=limit;\n\t}\n\n\tif( buff==null ) {\n\t    if( desiredSize < 256 ) desiredSize=256; \r\n\t    buff=new char[desiredSize];\n\t}\n\n\t\r\n\t\r\n\tif( desiredSize <= buff.length) {\n\t    return;\n\t}\n\t\r\n\tif( desiredSize < 2 * buff.length ) {\n\t    newSize= buff.length * 2;\n\t    if( limit >0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t} else {\n\t    newSize= buff.length * 2 + count ;\n\t    if( limit > 0 &&\n\t\tnewSize > limit ) newSize=limit;\n\t    tmp=new char[newSize];\n\t}\n\t\n\tSystem.arraycopy(buff, start, tmp, start, end-start);\n\tbuff = tmp;\n\ttmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"}],"commitId":"0c66ed7b649b225606d8942f07d052abb068fa3c","commitMessage":"@@@Remy's resizing fix from bug 44494\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@645719 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-04-08 06:43:52","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-10-23 03:21:08","codes":[{"authorDate":"2011-10-23 03:21:08","commitOrder":3,"curCode":"    private void makeSpace(int count)\n    {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        }\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2011-10-23 03:21:08","endLine":500,"groupId":"16712","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/67/71b841963150486ce6199855a37f53e7122628.src","preCode":"    private void makeSpace(int count)\n    {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 ) desiredSize=256; \r\n            buff=new byte[desiredSize];\n        }\n        \n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) newSize=limit;\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) newSize=limit;\n            tmp=new byte[newSize];\n        }\n        \n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2011-10-23 03:21:08","commitOrder":3,"curCode":"    private void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2011-10-23 03:21:08","endLine":502,"groupId":"2154","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fd/e8c7f1ee12e83f2a36e8809dc04bff7c2c771a.src","preCode":"    private void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 ) desiredSize=256; \r\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) newSize=limit;\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) newSize=limit;\n            tmp=new char[newSize];\n        }\n        \n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"}],"commitId":"2244cd6fb4fd0db708856806ca85d1d3ec1d10ff","commitMessage":"@@@Clean-up. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1187753 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-10-23 03:21:08","modifiedFileCount":"36","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-01-24 05:24:33","codes":[{"authorDate":"2011-10-23 03:21:08","commitOrder":4,"curCode":"    private void makeSpace(int count)\n    {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        }\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2011-10-23 03:21:08","endLine":500,"groupId":"16712","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/67/71b841963150486ce6199855a37f53e7122628.src","preCode":"    private void makeSpace(int count)\n    {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        }\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"N"},{"authorDate":"2013-01-24 05:24:33","commitOrder":4,"curCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2013-01-24 05:24:33","endLine":446,"groupId":"2154","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/34/1725ede1ebd984b0de6301a82419bdbc5ec88b.src","preCode":"    private void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":400,"status":"M"}],"commitId":"8187ceb348d2dda0873bda05a7d0dd0b31c70c80","commitMessage":"@@@Refactor character encoding and decoding using NIO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1437743 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-01-24 05:24:33","modifiedFileCount":"11","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2013-01-24 05:24:33","codes":[{"authorDate":"2013-12-06 20:12:15","commitOrder":5,"curCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        }\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2013-12-06 20:12:15","endLine":481,"groupId":"16712","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f9/dc4632b5f33640ee0e5c3cf6550dbd645773c4.src","preCode":"    private void makeSpace(int count)\n    {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        }\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"M"},{"authorDate":"2013-01-24 05:24:33","commitOrder":5,"curCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2013-01-24 05:24:33","endLine":446,"groupId":"2154","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/34/1725ede1ebd984b0de6301a82419bdbc5ec88b.src","preCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":400,"status":"N"}],"commitId":"f4970a728c6516b6801c7efdf62e91437379f4be","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55842\nCheck if the output buffer can grow before flushing it when using a writer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1548498 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-12-06 20:12:15","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-01-24 05:24:33","codes":[{"authorDate":"2016-08-10 21:04:42","commitOrder":6,"curCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2016-08-10 21:04:42","endLine":471,"groupId":"8532","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f6/916aeea5764597efd2671026f6fb307d3d1082.src","preCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new byte[newSize];\n        }\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"M"},{"authorDate":"2013-01-24 05:24:33","commitOrder":6,"curCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2013-01-24 05:24:33","endLine":446,"groupId":"2154","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/34/1725ede1ebd984b0de6301a82419bdbc5ec88b.src","preCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":400,"status":"N"}],"commitId":"831c4272ca7b432488e88b8e04d0226f50026636","commitMessage":"@@@Remove duplications.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1755737 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-08-10 21:04:42","modifiedFileCount":"1","status":"M","submitter":"Violeta Georgieva Georgieva"},{"authorTime":"2016-08-11 03:43:08","codes":[{"authorDate":"2016-08-10 21:04:42","commitOrder":7,"curCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2016-08-10 21:04:42","endLine":471,"groupId":"8532","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f6/916aeea5764597efd2671026f6fb307d3d1082.src","preCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"N"},{"authorDate":"2016-08-11 03:43:08","commitOrder":7,"curCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[newSize];\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2016-08-11 03:43:08","endLine":457,"groupId":"12236","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/7c/082b4aee8965211b1c15f7546a87f1d081009a.src","preCode":"    public void makeSpace(int count)\n    {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new char[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n            if( limit >0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        } else {\n            newSize= buff.length * 2 + count ;\n            if( limit > 0 &&\n                newSize > limit ) {\n                newSize=limit;\n            }\n            tmp=new char[newSize];\n        }\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"M"}],"commitId":"08cd0dd62a1041a9f422be13781cd5167510fb76","commitMessage":"@@@Remove duplications.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1755812 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-08-11 03:43:08","modifiedFileCount":"1","status":"M","submitter":"Violeta Georgieva Georgieva"},{"authorTime":"2018-01-16 06:26:51","codes":[{"authorDate":"2016-08-10 21:04:42","commitOrder":8,"curCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2016-08-10 21:04:42","endLine":471,"groupId":"8532","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f6/916aeea5764597efd2671026f6fb307d3d1082.src","preCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"N"},{"authorDate":"2018-01-16 06:26:51","commitOrder":8,"curCode":"    public void makeSpace(int count) {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize = end + count;\n\n        \r\n        if (limit > 0 && desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new char[desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2 * buff.length) {\n            newSize = buff.length * 2;\n        } else {\n            newSize = buff.length * 2 + count;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end - start);\n        buff = tmp;\n        tmp = null;\n        end = end - start;\n        start = 0;\n    }\n","date":"2018-01-16 06:26:51","endLine":417,"groupId":"12236","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/17/366e9a2d41168c8cb66014cc7f5d17cee3e0fc.src","preCode":"    public void makeSpace(int count) {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize = end + count;\n\n        \r\n        if (limit > 0 && desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new char[desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2 * buff.length) {\n            newSize = buff.length * 2;\n        } else {\n            newSize = buff.length * 2 + count;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[newSize];\n\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"}],"commitId":"91788c481b7ee86249f816bb5ad426b8590b70a7","commitMessage":"@@@Handle case where start != 0 and buffer is not empty when makeSpace() is called.\nAligns CharChunk with ByteChunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821202 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-01-16 06:26:51","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2018-01-16 18:14:05","codes":[{"authorDate":"2016-08-10 21:04:42","commitOrder":9,"curCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","date":"2016-08-10 21:04:42","endLine":471,"groupId":"8532","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f6/916aeea5764597efd2671026f6fb307d3d1082.src","preCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize=end + count;\n\n        \r\n        if( limit > 0 &&\n            desiredSize > limit) {\n            desiredSize=limit;\n        }\n\n        if( buff==null ) {\n            if( desiredSize < 256 )\n             {\n                desiredSize=256; \r\n            }\n            buff=new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if( desiredSize <= buff.length ) {\n            return;\n        }\n        \r\n        if( desiredSize < 2 * buff.length ) {\n            newSize= buff.length * 2;\n        } else {\n            newSize= buff.length * 2 + count ;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end-start);\n        buff = tmp;\n        tmp = null;\n        end=end-start;\n        start=0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"N"},{"authorDate":"2018-01-16 18:14:05","commitOrder":9,"curCode":"    public void makeSpace(int count) {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize = end + count;\n\n        \r\n        if (limit > 0 && desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new char[desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2 * buff.length) {\n            newSize = buff.length * 2;\n        } else {\n            newSize = buff.length * 2 + count;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[newSize];\n\n        \r\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2018-01-16 18:14:05","endLine":417,"groupId":"12236","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ae/25a05ee359a8d8e999ad36c9ad30305ecc02a5.src","preCode":"    public void makeSpace(int count) {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize = end + count;\n\n        \r\n        if (limit > 0 && desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new char[desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2 * buff.length) {\n            newSize = buff.length * 2;\n        } else {\n            newSize = buff.length * 2 + count;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[newSize];\n\n        System.arraycopy(buff, start, tmp, 0, end - start);\n        buff = tmp;\n        tmp = null;\n        end = end - start;\n        start = 0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"cdcae1c6d5ac903f8626b475fef9834a22f06f29","commitMessage":"@@@Revert 1821202 and add comment regarding compaction\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821225 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-01-16 18:14:05","modifiedFileCount":"2","status":"M","submitter":"Mark Thomas"},{"authorTime":"2018-01-17 03:29:39","codes":[{"authorDate":"2018-01-17 03:29:39","commitOrder":10,"curCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int limit = getLimitInternal();\n\n        long newSize;\n        long desiredSize = end + count;\n\n        \r\n        if (desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new byte[(int) desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2L * buff.length) {\n            newSize = buff.length * 2L;\n        } else {\n            newSize = buff.length * 2L + count;\n        }\n\n        if (newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[(int) newSize];\n\n        \r\n        System.arraycopy(buff, start, tmp, 0, end - start);\n        buff = tmp;\n        tmp = null;\n        end = end - start;\n        start = 0;\n    }\n","date":"2018-01-17 03:29:39","endLine":525,"groupId":"10321","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/43/d7cb0044d622bf60aa58e7fb80d9dea73ea833.src","preCode":"    public void makeSpace(int count) {\n        byte[] tmp = null;\n\n        int newSize;\n        int desiredSize = end + count;\n\n        \r\n        if (limit > 0 && desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new byte[desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2 * buff.length) {\n            newSize = buff.length * 2;\n        } else {\n            newSize = buff.length * 2 + count;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new byte[newSize];\n\n        \r\n        System.arraycopy(buff, start, tmp, 0, end - start);\n        buff = tmp;\n        tmp = null;\n        end = end - start;\n        start = 0;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/ByteChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"},{"authorDate":"2018-01-17 03:29:39","commitOrder":10,"curCode":"    public void makeSpace(int count) {\n        char[] tmp = null;\n\n        int limit = getLimitInternal();\n\n        long newSize;\n        long desiredSize = end + count;\n\n        \r\n        if (desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new char[(int) desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2L * buff.length) {\n            newSize = buff.length * 2L;\n        } else {\n            newSize = buff.length * 2L + count;\n        }\n\n        if (newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[(int) newSize];\n\n        \r\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","date":"2018-01-17 03:29:39","endLine":392,"groupId":"10321","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSpace","params":"(intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/7c/d73e95cf5a218c5a99ce69b062b5e00a277538.src","preCode":"    public void makeSpace(int count) {\n        char[] tmp = null;\n\n        int newSize;\n        int desiredSize = end + count;\n\n        \r\n        if (limit > 0 && desiredSize > limit) {\n            desiredSize = limit;\n        }\n\n        if (buff == null) {\n            if (desiredSize < 256) {\n                desiredSize = 256; \r\n            }\n            buff = new char[desiredSize];\n        }\n\n        \r\n        \r\n        if (desiredSize <= buff.length) {\n            return;\n        }\n        \r\n        if (desiredSize < 2 * buff.length) {\n            newSize = buff.length * 2;\n        } else {\n            newSize = buff.length * 2 + count;\n        }\n\n        if (limit > 0 && newSize > limit) {\n            newSize = limit;\n        }\n        tmp = new char[newSize];\n\n        \r\n        System.arraycopy(buff, 0, tmp, 0, end);\n        buff = tmp;\n        tmp = null;\n    }\n","realPath":"java/org/apache/tomcat/util/buf/CharChunk.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"M"}],"commitId":"0129025094fe0d88e0aef3ac02cfaa7f479cc146","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61993\nImprove handling for ByteChunk and CharChunk instances that grow close to the maximum size allowed by the JRE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821293 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-01-17 03:29:39","modifiedFileCount":"5","status":"M","submitter":"Mark Thomas"}]
