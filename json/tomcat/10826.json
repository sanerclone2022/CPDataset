[{"authorTime":"2006-08-23 01:28:09","codes":[{"authorDate":"2006-06-29 19:37:30","commitOrder":3,"curCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","date":"2006-06-29 19:37:30","endLine":589,"groupId":"12786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/de704f73aa8c6a735e625778b1861a146191cd.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":566,"status":"NB"},{"authorDate":"2006-08-23 01:28:09","commitOrder":3,"curCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2006-08-23 01:28:09","endLine":338,"groupId":"12786","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e5/5626e3c34ce1a77bc12a40fbab9a7f4ed0e13f.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"B"}],"commitId":"bba16653d1be84544236f59e620c31fa99953906","commitMessage":"@@@First step in cluster integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@433703 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-08-23 01:28:09","modifiedFileCount":"0","status":"M","submitter":"Filip Hanik"},{"authorTime":"2006-10-10 02:28:21","codes":[{"authorDate":"2006-06-29 19:37:30","commitOrder":4,"curCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","date":"2006-06-29 19:37:30","endLine":589,"groupId":"12786","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/de704f73aa8c6a735e625778b1861a146191cd.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":566,"status":"N"},{"authorDate":"2006-10-10 02:28:21","commitOrder":4,"curCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2006-10-10 02:28:21","endLine":339,"groupId":"12786","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/c60a9d1e0fcfdc556d81d886fc2dd518df2b8c.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"a7f55b18612a63bf24258f32487d2d2a4319759e","commitMessage":"@@@Corrected the use of the ACTIVITY_CHECK flag\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@454450 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-10-10 02:28:21","modifiedFileCount":"1","status":"M","submitter":"Filip Hanik"},{"authorTime":"2006-10-10 02:28:21","codes":[{"authorDate":"2010-04-12 04:51:16","commitOrder":5,"curCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (Globals.STRICT_SERVLET_COMPLIANCE) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","date":"2010-04-12 04:51:16","endLine":613,"groupId":"13460","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/07/703298df99e1cbefa58ccd310a00a96ea2304f.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":585,"status":"M"},{"authorDate":"2006-10-10 02:28:21","commitOrder":5,"curCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2006-10-10 02:28:21","endLine":339,"groupId":"12786","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/c60a9d1e0fcfdc556d81d886fc2dd518df2b8c.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"}],"commitId":"f4b6cfea8a6dc86f5d337ad32b5e47e11e9a4948","commitMessage":"@@@Use spec compliant session expiration in STRICT_SERVLET_COMPLIANCE mode.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@932989 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-12 04:51:16","modifiedFileCount":"1","status":"M","submitter":"Rainer Jung"},{"authorTime":"2006-10-10 02:28:21","codes":[{"authorDate":"2010-06-07 05:24:09","commitOrder":6,"curCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","date":"2010-06-07 05:24:09","endLine":636,"groupId":"2914","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1d/e90603424fba4791a37504c80b802556173d3d.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (Globals.STRICT_SERVLET_COMPLIANCE) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":608,"status":"M"},{"authorDate":"2006-10-10 02:28:21","commitOrder":6,"curCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2006-10-10 02:28:21","endLine":339,"groupId":"12786","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/c60a9d1e0fcfdc556d81d886fc2dd518df2b8c.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"}],"commitId":"db6e8e572d4b673e992ff389f944a526bfc3fc1e","commitMessage":"@@@Final part of refactoring STRICT_SERVLET_COMPLIANCE so it just changes defaults\nNew property LAST_ACCESS_AT_START\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@951985 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-07 05:24:09","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-08-23 12:57:49","codes":[{"authorDate":"2010-06-07 05:24:09","commitOrder":7,"curCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","date":"2010-06-07 05:24:09","endLine":636,"groupId":"2914","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1d/e90603424fba4791a37504c80b802556173d3d.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":608,"status":"N"},{"authorDate":"2010-08-23 12:57:49","commitOrder":7,"curCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2010-08-23 12:57:49","endLine":373,"groupId":"2914","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f9/fc581303d1e787262e9d65c9b9c4b657e60047.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ( (timeNow - thisAccessedTime) / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"M"}],"commitId":"e02198b751ed1e8116597761c883828e3fddfff6","commitMessage":"@@@Add support for LAST_ACCESS_AT_START system property to DeltaSession.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@987995 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-23 12:57:49","modifiedFileCount":"1","status":"M","submitter":"Keiichi Fujino"},{"authorTime":"2012-01-01 02:28:31","codes":[{"authorDate":"2012-01-01 02:28:31","commitOrder":8,"curCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","date":"2012-01-01 02:28:31","endLine":651,"groupId":"9545","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/90/11996b890c359cfb40eba39691188119fb1329.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":623,"status":"M"},{"authorDate":"2012-01-01 02:28:31","commitOrder":8,"curCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2012-01-01 02:28:31","endLine":396,"groupId":"9545","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1a/c7ed81ba62748c91e113424902bcb24e497832.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval >= 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"}],"commitId":"1911c81b7e3a03ed34f11e94528952b53347cadd","commitMessage":"@@@https://issues.apache.org/bugzilla/show_bug.cgi?id=52405\nServlet 3.0 Rev A updates\nItem 3 of 20\nmaxActiveInterval <= 0 means never expire - previously 0 meant expire\nimmediately\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1226158 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-01 02:28:31","modifiedFileCount":"3","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-09-05 23:42:48","codes":[{"authorDate":"2013-09-05 23:42:48","commitOrder":9,"curCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","date":"2013-09-05 23:42:48","endLine":687,"groupId":"9545","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/53/2c33a7571c5f2ec30eab732e829f18d045e38a.src","preCode":"    public boolean isValid() {\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":659,"status":"M"},{"authorDate":"2013-09-05 23:42:48","commitOrder":9,"curCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2013-09-05 23:42:48","endLine":420,"groupId":"9545","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c5/398c457ae2d1ea20652917668378b80b10c1e4.src","preCode":"    public boolean isValid() {\n        if (this.expiring) {\n            return true;\n        }\n        if (!this.isValid) {\n            return false;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"}],"commitId":"262c06961eaa4ca07fc4f696382a0633cb175321","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55521\nEnsure that session.expire() doesn't return until the session has been invalidated.\nEnsure that the return valid of session.isValid() is consistent the current state.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1520349 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-09-05 23:42:48","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2014-03-12 13:04:06","codes":[{"authorDate":"2014-03-12 13:04:06","commitOrder":10,"curCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","date":"2014-03-12 13:04:06","endLine":709,"groupId":"3508","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ea/a3924ea5315c12892713cc58df5fb8c85309a2.src","preCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":687,"status":"M"},{"authorDate":"2014-03-12 13:04:06","commitOrder":10,"curCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","date":"2014-03-12 13:04:06","endLine":405,"groupId":"3508","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ee/5dcc1d985a06e307d6c89466150f9f4dc97d69.src","preCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            long timeNow = System.currentTimeMillis();\n            int timeIdle;\n            if (LAST_ACCESS_AT_START) {\n                timeIdle = (int) ((timeNow - lastAccessedTime) / 1000L);\n            } else {\n                timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            }\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"c0426acdd090d29a5a3e8ed337e7c726a0d0814c","commitMessage":"@@@Add methods of get the idle time from last client access time to org.apache.catalina.Session. \n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1576582 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 13:04:06","modifiedFileCount":"6","status":"M","submitter":"Keiichi Fujino"},{"authorTime":"2017-05-10 06:22:59","codes":[{"authorDate":"2014-03-12 13:04:06","commitOrder":11,"curCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","date":"2014-03-12 13:04:06","endLine":709,"groupId":"3508","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ea/a3924ea5315c12892713cc58df5fb8c85309a2.src","preCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":687,"status":"N"},{"authorDate":"2017-05-10 06:22:59","commitOrder":11,"curCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n\n        return this.isValid;\n    }\n","date":"2017-05-10 06:22:59","endLine":406,"groupId":"3508","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/63/6a3de1a16d376c8e84deb80a72a3a9bfa7ac26.src","preCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n        return (this.isValid);\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"91c3e7b61f3289dba83e35569c5d06a0c140c22b","commitMessage":"@@@Removed unnecessary parentheses in return statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1794651 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2017-05-10 06:22:59","modifiedFileCount":"146","status":"M","submitter":"Emmanuel Bourg"},{"authorTime":"2020-03-26 18:29:47","codes":[{"authorDate":"2020-03-26 18:29:47","commitOrder":12,"curCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (activityCheck && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","date":"2020-03-26 18:29:47","endLine":656,"groupId":"10826","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0e/8402a45e08e55d06d8714f400142702f49a057.src","preCode":"    public boolean isValid() {\n\n        if (!this.isValid) {\n            return false;\n        }\n\n        if (this.expiring) {\n            return true;\n        }\n\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\n        return this.isValid;\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":634,"status":"M"},{"authorDate":"2020-03-26 18:29:47","commitOrder":12,"curCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (activityCheck && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n\n        return this.isValid;\n    }\n","date":"2020-03-26 18:29:47","endLine":461,"groupId":"10826","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"isValid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/98/75fb25e5b81757df8caf31938d8a76108634ed.src","preCode":"    public boolean isValid() {\n        if (!this.isValid) {\n            return false;\n        }\n        if (this.expiring) {\n            return true;\n        }\n        if (ACTIVITY_CHECK && accessCount.get() > 0) {\n            return true;\n        }\n        if (maxInactiveInterval > 0) {\n            int timeIdle = (int) (getIdleTimeInternal() / 1000L);\n            if (isPrimarySession()) {\n                if (timeIdle >= maxInactiveInterval) {\n                    expire(true);\n                }\n            } else {\n                if (timeIdle >= (2 * maxInactiveInterval)) {\n                    \r\n                    \r\n                    \r\n                    \r\n                    expire(true, false);\n                }\n            }\n        }\n\n        return this.isValid;\n    }\n","realPath":"java/org/apache/catalina/ha/session/DeltaSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":433,"status":"M"}],"commitId":"b79e56c7739d8151ad6b0d1d34da3404bc46da34","commitMessage":"@@@Remove two system properties used for configuration\n\nAgain two rarely used properties (well.  not for the TCK).  both in the\nsession package:\n- org.apache.catalina.session.StandardSession.ACTIVITY_CHECK is replaced\nby the Manager.sessionActivityCheck attribute\n- org.apache.catalina.session.StandardSession.LAST_ACCESS_AT_START is\nreplaced by the Manager.sessionLastAccessAtStart attribute","date":"2020-03-26 18:29:47","modifiedFileCount":"5","status":"M","submitter":"remm"}]
