[{"authorTime":"2010-07-22 17:12:18","codes":[{"authorDate":"2010-07-22 17:12:18","commitOrder":3,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2010-07-22 17:12:18","endLine":182,"groupId":"1833","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/34/e12f3bf24a74a7a91b88c6a1831898c65337a6.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"MB"},{"authorDate":"2010-07-22 17:12:18","commitOrder":3,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2010-07-22 17:12:18","endLine":236,"groupId":"10838","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/34/e12f3bf24a74a7a91b88c6a1831898c65337a6.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"}],"commitId":"2357fb52763c69aa8cf493e8af2f5a508b188409","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49567\nBetter handling of calls to complete() from a separate thread.\nThere are still a handful of TODOs around this which will follow shortly but I'm committing this since it passes the unit tests and the Servlet TCK (with BIO)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@966548 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-07-22 17:12:18","modifiedFileCount":"5","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-07-31 17:58:17","codes":[{"authorDate":"2010-07-31 17:58:17","commitOrder":4,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2010-07-31 17:58:17","endLine":206,"groupId":"1833","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/049faee8bcf93b042b0b221f38e24903395f84.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2010-07-31 17:58:17","commitOrder":4,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2010-07-31 17:58:17","endLine":271,"groupId":"10838","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/049faee8bcf93b042b0b221f38e24903395f84.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"911c2df784ba4d8546e93d67ba5a6b1feb95cde0","commitMessage":"@@@Fix possible threading issue in unit tests. Adding some Thread.sleep() calls in the right place can cause the tests to fail. This is probably one of the causes of the current Gump failures.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@981027 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-07-31 17:58:17","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-07-31 17:58:17","codes":[{"authorDate":"2010-09-27 20:13:32","commitOrder":5,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2010-09-27 20:13:32","endLine":210,"groupId":"1833","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/2b/a8902cc75f68fd7cd16fc5045f15e8489327df.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2010-07-31 17:58:17","commitOrder":5,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2010-07-31 17:58:17","endLine":271,"groupId":"10838","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/049faee8bcf93b042b0b221f38e24903395f84.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"}],"commitId":"587b1a807129c2ab41623358281aa19ff2ff9950","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884\n\nThis required a major re-factoring of the async implementation. In summary:\n- Moved state management to the Coyote Processor\n- Added a SocketWrapper to the APR socket\n- Added syncs to ensure only one async state change at a time\n- Added syncs to ensure only one thread changing a socket's state at a time\n\nA number of new bugs were also uncovered and fixed by this re-factoring:\n- delay processing complete() and dispatch() until request where startAsync() is called finished processing\n- onAsyncStart listener event\n\nCurrently the test case for bug 49884 passes with the security manager enabled using \"ab -n 5000 -c 150 -k ...\" (it broke with \"ab -n 50 -c 10 ...\" previously) \n\nThe unit tests pass for all three HTTP connectors.\n\nThe AJP connectors have only been modified to ensure the code compiles.\n\nThe following work remains:\n- Testing all connectors (HTTP and AJP) with TCK + security manager and fixing whatever is broken\n- Further clean-up\n- There is further scope for reducing code duplication between the connectors / aligning the code so it is easier to maintain.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1001698 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-27 20:13:32","modifiedFileCount":"21","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-04-17 05:22:58","codes":[{"authorDate":"2011-04-17 05:22:58","commitOrder":6,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2011-04-17 05:22:58","endLine":276,"groupId":"5731","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e6/17fc16f767eb46714703524e4a84f945327555.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(1000);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2011-04-17 05:22:58","commitOrder":6,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2011-04-17 05:22:58","endLine":343,"groupId":"6535","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e6/17fc16f767eb46714703524e4a84f945327555.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(1000);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"}],"commitId":"dc3dff4e5b878f6eb1a2cfdacf24aa0b0721c485","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51038\nEnsure async requests are included in access logs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1094055 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-04-17 05:22:58","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2020-03-03 01:28:03","codes":[{"authorDate":"2011-04-17 05:22:58","commitOrder":7,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2011-04-17 05:22:58","endLine":276,"groupId":"5731","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e6/17fc16f767eb46714703524e4a84f945327555.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n            \n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n            \n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"N"},{"authorDate":"2020-03-03 01:28:03","commitOrder":7,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                try {\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    result.append(req.isAsyncStarted());\n                                } catch (NullPointerException npe) {\n                                    result.append(\"false\");\n                                }\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2020-03-03 01:28:03","endLine":382,"groupId":"6535","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4e/d971a71723457be2f367f894b198ac7568cfcc.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                result.append(req.isAsyncStarted());\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"}],"commitId":"b6637d0a6d74b3bdf65c78618460890318335df0","commitMessage":"@@@Another attempt to fix an intermittent unit test failure","date":"2020-03-03 01:28:03","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-03-03 01:28:03","codes":[{"authorDate":"2020-03-05 18:11:59","commitOrder":8,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        try {\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            result.append(req.isAsyncStarted());\n                        } catch (NullPointerException npe) {\n                            result.append(\"false\");\n                        }\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2020-03-05 18:11:59","endLine":315,"groupId":"5731","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cd/0d9357a164081393628647efb897705de793c1.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        result.append(req.isAsyncStarted());\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2020-03-03 01:28:03","commitOrder":8,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                try {\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    result.append(req.isAsyncStarted());\n                                } catch (NullPointerException npe) {\n                                    result.append(\"false\");\n                                }\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2020-03-03 01:28:03","endLine":382,"groupId":"6535","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4e/d971a71723457be2f367f894b198ac7568cfcc.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                try {\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    result.append(req.isAsyncStarted());\n                                } catch (NullPointerException npe) {\n                                    result.append(\"false\");\n                                }\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"N"}],"commitId":"aedb51ddb23dfb175688c652a5218f31685f42e4","commitMessage":"@@@Fix another intermittent failure. Same root cause as the BZ 49567 test","date":"2020-03-05 18:11:59","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-12-04 07:15:59","codes":[{"authorDate":"2020-12-04 07:15:59","commitOrder":9,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        try {\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            result.append(req.isAsyncStarted());\n                        } catch (NullPointerException npe) {\n                            result.append(\"false\");\n                        }\n                        done = true;\n                    } catch (InterruptedException | IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2020-12-04 08:03:17","endLine":313,"groupId":"111941","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/607e795865f95422a7f12a0e0843324aa23e79.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result  = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync().setTimeout(10000);\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        result.append('3');\n                        result.append(req.isAsyncStarted());\n                        Thread.sleep(THREAD_SLEEP_TIME);\n                        result.append('4');\n                        result.append(req.isAsyncStarted());\n                        resp.setContentType(\"text/plain\");\n                        resp.getWriter().print(\"OK\");\n                        req.getAsyncContext().complete();\n                        result.append('5');\n                        try {\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            result.append(req.isAsyncStarted());\n                        } catch (NullPointerException npe) {\n                            result.append(\"false\");\n                        }\n                        done = true;\n                    } catch (InterruptedException e) {\n                        result.append(e);\n                    } catch (IOException e) {\n                        result.append(e);\n                    }\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2020-12-04 07:15:59","commitOrder":9,"curCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                try {\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    result.append(req.isAsyncStarted());\n                                } catch (NullPointerException npe) {\n                                    result.append(\"false\");\n                                }\n                                done = true;\n                            } catch (InterruptedException | IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","date":"2020-12-04 08:03:17","endLine":392,"groupId":"111941","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doGet","params":"(finalHttpServletRequestreq@finalHttpServletResponseresp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/607e795865f95422a7f12a0e0843324aa23e79.src","preCode":"        protected void doGet(final HttpServletRequest req,\n                final HttpServletResponse resp)\n                throws ServletException, IOException {\n\n            result = new StringBuilder();\n            result.append('1');\n            result.append(req.isAsyncStarted());\n            req.startAsync();\n            result.append('2');\n            result.append(req.isAsyncStarted());\n\n            req.getAsyncContext().start(new Runnable() {\n                @Override\n                public void run() {\n                    Thread t = new Thread(new Runnable() {\n                        @Override\n                        public void run() {\n                            try {\n                                result.append('3');\n                                result.append(req.isAsyncStarted());\n                                Thread.sleep(THREAD_SLEEP_TIME);\n                                result.append('4');\n                                result.append(req.isAsyncStarted());\n                                resp.setContentType(\"text/plain\");\n                                resp.getWriter().print(\"OK\");\n                                req.getAsyncContext().complete();\n                                result.append('5');\n                                try {\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    result.append(req.isAsyncStarted());\n                                } catch (NullPointerException npe) {\n                                    result.append(\"false\");\n                                }\n                                done = true;\n                            } catch (InterruptedException e) {\n                                result.append(e);\n                            } catch (IOException e) {\n                                result.append(e);\n                            }\n                        }\n                    });\n                    t.start();\n                }\n            });\n            \r\n            \r\n            req.getMethod();\n        }\n","realPath":"test/org/apache/catalina/core/TestAsyncContextImpl.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"}],"commitId":"d03a176f94b42564ac5f6f28b587ad0e483716e2","commitMessage":"@@@Collapse identical catch blocks\n","date":"2020-12-04 08:03:17","modifiedFileCount":"24","status":"M","submitter":"Emmanuel Bourg"}]
