[{"authorTime":"2010-03-05 02:07:59","codes":[{"authorDate":"2010-03-05 02:07:59","commitOrder":1,"curCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if(LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if(log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-03-05 02:07:59","endLine":138,"groupId":"4828","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/93/6df37104057e273a7d0c8e29c8ec43c6c080a2.src","preCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if(LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if(log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2010-03-05 02:07:59","commitOrder":1,"curCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if(LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if(log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","date":"2010-03-05 02:07:59","endLine":201,"groupId":"6559","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/93/6df37104057e273a7d0c8e29c8ec43c6c080a2.src","preCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if(LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if(log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"}],"commitId":"8089ef6592485c809ba58a8d70f6908f2ac53698","commitMessage":"@@@Lifecycle refactoring.\nIn an effort to reduce code duplication and improve consistency.  provide a base Lifecycle implementation. This will be used as the basis of the refactoring of the components that implement Lifecycle\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@919102 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-05 02:07:59","modifiedFileCount":"0","status":"B","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-03-06 01:11:27","codes":[{"authorDate":"2010-03-06 01:11:27","commitOrder":2,"curCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if (LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-03-06 01:11:27","endLine":142,"groupId":"4828","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ad/f540a2a12eace1e16e74d71a8ca658b82a7c93.src","preCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if(LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if(log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2010-03-06 01:11:27","commitOrder":2,"curCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if (LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","date":"2010-03-06 01:11:27","endLine":209,"groupId":"6559","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ad/f540a2a12eace1e16e74d71a8ca658b82a7c93.src","preCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if(LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if(log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"9dd51593e3293a0aef418ab6a31c845c1de5ab7f","commitMessage":"@@@Add some additional debugging information when components are started or stopped multiple times\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@919505 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-06 01:11:27","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-03-08 20:39:57","codes":[{"authorDate":"2010-03-06 01:11:27","commitOrder":3,"curCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if (LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-03-06 01:11:27","endLine":142,"groupId":"4828","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ad/f540a2a12eace1e16e74d71a8ca658b82a7c93.src","preCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if (LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2010-03-08 20:39:57","commitOrder":3,"curCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if (LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (state.equals(LifecycleState.NEW)) {\n                state = LifecycleState.STOPPED;\n                return;\n            }\n\n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","date":"2010-03-08 20:39:57","endLine":214,"groupId":"4831","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/5f/270be323411c64c77ea3edfab3376b42a89a34.src","preCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if (LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"a6cbdb59983d50bb79dc8356a0d2d48ebe6bddd7","commitMessage":"@@@Handle component failure without throwing a whole stack of exceptions\nAdds a new permitted transition from NEW to STOPPED that does not fire any events\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@920297 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-08 20:39:57","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-03-28 18:07:42","codes":[{"authorDate":"2010-03-06 01:11:27","commitOrder":4,"curCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if (LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-03-06 01:11:27","endLine":142,"groupId":"4828","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ad/f540a2a12eace1e16e74d71a8ca658b82a7c93.src","preCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if (LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2010-03-28 18:07:42","commitOrder":4,"curCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if (LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (state.equals(LifecycleState.NEW)) {\n                state = LifecycleState.STOPPED;\n                return;\n            }\n\n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED) &&\n                    !state.equals(LifecycleState.MUST_STOP)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","date":"2010-03-28 18:07:42","endLine":215,"groupId":"4831","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/653a3f6f588b21df5d4a7655fd4e9c89ae4234.src","preCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if (LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (state.equals(LifecycleState.NEW)) {\n                state = LifecycleState.STOPPED;\n                return;\n            }\n\n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"ac1066a1c91a1a441f8ea0e4c0a2911eaaf4e045","commitMessage":"@@@MUST_STOP is also a valid state from which to transition to STOPPING_PREP\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@928370 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-28 18:07:42","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-01 21:31:46","codes":[{"authorDate":"2010-05-01 21:31:46","commitOrder":5,"curCode":"    public synchronized final void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":153,"groupId":"12688","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a5/19713b0487cd3554fb978b0c0b20b3129945fd.src","preCode":"    public final void start() throws LifecycleException {\n        \n        synchronized (this) {\n            if (LifecycleState.STARTING_PREP.equals(state) ||\n                    LifecycleState.STARTING.equals(state) ||\n                    LifecycleState.STARTED.equals(state)) {\n                \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (!state.equals(LifecycleState.NEW) &&\n                    !state.equals(LifecycleState.STOPPED)) {\n                invalidTransition(Lifecycle.BEFORE_START_EVENT);\n            }\n\n            \r\n            \r\n            state = LifecycleState.STARTING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_START_EVENT, null);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2010-05-01 21:31:46","commitOrder":5,"curCode":"    public synchronized final void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        stopInternal();\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":227,"groupId":"4831","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a5/19713b0487cd3554fb978b0c0b20b3129945fd.src","preCode":"    public final void stop() throws LifecycleException {\n\n        synchronized (this) {\n            if (LifecycleState.STOPPING_PREP.equals(state) ||\n                    LifecycleState.STOPPING.equals(state) ||\n                    LifecycleState.STOPPED.equals(state)) {\n    \n                if (log.isDebugEnabled()) {\n                    Exception e = new LifecycleException();\n                    log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()), e);\n                } else if (log.isInfoEnabled()) {\n                    log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                            toString()));\n                }\n                \n                return;\n            }\n            \n            if (state.equals(LifecycleState.NEW)) {\n                state = LifecycleState.STOPPED;\n                return;\n            }\n\n            if (!state.equals(LifecycleState.STARTED) &&\n                    !state.equals(LifecycleState.FAILED) &&\n                    !state.equals(LifecycleState.MUST_STOP)) {\n                invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n            }\n            \n            \r\n            \r\n            state = LifecycleState.STOPPING_PREP;\n        }\n        \n        lifecycle.fireLifecycleEvent(Lifecycle.BEFORE_STOP_EVENT, null);\n\n        stopInternal();\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setState(LifecycleState.STOPPED);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"9af344b2b39a621ff830fca5fe91956f6b6126c0","commitMessage":"@@@Add init() and destroy() to the Lifecycle interface\nNote that this commit breaks the shutdown hook. I'll fix that in a following commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@940008 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-01 21:31:46","modifiedFileCount":"31","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-01 21:31:46","codes":[{"authorDate":"2010-06-07 05:50:11","commitOrder":6,"curCode":"    public synchronized final void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-06-07 05:50:11","endLine":156,"groupId":"12688","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e3/3959d37921c52a3a3f9941b48633bbe6353dbc.src","preCode":"    public synchronized final void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        startInternal();\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2010-05-01 21:31:46","commitOrder":6,"curCode":"    public synchronized final void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        stopInternal();\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":227,"groupId":"4831","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a5/19713b0487cd3554fb978b0c0b20b3129945fd.src","preCode":"    public synchronized final void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        stopInternal();\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"N"}],"commitId":"c0324b119af5a6f9a977aa8a2e7986165ba83d13","commitMessage":"@@@Make syncs consistent\nPartial fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=49372\nAvoid invalid Lifecycle transitions on failed start due to already bound shutdown port\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@952000 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-07 05:50:11","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-12-07 23:42:32","codes":[{"authorDate":"2010-12-07 23:42:32","commitOrder":7,"curCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-12-07 23:42:32","endLine":158,"groupId":"12688","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b6/4492e64ffdab6ce7283a23e8c34dbe4b414cf6.src","preCode":"    public synchronized final void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2010-12-07 23:42:32","commitOrder":7,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        stopInternal();\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","date":"2010-12-07 23:42:32","endLine":232,"groupId":"4831","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b6/4492e64ffdab6ce7283a23e8c34dbe4b414cf6.src","preCode":"    public synchronized final void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        stopInternal();\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"96a3d8b7fbe087b980f950f2f8ef1dc9db0942f5","commitMessage":"@@@Fix modifier order in org.apache.catalina.*\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1043105 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-12-07 23:42:32","modifiedFileCount":"22","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-01-05 01:57:16","codes":[{"authorDate":"2010-12-07 23:42:32","commitOrder":8,"curCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","date":"2010-12-07 23:42:32","endLine":158,"groupId":"12688","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b6/4492e64ffdab6ce7283a23e8c34dbe4b414cf6.src","preCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"N"},{"authorDate":"2011-01-05 01:57:16","commitOrder":8,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        try {\n            stopInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","date":"2011-01-05 01:57:16","endLine":242,"groupId":"4831","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bf/e725dd0a549629a305c3f79959581834460551.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        stopInternal();\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"740649f7f2f4d84690211aa3e7c1b4ba3f49b441","commitMessage":"@@@Re-fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49372\nDon't throw an LifecycleException for an invalid transition if a connector fails to start.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1055121 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-05 01:57:16","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-10 03:46:49","codes":[{"authorDate":"2011-02-10 03:46:49","commitOrder":9,"curCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","date":"2011-02-10 03:46:49","endLine":163,"groupId":"12688","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ef/dc593c8201c8e6b86f9bf0a2486f29dd249f41.src","preCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setState(LifecycleState.STARTING_PREP);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setState(LifecycleState.STARTED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2011-02-10 03:46:49","commitOrder":9,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n\n        try {\n            stopInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","date":"2011-02-10 03:46:49","endLine":238,"groupId":"4831","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ef/dc593c8201c8e6b86f9bf0a2486f29dd249f41.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setState(LifecycleState.STOPPING_PREP);\n\n        try {\n            stopInternal();\n        } catch (LifecycleException e) {\n            setState(LifecycleState.FAILED);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setState(LifecycleState.STOPPED);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setState(LifecycleState.STOPPED);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"e25030a9f57875c9c31f971fe86940a0f2e72d06","commitMessage":"@@@Add further checks that LifecycleBase sub-classes are correctly changing state.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1069056 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-10 03:46:49","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-02-27 19:00:12","codes":[{"authorDate":"2011-02-10 03:46:49","commitOrder":10,"curCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","date":"2011-02-10 03:46:49","endLine":163,"groupId":"12688","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ef/dc593c8201c8e6b86f9bf0a2486f29dd249f41.src","preCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"N"},{"authorDate":"2011-02-27 19:00:12","commitOrder":10,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","date":"2011-02-27 19:00:12","endLine":245,"groupId":"4746","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/b6be2680aca56588064b19b82232928513678e.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n\n        try {\n            stopInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"92ff888eaae323fa016522f27b17cff7dd39923f","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50836\nBetter documentation of the meaning of Lifecycle.isAvailable() and correct a couple of cases where this could incorrectly return true. \n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1075022 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-27 19:00:12","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-08-06 00:29:58","codes":[{"authorDate":"2011-08-06 00:29:58","commitOrder":11,"curCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.startFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","date":"2011-08-06 00:29:58","endLine":168,"groupId":"4550","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/7e/7c56c58e85e0f039997f4c1cf62df3ce06555d.src","preCode":"    public final synchronized void start() throws LifecycleException {\n        \n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n            \n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n            \n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2011-08-06 00:29:58","commitOrder":11,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","date":"2011-08-06 00:29:58","endLine":252,"groupId":"4746","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/7e/7c56c58e85e0f039997f4c1cf62df3ce06555d.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (LifecycleException e) {\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw e;\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"ed0588b983b93b27bd0031fe7c4cf8e6c940b352","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51610\nMake lifecycle transitions more robust at handling unchecked exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1154297 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-08-06 00:29:58","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-08-06 00:29:58","codes":[{"authorDate":"2011-11-15 05:51:23","commitOrder":12,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)){\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.startFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","date":"2011-11-15 05:51:23","endLine":170,"groupId":"14947","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/3aa1f3887d10e27c6a5252d21076d2f7de86a2.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.startFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2011-08-06 00:29:58","commitOrder":12,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","date":"2011-08-06 00:29:58","endLine":252,"groupId":"4746","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/7e/7c56c58e85e0f039997f4c1cf62df3ce06555d.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n            \n            return;\n        }\n        \n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n        \n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"N"}],"commitId":"53ee263bec8ecac46a0ef0d59b943b17d372a8d2","commitMessage":"@@@Improve handling of failed deployments\n- Allow failed configurations to be fixed via JMX\n- Ensure once a deployment fails.  the context is not deployed\n- Ensure changes to any context.xml file trigger redeployment rather than reloading\n- Tweak base lifecycle implementation to allow failed components to be restarted once they have been fixed\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1201921 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-11-15 05:51:23","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2012-11-12 09:19:18","codes":[{"authorDate":"2011-11-15 05:51:23","commitOrder":13,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)){\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.startFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","date":"2011-11-15 05:51:23","endLine":170,"groupId":"14947","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/66/3aa1f3887d10e27c6a5252d21076d2f7de86a2.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)){\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.startFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"N"},{"authorDate":"2012-11-12 09:19:18","commitOrder":13,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else if (!state.equals(LifecycleState.FAILED)){\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","date":"2012-11-12 09:19:18","endLine":254,"groupId":"4746","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/8b/d2fc0a7fe8b44ecac374d8a6875bf3b1abdf6d.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"8bee55f2c243e066204703ca68587026ef02ee74","commitMessage":"@@@If a component is FAILED it will remain in the FAILED state while stop() is called\nBetter logging for Lifecycle issues for FailedContext\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1408165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-12 09:19:18","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2016-01-20 03:34:04","codes":[{"authorDate":"2016-01-20 03:34:04","commitOrder":14,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        } finally {\n            if (state.equals(LifecycleState.FAILED)) {\n                stop();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STARTING)) {\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTED, null, false);\n    }\n","date":"2016-01-20 03:34:04","endLine":171,"groupId":"14947","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f8/a0bca562285461f2c009e818db7e65754eab13.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) ||\n                LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)){\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.startFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED) ||\n                state.equals(LifecycleState.MUST_STOP)) {\n            stop();\n        } else {\n            \r\n            \r\n            if (!state.equals(LifecycleState.STARTING)) {\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2016-01-20 03:34:04","commitOrder":14,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    }\n","date":"2016-01-20 03:34:04","endLine":249,"groupId":"4831","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f8/a0bca562285461f2c009e818db7e65754eab13.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) ||\n                LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\",\n                        toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) &&\n                !state.equals(LifecycleState.FAILED) &&\n                !state.equals(LifecycleState.MUST_STOP)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(\n                    sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        }\n\n        if (state.equals(LifecycleState.MUST_DESTROY)) {\n            \r\n            setStateInternal(LifecycleState.STOPPED, null, false);\n\n            destroy();\n        } else if (!state.equals(LifecycleState.FAILED)){\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"949cfa32cac3987feba9ad163bf60db3457e66da","commitMessage":"@@@Deprecate lifecycle states that were never used and could never be used.\nAdd new Lifecycle.SingleUse marker interface as a replacement for\nMUST_DESTROY\nDocument how to use FAILED as a work-around for MUST_STOP\nCode clean-up\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1725599 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-20 03:34:04","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-01-20 03:34:04","codes":[{"authorDate":"2016-01-20 06:38:38","commitOrder":15,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STARTING)) {\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTED, null, false);\n    }\n","date":"2016-01-20 06:38:38","endLine":166,"groupId":"14947","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/55/3cec0896517df952349b791739fc6571a104e2.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        } finally {\n            if (state.equals(LifecycleState.FAILED)) {\n                stop();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STARTING)) {\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTED, null, false);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2016-01-20 03:34:04","commitOrder":15,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    }\n","date":"2016-01-20 03:34:04","endLine":249,"groupId":"4831","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f8/a0bca562285461f2c009e818db7e65754eab13.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"}],"commitId":"5cc551c4aab4ada60777cb85c0ed78b525e23a91","commitMessage":"@@@Fix test failures\nAutomatically calling stop() after start() failed triggered multiple\nfailures to revert that part of the refactoring in r1725599\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1725635 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-20 06:38:38","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-01-20 03:34:04","codes":[{"authorDate":"2016-01-20 18:28:37","commitOrder":16,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            \r\n            \r\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            stop();\n        } else if (!state.equals(LifecycleState.STARTING)) {\n            \r\n            \r\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        } else {\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","date":"2016-01-20 18:28:37","endLine":172,"groupId":"14947","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e1/bc7e94695d4a05a8d54f544121fe026069d7d0.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STARTING)) {\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTED, null, false);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2016-01-20 03:34:04","commitOrder":16,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    }\n","date":"2016-01-20 03:34:04","endLine":249,"groupId":"4831","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f8/a0bca562285461f2c009e818db7e65754eab13.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"}],"commitId":"1d894a15160cba0a835b2b33cd6a3c96773b1eca","commitMessage":"@@@Further fix to regression in r1725599\nTrigger a call to stop() if a component puts itself into the FAILED\nstate during start().\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1725694 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-20 18:28:37","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-08-24 00:47:40","codes":[{"authorDate":"2016-08-24 00:47:40","commitOrder":17,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        try {\n            setStateInternal(LifecycleState.STARTING_PREP, null, false);\n            startInternal();\n            if (state.equals(LifecycleState.FAILED)) {\n                \r\n                \r\n                stop();\n            } else if (!state.equals(LifecycleState.STARTING)) {\n                \r\n                \r\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            } else {\n                setStateInternal(LifecycleState.STARTED, null, false);\n            }\n        } catch (Throwable t) {\n            \r\n            \r\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        }\n    }\n","date":"2016-08-24 00:47:40","endLine":169,"groupId":"2391","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0b/6e77eff319a74f0302b9b4aa80830d80607610.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n\n        try {\n            startInternal();\n        } catch (Throwable t) {\n            \r\n            \r\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            stop();\n        } else if (!state.equals(LifecycleState.STARTING)) {\n            \r\n            \r\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        } else {\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2016-08-24 00:47:40","commitOrder":17,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        try {\n            if (state.equals(LifecycleState.FAILED)) {\n                \r\n                \r\n                \r\n                fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n            } else {\n                setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n            }\n\n            stopInternal();\n\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n            }\n        }\n    }\n","date":"2016-08-24 00:47:40","endLine":246,"groupId":"4831","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0b/6e77eff319a74f0302b9b4aa80830d80607610.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        if (state.equals(LifecycleState.FAILED)) {\n            \r\n            \r\n            \r\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        try {\n            stopInternal();\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n                return;\n            }\n        }\n\n        \r\n        \r\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"}],"commitId":"fa8bc9381543f8a611b2416dbdf0292e3ef515da","commitMessage":"@@@Improve handling of exceptions during a Lifecycle events triggered by a state transition. The exception is now caught and the component is now placed into the FAILED state.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1757406 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-08-24 00:47:40","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-10-07 16:54:34","codes":[{"authorDate":"2016-10-07 16:54:34","commitOrder":18,"curCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        try {\n            setStateInternal(LifecycleState.STARTING_PREP, null, false);\n            startInternal();\n            if (state.equals(LifecycleState.FAILED)) {\n                \r\n                \r\n                stop();\n            } else if (!state.equals(LifecycleState.STARTING)) {\n                \r\n                \r\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            } else {\n                setStateInternal(LifecycleState.STARTED, null, false);\n            }\n        } catch (Throwable t) {\n            \r\n            \r\n            handleSubClassException(t, \"lifecycleBase.startFail\", toString());\n        }\n    }\n","date":"2016-10-07 16:54:34","endLine":200,"groupId":"10859","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/65/f454ae9017d42d31e6e7b1006ad106a32c5b41.src","preCode":"    public final synchronized void start() throws LifecycleException {\n\n        if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n                LifecycleState.STARTED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStarted\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStarted\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            init();\n        } else if (state.equals(LifecycleState.FAILED)) {\n            stop();\n        } else if (!state.equals(LifecycleState.INITIALIZED) &&\n                !state.equals(LifecycleState.STOPPED)) {\n            invalidTransition(Lifecycle.BEFORE_START_EVENT);\n        }\n\n        try {\n            setStateInternal(LifecycleState.STARTING_PREP, null, false);\n            startInternal();\n            if (state.equals(LifecycleState.FAILED)) {\n                \r\n                \r\n                stop();\n            } else if (!state.equals(LifecycleState.STARTING)) {\n                \r\n                \r\n                invalidTransition(Lifecycle.AFTER_START_EVENT);\n            } else {\n                setStateInternal(LifecycleState.STARTED, null, false);\n            }\n        } catch (Throwable t) {\n            \r\n            \r\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.startFail\", toString()), t);\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2016-10-07 16:54:34","commitOrder":18,"curCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        try {\n            if (state.equals(LifecycleState.FAILED)) {\n                \r\n                \r\n                \r\n                fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n            } else {\n                setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n            }\n\n            stopInternal();\n\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        } catch (Throwable t) {\n            handleSubClassException(t, \"lifecycleBase.stopFail\", toString());\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n            }\n        }\n    }\n","date":"2016-10-07 16:54:34","endLine":275,"groupId":"10859","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"stop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/65/f454ae9017d42d31e6e7b1006ad106a32c5b41.src","preCode":"    public final synchronized void stop() throws LifecycleException {\n\n        if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n                LifecycleState.STOPPED.equals(state)) {\n\n            if (log.isDebugEnabled()) {\n                Exception e = new LifecycleException();\n                log.debug(sm.getString(\"lifecycleBase.alreadyStopped\", toString()), e);\n            } else if (log.isInfoEnabled()) {\n                log.info(sm.getString(\"lifecycleBase.alreadyStopped\", toString()));\n            }\n\n            return;\n        }\n\n        if (state.equals(LifecycleState.NEW)) {\n            state = LifecycleState.STOPPED;\n            return;\n        }\n\n        if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n        }\n\n        try {\n            if (state.equals(LifecycleState.FAILED)) {\n                \r\n                \r\n                \r\n                fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n            } else {\n                setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n            }\n\n            stopInternal();\n\n            \r\n            \r\n            if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n                invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n            }\n\n            setStateInternal(LifecycleState.STOPPED, null, false);\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            setStateInternal(LifecycleState.FAILED, null, false);\n            throw new LifecycleException(sm.getString(\"lifecycleBase.stopFail\",toString()), t);\n        } finally {\n            if (this instanceof Lifecycle.SingleUse) {\n                \r\n                setStateInternal(LifecycleState.STOPPED, null, false);\n                destroy();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/util/LifecycleBase.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"533b280728877537a7542c133417a2091f294f39","commitMessage":"@@@Add throwOnFailure to LifecycleBase. Defaults to no change to current\nbehaviour.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1763700 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-10-07 16:54:34","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"}]
