[{"authorTime":"2010-03-05 03:17:32","codes":[{"authorDate":"2010-03-05 03:17:32","commitOrder":1,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if( ! initialized )\n            init(); \n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","date":"2010-03-05 03:17:32","endLine":471,"groupId":"11292","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a2/58a8c159fb0ceaa188ea22e95143431af8b391.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if( ! initialized )\n            init(); \n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"},{"authorDate":"2010-03-05 03:17:32","commitOrder":1,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n        if( oname==controller ) {\n            \r\n            \r\n            \r\n            Registry.getRegistry(null, null).unregisterComponent(oname);\n            Executor[] executors = findExecutors();\n            for (int i = 0; i < executors.length; i++) {\n                try {\n                    ObjectName executorObjectName = \n                        new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                    Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n                } catch (Exception e) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2010-03-05 03:17:32","endLine":538,"groupId":"6229","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a2/58a8c159fb0ceaa188ea22e95143431af8b391.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n        if( oname==controller ) {\n            \r\n            \r\n            \r\n            Registry.getRegistry(null, null).unregisterComponent(oname);\n            Executor[] executors = findExecutors();\n            for (int i = 0; i < executors.length; i++) {\n                try {\n                    ObjectName executorObjectName = \n                        new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                    Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n                } catch (Exception e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"B"}],"commitId":"a9213b60a6d6b7b0488eb864e86657a16c22b7ae","commitMessage":"@@@Lifecycle refactoring\nStandardService - Note use of LifecycleState.MUST_STOP in Catalina to ensure shutdown\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@919138 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-05 03:17:32","modifiedFileCount":"3","status":"B","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-03-05 03:17:32","codes":[{"authorDate":"2010-05-01 21:31:46","commitOrder":2,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":455,"groupId":"11292","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/0d28633e93a1b9ede8da097f5d7baf561ce55a.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if( ! initialized )\n            init(); \n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"M"},{"authorDate":"2010-03-05 03:17:32","commitOrder":2,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n        if( oname==controller ) {\n            \r\n            \r\n            \r\n            Registry.getRegistry(null, null).unregisterComponent(oname);\n            Executor[] executors = findExecutors();\n            for (int i = 0; i < executors.length; i++) {\n                try {\n                    ObjectName executorObjectName = \n                        new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                    Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n                } catch (Exception e) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2010-03-05 03:17:32","endLine":538,"groupId":"6229","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a2/58a8c159fb0ceaa188ea22e95143431af8b391.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n        if( oname==controller ) {\n            \r\n            \r\n            \r\n            Registry.getRegistry(null, null).unregisterComponent(oname);\n            Executor[] executors = findExecutors();\n            for (int i = 0; i < executors.length; i++) {\n                try {\n                    ObjectName executorObjectName = \n                        new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                    Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n                } catch (Exception e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"N"}],"commitId":"9af344b2b39a621ff830fca5fe91956f6b6126c0","commitMessage":"@@@Add init() and destroy() to the Lifecycle interface\nNote that this commit breaks the shutdown hook. I'll fix that in a following commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@940008 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-01 21:31:46","modifiedFileCount":"31","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-01 22:08:47","codes":[{"authorDate":"2010-05-01 21:31:46","commitOrder":3,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":455,"groupId":"11292","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/0d28633e93a1b9ede8da097f5d7baf561ce55a.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"N"},{"authorDate":"2010-05-01 22:08:47","commitOrder":3,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n\n        Registry.getRegistry(null, null).unregisterComponent(oname);\n        Executor[] executors = findExecutors();\n        for (int i = 0; i < executors.length; i++) {\n            try {\n                ObjectName executorObjectName = \n                    new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n            } catch (Exception e) {\n                \r\n            }\n        }\n    }\n","date":"2010-05-01 22:08:47","endLine":519,"groupId":"6229","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/42/f3b03bd1920f983a9a66be3a047941ec4665bb.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n        if( oname==controller ) {\n            \r\n            \r\n            \r\n            Registry.getRegistry(null, null).unregisterComponent(oname);\n            Executor[] executors = findExecutors();\n            for (int i = 0; i < executors.length; i++) {\n                try {\n                    ObjectName executorObjectName = \n                        new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                    Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n                } catch (Exception e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"}],"commitId":"65e3054ebb3cc1fb139fb6988d8bc35746e6c7f5","commitMessage":"@@@Clean up start code. Catalina no longer implements Service. The model is now: Bootstrap sorts out the class loaders.  Catalina does the remaining plumbing and holds a reference to a Server object which in turn contains 1 or more services etc. Still need to fix the shutdown hook.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@940031 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-01 22:08:47","modifiedFileCount":"3","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-05-03 02:47:56","codes":[{"authorDate":"2010-05-01 21:31:46","commitOrder":4,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":455,"groupId":"11292","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/0d28633e93a1b9ede8da097f5d7baf561ce55a.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"N"},{"authorDate":"2010-05-03 02:47:56","commitOrder":4,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","date":"2010-05-03 02:47:56","endLine":508,"groupId":"6229","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b8/a730817d7d566a4c0e125605e53a88cb88abf9.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n\n\n        Registry.getRegistry(null, null).unregisterComponent(oname);\n        Executor[] executors = findExecutors();\n        for (int i = 0; i < executors.length; i++) {\n            try {\n                ObjectName executorObjectName = \n                    new ObjectName(domain + \":type=Executor,name=\" + executors[i].getName());\n                Registry.getRegistry(null, null).unregisterComponent(executorObjectName);\n            } catch (Exception e) {\n                \r\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"M"}],"commitId":"51e5f6ce0f127e587af6f8d91dd369058b3cb5d4","commitMessage":"@@@Add LifecycleMBeanRegistration\nAlign init() and destroy()\nExecutors and Connectors need to handle their own (de)registration\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@940298 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-03 02:47:56","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-06-07 05:51:30","codes":[{"authorDate":"2010-05-01 21:31:46","commitOrder":5,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","date":"2010-05-01 21:31:46","endLine":455,"groupId":"11292","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cf/0d28633e93a1b9ede8da097f5d7baf561ce55a.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"N"},{"authorDate":"2010-06-07 05:51:30","commitOrder":5,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                \r\n                \r\n                if (!LifecycleState.INITIALIZED.equals(\n                        ((Lifecycle) connectors[i]).getState())) {\n                    ((Lifecycle) connectors[i]).stop();\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","date":"2010-06-07 05:51:30","endLine":496,"groupId":"11293","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9f/14466fd58f9c5e39dff74af3235556c6672954.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).stop();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"}],"commitId":"53a81b24a0ef0ac92f38144ff30ec8440d41502b","commitMessage":"@@@Remainder of fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=49372\nAvoid invalid Lifecycle transitions on failed start due to already bound shutdown port\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@952001 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-07 05:51:30","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-06-24 20:27:35","codes":[{"authorDate":"2010-06-24 20:27:35","commitOrder":6,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].start();\n            }\n        }\n    }\n","date":"2010-06-24 20:27:35","endLine":439,"groupId":"11292","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/56/883c217facd7c6890b6a144268c296d47dca2e.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                ((Lifecycle) connectors[i]).start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"M"},{"authorDate":"2010-06-24 20:27:35","commitOrder":6,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                \r\n                \r\n                if (!LifecycleState.INITIALIZED\n                        .equals(connectors[i].getState())) {\n                    connectors[i].stop();\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","date":"2010-06-24 20:27:35","endLine":495,"groupId":"11293","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/56/883c217facd7c6890b6a144268c296d47dca2e.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                \r\n                \r\n                if (!LifecycleState.INITIALIZED.equals(\n                        ((Lifecycle) connectors[i]).getState())) {\n                    ((Lifecycle) connectors[i]).stop();\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"M"}],"commitId":"69b71c8e0a35b6adb40af4486a2b76bc40c85a21","commitMessage":"@@@Remove unneeded classcasts\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@957524 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-24 20:27:35","modifiedFileCount":"1","status":"M","submitter":"Konstantin Kolinko"},{"authorTime":"2010-06-25 22:13:26","codes":[{"authorDate":"2010-06-25 22:13:26","commitOrder":7,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                try {\n                    connectors[i].start();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connectors[i]), e);\n                }\n            }\n        }\n    }\n","date":"2010-06-25 22:13:26","endLine":449,"groupId":"11292","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/80/d396f7d8887f982065f55e86edbb8fc58cd960.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].start();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"M"},{"authorDate":"2010-06-25 22:13:26","commitOrder":7,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                try {\n                    connectors[i].pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connectors[i]), e);\n                }\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                if (LifecycleState.INITIALIZED.equals(\n                        connectors[i].getState())) {\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connectors[i].stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connectors[i]), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","date":"2010-06-25 22:13:26","endLine":518,"groupId":"0","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/80/d396f7d8887f982065f55e86edbb8fc58cd960.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                connectors[i].pause();\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                \r\n                \r\n                if (!LifecycleState.INITIALIZED\n                        .equals(connectors[i].getState())) {\n                    connectors[i].stop();\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":461,"status":"M"}],"commitId":"fc44a483e8d1f062734c0a7d772abd8e033ac0a7","commitMessage":"@@@Additional fix for\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=49030\nWhen initializing/starting/stopping connectors and one of them fails.  do not ignore the others.\n\nThese changes are already included in the BZ 49030 patch that I proposed for TC6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@957960 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-25 22:13:26","modifiedFileCount":"1","status":"M","submitter":"Konstantin Kolinko"},{"authorTime":"2010-06-27 05:35:58","codes":[{"authorDate":"2010-06-27 05:35:58","commitOrder":8,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.start();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2010-06-27 05:35:58","endLine":449,"groupId":"15368","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/36/c09d5100a66c77578a1df414712027bf4c4758.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                try {\n                    connectors[i].start();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connectors[i]), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"M"},{"authorDate":"2010-06-27 05:35:58","commitOrder":8,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                if (LifecycleState.INITIALIZED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2010-06-27 05:35:58","endLine":518,"groupId":"11861","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/36/c09d5100a66c77578a1df414712027bf4c4758.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                try {\n                    connectors[i].pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connectors[i]), e);\n                }\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (int i = 0; i < connectors.length; i++) {\n                if (LifecycleState.INITIALIZED.equals(\n                        connectors[i].getState())) {\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connectors[i].stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connectors[i]), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for ( int i=0; i<executors.size(); i++ ) {\n                executors.get(i).stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":461,"status":"M"}],"commitId":"e8d213fe4328a7df2ca97a6f6cae792ed19f09f1","commitMessage":"@@@Simplify code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@958287 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-27 05:35:58","modifiedFileCount":"1","status":"M","submitter":"Konstantin Kolinko"},{"authorTime":"2010-09-06 04:36:16","codes":[{"authorDate":"2010-06-27 05:35:58","commitOrder":9,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.start();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2010-06-27 05:35:58","endLine":449,"groupId":"15368","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/36/c09d5100a66c77578a1df414712027bf4c4758.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.start();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"N"},{"authorDate":"2010-09-06 04:36:16","commitOrder":9,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2010-09-06 04:36:16","endLine":514,"groupId":"4381","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e3/774b1c8f74167863f6571d46a1e11db9b266f4.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            \r\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n        \r\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                if (LifecycleState.INITIALIZED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"M"}],"commitId":"cd7263e6d9ff11cfda2bc2fe73aab0770c6f899f","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49802 \nAllow the connectors to be stopped via JMX.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@992890 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-06 04:36:16","modifiedFileCount":"15","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-09-06 04:36:16","codes":[{"authorDate":"2011-01-05 01:57:16","commitOrder":10,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2011-01-05 01:57:16","endLine":467,"groupId":"15368","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/21/6a7f8512200da95d92073c7ad4e4df5806d6ae.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.start();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":433,"status":"M"},{"authorDate":"2010-09-06 04:36:16","commitOrder":10,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2010-09-06 04:36:16","endLine":514,"groupId":"4381","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e3/774b1c8f74167863f6571d46a1e11db9b266f4.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"N"}],"commitId":"740649f7f2f4d84690211aa3e7c1b4ba3f49b441","commitMessage":"@@@Re-fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49372\nDon't throw an LifecycleException for an invalid transition if a connector fails to start.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1055121 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-05 01:57:16","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2012-07-13 05:27:13","codes":[{"authorDate":"2012-07-13 05:27:13","commitOrder":11,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2012-07-13 05:27:13","endLine":444,"groupId":"0","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/04/7d6393ec2c4ad9e1abc4805f740c1b1400f1f7.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":410,"status":"M"},{"authorDate":"2012-07-13 05:27:13","commitOrder":11,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2012-07-13 05:27:13","endLine":507,"groupId":"1204","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/04/7d6393ec2c4ad9e1abc4805f740c1b1400f1f7.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectors) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"}],"commitId":"4b356d590b147b18816b0d7af04a2da20a035e91","commitMessage":"@@@Fix FindBugs issues (sync on mutated object)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1360957 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-13 05:27:13","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2012-07-31 05:53:56","codes":[{"authorDate":"2012-07-31 05:53:56","commitOrder":12,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2012-07-31 05:53:56","endLine":467,"groupId":"3323","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/531bdd7f7c474c20b8f8e65d776916631743ef.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"M"},{"authorDate":"2012-07-31 05:53:56","commitOrder":12,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        mapperListener.stop();\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2012-07-31 05:53:56","endLine":532,"groupId":"1204","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/531bdd7f7c474c20b8f8e65d776916631743ef.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"M"}],"commitId":"9108f90462368e88ced5cd0773182e634d81a694","commitMessage":"@@@Move Mapper from Connector to Service removing potential duplication.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1367329 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-31 05:53:56","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-06-24 03:47:39","codes":[{"authorDate":"2012-07-31 05:53:56","commitOrder":13,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2012-07-31 05:53:56","endLine":467,"groupId":"3323","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/531bdd7f7c474c20b8f8e65d776916631743ef.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"N"},{"authorDate":"2013-06-24 03:47:39","commitOrder":13,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2013-06-24 03:47:39","endLine":536,"groupId":"1204","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/19/26ebbb41ba436880f04bb74c5fe17377e4c7d6.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        mapperListener.stop();\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"M"}],"commitId":"3a36a8f9000c4d9114569076e019624588f533bd","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55125\nNo point starting a process if the Server container fails to start.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1495880 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-24 03:47:39","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2015-11-21 04:28:37","codes":[{"authorDate":"2015-11-21 04:28:37","commitOrder":14,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2015-11-21 04:28:37","endLine":452,"groupId":"8732","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/be9edec5dc5f2c5c85a816337364214724a2b0.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":415,"status":"M"},{"authorDate":"2015-11-21 04:28:37","commitOrder":14,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2015-11-21 04:28:37","endLine":521,"groupId":"4320","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/be9edec5dc5f2c5c85a816337364214724a2b0.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (container != null) {\n            synchronized (container) {\n                container.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":464,"status":"M"}],"commitId":"2d9d4519cea1879209848952832fe194aa8f0257","commitMessage":"@@@Remove deprecated code.\nService.container Container->Engine\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1715414 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-21 04:28:37","modifiedFileCount":"6","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-10-07 20:20:20","codes":[{"authorDate":"2015-11-21 04:28:37","commitOrder":15,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","date":"2015-11-21 04:28:37","endLine":452,"groupId":"8732","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9a/be9edec5dc5f2c5c85a816337364214724a2b0.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":415,"status":"N"},{"authorDate":"2016-10-07 20:20:20","commitOrder":15,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2016-10-07 20:20:20","endLine":512,"groupId":"4320","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/09/3aa80e34f9f749d6a1ce1318c0b725e110e565.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    connector.pause();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.pauseFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":461,"status":"M"}],"commitId":"a1df4743dbd64fa7cc46c040bd0f2493eb6e242b","commitMessage":"@@@Connector logs all exceptions during pause(). No need to StandardService to do the same.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1763755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-10-07 20:20:20","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-10-07 22:39:47","codes":[{"authorDate":"2016-10-07 22:39:47","commitOrder":16,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","date":"2016-10-07 22:39:47","endLine":443,"groupId":"8732","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6f/1e80566b95206f1263876fd39d98ea4674cb93.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                try {\n                    \r\n                    if (connector.getState() != LifecycleState.FAILED) {\n                        connector.start();\n                    }\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.startFailed\",\n                            connector), e);\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"M"},{"authorDate":"2016-10-07 22:39:47","commitOrder":16,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2016-10-07 22:39:47","endLine":500,"groupId":"4320","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6f/1e80566b95206f1263876fd39d98ea4674cb93.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                try {\n                    connector.stop();\n                } catch (Exception e) {\n                    log.error(sm.getString(\n                            \"standardService.connector.stopFailed\",\n                            connector), e);\n                }\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"}],"commitId":"acb5a66a55cf4d0b1565231ef78669c2b4c28872","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60152\nProvide an option for Connector Lifecycle exceptions to be re-thrown rather than logged. This is controlled by the new throwOnFailure  attribute of the Connector.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1763769 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-10-07 22:39:47","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"},{"authorTime":"2018-07-09 19:58:18","codes":[{"authorDate":"2016-10-07 22:39:47","commitOrder":17,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","date":"2016-10-07 22:39:47","endLine":443,"groupId":"8732","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6f/1e80566b95206f1263876fd39d98ea4674cb93.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"N"},{"authorDate":"2018-07-09 19:58:18","commitOrder":17,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                connector.pause();\n                \r\n                \r\n                connector.getProtocolHandler().closeServerSocketGraceful();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2018-07-09 19:58:18","endLine":503,"groupId":"4320","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f8/920f6ce84e0cabe1338cf9e5c88fb268c9a742.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"}],"commitId":"708acc3ad690eb5e033d7271b93678b39dcf03da","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62515\nWhen a connector is configured (via setting bindOnInit to false) to bind/unbind the server socket during start/stop.  close the socket earlier in the stop process so new connections do not sit in the TCP backlog during the shutdown process only to be dropped as stop completes. In this scenario new connections will now be refused immediately.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1835413 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-07-09 19:58:18","modifiedFileCount":"7","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-11-19 19:06:55","codes":[{"authorDate":"2016-10-07 22:39:47","commitOrder":18,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","date":"2016-10-07 22:39:47","endLine":443,"groupId":"8732","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6f/1e80566b95206f1263876fd39d98ea4674cb93.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"N"},{"authorDate":"2020-11-19 19:06:55","commitOrder":18,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        synchronized (connectorsLock) {\n            \r\n            \r\n            \r\n            for (Connector connector: connectors) {\n                connector.getProtocolHandler().closeServerSocketGraceful();\n            }\n\n            \r\n            long waitMillis = gracefulStopAwaitMillis;\n            if (waitMillis > 0) {\n                for (Connector connector: connectors) {\n                    waitMillis = connector.getProtocolHandler().awaitConnectionsClose(waitMillis);\n                }\n            }\n\n            \r\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n\n    }\n","date":"2020-11-26 03:02:04","endLine":528,"groupId":"4320","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/55/97cb01b947cad8a3ee34f312b350341e5e41ac.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                connector.pause();\n                \r\n                \r\n                connector.getProtocolHandler().closeServerSocketGraceful();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"}],"commitId":"a1cbdab44b243515a5e8a9fec3c6fa1ac9ba254a","commitMessage":"@@@Fix BZ 64080 - graceful close\n\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=64080\n","date":"2020-11-26 03:02:04","modifiedFileCount":"4","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-05-25 16:15:13","codes":[{"authorDate":"2021-05-25 16:15:13","commitOrder":19,"curCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled()) {\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        }\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","date":"2021-05-25 16:15:13","endLine":458,"groupId":"10956","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"startInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6a/58e49f1c3a1b1ddb74a4ee06c14c9f28469f80.src","preCode":"    protected void startInternal() throws LifecycleException {\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.start.name\", this.name));\n        setState(LifecycleState.STARTING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.start();\n            }\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.start();\n            }\n        }\n\n        mapperListener.start();\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                \r\n                if (connector.getState() != LifecycleState.FAILED) {\n                    connector.start();\n                }\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"},{"authorDate":"2021-05-25 16:15:13","commitOrder":19,"curCode":"    protected void stopInternal() throws LifecycleException {\n\n        synchronized (connectorsLock) {\n            \r\n            \r\n            \r\n            for (Connector connector: connectors) {\n                connector.getProtocolHandler().closeServerSocketGraceful();\n            }\n\n            \r\n            long waitMillis = gracefulStopAwaitMillis;\n            if (waitMillis > 0) {\n                for (Connector connector: connectors) {\n                    waitMillis = connector.getProtocolHandler().awaitConnectionsClose(waitMillis);\n                }\n            }\n\n            \r\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled()) {\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        }\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","date":"2021-05-25 16:15:13","endLine":531,"groupId":"10956","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"stopInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6a/58e49f1c3a1b1ddb74a4ee06c14c9f28469f80.src","preCode":"    protected void stopInternal() throws LifecycleException {\n\n        synchronized (connectorsLock) {\n            \r\n            \r\n            \r\n            for (Connector connector: connectors) {\n                connector.getProtocolHandler().closeServerSocketGraceful();\n            }\n\n            \r\n            long waitMillis = gracefulStopAwaitMillis;\n            if (waitMillis > 0) {\n                for (Connector connector: connectors) {\n                    waitMillis = connector.getProtocolHandler().awaitConnectionsClose(waitMillis);\n                }\n            }\n\n            \r\n            for (Connector connector: connectors) {\n                connector.pause();\n            }\n        }\n\n        if(log.isInfoEnabled())\n            log.info(sm.getString(\"standardService.stop.name\", this.name));\n        setState(LifecycleState.STOPPING);\n\n        \r\n        if (engine != null) {\n            synchronized (engine) {\n                engine.stop();\n            }\n        }\n\n        \r\n        synchronized (connectorsLock) {\n            for (Connector connector: connectors) {\n                if (!LifecycleState.STARTED.equals(\n                        connector.getState())) {\n                    \r\n                    \r\n                    \r\n                    continue;\n                }\n                connector.stop();\n            }\n        }\n\n        \r\n        \r\n        if (mapperListener.getState() != LifecycleState.INITIALIZED) {\n            mapperListener.stop();\n        }\n\n        synchronized (executors) {\n            for (Executor executor: executors) {\n                executor.stop();\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/core/StandardService.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":470,"status":"M"}],"commitId":"513a158ee793b52cc1c0fac7780423760818b631","commitMessage":"@@@Code clean-up. Add braces for clarity.","date":"2021-05-25 16:15:13","modifiedFileCount":"37","status":"M","submitter":"Mark Thomas"}]
