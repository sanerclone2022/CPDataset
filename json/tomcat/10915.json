[{"authorTime":"2006-09-21 10:21:19","codes":[{"authorDate":"2006-06-08 23:35:56","commitOrder":2,"curCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2006-06-08 23:35:56","endLine":1235,"groupId":"5948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d7/1ed0c2fb1044b56b2047b36e656ba21f115bc0.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"NB"},{"authorDate":"2006-09-21 10:21:19","commitOrder":2,"curCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            \r\n            String appBase = null;\n            File appBaseDir = null;\n            if (context.getParent() instanceof Host) {\n                appBase = ((Host) context.getParent()).getAppBase();\n                appBaseDir = new File(appBase);\n                if (!appBaseDir.isAbsolute()) {\n                    appBaseDir = new File(System.getProperty(\"catalina.base\"),\n                                          appBase);\n                }\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path);\n                } finally {\n                    removeServiced(path);\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2006-09-21 10:21:19","endLine":1319,"groupId":"13389","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d7/dffceb3a6d5e5d5d80b5c49e3387dc9d90da24.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            \r\n            String appBase = null;\n            File appBaseDir = null;\n            if (context.getParent() instanceof Host) {\n                appBase = ((Host) context.getParent()).getAppBase();\n                appBaseDir = new File(appBase);\n                if (!appBaseDir.isAbsolute()) {\n                    appBaseDir = new File(System.getProperty(\"catalina.base\"),\n                                          appBase);\n                }\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path);\n                } finally {\n                    removeServiced(path);\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1244,"status":"MB"}],"commitId":"9dd8a239bf634dcf8e5160ddbdfcf1c493681729","commitMessage":"@@@Port fix for bug 34399 - disable the undeploy option if the webapp has not been 'deployed'\nThis occurs.  for example.  if the webapp is defined in server.xml\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@448434 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-21 10:21:19","modifiedFileCount":"3","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2008-05-06 02:18:00","codes":[{"authorDate":"2006-06-08 23:35:56","commitOrder":3,"curCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2006-06-08 23:35:56","endLine":1235,"groupId":"5948","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d7/1ed0c2fb1044b56b2047b36e656ba21f115bc0.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"N"},{"authorDate":"2008-05-06 02:18:00","commitOrder":3,"curCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            \r\n            String appBase = null;\n            File appBaseDir = null;\n            if (context.getParent() instanceof Host) {\n                appBase = ((Host) context.getParent()).getAppBase();\n                appBaseDir = new File(appBase);\n                if (!appBaseDir.isAbsolute()) {\n                    appBaseDir = new File(System.getProperty(\"catalina.base\"),\n                                          appBase);\n                }\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2008-05-06 02:18:00","endLine":1393,"groupId":"13389","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fd/5ae35fdb2944cd094173d8c4f8b3b92008948c.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            \r\n            String appBase = null;\n            File appBaseDir = null;\n            if (context.getParent() instanceof Host) {\n                appBase = ((Host) context.getParent()).getAppBase();\n                appBaseDir = new File(appBase);\n                if (!appBaseDir.isAbsolute()) {\n                    appBaseDir = new File(System.getProperty(\"catalina.base\"),\n                                          appBase);\n                }\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path);\n                } finally {\n                    removeServiced(path);\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1315,"status":"M"}],"commitId":"7125c9fc203b683374220322159e451c2c418cef","commitMessage":"@@@Fix bugs https://issues.apache.org/bugzilla/show_bug.cgi?id=43013 and https://issues.apache.org/bugzilla/show_bug.cgi?id=44021\nAdd support to manger and deployer for wars and dirs that use # to denote multi-level contexts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@653549 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-05-06 02:18:00","modifiedFileCount":"4","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2008-09-28 02:32:56","codes":[{"authorDate":"2006-06-08 23:35:56","commitOrder":4,"curCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2006-06-08 23:35:56","endLine":1235,"groupId":"5948","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d7/1ed0c2fb1044b56b2047b36e656ba21f115bc0.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"N"},{"authorDate":"2008-09-28 02:32:56","commitOrder":4,"curCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2008-09-28 02:32:56","endLine":1379,"groupId":"7953","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/94/87932287c1016b93f4b64107bb3b70cc36ec00.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            \r\n            String appBase = null;\n            File appBaseDir = null;\n            if (context.getParent() instanceof Host) {\n                appBase = ((Host) context.getParent()).getAppBase();\n                appBaseDir = new File(appBase);\n                if (!appBaseDir.isAbsolute()) {\n                    appBaseDir = new File(System.getProperty(\"catalina.base\"),\n                                          appBase);\n                }\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1313,"status":"M"}],"commitId":"44f00f2e43d3c77bcf4498b9bf5d296e38d562d4","commitMessage":"@@@Remove unused code reported by Find Bugs / Eclipse. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@699713 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-09-28 02:32:56","modifiedFileCount":"10","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-02-17 17:20:59","codes":[{"authorDate":"2010-02-17 17:20:59","commitOrder":5,"curCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2010-02-17 17:20:59","endLine":1307,"groupId":"5948","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1d/88aa65ecb3e6c91d7dfa8cd631ac77413b9cde.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            ((Lifecycle) context).stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1273,"status":"M"},{"authorDate":"2010-02-17 17:20:59","commitOrder":5,"curCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2010-02-17 17:20:59","endLine":1382,"groupId":"4881","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1d/88aa65ecb3e6c91d7dfa8cd631ac77413b9cde.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    ((Lifecycle) context).stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1316,"status":"M"}],"commitId":"dcf5b025d9cb3f90b7303858a28daae5c515d5f2","commitMessage":"@@@Add Lifecycle to Container.  Server and Service\nRemove casts instanceof tests and any other code this makes unnecessary\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@910877 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-17 17:20:59","modifiedFileCount":"18","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-04-25 03:26:17","codes":[{"authorDate":"2010-02-17 17:20:59","commitOrder":6,"curCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2010-02-17 17:20:59","endLine":1307,"groupId":"5948","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1d/88aa65ecb3e6c91d7dfa8cd631ac77413b9cde.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1273,"status":"N"},{"authorDate":"2010-04-25 03:26:17","commitOrder":6,"curCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2010-04-25 03:26:17","endLine":1382,"groupId":"8989","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/19/905ab5068beeab4f9f1a2df145d02069eb0026.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    \r\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1316,"status":"M"}],"commitId":"1be8bf520121efe6ebfb5644dd1ee74e46f1ab0a","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48644\nDon't silently swallow Throwables that need to be re-thrown\nPatch provided by Charlotte H (with a few tweaks)\nPatch developed during the London GDC OS Jumpstart 2010\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@937680 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-25 03:26:17","modifiedFileCount":"25","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-09-28 05:32:25","codes":[{"authorDate":"2010-09-28 05:32:25","commitOrder":7,"curCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2010-09-28 05:32:25","endLine":1316,"groupId":"5948","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/32/7967c532979871010d242e188e69b3d1145535.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1281,"status":"M"},{"authorDate":"2010-09-28 05:32:25","commitOrder":7,"curCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","date":"2010-09-28 05:32:25","endLine":1392,"groupId":"8989","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/32/7967c532979871010d242e188e69b3d1145535.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1325,"status":"M"}],"commitId":"27a4f9f7f7ac9bc02bb2750c122d2de1f000644e","commitMessage":"@@@Partial fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=48644\nSome Throwables must always be re-thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1001915 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-28 05:32:25","modifiedFileCount":"9","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-10-17 03:31:37","codes":[{"authorDate":"2010-10-17 03:31:37","commitOrder":8,"curCode":"    protected void stop(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-10-17 03:31:37","endLine":1352,"groupId":"8910","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/47/f33362bf80a65cdef559c08e9f9bbabc76b33f.src","preCode":"    protected void stop(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\", \n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(sm.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(sm.getString(\"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1315,"status":"M"},{"authorDate":"2010-10-17 03:31:37","commitOrder":8,"curCode":"    protected void undeploy(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-10-17 03:31:37","endLine":1429,"groupId":"0","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/47/f33362bf80a65cdef559c08e9f9bbabc76b33f.src","preCode":"    protected void undeploy(PrintWriter writer, String path) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(sm.getString(\"managerServlet.invalidPath\",\n                                        RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(sm.getString(\"managerServlet.noContext\",\n                                            RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(sm.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(sm.getString(\"managerServlet.undeployed\",\n                                        displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(sm.getString(\"managerServlet.exception\",\n                                        t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1361,"status":"M"}],"commitId":"73578675b8ded44bd98cbc5ad9a3a596029889f3","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49426\nMessages displayed to the user in the Manager (text and HTML) should be based on the Locale of the user.  not the server\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1023361 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-10-17 03:31:37","modifiedFileCount":"3","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-11-01 10:04:53","codes":[{"authorDate":"2010-11-01 10:04:53","commitOrder":9,"curCode":"    protected void stop(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-01 10:04:53","endLine":1355,"groupId":"5478","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@Stringpath@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/59/ee868e2b1440a15878e3696e4f1181764766ea.src","preCode":"    protected void stop(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getPath().equals(this.context.getPath())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1318,"status":"M"},{"authorDate":"2010-11-01 10:04:53","commitOrder":9,"curCode":"    protected void undeploy(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        ContextName cn = new ContextName(path, null);\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(getAppBase(), baseName + \".war\");\n                    File dir = new File(getAppBase(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-01 10:04:53","endLine":1430,"groupId":"2160","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@Stringpath@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/59/ee868e2b1440a15878e3696e4f1181764766ea.src","preCode":"    protected void undeploy(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(path)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(path)) {\n                addServiced(path);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    if (path.lastIndexOf('/') > 0) {\n                        path = \"/\" + path.substring(1).replace('/','#');\n                    }\n                    File war = new File(getAppBase(), getDocBase(path) + \".war\");\n                    File dir = new File(getAppBase(), getDocBase(path));\n                    File xml = new File(configBase, getConfigFile(path) + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(path.replace('#', '/'));\n                } finally {\n                    removeServiced(path.replace('#','/'));\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1364,"status":"M"}],"commitId":"40f87363ea4f5353c0e00e29015363af6a27cb37","commitMessage":"@@@Parallel deployment\n- More work separating Context.name & Context.path\n- Review use of Context.getName() and Context.getPath() and use the correct one\n- Start to add webappVersion property to Context (many components not version aware - e.g. Manager app)\n- Set version when deploying apps if version is specified\n- Include version in Context.name if version is specified\n- New ContextName util class to handle all path/name/version etc translations\n\nIn most cases the behaviour is unchanged if the version is not specified. The one exception is JMX ObjectNames that used to contain a key value pair \"path=...\". Since context path is no longer unique when using versions.  this has been changed to \"context=...\" and the context name used which is unique.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1029527 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-11-01 10:04:53","modifiedFileCount":"22","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-11-19 20:55:27","codes":[{"authorDate":"2010-11-19 20:55:27","commitOrder":10,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-19 20:55:27","endLine":1344,"groupId":"689","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/12/588e8778f188ae81fe631272e62971d823455f.src","preCode":"    protected void stop(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        if( path.equals(\"/\") )\n            path = \"\";\n\n        try {\n            Context context = (Context) host.findChild(path);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1310,"status":"M"},{"authorDate":"2010-11-19 20:55:27","commitOrder":10,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(getAppBase(), baseName + \".war\");\n                    File dir = new File(getAppBase(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-19 20:55:27","endLine":1417,"groupId":"2160","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/12/588e8778f188ae81fe631272e62971d823455f.src","preCode":"    protected void undeploy(PrintWriter writer, String path,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + path + \"'\");\n\n        if ((path == null) || (!path.startsWith(\"/\") && path.equals(\"\"))) {\n            writer.println(smClient.getString(\"managerServlet.invalidPath\",\n                    RequestUtil.filter(path)));\n            return;\n        }\n        String displayPath = path;\n        ContextName cn = new ContextName(path, null);\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(getAppBase(), baseName + \".war\");\n                    File dir = new File(getAppBase(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1353,"status":"M"}],"commitId":"291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c","commitMessage":"@@@Changes to Manager and HTML Manager to support parallel deployment\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1036828 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-11-19 20:55:27","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-03-31 01:39:54","codes":[{"authorDate":"2010-11-19 20:55:27","commitOrder":11,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-19 20:55:27","endLine":1344,"groupId":"689","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/12/588e8778f188ae81fe631272e62971d823455f.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1310,"status":"N"},{"authorDate":"2011-03-31 01:39:54","commitOrder":11,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(getAppBase(), baseName + \".war\");\n                    File dir = new File(getAppBase(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2011-03-31 01:39:54","endLine":1372,"groupId":"2160","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bb/fc3e614b14d9300ec7032b5d2f94c3f16597ee.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(getAppBase(), baseName + \".war\");\n                    File dir = new File(getAppBase(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists()) {\n                        war.delete();\n                    } else if (dir.exists()) {\n                        undeployDir(dir);\n                    } else {\n                        xml.delete();\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1302,"status":"M"}],"commitId":"b134a62581fe1e1546f87ce80d3251fac06c873c","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50984\nWhen using the Manager application ensure that undeployment is reported as failed if a file cannot be deleted.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1087026 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-03-31 01:39:54","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-08-16 02:50:25","codes":[{"authorDate":"2010-11-19 20:55:27","commitOrder":12,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-19 20:55:27","endLine":1344,"groupId":"689","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/12/588e8778f188ae81fe631272e62971d823455f.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1310,"status":"N"},{"authorDate":"2011-08-16 02:50:25","commitOrder":12,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2011-08-16 02:50:25","endLine":1381,"groupId":"5060","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c8/e82e19990454fea3315cf7dc9544c85e0bd710.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(getAppBase(), baseName + \".war\");\n                    File dir = new File(getAppBase(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1311,"status":"M"}],"commitId":"f82aea1d7c8e36b79d8dda00482790774774401b","commitMessage":"@@@Clean-up I do not intend to back-port (non-critical and changes the Host API)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1157943 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-08-16 02:50:25","modifiedFileCount":"10","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2014-03-23 23:38:21","codes":[{"authorDate":"2010-11-19 20:55:27","commitOrder":13,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2010-11-19 20:55:27","endLine":1344,"groupId":"689","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/12/588e8778f188ae81fe631272e62971d823455f.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1310,"status":"N"},{"authorDate":"2014-03-23 23:38:21","commitOrder":13,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2014-03-23 23:38:21","endLine":1422,"groupId":"12158","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/92/2c4e49fc7660ec11649ead1e2fc5e64fbb2f6c.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isServiced(name)) {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1350,"status":"M"}],"commitId":"b7508405d9f7205973adb1881d96c88fe2e5c3b4","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56273\nIf the Manager web application does not perform an operation because the web application is already being serviced.  report an error rather than reporting success.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1580514 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-23 23:38:21","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2014-12-21 04:32:39","codes":[{"authorDate":"2014-12-21 04:32:39","commitOrder":14,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        HttpMessages.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2014-12-21 04:32:39","endLine":1353,"groupId":"0","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/48/2f26c0d020f412c36afd76f24dbd1ed7546af1.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1319,"status":"M"},{"authorDate":"2014-12-21 04:32:39","commitOrder":14,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        HttpMessages.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        HttpMessages.filter(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2014-12-21 04:32:39","endLine":1434,"groupId":"0","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/48/2f26c0d020f412c36afd76f24dbd1ed7546af1.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1362,"status":"M"}],"commitId":"305158534a211b10098665f8bcc7708a6765915c","commitMessage":"@@@Remove duplicate utility method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1647051 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-21 04:32:39","modifiedFileCount":"10","status":"M","submitter":"Mark Thomas"},{"authorTime":"2014-12-23 16:58:53","codes":[{"authorDate":"2014-12-23 16:58:53","commitOrder":15,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2014-12-23 16:58:53","endLine":1353,"groupId":"689","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/47/ec336f04ab55869c9378bf4433fb825b6a27b3.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        HttpMessages.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1319,"status":"M"},{"authorDate":"2014-12-23 16:58:53","commitOrder":15,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2014-12-23 16:58:53","endLine":1434,"groupId":"12158","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/47/ec336f04ab55869c9378bf4433fb825b6a27b3.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        HttpMessages.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        HttpMessages.filter(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1362,"status":"M"}],"commitId":"24bf30c213362d58d01924dee2150d16c4997bda","commitMessage":"@@@Revert r1647051\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1647507 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-23 16:58:53","modifiedFileCount":"10","status":"M","submitter":"Mark Thomas"},{"authorTime":"2017-10-18 18:39:54","codes":[{"authorDate":"2017-10-18 18:39:54","commitOrder":16,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2017-10-18 18:39:54","endLine":1366,"groupId":"5123","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/39/07bf69dba2ade96b82a087157179b17eda6d77.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1332,"status":"M"},{"authorDate":"2017-10-18 18:39:54","commitOrder":16,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2017-10-18 18:39:54","endLine":1448,"groupId":"7778","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/39/07bf69dba2ade96b82a087157179b17eda6d77.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        RequestUtil.filter(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1376,"status":"M"}],"commitId":"17fdaef177202e09e5e111cbaa3f45c15f167142","commitMessage":"@@@Refactor XML and HTML escaping to a single location\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1812489 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2017-10-18 18:39:54","modifiedFileCount":"20","status":"M","submitter":"Mark Thomas"},{"authorTime":"2018-11-15 23:11:29","codes":[{"authorDate":"2017-10-18 18:39:54","commitOrder":17,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2017-10-18 18:39:54","endLine":1366,"groupId":"5123","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/39/07bf69dba2ade96b82a087157179b17eda6d77.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1332,"status":"N"},{"authorDate":"2018-11-15 23:11:29","commitOrder":17,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2018-11-15 23:11:29","endLine":1565,"groupId":"5080","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e9/61a2914cedfb34eb940e448194130156fcb226.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !undeployDir(dir)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1493,"status":"M"}],"commitId":"d74b374b3ff8772ea5fdf526b5dc160254278c36","commitMessage":"@@@Refactor to remove duplicate functionality (reported by Simian)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1846664 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-11-15 23:11:29","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2018-12-10 18:57:08","codes":[{"authorDate":"2018-12-10 18:57:08","commitOrder":18,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2018-12-10 18:57:08","endLine":1469,"groupId":"5123","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ae/1a0cb4a6519dc83bc47a8e1216785aa5539a8d.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.stop[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1435,"status":"M"},{"authorDate":"2018-12-10 18:57:08","commitOrder":18,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2018-12-10 18:57:08","endLine":1551,"groupId":"5080","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ae/1a0cb4a6519dc83bc47a8e1216785aa5539a8d.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(\"ManagerServlet.undeploy[\" + displayPath + \"]\", t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1479,"status":"M"}],"commitId":"9624a674d4193653c14d1f077800f767ec705f8f","commitMessage":"@@@More i18n items.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1848561 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-12-10 18:57:08","modifiedFileCount":"4","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2021-01-21 01:33:53","codes":[{"authorDate":"2018-12-10 18:57:08","commitOrder":19,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2018-12-10 18:57:08","endLine":1469,"groupId":"5123","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ae/1a0cb4a6519dc83bc47a8e1216785aa5539a8d.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1435,"status":"N"},{"authorDate":"2021-01-21 01:33:53","commitOrder":19,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (tryAddServiced(name)) {\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            } else {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2021-02-05 19:01:04","endLine":1539,"groupId":"10879","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/dd/68e1b0e061123a6a1e77a7a94f07e1a9859535.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (isServiced(name)) {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            } else {\n                addServiced(name);\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1468,"status":"M"}],"commitId":"5b9c6f80f9c662018cc80fd6a2efc00b0118587c","commitMessage":"@@@Switch to the thread-safe method of serviced application tracking\n\nSecond in a series of patches aimed at allowing parallel requests to the\nManager application to deploy different applications in parallel rather\nthan using a sync block to deploy them serially.\n","date":"2021-02-05 19:01:04","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-01-23 03:52:04","codes":[{"authorDate":"2018-12-10 18:57:08","commitOrder":20,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2018-12-10 18:57:08","endLine":1469,"groupId":"5123","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ae/1a0cb4a6519dc83bc47a8e1216785aa5539a8d.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1435,"status":"N"},{"authorDate":"2021-01-23 03:52:04","commitOrder":20,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (tryAddServiced(name)) {\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                } finally {\n                    removeServiced(name);\n                }\n                \r\n                check(name);\n            } else {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2021-02-05 19:01:04","endLine":1539,"groupId":"10879","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/8f/4b8250719d549fbbb2c1ea2fa3861fa868bd1f.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (tryAddServiced(name)) {\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                    \r\n                    check(name);\n                } finally {\n                    removeServiced(name);\n                }\n            } else {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1468,"status":"M"}],"commitId":"06c014b6f5398d9985d8aff5f840574903cc980b","commitMessage":"@@@Refactor marking app as serviced when using check\n\nSixth in a series of patches aimed at allowing parallel requests to the\nManager application to deploy different applications in parallel rather\nthan using a sync block to deploy them serially.\nCheck triggers HostConfig to redploy the application if it has been\nupdated. check calls tryAddServiced to avoid conflicts so existing\ncalls to check can't be made from inside a tryAddServiced ...\nremoveServiced block.\n","date":"2021-02-05 19:01:04","modifiedFileCount":"4","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-05-26 18:09:29","codes":[{"authorDate":"2021-05-26 18:09:29","commitOrder":21,"curCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1) {\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n        }\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2021-05-26 18:09:29","endLine":1477,"groupId":"10915","id":39,"instanceNumber":1,"isCurCommit":1,"methodName":"stop","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/82/7ee0a87ef2e61154d6c18ad5082ee00b9e8116.src","preCode":"    protected void stop(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"stop: Stopping web application '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String displayPath = cn.getDisplayName();\n\n        try {\n            Context context = (Context) host.findChild(cn.getName());\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n            \r\n            if (context.getName().equals(this.context.getName())) {\n                writer.println(smClient.getString(\"managerServlet.noSelf\"));\n                return;\n            }\n            context.stop();\n            writer.println(smClient.getString(\n                    \"managerServlet.stopped\", displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.stop\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1442,"status":"M"},{"authorDate":"2021-05-26 18:09:29","commitOrder":21,"curCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1) {\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n        }\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (tryAddServiced(name)) {\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                } finally {\n                    removeServiced(name);\n                }\n                \r\n                check(name);\n            } else {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","date":"2021-05-26 18:09:29","endLine":1559,"groupId":"10915","id":40,"instanceNumber":2,"isCurCommit":1,"methodName":"undeploy","params":"(PrintWriterwriter@ContextNamecn@StringManagersmClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/82/7ee0a87ef2e61154d6c18ad5082ee00b9e8116.src","preCode":"    protected void undeploy(PrintWriter writer, ContextName cn,\n            StringManager smClient) {\n\n        if (debug >= 1)\n            log(\"undeploy: Undeploying web application at '\" + cn + \"'\");\n\n        if (!validateContextName(cn, writer, smClient)) {\n            return;\n        }\n\n        String name = cn.getName();\n        String baseName = cn.getBaseName();\n        String displayPath = cn.getDisplayName();\n\n        try {\n\n            \r\n            Context context = (Context) host.findChild(name);\n            if (context == null) {\n                writer.println(smClient.getString(\"managerServlet.noContext\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (!isDeployed(name)) {\n                writer.println(smClient.getString(\"managerServlet.notDeployed\",\n                        Escape.htmlElementContent(displayPath)));\n                return;\n            }\n\n            if (tryAddServiced(name)) {\n                try {\n                    \r\n                    context.stop();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                }\n                try {\n                    File war = new File(host.getAppBaseFile(), baseName + \".war\");\n                    File dir = new File(host.getAppBaseFile(), baseName);\n                    File xml = new File(configBase, baseName + \".xml\");\n                    if (war.exists() && !war.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", war));\n                        return;\n                    } else if (dir.exists() && !ExpandWar.delete(dir, false)) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", dir));\n                        return;\n                    } else if (xml.exists() && !xml.delete()) {\n                        writer.println(smClient.getString(\n                                \"managerServlet.deleteFail\", xml));\n                        return;\n                    }\n                } finally {\n                    removeServiced(name);\n                }\n                \r\n                check(name);\n            } else {\n                writer.println(smClient.getString(\"managerServlet.inService\", displayPath));\n            }\n            writer.println(smClient.getString(\"managerServlet.undeployed\",\n                    displayPath));\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n            log(sm.getString(\"managerServlet.error.undeploy\", displayPath), t);\n            writer.println(smClient.getString(\"managerServlet.exception\",\n                    t.toString()));\n        }\n\n    }\n","realPath":"java/org/apache/catalina/manager/ManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1487,"status":"M"}],"commitId":"6a667943c5da6b5d61ac6bec1d7c9de061e3217c","commitMessage":"@@@Code clean-up. Add braces for clarity.\n\nClean-up commit primarily to trigger CI build to test buildbot renaming","date":"2021-05-26 18:09:29","modifiedFileCount":"44","status":"M","submitter":"Mark Thomas"}]
