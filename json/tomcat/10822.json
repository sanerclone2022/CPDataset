[{"authorTime":"2006-04-14 05:51:35","codes":[{"authorDate":"2006-04-14 05:51:35","commitOrder":1,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        ;\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2006-04-14 05:51:35","endLine":402,"groupId":"8271","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1a/5088e5bed01abea4675dee80a6e2db863a99aa.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        ;\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"B"},{"authorDate":"2006-04-14 05:51:35","commitOrder":1,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    ;\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2006-04-14 05:51:35","endLine":1630,"groupId":"2630","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1a/5088e5bed01abea4675dee80a6e2db863a99aa.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    ;\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1578,"status":"B"}],"commitId":"a072883bc59691a1efd78e9863bb7ef9b90b81e9","commitMessage":"@@@- Port patches.\n- verifyIfValid in Session.access seems useless.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@393953 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-04-14 05:51:35","modifiedFileCount":"4","status":"B","submitter":"Remy Maucherat"},{"authorTime":"2008-06-18 06:13:00","codes":[{"authorDate":"2006-04-14 05:51:35","commitOrder":2,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        ;\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2006-04-14 05:51:35","endLine":402,"groupId":"8271","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1a/5088e5bed01abea4675dee80a6e2db863a99aa.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        ;\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"N"},{"authorDate":"2008-06-18 06:13:00","commitOrder":2,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    ;\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2008-06-18 06:13:00","endLine":1692,"groupId":"2630","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/37/f22af04cc3ec33411d76d3aedd1f897158a886.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    ;\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1637,"status":"M"}],"commitId":"cfd911baba854bcfbd2a03a872704756ff045232","commitMessage":"@@@Additional check related to bug 45195.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@668854 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-06-18 06:13:00","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2008-12-27 03:00:35","codes":[{"authorDate":"2008-12-27 03:00:35","commitOrder":3,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2008-12-27 03:00:35","endLine":416,"groupId":"8271","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/13/5a67f91ca48aaa68ccbcb7ddf1de0979327c46.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        ;\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"},{"authorDate":"2008-12-27 03:00:35","commitOrder":3,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2008-12-27 03:00:35","endLine":1720,"groupId":"2630","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/13/5a67f91ca48aaa68ccbcb7ddf1de0979327c46.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    ;\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1665,"status":"M"}],"commitId":"83b275aff953124e848859972add32814882f769","commitMessage":"@@@o.a.c.session generics changes\nDeprecate methods that implement deprecated methods\nFix assorted Eclipse warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@729523 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-12-27 03:00:35","modifiedFileCount":"8","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-09-28 06:01:45","codes":[{"authorDate":"2010-09-28 06:01:45","commitOrder":4,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2010-09-28 06:01:45","endLine":423,"groupId":"8271","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f0/c8deaab8e0feb92d07e4ee4699c69e39a31620.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"M"},{"authorDate":"2010-09-28 06:01:45","commitOrder":4,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2010-09-28 06:01:45","endLine":1787,"groupId":"2630","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f0/c8deaab8e0feb92d07e4ee4699c69e39a31620.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1731,"status":"M"}],"commitId":"92f81b19e6255baf01dcef2a7e4ec69d05dc8282","commitMessage":"@@@Partial fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=48644\nSome Throwables must always be re-thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1001923 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-28 06:01:45","modifiedFileCount":"22","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2012-02-01 22:07:44","codes":[{"authorDate":"2012-02-01 22:07:44","commitOrder":5,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2012-02-01 22:07:44","endLine":433,"groupId":"3285","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/57/b6873ab33d2bbd82d4235817edfbeaf2b76225.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    fireContainerEvent(context,\n                                       \"beforeSessionCreated\",\n                                       listener);\n                    listener.sessionCreated(event);\n                    fireContainerEvent(context,\n                                       \"afterSessionCreated\",\n                                       listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        fireContainerEvent(context,\n                                           \"afterSessionCreated\",\n                                           listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"M"},{"authorDate":"2012-02-01 22:07:44","commitOrder":5,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2012-02-01 22:07:44","endLine":1817,"groupId":"8510","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/57/b6873ab33d2bbd82d4235817edfbeaf2b76225.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                fireContainerEvent(context,\n                                   \"beforeSessionAttributeRemoved\",\n                                   listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                fireContainerEvent(context,\n                                   \"afterSessionAttributeRemoved\",\n                                   listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    fireContainerEvent(context,\n                                       \"afterSessionAttributeRemoved\",\n                                       listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1764,"status":"M"}],"commitId":"1fb8bd32a971c5d8e100aa50815859349ed7d67a","commitMessage":"@@@Deprecate unnecessary code that references StandardContext\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1239135 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-02-01 22:07:44","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2012-02-01 22:07:44","codes":[{"authorDate":"2012-06-13 00:58:38","commitOrder":6,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2012-06-13 00:58:38","endLine":432,"groupId":"3285","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b6/6333c7b01ce7bd33ff892283570e3631cde3bb.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"M"},{"authorDate":"2012-02-01 22:07:44","commitOrder":6,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2012-02-01 22:07:44","endLine":1817,"groupId":"8510","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/57/b6873ab33d2bbd82d4235817edfbeaf2b76225.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1764,"status":"N"}],"commitId":"62c2a65c8b1ce35bda0e1e631712a715025fcb34","commitMessage":"@@@Review of Context.getApplicationLifecycleListeners() calls:\nDo less work if there are no listeners or 'notify' flag is false.\nI do not expect much effect from this change.  because implementation of Context.getApplicationLifecycleListeners() in StandardContext is lightweight: it returns a field value. Note that by default it returns an empty array.  not null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1349439 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-13 00:58:38","modifiedFileCount":"2","status":"M","submitter":"Konstantin Kolinko"},{"authorTime":"2012-07-05 05:24:28","codes":[{"authorDate":"2012-07-05 05:24:28","commitOrder":7,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2012-07-05 05:24:28","endLine":432,"groupId":"3285","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1e/22fd2733c4073c39b8428aebc3f73c71f9f7a4.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContainer().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"M"},{"authorDate":"2012-07-05 05:24:28","commitOrder":7,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","date":"2012-07-05 05:24:28","endLine":1792,"groupId":"6994","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1e/22fd2733c4073c39b8428aebc3f73c71f9f7a4.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = (Context) manager.getContainer();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContainer().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1739,"status":"M"}],"commitId":"34f8d16d6986fe9f6163e1425b4beba38cb75b38","commitMessage":"@@@Switch from deprecated Manager.getContainer() to Manager.getContext()\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1357415 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-05 05:24:28","modifiedFileCount":"12","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2020-04-23 05:49:33","codes":[{"authorDate":"2020-04-23 05:49:33","commitOrder":8,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (Object o : listeners) {\n                if (!(o instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                        (HttpSessionListener) o;\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error\n                            (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2020-05-04 15:18:37","endLine":396,"groupId":"926","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/08/8a20409d7d8ce814d4e16725da862a3c659bd8.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (int i = 0; i < listeners.length; i++) {\n                if (!(listeners[i] instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                    (HttpSessionListener) listeners[i];\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error\n                        (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"M"},{"authorDate":"2020-04-23 05:49:33","commitOrder":8,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (Object o : listeners) {\n            if (!(o instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                    (HttpSessionAttributeListener) o;\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                            (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error\n                        (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n    }\n","date":"2020-05-04 15:18:37","endLine":1867,"groupId":"9290","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/08/8a20409d7d8ce814d4e16725da862a3c659bd8.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (int i = 0; i < listeners.length; i++) {\n            if (!(listeners[i] instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                (HttpSessionAttributeListener) listeners[i];\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                        (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error\n                    (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1815,"status":"M"}],"commitId":"af4ecdfe038f1b4bf3e8ce880385b6e095956912","commitMessage":"@@@Replace indexed for loops and iterator while with foreach\n","date":"2020-05-04 15:18:37","modifiedFileCount":"197","status":"M","submitter":"Lars Grefer"},{"authorTime":"2020-05-02 06:13:26","codes":[{"authorDate":"2020-04-23 05:49:33","commitOrder":9,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (Object o : listeners) {\n                if (!(o instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                        (HttpSessionListener) o;\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error\n                            (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2020-05-04 15:18:37","endLine":396,"groupId":"926","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/08/8a20409d7d8ce814d4e16725da862a3c659bd8.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (Object o : listeners) {\n                if (!(o instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener =\n                        (HttpSessionListener) o;\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\",\n                            listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\",\n                                listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error\n                            (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"N"},{"authorDate":"2020-05-02 06:13:26","commitOrder":9,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (Object o : listeners) {\n            if (!(o instanceof HttpSessionAttributeListener)) {\n                continue;\n            }\n            HttpSessionAttributeListener listener = (HttpSessionAttributeListener) o;\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\", listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent(getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\", listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\", listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error(sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n    }\n","date":"2020-05-04 15:19:05","endLine":1852,"groupId":"9290","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ac/e01d9e5ed678cd92e3787326b39e79d72b9c1f.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (Object o : listeners) {\n            if (!(o instanceof HttpSessionAttributeListener))\n                continue;\n            HttpSessionAttributeListener listener =\n                    (HttpSessionAttributeListener) o;\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\",\n                        listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent\n                            (getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                        listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\",\n                            listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error\n                        (sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1805,"status":"M"}],"commitId":"f3c9fdd40bdbc3dc22b512596954e2bc6d424d5a","commitMessage":"@@@Additional clean-up after enhanced for loop changes","date":"2020-05-04 15:19:05","modifiedFileCount":"44","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-05-26 18:09:29","codes":[{"authorDate":"2021-05-26 18:09:29","commitOrder":10,"curCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (Object o : listeners) {\n                if (!(o instanceof HttpSessionListener)) {\n                    continue;\n                }\n                HttpSessionListener listener = (HttpSessionListener) o;\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\", listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\", listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","date":"2021-05-26 18:09:29","endLine":395,"groupId":"10822","id":19,"instanceNumber":1,"isCurCommit":1,"methodName":"tellNew","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0c/418651d5d85775c3e60861969c6a3a3878679a.src","preCode":"    public void tellNew() {\n\n        \r\n        fireSessionEvent(Session.SESSION_CREATED_EVENT, null);\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationLifecycleListeners();\n        if (listeners != null && listeners.length > 0) {\n            HttpSessionEvent event =\n                new HttpSessionEvent(getSession());\n            for (Object o : listeners) {\n                if (!(o instanceof HttpSessionListener))\n                    continue;\n                HttpSessionListener listener = (HttpSessionListener) o;\n                try {\n                    context.fireContainerEvent(\"beforeSessionCreated\", listener);\n                    listener.sessionCreated(event);\n                    context.fireContainerEvent(\"afterSessionCreated\", listener);\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    try {\n                        context.fireContainerEvent(\"afterSessionCreated\", listener);\n                    } catch (Exception e) {\n                        \r\n                    }\n                    manager.getContext().getLogger().error (sm.getString(\"standardSession.sessionEvent\"), t);\n                }\n            }\n        }\n\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"},{"authorDate":"2021-05-26 18:09:29","commitOrder":10,"curCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) {\n            return;\n        }\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null) {\n            return;\n        }\n        for (Object o : listeners) {\n            if (!(o instanceof HttpSessionAttributeListener)) {\n                continue;\n            }\n            HttpSessionAttributeListener listener = (HttpSessionAttributeListener) o;\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\", listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent(getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\", listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\", listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error(sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n    }\n","date":"2021-05-26 18:09:29","endLine":1882,"groupId":"10822","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"removeAttributeInternal","params":"(Stringname@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0c/418651d5d85775c3e60861969c6a3a3878679a.src","preCode":"    protected void removeAttributeInternal(String name, boolean notify) {\n\n        \r\n        if (name == null) return;\n\n        \r\n        Object value = attributes.remove(name);\n\n        \r\n        if (!notify || (value == null)) {\n            return;\n        }\n\n        \r\n        HttpSessionBindingEvent event = null;\n        if (value instanceof HttpSessionBindingListener) {\n            event = new HttpSessionBindingEvent(getSession(), name, value);\n            ((HttpSessionBindingListener) value).valueUnbound(event);\n        }\n\n        \r\n        Context context = manager.getContext();\n        Object listeners[] = context.getApplicationEventListeners();\n        if (listeners == null)\n            return;\n        for (Object o : listeners) {\n            if (!(o instanceof HttpSessionAttributeListener)) {\n                continue;\n            }\n            HttpSessionAttributeListener listener = (HttpSessionAttributeListener) o;\n            try {\n                context.fireContainerEvent(\"beforeSessionAttributeRemoved\", listener);\n                if (event == null) {\n                    event = new HttpSessionBindingEvent(getSession(), name, value);\n                }\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterSessionAttributeRemoved\", listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                try {\n                    context.fireContainerEvent(\"afterSessionAttributeRemoved\", listener);\n                } catch (Exception e) {\n                    \r\n                }\n                manager.getContext().getLogger().error(sm.getString(\"standardSession.attributeEvent\"), t);\n            }\n        }\n    }\n","realPath":"java/org/apache/catalina/session/StandardSession.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":1832,"status":"M"}],"commitId":"6a667943c5da6b5d61ac6bec1d7c9de061e3217c","commitMessage":"@@@Code clean-up. Add braces for clarity.\n\nClean-up commit primarily to trigger CI build to test buildbot renaming","date":"2021-05-26 18:09:29","modifiedFileCount":"44","status":"M","submitter":"Mark Thomas"}]
