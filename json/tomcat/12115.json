[{"authorTime":"2019-10-05 04:23:42","codes":[{"authorDate":"2019-11-28 07:45:15","commitOrder":3,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (int i = 0; i < inf.length; i++) {\n            try {\n                mp = inf[i].getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-01-13 19:00:17","endLine":577,"groupId":"8294","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b2/65c50701b50403a5d52af3ce9e25c6f54b2064.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (int i = 0; i < inf.length; i++) {\n            try {\n                mp = inf[i].getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"B"},{"authorDate":"2019-10-05 04:23:42","commitOrder":3,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (int i = 0; i < inf.length; i++) {\n            try {\n                mp = inf[i].getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2019-10-05 04:23:42","endLine":460,"groupId":"8294","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c9/f1f2e285eef363bbd159f4513f3bb809e4a767.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (int i = 0; i < inf.length; i++) {\n            try {\n                mp = inf[i].getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"NB"}],"commitId":"fddd4fd9c0ca2e2441634c9df42cc80875e25234","commitMessage":"@@@Rename javax.el.* to jakarta.el.*\n","date":"2020-01-13 19:00:17","modifiedFileCount":"129","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-04-23 05:49:33","codes":[{"authorDate":"2020-04-23 05:49:33","commitOrder":4,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> aClass : inf) {\n            try {\n                mp = aClass.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-05-04 15:18:37","endLine":577,"groupId":"12457","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/35/2b716b596fddbcefed3b9f0281abe08109d9c4.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (int i = 0; i < inf.length; i++) {\n            try {\n                mp = inf[i].getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"M"},{"authorDate":"2020-04-23 05:49:33","commitOrder":4,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> aClass : inf) {\n            try {\n                mp = aClass.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-05-04 15:18:37","endLine":460,"groupId":"12457","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/8a/a81fffa2d93939bb1668b71ac6a5db9404cb88.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (int i = 0; i < inf.length; i++) {\n            try {\n                mp = inf[i].getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"M"}],"commitId":"af4ecdfe038f1b4bf3e8ce880385b6e095956912","commitMessage":"@@@Replace indexed for loops and iterator while with foreach\n","date":"2020-05-04 15:18:37","modifiedFileCount":"197","status":"M","submitter":"Lars Grefer"},{"authorTime":"2020-05-02 06:13:26","codes":[{"authorDate":"2020-05-02 06:13:26","commitOrder":5,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-05-04 15:19:05","endLine":577,"groupId":"2323","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d2/9fb20ba5b79427c49b70429bee38a69aee166b.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> aClass : inf) {\n            try {\n                mp = aClass.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"M"},{"authorDate":"2020-05-02 06:13:26","commitOrder":5,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-05-04 15:19:05","endLine":460,"groupId":"2323","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/40/1adb416b88d529fe3fba489ef1c3157081d8be.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] inf = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> aClass : inf) {\n            try {\n                mp = aClass.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"M"}],"commitId":"f3c9fdd40bdbc3dc22b512596954e2bc6d424d5a","commitMessage":"@@@Additional clean-up after enhanced for loop changes","date":"2020-05-04 15:19:05","modifiedFileCount":"44","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-05-02 06:13:26","codes":[{"authorDate":"2020-09-16 21:24:44","commitOrder":6,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-09-16 23:13:55","endLine":577,"groupId":"2323","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/30/51a7b521d4e304adbb3fa263745341c60422cd.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"M"},{"authorDate":"2020-05-02 06:13:26","commitOrder":6,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-05-04 15:19:05","endLine":460,"groupId":"2323","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/40/1adb416b88d529fe3fba489ef1c3157081d8be.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"N"}],"commitId":"2714aaee79573fb358b5a91c68ba4c664d2d4d85","commitMessage":"@@@Correct spelling\n\nBased on a PR provided by John Bampton\nInternal.  non-public API so changes are low risk\n","date":"2020-09-16 23:13:55","modifiedFileCount":"5","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-09-17 00:21:31","codes":[{"authorDate":"2020-09-16 21:24:44","commitOrder":7,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-09-16 23:13:55","endLine":577,"groupId":"2323","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/30/51a7b521d4e304adbb3fa263745341c60422cd.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"N"},{"authorDate":"2020-09-17 00:21:31","commitOrder":7,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-09-17 00:21:31","endLine":460,"groupId":"2323","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b8/565e8baf0d1d05083e6293198d5745bd3b4eab.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"M"}],"commitId":"af51f770ca2f24a0f8a6d176724458af7286d85c","commitMessage":"@@@Fix spelling in coyote.  el.  jasper and naming\n\nBased on a PR provided by John Bampton\ni18n keys.  local variables.  Javadoc and private methods and private\nclasses - changes are low risk\nThere is one change to a public class (o.a.el.util.JreCompat) but that\nis effectively an internal API so I think it is safe to make.","date":"2020-09-17 00:21:31","modifiedFileCount":"10","status":"M","submitter":"Mark Thomas"},{"authorTime":"2020-09-17 00:21:31","codes":[{"authorDate":"2021-07-28 19:08:10","commitOrder":8,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2021-07-28 19:08:10","endLine":579,"groupId":"2323","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3b/fd2674305aa4153f8cc4a4fee186812edb8919.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"M"},{"authorDate":"2020-09-17 00:21:31","commitOrder":8,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2020-09-17 00:21:31","endLine":460,"groupId":"2323","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b8/565e8baf0d1d05083e6293198d5745bd3b4eab.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"N"}],"commitId":"335bed06af17759de0fcb46235f257bbea301299","commitMessage":"@@@Remove JreCompat from EL API as it is no longer required.","date":"2021-07-28 19:08:10","modifiedFileCount":"4","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-07-28 19:12:26","codes":[{"authorDate":"2021-07-28 19:08:10","commitOrder":9,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2021-07-28 19:08:10","endLine":579,"groupId":"2323","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3b/fd2674305aa4153f8cc4a4fee186812edb8919.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"N"},{"authorDate":"2021-07-28 19:12:26","commitOrder":9,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2021-07-28 19:12:26","endLine":465,"groupId":"2323","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/70/e7e41056bd4fe12caf11e2c59c3921f9bd8146.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        JreCompat jreCompat = JreCompat.getInstance();\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (jreCompat.canAccess(base, m) || base != null && jreCompat.canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":431,"status":"M"}],"commitId":"0bfaf55bbe41242ee152c44ec992f71d58925027","commitMessage":"@@@Remove JreCompat from EL implementation as it is no longer required","date":"2021-07-28 19:12:26","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2021-07-28 19:12:26","codes":[{"authorDate":"2021-07-28 22:18:27","commitOrder":10,"curCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (canAccess(base, m) || base != null && canAccess(null, m)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2021-07-28 22:18:27","endLine":580,"groupId":"12115","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/88/0c1dba3421a1a0768e39c7fc024be620a284ce.src","preCode":"    static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/jakarta/el/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"M"},{"authorDate":"2021-07-28 19:12:26","commitOrder":10,"curCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2021-07-28 19:12:26","endLine":465,"groupId":"12115","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"getMethod","params":"(Class<?>type@Objectbase@Methodm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/70/e7e41056bd4fe12caf11e2c59c3921f9bd8146.src","preCode":"    private static Method getMethod(Class<?> type, Object base, Method m) {\n        \r\n        \r\n        if (m == null ||\n                (Modifier.isPublic(type.getModifiers()) &&\n                        (m.canAccess(base) || base != null && m.canAccess(null)))) {\n            return m;\n        }\n        Class<?>[] interfaces = type.getInterfaces();\n        Method mp = null;\n        for (Class<?> iface : interfaces) {\n            try {\n                mp = iface.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        Class<?> sup = type.getSuperclass();\n        if (sup != null) {\n            try {\n                mp = sup.getMethod(m.getName(), m.getParameterTypes());\n                mp = getMethod(mp.getDeclaringClass(), base, mp);\n                if (mp != null) {\n                    return mp;\n                }\n            } catch (NoSuchMethodException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"java/org/apache/el/util/ReflectionUtil.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":431,"status":"N"}],"commitId":"d26f48db6c18c786158514536b044bef4d05fa0a","commitMessage":"@@@Fix failing tests. JreCompat caught IAE for canAccess() so do the same","date":"2021-07-28 22:18:27","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"}]
