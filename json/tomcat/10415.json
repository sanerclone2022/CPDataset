[{"authorTime":"2011-03-01 19:12:22","codes":[{"authorDate":"2014-03-10 19:27:11","commitOrder":5,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2014-03-10 19:27:11","endLine":392,"groupId":"4779","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/98/046a2b87654268cf6feeb377f7d785abfa42c3.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"B"},{"authorDate":"2011-03-01 19:12:22","commitOrder":5,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n        \n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(\"EOF encountered during handshake.\");\n        }        \n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2011-03-01 19:12:22","endLine":283,"groupId":"4779","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f2/ee23113a964824cc7dd62e9684fa3053d92863.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n        \n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(\"EOF encountered during handshake.\");\n        }        \n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"NB"}],"commitId":"27ac1263bf25a6af9175afe772416e39b1f51f6a","commitMessage":"@@@Add experimental NIO2 connector. Based on code developed by Nabil Benothman.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1575905 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-10 19:27:11","modifiedFileCount":"1","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2014-04-04 21:26:11","codes":[{"authorDate":"2014-03-10 19:27:11","commitOrder":6,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2014-03-10 19:27:11","endLine":392,"groupId":"4779","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/98/046a2b87654268cf6feeb377f7d785abfa42c3.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"N"},{"authorDate":"2014-04-04 21:26:11","commitOrder":6,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2014-04-04 21:26:11","endLine":354,"groupId":"12459","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/42/f18032cebdb557f5fd1ed05b6126f8b34d7132.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(\"EOF encountered during handshake.\");\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"70c82a92c0d479d75a0404fbb5e6c313d1a4f0e8","commitMessage":"@@@Port i18n to the NIO1 connector.  for consistency.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1584662 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-04 21:26:11","modifiedFileCount":"1","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2015-01-15 17:21:17","codes":[{"authorDate":"2014-03-10 19:27:11","commitOrder":7,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2014-03-10 19:27:11","endLine":392,"groupId":"4779","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/98/046a2b87654268cf6feeb377f7d785abfa42c3.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"N"},{"authorDate":"2015-01-15 17:21:17","commitOrder":7,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2015-01-15 17:21:17","endLine":344,"groupId":"4779","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4c/1afaf32a3b7d7998099b027344df9e63a381e0.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"9718447a0342866373fec40498e960040d58b738","commitMessage":"@@@InputBuffer refactoring. All compiles but not yet tested.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1652003 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-15 17:21:17","modifiedFileCount":"9","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-01-15 17:21:17","codes":[{"authorDate":"2015-01-15 17:21:24","commitOrder":8,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2015-01-15 17:21:24","endLine":402,"groupId":"4779","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/69/1f6e7e932d8ce48a3aee673c3de79343962e0c.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"M"},{"authorDate":"2015-01-15 17:21:17","commitOrder":8,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2015-01-15 17:21:17","endLine":344,"groupId":"4779","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4c/1afaf32a3b7d7998099b027344df9e63a381e0.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"}],"commitId":"a9c95a37f94d2074800c326fcb85510e0062ce7c","commitMessage":"@@@Fix first set of issues found with NIO2 and new SocketBufferHandler\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1652004 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-15 17:21:24","modifiedFileCount":"7","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-01-15 17:21:17","codes":[{"authorDate":"2015-10-23 06:15:04","commitOrder":9,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        log.debug(\"Result [\" + result + \"]\");\n        return result;\n    }\n","date":"2015-10-23 06:15:04","endLine":503,"groupId":"4779","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/67/6335784fb0e29982e9131222e7e5ec1484f91e.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"M"},{"authorDate":"2015-01-15 17:21:17","commitOrder":9,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2015-01-15 17:21:17","endLine":344,"groupId":"4779","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4c/1afaf32a3b7d7998099b027344df9e63a381e0.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"}],"commitId":"dadc84c6539c0615e5cac57372f03121f4995e7d","commitMessage":"@@@Remove unused code\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1710107 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-10-23 06:15:04","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-01-15 17:21:17","codes":[{"authorDate":"2015-10-23 06:27:11","commitOrder":10,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2015-10-23 06:27:11","endLine":499,"groupId":"4779","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/03/74747656933ee9d14712d6000605b3d92b5a26.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        log.debug(\"Result [\" + result + \"]\");\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":470,"status":"M"},{"authorDate":"2015-01-15 17:21:17","commitOrder":10,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2015-01-15 17:21:17","endLine":344,"groupId":"4779","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4c/1afaf32a3b7d7998099b027344df9e63a381e0.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"}],"commitId":"4e5ab0b319a85f3087fa40aa570ecce4064f716f","commitMessage":"@@@Remove temporary debug statements from r1710107\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1710108 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-10-23 06:27:11","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-09-09 20:59:02","codes":[{"authorDate":"2016-09-09 20:59:02","commitOrder":11,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2016-09-09 20:59:02","endLine":510,"groupId":"14449","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0c/deb8f1b325c56dde9a27e9a90f61fc9baa672b.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"},{"authorDate":"2016-09-09 20:59:02","commitOrder":11,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2016-09-09 20:59:02","endLine":464,"groupId":"14449","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/22/bd1ffed9210d129953fcd09c58a5677261c87e.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            bufHandler.configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, bufHandler.getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"M"}],"commitId":"233433aadd82d9a7afd42347e54212a4d1d10c64","commitMessage":"@@@Access the socket buffer handler via getBufHandler method for consistency with the rest of the code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1760005 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-09-09 20:59:02","modifiedFileCount":"2","status":"M","submitter":"Violeta Georgieva Georgieva"},{"authorTime":"2016-09-09 20:59:02","codes":[{"authorDate":"2018-01-05 17:36:40","commitOrder":12,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2018-01-05 17:36:40","endLine":529,"groupId":"14449","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3e/ff0fe9b8ba8564b76383819b2e61146c5d6719.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"M"},{"authorDate":"2016-09-09 20:59:02","commitOrder":12,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","date":"2016-09-09 20:59:02","endLine":464,"groupId":"14449","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/22/bd1ffed9210d129953fcd09c58a5677261c87e.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"N"}],"commitId":"c4b4ded24966ae0d164f5220e0e6e6c34a16a2da","commitMessage":"@@@Following a report on the user list.  the \"buffer full\" check and clear seems misplaced for NIO2.  and should happen before a read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1820272 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-01-05 17:36:40","modifiedFileCount":"1","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2019-05-23 04:50:22","codes":[{"authorDate":"2018-01-05 17:36:40","commitOrder":13,"curCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2018-01-05 17:36:40","endLine":529,"groupId":"10415","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3e/ff0fe9b8ba8564b76383819b2e61146c5d6719.src","preCode":"    protected SSLEngineResult handshakeUnwrap() throws IOException {\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNio2Channel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"N"},{"authorDate":"2019-05-23 04:50:22","commitOrder":13,"curCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if (doread)  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) {\n                throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n            }\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if (result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        } while (cont);\n        return result;\n    }\n","date":"2019-05-23 04:50:22","endLine":514,"groupId":"10415","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"handshakeUnwrap","params":"(booleandoread)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/6f/32cf373764b845e3182723d064766e4abd4c76.src","preCode":"    protected SSLEngineResult handshakeUnwrap(boolean doread) throws IOException {\n\n        if (netInBuffer.position() == netInBuffer.limit()) {\n            \r\n            netInBuffer.clear();\n        }\n        if ( doread )  {\n            \r\n            int read = sc.read(netInBuffer);\n            if (read == -1) throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"));\n        }\n        SSLEngineResult result;\n        boolean cont = false;\n        \r\n        do {\n            \r\n            netInBuffer.flip();\n            \r\n            getBufHandler().configureReadBufferForWrite();\n            result = sslEngine.unwrap(netInBuffer, getBufHandler().getReadBuffer());\n            \r\n            netInBuffer.compact();\n            \r\n            handshakeStatus = result.getHandshakeStatus();\n            if ( result.getStatus() == SSLEngineResult.Status.OK &&\n                 result.getHandshakeStatus() == HandshakeStatus.NEED_TASK ) {\n                \r\n                handshakeStatus = tasks();\n            }\n            \r\n            cont = result.getStatus() == SSLEngineResult.Status.OK &&\n                   handshakeStatus == HandshakeStatus.NEED_UNWRAP;\n        }while ( cont );\n        return result;\n    }\n","realPath":"java/org/apache/tomcat/util/net/SecureNioChannel.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"M"}],"commitId":"cbe9c72d78ddf450d19e7ffe846cdc328c337b0b","commitMessage":"@@@Code style\n\nThere's a lot of code in common in SecureNioXChannel.  so cleanup before\nlooking at it.","date":"2019-05-23 04:50:22","modifiedFileCount":"2","status":"M","submitter":"remm"}]
