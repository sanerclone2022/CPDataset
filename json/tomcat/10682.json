[{"authorTime":"2014-11-11 00:47:08","codes":[{"authorDate":"2014-11-11 00:47:40","commitOrder":2,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (fireListenerLock) {\n            fireListener = true;\n        }\n        socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2014-11-11 00:47:40","endLine":108,"groupId":"11763","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9d/20b253ce1a8efc4e4ce1c5d929e5824f2459f6.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (fireListenerLock) {\n            fireListener = true;\n        }\n        socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2014-11-11 00:47:08","commitOrder":2,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2014-11-11 00:47:08","endLine":93,"groupId":"14644","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/d0834c3364d442e358e01f07b9c95f29b3b017.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"NB"}],"commitId":"e80a02d8728698d9a4ee063491d27147f726ac20","commitMessage":"@@@No longer need implementation specific UpgradeServletOutputStreams.\nCollapse the unnecessary class hierarchy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1637938 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-11-11 00:47:40","modifiedFileCount":"8","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2014-11-11 00:47:08","codes":[{"authorDate":"2015-02-05 07:18:45","commitOrder":3,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        writeDispatchRequired = true;\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-02-05 07:18:45","endLine":114,"groupId":"7823","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/8c/62611978e0537676ba55c6f9cd5bb488f23d9f.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (fireListenerLock) {\n            fireListener = true;\n        }\n        socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2014-11-11 00:47:08","commitOrder":3,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2014-11-11 00:47:08","endLine":93,"groupId":"14644","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/d0834c3364d442e358e01f07b9c95f29b3b017.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"e6de91b0518ac44c8779e76644b639529e8433d8","commitMessage":"@@@Re-work multiple-write registration fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1657442 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-05 07:18:45","modifiedFileCount":"2","status":"M","submitter":"Mark Thomas"},{"authorTime":"2014-11-11 00:47:08","codes":[{"authorDate":"2015-02-18 20:14:24","commitOrder":4,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-02-18 20:14:24","endLine":115,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/34/775b733b478718875fec9df0ea20a31ab281c3.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        writeDispatchRequired = true;\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2014-11-11 00:47:08","commitOrder":4,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2014-11-11 00:47:08","endLine":93,"groupId":"14644","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/d0834c3364d442e358e01f07b9c95f29b3b017.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"783c8f0aef0b414345e4428255d69c6b6851e405","commitMessage":"@@@registered is guarded by registeredLock so there is no need for it to be volatile.\nSimplify the process of triggering the first call to onWritePossible\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1660609 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-18 20:14:24","modifiedFileCount":"2","status":"M","submitter":"Mark Thomas"},{"authorTime":"2014-11-11 00:47:08","codes":[{"authorDate":"2015-02-18 20:53:44","commitOrder":5,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            if (ContainerThreadMarker.isContainerThread()) {\n                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-02-18 20:53:44","endLine":120,"groupId":"3154","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/22/ea38917fec98214cf371919361000a70a6ab00.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2014-11-11 00:47:08","commitOrder":5,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2014-11-11 00:47:08","endLine":93,"groupId":"14644","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a8/d0834c3364d442e358e01f07b9c95f29b3b017.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"0f1d1ae9efef67332e96b93cbc7e9fc45336a16c","commitMessage":"@@@Handle the unlikely case of setting the write listener from a non-container thread.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1660618 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-18 20:53:44","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-02-23 02:49:22","codes":[{"authorDate":"2015-02-23 02:49:22","commitOrder":6,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            if (ContainerThreadMarker.isContainerThread()) {\n                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-02-23 02:49:22","endLine":126,"groupId":"4382","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f4/e1e85331244fc1758edd9d3f3c1d468151efcf.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        \r\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            if (ContainerThreadMarker.isContainerThread()) {\n                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2015-02-23 02:49:22","commitOrder":6,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2015-02-23 02:49:22","endLine":105,"groupId":"14065","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/86/5682f448765865e2fe3f6f2bfa4178882edfac.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"fb5e3370f6e4b5370b1c78bf58644d5cfde21964","commitMessage":"@@@isCloseRequired -> Closed\nAlign behaviour of methods with closed state\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1661514 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-23 02:49:22","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-02-23 02:49:27","codes":[{"authorDate":"2015-02-23 02:49:27","commitOrder":7,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            socketWrapper.registerWriteInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-02-23 02:49:27","endLine":127,"groupId":"7433","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/63/8f2df8da39d1cb45b3292e0b594b2c881d456b.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            if (ContainerThreadMarker.isContainerThread()) {\n                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2015-02-23 02:49:27","commitOrder":7,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2015-02-23 02:49:27","endLine":114,"groupId":"9120","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bd/3deb97785baab32d0c5a01944e24b924039bb4.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"282f6026e44f7a658001cf859eb1f6377e74b97a","commitMessage":"@@@The container is responsible for the first calls to onDataAvailable()\nand onWritePossible(). Trigger them from the setting of the appropriate\nlistener.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1661515 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-23 02:49:27","modifiedFileCount":"2","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-02-23 02:49:27","codes":[{"authorDate":"2015-02-27 23:02:07","commitOrder":8,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-02-27 23:02:07","endLine":126,"groupId":"4382","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/be/4c1a71a55bee2f79326b456157d365862298da.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            socketWrapper.registerWriteInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2015-02-23 02:49:27","commitOrder":8,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2015-02-23 02:49:27","endLine":114,"groupId":"9120","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bd/3deb97785baab32d0c5a01944e24b924039bb4.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"eff8241fba71491997827e08e3ad8203ee5cf53e","commitMessage":"@@@No need to force write processing onto a separate thread\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1662717 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-27 23:02:07","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-10-20 17:00:08","codes":[{"authorDate":"2015-10-20 17:00:08","commitOrder":9,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","date":"2015-10-20 17:00:08","endLine":129,"groupId":"4382","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/0e/90784c636f6a9b1e0d405157df73746e89627d.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2015-10-20 17:00:08","commitOrder":9,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","date":"2015-10-20 17:00:08","endLine":116,"groupId":"257","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/db/057a9a61bb3d058446ea3cca764ce9fbcff162.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"c648adce743d573ef49eeeb4a94b4fb1013d3aa2","commitMessage":"@@@Move the additional dispatches required from the SocketWrapper to the\nProcessor\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1709543 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-10-20 17:00:08","modifiedFileCount":"11","status":"M","submitter":"Mark Thomas"},{"authorTime":"2015-11-06 01:29:20","codes":[{"authorDate":"2015-11-06 01:29:20","commitOrder":10,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n    }\n","date":"2015-11-06 01:29:20","endLine":127,"groupId":"4382","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/5e/6f558b0e24bdb7a0d90c5b5acf4b93dfc52e2a.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2015-11-06 01:29:20","commitOrder":10,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        \r\n        ready = null;\n    }\n","date":"2015-11-06 01:29:20","endLine":114,"groupId":"257","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/27/6b658686e336fbc73b63980e0891bd3cdc2d9e.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        this.applicationLoader = Thread.currentThread().getContextClassLoader();\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"b28cbbaa1c9b1919b3f2aa2931eac98fc6d310c8","commitMessage":"@@@- Add (another.  sorry) classloader keyed static map to retrieve the InstanceManager from anywhere.  as a last resort.\n- Pass along the application classloader during upgrade.  using a token object.\n- Don't use the InstanceManager for internal upgrade handlers (no naming.  etc).  this would optimize websockets and HTTP/2 upgrade.\n- Set a proper context classloader environment for upgrade handler init/destroy and use the InstanceManager.  except for internal handlers where they are responsible for it.\n- Support the InstanceManager for the websockets client endpoints.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1712826 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-06 01:29:20","modifiedFileCount":"16","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2017-08-12 00:01:41","codes":[{"authorDate":"2017-08-12 00:01:41","commitOrder":11,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        this.listener = listener;\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n    }\n","date":"2017-08-12 00:01:41","endLine":127,"groupId":"14065","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3d/e8096c34ef4c46928a44631ce999d3cc831b75.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n        this.listener = listener;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2017-08-12 00:01:41","commitOrder":11,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        \r\n        ready = null;\n    }\n","date":"2017-08-12 00:01:41","endLine":115,"groupId":"14065","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/df/5c615d352f939fdaa54d8d88d4262cb60dd0a9.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        this.listener = listener;\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"09129f99c0b0ff743c49d71ed6b3f507be6f9027","commitMessage":"@@@Fix possible race condition when using an upgraded connection and setting the IO listeners.  it now uses the same processing as non upgraded connections.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1804813 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2017-08-12 00:01:41","modifiedFileCount":"2","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2019-02-22 00:37:20","codes":[{"authorDate":"2017-08-12 00:01:41","commitOrder":12,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        this.listener = listener;\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n    }\n","date":"2017-08-12 00:01:41","endLine":127,"groupId":"14065","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3d/e8096c34ef4c46928a44631ce999d3cc831b75.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        this.listener = listener;\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2019-02-22 00:37:20","commitOrder":12,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest(true);\n        }\n\n        \r\n        ready = null;\n    }\n","date":"2019-02-22 00:37:20","endLine":115,"groupId":"14065","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/95/6038ee60a2efd9f0aa4e6b1ce402e93b3610b9.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"33161af9713e5a49880476049c63c218e9878852","commitMessage":"@@@Refactor to redo fix for 63182. The root cause is that the pending flag is released once processing start.  and concurrent unsynced access from non container threads can cause awaitBytes to happen concurrently.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1854066 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2019-02-22 00:37:20","modifiedFileCount":"11","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2019-02-22 03:31:22","codes":[{"authorDate":"2017-08-12 00:01:41","commitOrder":13,"curCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        this.listener = listener;\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n    }\n","date":"2017-08-12 00:01:41","endLine":127,"groupId":"10682","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"setWriteListener","params":"(WriteListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/3d/e8096c34ef4c46928a44631ce999d3cc831b75.src","preCode":"    public final void setWriteListener(WriteListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sos.writeListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sos.write.closed\"));\n        }\n        this.listener = listener;\n        \r\n        synchronized (registeredLock) {\n            registered = true;\n            \r\n            if (ContainerThreadMarker.isContainerThread()) {\n                processor.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n            } else {\n                socketWrapper.registerWriteInterest();\n            }\n        }\n\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2019-02-22 03:31:22","commitOrder":13,"curCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest();\n        }\n\n        \r\n        ready = null;\n    }\n","date":"2019-02-22 03:31:22","endLine":115,"groupId":"10682","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"setReadListener","params":"(ReadListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1c/1ddb6c03839b0d5104f29f72ad7dca9cbb4232.src","preCode":"    public final void setReadListener(ReadListener listener) {\n        if (listener == null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.null\"));\n        }\n        if (this.listener != null) {\n            throw new IllegalArgumentException(\n                    sm.getString(\"upgrade.sis.readListener.set\"));\n        }\n        if (closed) {\n            throw new IllegalStateException(sm.getString(\"upgrade.sis.read.closed\"));\n        }\n\n        this.listener = listener;\n\n        \r\n        if (ContainerThreadMarker.isContainerThread()) {\n            processor.addDispatch(DispatchType.NON_BLOCKING_READ);\n        } else {\n            socketWrapper.registerReadInterest(true);\n        }\n\n        \r\n        ready = null;\n    }\n","realPath":"java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"019491b4f35d4d3844bc8e7d9cad75287020aadb","commitMessage":"@@@Revert after CI failure.  try something else.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1854084 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2019-02-22 03:31:22","modifiedFileCount":"10","status":"M","submitter":"Remy Maucherat"}]
