[{"authorTime":"2013-11-05 08:07:51","codes":[{"authorDate":"2013-11-05 08:07:51","commitOrder":1,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","date":"2013-11-05 08:07:51","endLine":180,"groupId":"5065","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/5e/5e42344c7dec2cf386fa0ae7ef581fc293f23f.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/AbstractArchiveResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2013-11-05 08:07:51","commitOrder":1,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","date":"2013-11-05 08:07:51","endLine":172,"groupId":"8524","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/99/914c9bca235b1323e1ff9156a04cf41333044d.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/FileResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"9136cee3c558215dd553e8ca5b29bd13f5d3bd19","commitMessage":"@@@Make certificates and manifests available\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1538837 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-05 08:07:51","modifiedFileCount":"13","status":"B","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-11-05 08:07:51","codes":[{"authorDate":"2015-02-06 17:25:46","commitOrder":2,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            if (jisw == null) {\n                \r\n                return null;\n            }\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n            \r\n            return null;\n        }\n\n        return result;\n    }\n","date":"2015-02-06 17:25:46","endLine":199,"groupId":"5065","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/33/65982550082cd12e8af63dbec5f51b16aa830c.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/AbstractArchiveResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2013-11-05 08:07:51","commitOrder":2,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","date":"2013-11-05 08:07:51","endLine":172,"groupId":"8524","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/99/914c9bca235b1323e1ff9156a04cf41333044d.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/FileResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"}],"commitId":"8b431868b06095777dbd360d9af21e27b6832d92","commitMessage":"@@@Related to BZ57528: improve the algorithm to handle an exception or null return value in getContent and avoid NPE or returning corrupted data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1657764 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-06 17:25:46","modifiedFileCount":"1","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2016-02-20 01:09:35","codes":[{"authorDate":"2015-02-06 17:25:46","commitOrder":3,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            if (jisw == null) {\n                \r\n                return null;\n            }\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n            \r\n            return null;\n        }\n\n        return result;\n    }\n","date":"2015-02-06 17:25:46","endLine":199,"groupId":"5065","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/33/65982550082cd12e8af63dbec5f51b16aa830c.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            if (jisw == null) {\n                \r\n                return null;\n            }\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n            \r\n            return null;\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/AbstractArchiveResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"N"},{"authorDate":"2016-02-20 01:09:35","commitOrder":3,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        if (needConvert) {\n            \r\n            \r\n            \r\n            \r\n            String str = new String(result);\n            try {\n                result = str.getBytes(StandardCharsets.UTF_8);\n            } catch (Exception e) {\n                result = null;\n            }\n        }\n        return result;\n    }\n","date":"2016-02-20 01:09:35","endLine":223,"groupId":"8524","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b1/7f3579af63ffbc65ad534853ab8cdec2a74045.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/FileResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"7bf4b9e78eea417fae3f9390616964baa4341f64","commitMessage":"@@@Refactoring to reduce the impact on the memory footprint of the resource cache within the web application class loader.\nMain changes:\n- WebResources caches everything apart from classes\n- WebResources is responsible for EBCDIC conversion for properties files\n- The class loader cache now only caches the last modified time of any resource loaded through the class loader and loaded classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1731275 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-02-20 01:09:35","modifiedFileCount":"4","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-10-13 22:00:20","codes":[{"authorDate":"2016-10-13 22:00:20","commitOrder":4,"curCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        if (len < 0) {\n            \r\n            return null;\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            if (jisw == null) {\n                \r\n                return null;\n            }\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n            \r\n            return null;\n        }\n\n        return result;\n    }\n","date":"2016-10-13 22:00:20","endLine":207,"groupId":"10929","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fd/7011e5f196d0d3cc3a7be344e6a286ab3750db.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (JarInputStreamWrapper jisw = getJarInputStreamWrapper()) {\n            if (jisw == null) {\n                \r\n                return null;\n            }\n            while (pos < size) {\n                int n = jisw.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n            \r\n            certificates = jisw.getCertificates();\n            readCerts = true;\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n            \r\n            return null;\n        }\n\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/AbstractArchiveResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2016-10-13 22:00:20","commitOrder":4,"curCode":"    public final byte[] getContent() {\n        \r\n        long len = getContentLengthInternal(false);\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        if (len < 0) {\n            \r\n            return null;\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n            return null;\n        }\n\n        if (needConvert) {\n            \r\n            \r\n            \r\n            \r\n            String str = new String(result);\n            try {\n                result = str.getBytes(StandardCharsets.UTF_8);\n            } catch (Exception e) {\n                result = null;\n            }\n        }\n        return result;\n    }\n","date":"2016-10-13 22:00:20","endLine":239,"groupId":"10929","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/03/697d2eed63b00f09f7c6164e1629669f353f2e.src","preCode":"    public final byte[] getContent() {\n        long len = getContentLength();\n\n        if (len > Integer.MAX_VALUE) {\n            \r\n            throw new ArrayIndexOutOfBoundsException(sm.getString(\n                    \"abstractResource.getContentTooLarge\", getWebappPath(),\n                    Long.valueOf(len)));\n        }\n\n        int size = (int) len;\n        byte[] result = new byte[size];\n\n        int pos = 0;\n        try (InputStream is = new FileInputStream(resource)) {\n            while (pos < size) {\n                int n = is.read(result, pos, size - pos);\n                if (n < 0) {\n                    break;\n                }\n                pos += n;\n            }\n        } catch (IOException ioe) {\n            if (getLog().isDebugEnabled()) {\n                getLog().debug(sm.getString(\"abstractResource.getContentFail\",\n                        getWebappPath()), ioe);\n            }\n        }\n\n        if (needConvert) {\n            \r\n            \r\n            \r\n            \r\n            String str = new String(result);\n            try {\n                result = str.getBytes(StandardCharsets.UTF_8);\n            } catch (Exception e) {\n                result = null;\n            }\n        }\n        return result;\n    }\n","realPath":"java/org/apache/catalina/webresources/FileResource.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"f358412c4743534c374733348afc3259a16e69e1","commitMessage":"@@@When calling getResourceAsStream() on a directory.  ensure that null is\nreturned. (markt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1764682 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-10-13 22:00:20","modifiedFileCount":"4","status":"M","submitter":"Mark Thomas"}]
