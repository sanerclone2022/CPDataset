[{"authorTime":"2014-05-17 04:05:08","codes":[{"authorDate":"2014-05-17 04:05:08","commitOrder":1,"curCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(5000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n\n        Thread.sleep(1000L);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        Thread.sleep(2000L);\n        Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        asyncThread.join();\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2014-05-17 04:05:08","endLine":89,"groupId":"5277","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ef/54424dc509b885396442189414f7a15bdf37a5.src","preCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(5000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n\n        Thread.sleep(1000L);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        Thread.sleep(2000L);\n        Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        asyncThread.join();\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2014-05-17 04:05:08","commitOrder":1,"curCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(4);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n\n        Thread.sleep(1000L);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        Thread.sleep(3000L);\n        Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        Thread.sleep(3000L);\n        Assert.assertTrue(stuckingServlet.wasInterrupted);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        asyncThread.join();\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2014-05-17 04:05:08","endLine":136,"groupId":"5276","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInterruption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/ef/54424dc509b885396442189414f7a15bdf37a5.src","preCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(4);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n\n        Thread.sleep(1000L);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        Thread.sleep(3000L);\n        Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        Thread.sleep(3000L);\n        Assert.assertTrue(stuckingServlet.wasInterrupted);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        asyncThread.join();\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"dc55eb0f0456c7914617be27e9fe3e273e216abb","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56526\nImproved StuckThreadDetectionValve to allow to interrupt stuck threads.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1595331 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-05-17 04:05:08","modifiedFileCount":"1","status":"B","submitter":"Sylvain Laurent"},{"authorTime":"2014-05-21 04:19:01","codes":[{"authorDate":"2014-05-21 04:19:01","commitOrder":2,"curCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(6000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(500L);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n            Thread.sleep(3000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join();\n        }\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2014-05-21 04:19:01","endLine":92,"groupId":"5277","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/10/4966e079463c79db819c61ba088c9455113cb5.src","preCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(5000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n\n        Thread.sleep(1000L);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        Thread.sleep(2000L);\n        Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        asyncThread.join();\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2014-05-21 04:19:01","commitOrder":2,"curCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(5);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(4000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n            Thread.sleep(4000L);\n            Assert.assertTrue(stuckingServlet.wasInterrupted);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join();\n        }\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2014-05-21 04:19:01","endLine":137,"groupId":"15907","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInterruption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/10/4966e079463c79db819c61ba088c9455113cb5.src","preCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(4);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n\n        Thread.sleep(1000L);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        Thread.sleep(3000L);\n        Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        Thread.sleep(3000L);\n        Assert.assertTrue(stuckingServlet.wasInterrupted);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        asyncThread.join();\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"5ddc58a604e2141f767b45cd72d03960f6f5a601","commitMessage":"@@@fixed timing and enclosed thread.join in a finally to avoid stopping the webapp before the request is finished (in case of assertion failure)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1596390 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-05-21 04:19:01","modifiedFileCount":"1","status":"M","submitter":"Sylvain Laurent"},{"authorTime":"2014-05-23 05:24:06","codes":[{"authorDate":"2014-05-23 05:24:06","commitOrder":3,"curCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(8000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(500L);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n            Thread.sleep(5000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join(20000);\n            \r\n            Assert.assertFalse(asyncThread.isAlive());\n        }\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2014-05-23 05:24:06","endLine":94,"groupId":"5277","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/2c/b3a66a6ba6b7407be96ed79949b7cfd22a6683.src","preCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(6000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(500L);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n            Thread.sleep(3000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join();\n        }\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2014-05-23 05:24:06","commitOrder":3,"curCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(5);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(4000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        } finally {\n            asyncThread.join(20000);\n            \r\n            Assert.assertFalse(asyncThread.isAlive());\n        }\n        Assert.assertTrue(stuckingServlet.wasInterrupted);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2014-05-23 05:24:06","endLine":140,"groupId":"15907","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInterruption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/2c/b3a66a6ba6b7407be96ed79949b7cfd22a6683.src","preCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(5);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(4000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n            Thread.sleep(4000L);\n            Assert.assertTrue(stuckingServlet.wasInterrupted);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join();\n        }\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"93be55dff943831dcef6899fda183f0c9075e4df","commitMessage":"@@@hopefully fixed timing issue in TestStuckThreadDetectionValve when the test is run on ASF buildbot...\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1596971 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-05-23 05:24:06","modifiedFileCount":"1","status":"M","submitter":"Sylvain Laurent"},{"authorTime":"2018-05-31 22:11:27","codes":[{"authorDate":"2018-05-31 22:11:27","commitOrder":4,"curCode":"    public void testDetection() throws Exception {\n        \r\n        StickingServlet stickingServlet = new StickingServlet(8000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stickingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(500L);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n            Thread.sleep(5000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join(20000);\n            \r\n            Assert.assertFalse(asyncThread.isAlive());\n        }\n        Assert.assertFalse(stickingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2018-05-31 22:11:27","endLine":94,"groupId":"102026","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/50/b2f784ddb19751341e6383012606b357b1cf7b.src","preCode":"    public void testDetection() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(8000L);\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(500L);\n            Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n            Thread.sleep(5000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n        } finally {\n            asyncThread.join(20000);\n            \r\n            Assert.assertFalse(asyncThread.isAlive());\n        }\n        Assert.assertFalse(stuckingServlet.wasInterrupted);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-05-31 22:11:27","commitOrder":4,"curCode":"    public void testInterruption() throws Exception {\n        \r\n        StickingServlet stickingServlet = new StickingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stickingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(5);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(4000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        } finally {\n            asyncThread.join(20000);\n            \r\n            Assert.assertFalse(asyncThread.isAlive());\n        }\n        Assert.assertTrue(stickingServlet.wasInterrupted);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","date":"2018-05-31 22:11:27","endLine":140,"groupId":"102026","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testInterruption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/50/b2f784ddb19751341e6383012606b357b1cf7b.src","preCode":"    public void testInterruption() throws Exception {\n        \r\n        StuckingServlet stuckingServlet = new StuckingServlet(\n                TimeUnit.SECONDS.toMillis(20L));\n        Wrapper servlet = Tomcat.addServlet(context, \"myservlet\",\n                stuckingServlet);\n        servlet.addMapping(\"/myservlet\");\n\n        StuckThreadDetectionValve valve = new StuckThreadDetectionValve();\n        valve.setThreshold(2);\n        valve.setInterruptThreadThreshold(5);\n        context.addValve(valve);\n        context.setBackgroundProcessorDelay(1);\n        tomcat.start();\n\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n\n        final ByteChunk result = new ByteChunk();\n        Thread asyncThread = new Thread() {\n            @Override\n            public void run() {\n                try {\n                    getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",\n                            result, null);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        };\n        asyncThread.start();\n        try {\n            Thread.sleep(4000L);\n            Assert.assertEquals(1, valve.getStuckThreadIds().length);\n\n        } finally {\n            asyncThread.join(20000);\n            \r\n            Assert.assertFalse(asyncThread.isAlive());\n        }\n        Assert.assertTrue(stuckingServlet.wasInterrupted);\n        Assert.assertEquals(0, valve.getStuckThreadIds().length);\n        Assert.assertTrue(result.toString().startsWith(\"OK\"));\n    }\n","realPath":"test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"c6ab61c1a282ca8d260e6fd65f18d5cf2bb9bb8c","commitMessage":"@@@Better name for test servlet\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1832619 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-05-31 22:11:27","modifiedFileCount":"1","status":"M","submitter":"Mark Thomas"}]
