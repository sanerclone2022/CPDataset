[{"authorTime":"2007-04-17 07:30:55","codes":[{"authorDate":"2006-07-20 20:50:34","commitOrder":2,"curCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n        \n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2006-07-20 20:50:34","endLine":212,"groupId":"4085","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/99/175f9ca25dfd666e618dedc5e4c92513be7f1a.src","preCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n        \n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/jasper/tagplugins/jstl/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"NB"},{"authorDate":"2007-04-17 07:30:55","commitOrder":2,"curCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2007-04-17 07:30:55","endLine":234,"groupId":"4085","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/39/df89ea07805a2653895c69909db20dea1d8e93.src","preCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/catalina/manager/JspHelper.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"}],"commitId":"a46cd1e7f95ae74233a6c1d3357c860b64c1f091","commitMessage":"@@@- Add session browser capabilities in the manager. Let me know if it creates problems (I checked XSS to some extent to. \n  but please double check if you can).\n- Submitted by C?drik Lime.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@529444 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-04-17 07:30:55","modifiedFileCount":"1","status":"M","submitter":"Remy Maucherat"},{"authorTime":"2009-11-03 02:32:07","codes":[{"authorDate":"2006-07-20 20:50:34","commitOrder":3,"curCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n        \n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2006-07-20 20:50:34","endLine":212,"groupId":"4085","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/99/175f9ca25dfd666e618dedc5e4c92513be7f1a.src","preCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n        \n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/jasper/tagplugins/jstl/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"},{"authorDate":"2009-11-03 02:32:07","commitOrder":3,"curCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2009-11-03 02:32:07","endLine":205,"groupId":"4085","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bd/02bb2df6460918a70a48205ce82bedddb62522.src","preCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/catalina/manager/JspHelper.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"8d82cdf025e62962af93bf6d7a8fc470413341b7","commitMessage":"@@@StringBuffer -> StringBuilder for o.a.c.manager\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@832013 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-11-03 02:32:07","modifiedFileCount":"6","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2009-11-03 02:32:07","codes":[{"authorDate":"2009-11-03 02:45:17","commitOrder":4,"curCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n        \n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2009-11-03 02:45:17","endLine":215,"groupId":"4085","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/1e/4e287a75a2caf0b5cb2982d11702fa47f6d8fe.src","preCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuffer escapedBuffer = null;\n        \n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuffer(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/jasper/tagplugins/jstl/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2009-11-03 02:32:07","commitOrder":4,"curCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2009-11-03 02:32:07","endLine":205,"groupId":"4085","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bd/02bb2df6460918a70a48205ce82bedddb62522.src","preCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/catalina/manager/JspHelper.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"N"}],"commitId":"ece6db03fe1d776019ba302b8723642be8330099","commitMessage":"@@@StringBuffer -> StringBuilder for o.a.jasper\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@832036 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-11-03 02:45:17","modifiedFileCount":"27","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2009-11-03 02:32:07","codes":[{"authorDate":"2012-11-17 07:56:12","commitOrder":5,"curCode":"    public static String escapeXml(char[] arrayBuffer, int length) {\n        int start = 0;\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return null;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2012-11-17 07:56:12","endLine":224,"groupId":"10448","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"escapeXml","params":"(char[]arrayBuffer@intlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/cc/ecfd812a2c4377413e84e49bd6fde0b779d924.src","preCode":"    public static String escapeXml(String buffer) {\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/jasper/tagplugins/jstl/Util.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"},{"authorDate":"2009-11-03 02:32:07","commitOrder":5,"curCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","date":"2009-11-03 02:32:07","endLine":205,"groupId":"10448","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"escapeXml","params":"(Stringbuffer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bd/02bb2df6460918a70a48205ce82bedddb62522.src","preCode":"    public static String escapeXml(String buffer) {\n    \tif (buffer == null) {\n\t\t\treturn \"\";\n\t\t}\n        int start = 0;\n        int length = buffer.length();\n        char[] arrayBuffer = buffer.toCharArray();\n        StringBuilder escapedBuffer = null;\n\n        for (int i = 0; i < length; i++) {\n            char c = arrayBuffer[i];\n            if (c <= HIGHEST_SPECIAL) {\n                char[] escaped = specialCharactersRepresentation[c];\n                if (escaped != null) {\n                    \r\n                    if (start == 0) {\n                        escapedBuffer = new StringBuilder(length + 5);\n                    }\n                    \r\n                    if (start < i) {\n                        escapedBuffer.append(arrayBuffer,start,i-start);\n                    }\n                    start = i + 1;\n                    \r\n                    escapedBuffer.append(escaped);\n                }\n            }\n        }\n        \r\n        if (start == 0) {\n            return buffer;\n        }\n        \r\n        if (start < length) {\n            escapedBuffer.append(arrayBuffer,start,length-start);\n        }\n        return escapedBuffer.toString();\n    }\n","realPath":"java/org/apache/catalina/manager/JspHelper.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"N"}],"commitId":"7c4a8415465c63c87655b429c3a278282c12f85c","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54144\nAdd required behaviour for Reader objects when used with c:out\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1410632 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-17 07:56:12","modifiedFileCount":"3","status":"M","submitter":"Mark Emlyn David Thomas"}]
