[{"authorTime":"2009-10-18 03:27:12","codes":[{"authorDate":"2009-10-18 03:21:01","commitOrder":10,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n        \n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","date":"2009-10-18 03:21:01","endLine":226,"groupId":"9251","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/93/568aeddb873ef665a5a2d0e91c55674e36a332.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n        \n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"NB"},{"authorDate":"2009-10-18 03:27:12","commitOrder":10,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","date":"2009-10-18 03:27:12","endLine":173,"groupId":"7039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4a/eb0d8075a0861c4c3e596d4d1a39e0bd6e7006.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"97fea6ac1a522b8c40dbf2a2824146ef34784621","commitMessage":"@@@Part 2 of CSRF protection for the host manager. Use POST and require valid nonce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@826295 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-18 03:27:12","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2009-10-18 03:27:12","codes":[{"authorDate":"2010-02-13 01:51:06","commitOrder":11,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n        \n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks();\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","date":"2010-02-13 01:51:06","endLine":230,"groupId":"9251","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/93/de53d816b18e248be51dd0544d9f70fbeae633.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n        \n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2009-10-18 03:27:12","commitOrder":11,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","date":"2009-10-18 03:27:12","endLine":173,"groupId":"7039","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4a/eb0d8075a0861c4c3e596d4d1a39e0bd6e7006.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"N"}],"commitId":"13f53fbe1990fb7699d6e02a68951dd543d6d39b","commitMessage":"@@@Add a find leaks option - with a suitable warning to the manager app (html & text)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@909528 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-13 01:51:06","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2009-10-18 03:27:12","codes":[{"authorDate":"2010-06-24 17:57:02","commitOrder":12,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks();\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","date":"2010-06-24 17:57:02","endLine":208,"groupId":"9251","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e7/2651d6cbfdff3e49c94be18282ec9bf8b2822c.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n        \n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks();\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2009-10-18 03:27:12","commitOrder":12,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","date":"2009-10-18 03:27:12","endLine":173,"groupId":"7039","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/4a/eb0d8075a0861c4c3e596d4d1a39e0bd6e7006.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"N"}],"commitId":"a0159a34201e21ebc60ed6acffe7343fe26a7b65","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49476\nCSRF protection was preventing access to session expiration features\nAlso:\n- Switch Manager app to generic CSRF protection\n- Add support for multiple nonces to CSRF filter\n- Improve 403 page\n- Don't open JSP pages in session expiration in a new window - makes CSRF prevention a real pain\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@957478 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-24 17:57:02","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-06-25 15:47:31","codes":[{"authorDate":"2010-06-24 17:57:02","commitOrder":13,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks();\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","date":"2010-06-24 17:57:02","endLine":208,"groupId":"9251","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e7/2651d6cbfdff3e49c94be18282ec9bf8b2822c.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks();\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"N"},{"authorDate":"2010-06-25 15:47:31","commitOrder":13,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","date":"2010-06-25 15:47:31","endLine":147,"groupId":"7039","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d2/09d791994ed3f1d8ade7a4c87222879e6d9567.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n        String requestNonce = request.getParameter(NONCE_REQUEST);\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        \r\n        HttpSession session = request.getSession();\n        String sessionNonce = (String) session.getAttribute(NONCE_SESSION);\n        if (sessionNonce == null) {\n            message = sm.getString(\"htmlHostManagerServlet.noNonce\", command);\n            \r\n            command = null;\n        } else {\n            if (!sessionNonce.equals(requestNonce)) {\n                \r\n                message =\n                    sm.getString(\"htmlHostManagerServlet.nonceMismatch\", command);\n                \r\n                command = null;\n            }\n        }\n \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"7f6a10d8a6b98ac17beebb05b2bf6e246404c352","commitMessage":"@@@Switch the Host Manager app to the generic CSRF protection\nDon't allow starting of hosts that are started\nDon't allow stopping of hosts that are stopped\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@957828 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-25 15:47:31","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-06-25 15:47:31","codes":[{"authorDate":"2010-10-17 03:31:37","commitOrder":14,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(path, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2010-10-17 03:31:37","endLine":219,"groupId":"9251","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f4/91451176438313b3d670a83af9bf4ec270a986.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request);\n        } else if (command.equals(\"/start\")) {\n            message = start(path);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks();\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2010-06-25 15:47:31","commitOrder":14,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","date":"2010-06-25 15:47:31","endLine":147,"groupId":"7039","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/d2/09d791994ed3f1d8ade7a4c87222879e6d9567.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"N"}],"commitId":"73578675b8ded44bd98cbc5ad9a3a596029889f3","commitMessage":"@@@Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49426\nMessages displayed to the user in the Manager (text and HTML) should be based on the Locale of the user.  not the server\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1023361 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-10-17 03:31:37","modifiedFileCount":"3","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-10-17 03:54:44","codes":[{"authorDate":"2010-10-17 03:31:37","commitOrder":15,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(path, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2010-10-17 03:31:37","endLine":219,"groupId":"9251","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f4/91451176438313b3d670a83af9bf4ec270a986.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(path, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"N"},{"authorDate":"2010-10-17 03:54:44","commitOrder":15,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2010-10-17 03:54:44","endLine":152,"groupId":"7039","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/16/238e2b75576d96f4915283fe3a52e33d7fa766.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name);\n        } else if (command.equals(\"/start\")) {\n            message = start(name);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"cbd5869bdc178705a058ba7b4a2b5b6b040ab8db","commitMessage":"@@@Messages displayed to the user in the Host Manager (text and HTML) should be based on the Locale of the user.  not the server\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1023366 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-10-17 03:54:44","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2010-10-17 03:54:44","codes":[{"authorDate":"2010-11-19 20:55:27","commitOrder":16,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\")); \n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2010-11-19 20:55:27","endLine":232,"groupId":"8040","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/65/d523d33ddd4e5ae24ddf522695db162d2ce2b3.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployPath, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(path, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(path, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(path, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(path, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(path, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"},{"authorDate":"2010-10-17 03:54:44","commitOrder":16,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2010-10-17 03:54:44","endLine":152,"groupId":"7039","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/16/238e2b75576d96f4915283fe3a52e33d7fa766.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n \n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n        \n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"N"}],"commitId":"291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c","commitMessage":"@@@Changes to Manager and HTML Manager to support parallel deployment\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1036828 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-11-19 20:55:27","modifiedFileCount":"2","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2013-08-15 22:25:30","codes":[{"authorDate":"2013-08-15 22:25:30","commitOrder":17,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2013-08-15 22:25:30","endLine":237,"groupId":"8040","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/77ac5761f7700778e9ec4183ef9670fa2a3afc.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2013-08-15 22:25:30","commitOrder":17,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2013-08-15 22:25:30","endLine":154,"groupId":"7039","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/f3/37df98b36bc4ac0912e69772e33ed1b406bc8a.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = getStringManager(request);\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"80e61cdeb8924723b218d28636312bd879b7a04b","commitMessage":"@@@Refactor to reduce code duplication\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1514291 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-15 22:25:30","modifiedFileCount":"6","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2016-02-23 04:19:15","codes":[{"authorDate":"2013-08-15 22:25:30","commitOrder":18,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2013-08-15 22:25:30","endLine":237,"groupId":"8040","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/fb/77ac5761f7700778e9ec4183ef9670fa2a3afc.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"N"},{"authorDate":"2016-02-23 04:19:15","commitOrder":18,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else if (command.equals(\"/persist\")) {\n            message = persist(smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2016-02-23 04:19:15","endLine":155,"groupId":"7039","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c3/56a92c175671c384be28097f5bdd9345dba7b0.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"83529482d842ddd9ac2d8718b664dea438c45e7c","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=48674\nImplement an option within the Host Manager web pplication to persist the current configuration.\nBased on a patch by Coty Sutherland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1731734 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-02-23 04:19:15","modifiedFileCount":"2","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-02-23 04:19:15","codes":[{"authorDate":"2017-12-14 21:41:03","commitOrder":19,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String tlsHostName = request.getParameter(\"tlsHostName\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else if (command.equals(\"/sslReload\")) {\n            message = sslReload(tlsHostName, smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2017-12-14 21:41:03","endLine":232,"groupId":"8040","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/48/3d9d85e8d1af54f78e784ff497a0fc1ee4835b.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2016-02-23 04:19:15","commitOrder":19,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else if (command.equals(\"/persist\")) {\n            message = persist(smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2016-02-23 04:19:15","endLine":155,"groupId":"7039","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c3/56a92c175671c384be28097f5bdd9345dba7b0.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else if (command.equals(\"/persist\")) {\n            message = persist(smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"N"}],"commitId":"0f8e4ddac4efa2dc30956a5a3b9294e59ad570cd","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61565\nAdd TLS config reload to Manager app\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1818127 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2017-12-14 21:41:03","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"},{"authorTime":"2016-02-23 04:19:15","codes":[{"authorDate":"2018-03-01 00:12:11","commitOrder":20,"curCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n\n        String deployPath = request.getParameter(\"deployPath\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String deployConfig = request.getParameter(\"deployConfig\");\n        ContextName deployCn = null;\n        if (deployPath != null && deployPath.length() > 0) {\n            deployCn = new ContextName(deployPath, request.getParameter(\"deployVersion\"));\n        } else if (deployConfig != null && deployConfig.length() > 0) {\n            deployCn = ContextName.extractFromPath(deployConfig);\n        } else if (deployWar != null && deployWar.length() > 0) {\n            deployCn = ContextName.extractFromPath(deployWar);\n        }\n\n        String tlsHostName = request.getParameter(\"tlsHostName\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else if (command.equals(\"/sslReload\")) {\n            message = sslReload(tlsHostName, smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2018-03-01 00:12:11","endLine":237,"groupId":"10903","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/12/adb653c67d18fa0d93084ccf3a1325b636222f.src","preCode":"    public void doPost(HttpServletRequest request,\n                      HttpServletResponse response)\n        throws IOException, ServletException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        \r\n        \r\n        String command = request.getPathInfo();\n\n        String path = request.getParameter(\"path\");\n        ContextName cn = null;\n        if (path != null) {\n            cn = new ContextName(path, request.getParameter(\"version\"));\n        }\n        String deployPath = request.getParameter(\"deployPath\");\n        ContextName deployCn = null;\n        if (deployPath != null) {\n            deployCn = new ContextName(deployPath,\n                    request.getParameter(\"deployVersion\"));\n        }\n        String deployConfig = request.getParameter(\"deployConfig\");\n        String deployWar = request.getParameter(\"deployWar\");\n        String tlsHostName = request.getParameter(\"tlsHostName\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        if (command == null || command.length() == 0) {\n            \r\n            \r\n        } else if (command.equals(\"/upload\")) {\n            message = upload(request, smClient);\n        } else if (command.equals(\"/deploy\")) {\n            message = deployInternal(deployConfig, deployCn, deployWar,\n                    smClient);\n        } else if (command.equals(\"/reload\")) {\n            message = reload(cn, smClient);\n        } else if (command.equals(\"/undeploy\")) {\n            message = undeploy(cn, smClient);\n        } else if (command.equals(\"/expire\")) {\n            message = expireSessions(cn, request, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(cn, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(cn, smClient);\n        } else if (command.equals(\"/findleaks\")) {\n            message = findleaks(smClient);\n        } else if (command.equals(\"/sslReload\")) {\n            message = sslReload(tlsHostName, smClient);\n        } else {\n            \r\n            doGet(request,response);\n            return;\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/HTMLManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2016-02-23 04:19:15","commitOrder":20,"curCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else if (command.equals(\"/persist\")) {\n            message = persist(smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","date":"2016-02-23 04:19:15","endLine":155,"groupId":"10903","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"doPost","params":"(HttpServletRequestrequest@HttpServletResponseresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/c3/56a92c175671c384be28097f5bdd9345dba7b0.src","preCode":"    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n\n        \r\n        String command = request.getPathInfo();\n\n        String name = request.getParameter(\"name\");\n\n        \r\n        response.setContentType(\"text/html; charset=\" + Constants.CHARSET);\n\n        String message = \"\";\n\n        \r\n        if (command == null) {\n            \r\n        } else if (command.equals(\"/add\")) {\n            message = add(request, name, smClient);\n        } else if (command.equals(\"/remove\")) {\n            message = remove(name, smClient);\n        } else if (command.equals(\"/start\")) {\n            message = start(name, smClient);\n        } else if (command.equals(\"/stop\")) {\n            message = stop(name, smClient);\n        } else if (command.equals(\"/persist\")) {\n            message = persist(smClient);\n        } else {\n            \r\n            doGet(request, response);\n        }\n\n        list(request, response, message, smClient);\n    }\n","realPath":"java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"N"}],"commitId":"4f8bf034fc3c14086253afe765a93387925b02b2","commitMessage":"@@@Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=47467\nWhen deploying a web application via the manager application and a path is not explicitly specified.  derive it from the provided deployment descriptor or.  if that is not present.  the WAR or DIR.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1825580 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2018-03-01 00:12:11","modifiedFileCount":"3","status":"M","submitter":"Mark Thomas"}]
