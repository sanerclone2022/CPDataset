[{"authorTime":"2011-03-31 05:40:59","codes":[{"authorDate":"2011-03-31 05:40:59","commitOrder":1,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-03-31 05:40:59","endLine":65,"groupId":"2095","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b2/96eeefa5f0f72bbd6e63833961bca4bbd6e078.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/FairnessTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2011-03-31 05:40:59","commitOrder":1,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-03-31 05:40:59","endLine":89,"groupId":"2095","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/33/9e1aa49bf9e4ca86a5c5eb8fb2a4cd64ca73d7.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/ConnectCountTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"9b48dfd98aecd2b5d2c69dff3472f0a4409f6ffa","commitMessage":"@@@Add in ability to build with Maven\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1087090 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-03-31 05:40:59","modifiedFileCount":"0","status":"B","submitter":"Filip Hanik"},{"authorTime":"2011-09-08 22:37:44","codes":[{"authorDate":"2011-03-31 05:40:59","commitOrder":2,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-03-31 05:40:59","endLine":65,"groupId":"2095","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b2/96eeefa5f0f72bbd6e63833961bca4bbd6e078.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/FairnessTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2011-09-08 22:37:44","commitOrder":2,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-09-08 22:37:44","endLine":89,"groupId":"2095","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/9d/df8c2330d6f186bfc201d43861ad7c2a1bcc3f.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/ConnectCountTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"3e501cdc05b8ffb4d5ad6c399765dd07cfce551b","commitMessage":"@@@Remove unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1166717 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-08 22:37:44","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-09-08 22:54:52","codes":[{"authorDate":"2011-03-31 05:40:59","commitOrder":3,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-03-31 05:40:59","endLine":65,"groupId":"2095","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/b2/96eeefa5f0f72bbd6e63833961bca4bbd6e078.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/FairnessTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2011-09-08 22:54:52","commitOrder":3,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-09-08 22:54:52","endLine":88,"groupId":"2095","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bc/f4ad82f8965050cb0c2f2d8571adc45c6b355c.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/ConnectCountTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"9e7cb47a882a7436ec1be81d7f98118933f23ab7","commitMessage":"@@@Fix Eclipse warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1166721 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-08 22:54:52","modifiedFileCount":"1","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2011-09-08 22:54:52","codes":[{"authorDate":"2011-09-08 23:14:43","commitOrder":4,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-09-08 23:14:43","endLine":64,"groupId":"2095","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/a5/fe9fafbb81275fd6ab2bf8f1f67984fa406a28.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;\n        float avgfetch = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+(((float)t.maxwait)/1000000f)+\"ms. :Max close time:\"+(((float)t.cmax)/1000000f)+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+(((float)maxwait)/1000000f)+\"ms. Min wait:\"+(((float)minwait)/1000000f)+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/FairnessTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2011-09-08 22:54:52","commitOrder":4,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","date":"2011-09-08 22:54:52","endLine":88,"groupId":"2095","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/bc/f4ad82f8965050cb0c2f2d8571adc45c6b355c.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n        \n        \n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/ConnectCountTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"}],"commitId":"9b93c31f38fc89bc455738b8bb20e7f69eb09f6b","commitMessage":"@@@Fix remaining Eclipse warnings in jdbc-pool unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1166735 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-08 23:14:43","modifiedFileCount":"7","status":"M","submitter":"Mark Emlyn David Thomas"},{"authorTime":"2021-05-27 06:41:15","codes":[{"authorDate":"2021-05-27 06:41:15","commitOrder":5,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread) {\n              System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n            }\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n\n\n    }\n","date":"2021-05-27 06:41:15","endLine":60,"groupId":"1022","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/e3/3310442beef1fcbb66dc43063319fd5ae10133.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (FairnessTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n\n\n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/FairnessTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2021-05-27 06:41:15","commitOrder":5,"curCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread) {\n              System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n            }\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n    }\n","date":"2021-05-27 06:41:15","endLine":84,"groupId":"1022","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"printThreadResults","params":"(TestThread[]threads@Stringname@intactive@intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-tomcat-10-0.7/blobInfo/CC_OUT/blobs/48/059aa54ded3dde9e3d9fa59c98b6d4c6ad2317.src","preCode":"    protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {\n        long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;\n        long maxwait = 0, minwait = Long.MAX_VALUE, totalwait = 0;\n        for (int i=0; i<threads.length; i++) {\n            TestThread t = threads[i];\n            totalfetch += t.nroffetch;\n            totalwait  += t.totalwait;\n            maxwait = Math.max(maxwait,t.maxwait);\n            minwait = Math.min(minwait, t.minwait);\n            minfetch = Math.min(minfetch, t.nroffetch);\n            maxfetch = Math.max(maxfetch, t.nroffetch);\n            if (ConnectCountTest.this.printthread)\n                System.out.println(t.getName()+\" : Nr-of-fetch:\"+t.nroffetch+ \" Max fetch Time:\"+t.maxwait/1000000f+\"ms. :Max close time:\"+t.cmax/1000000f+\"ms.\");\n        }\n        System.out.println(\"[\"+name+\"] Max fetch:\"+(maxfetch)+\" Min fetch:\"+(minfetch)+\" Average fetch:\"+\n                           (((float)totalfetch))/(float)threads.length);\n        System.out.println(\"[\"+name+\"] Max wait:\"+maxwait/1000000f+\"ms. Min wait:\"+minwait/1000000f+\"ms. Average wait:\"+(((((float)totalwait))/(float)totalfetch)/1000000f)+\" ms.\");\n        System.out.println(\"[\"+name+\"] Max active:\"+active+\" Expected Active:\"+expected);\n    }\n","realPath":"modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/ConnectCountTest.java","repoName":"tomcat","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"bf09aa74650461b433ae6b52418e0726e6a32417","commitMessage":"@@@Code clean-up. Add braces for clarity. Enable check now all are fixed.\n\nHopefully final test of the CI.","date":"2021-05-27 06:41:15","modifiedFileCount":"65","status":"M","submitter":"Mark Thomas"}]
