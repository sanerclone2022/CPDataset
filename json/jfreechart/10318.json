[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setBaseLinesVisible(!r1.getBaseLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseLinesVisible(r1.getBaseLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setLinesVisible(false);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setLinesVisible(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesVisible(!r1.getBaseShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesVisible(r1.getBaseShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setShapesVisible(false);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setShapesVisible(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        boolean flag = true;\n        Boolean existing = r1.getShapesFilled();\n        if (existing != null) {\n            flag = !existing.booleanValue();\n        }\n        r1.setShapesFilled(flag);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setShapesFilled(flag);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setShapesFilled(false);\n        r2.setShapesFilled(false);\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 15:40:32","endLine":283,"groupId":"3349","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkIndependence","params":"(LineAndShapeRendererr1@LineAndShapeRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/19/d3d33cdb92e4a31b976f1bca9ae58e82b2de8f.src","preCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setBaseLinesVisible(!r1.getBaseLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseLinesVisible(r1.getBaseLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setLinesVisible(false);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setLinesVisible(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesVisible(!r1.getBaseShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesVisible(r1.getBaseShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setShapesVisible(false);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setShapesVisible(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        boolean flag = true;\n        Boolean existing = r1.getShapesFilled();\n        if (existing != null) {\n            flag = !existing.booleanValue();\n        }\n        r1.setShapesFilled(flag);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setShapesFilled(flag);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setShapesFilled(false);\n        r2.setShapesFilled(false);\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 15:40:32","endLine":180,"groupId":"3349","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkIndependence","params":"(ScatterRendererr1@ScatterRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f2/0625c58af7b7381eb5bbe75e4c5c1856e124c1.src","preCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/ScatterRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-03-11 02:23:23","commitOrder":2,"curCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setBaseLinesVisible(!r1.getBaseLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseLinesVisible(r1.getBaseLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesVisible(!r1.getBaseShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesVisible(r1.getBaseShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2017-03-11 02:23:23","endLine":234,"groupId":"3349","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkIndependence","params":"(LineAndShapeRendererr1@LineAndShapeRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e3/5790c73a2d7f3873e3b04bd105393e8de1a3b2.src","preCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setBaseLinesVisible(!r1.getBaseLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseLinesVisible(r1.getBaseLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setLinesVisible(false);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setLinesVisible(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesVisible(!r1.getBaseShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesVisible(r1.getBaseShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setShapesVisible(false);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setShapesVisible(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        boolean flag = true;\n        Boolean existing = r1.getShapesFilled();\n        if (existing != null) {\n            flag = !existing.booleanValue();\n        }\n        r1.setShapesFilled(flag);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setShapesFilled(flag);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setShapesFilled(false);\n        r2.setShapesFilled(false);\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 15:40:32","endLine":180,"groupId":"3349","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkIndependence","params":"(ScatterRendererr1@ScatterRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f2/0625c58af7b7381eb5bbe75e4c5c1856e124c1.src","preCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/ScatterRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"N"}],"commitId":"1be317c64d9b5b295ca9b519f80f81779b418868","commitMessage":"@@@Remove deprecated code","date":"2017-03-11 02:23:23","modifiedFileCount":"24","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-03-15 12:51:52","commitOrder":3,"curCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setDefaultLinesVisible(!r1.getDefaultLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultLinesVisible(r1.getDefaultLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesVisible(!r1.getDefaultShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesVisible(r1.getDefaultShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesFilled(false);\n        r2.setDefaultShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2017-03-15 12:51:52","endLine":234,"groupId":"3349","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkIndependence","params":"(LineAndShapeRendererr1@LineAndShapeRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/2b510d4b12f312984225ccde9aa12abf00b2ce.src","preCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setBaseLinesVisible(!r1.getBaseLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseLinesVisible(r1.getBaseLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesVisible(!r1.getBaseShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesVisible(r1.getBaseShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":3,"curCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 15:40:32","endLine":180,"groupId":"3349","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"checkIndependence","params":"(ScatterRendererr1@ScatterRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f2/0625c58af7b7381eb5bbe75e4c5c1856e124c1.src","preCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/ScatterRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"N"}],"commitId":"defa1876cae51be09178a7e8ec238d407c5643f3","commitMessage":"@@@Rename methods in LineAndShapeRenderer","date":"2017-03-15 12:51:52","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-11 13:27:14","codes":[{"authorDate":"2017-03-15 12:51:52","commitOrder":4,"curCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setDefaultLinesVisible(!r1.getDefaultLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultLinesVisible(r1.getDefaultLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesVisible(!r1.getDefaultShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesVisible(r1.getDefaultShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesFilled(false);\n        r2.setDefaultShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2017-03-15 12:51:52","endLine":234,"groupId":"3349","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"checkIndependence","params":"(LineAndShapeRendererr1@LineAndShapeRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/2b510d4b12f312984225ccde9aa12abf00b2ce.src","preCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n                                      LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setDefaultLinesVisible(!r1.getDefaultLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultLinesVisible(r1.getDefaultLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesVisible(!r1.getDefaultShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesVisible(r1.getDefaultShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesFilled(false);\n        r2.setDefaultShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"N"},{"authorDate":"2020-03-11 13:27:14","commitOrder":4,"curCode":"    private boolean checkIndependence(ScatterRenderer r1, ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        return r1.equals(r2);\n\n    }\n","date":"2020-03-11 13:27:14","endLine":168,"groupId":"3349","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"checkIndependence","params":"(ScatterRendererr1@ScatterRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a4/03bb46dc1b54e00466eadc315aed0ad2c1230c.src","preCode":"    private boolean checkIndependence(ScatterRenderer r1,\n            ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/ScatterRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"fe3eebf3134f4f38068ebedd038f276c0c9d7f7e","commitMessage":"@@@Fix NetBeans warning","date":"2020-03-11 13:27:14","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-11 13:27:14","codes":[{"authorDate":"2020-03-11 13:27:50","commitOrder":5,"curCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n            LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setDefaultLinesVisible(!r1.getDefaultLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultLinesVisible(r1.getDefaultLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesVisible(!r1.getDefaultShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesVisible(r1.getDefaultShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesFilled(false);\n        r2.setDefaultShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesFilled(false);\n        return r1.equals(r2);\n    }\n","date":"2020-03-11 13:27:50","endLine":220,"groupId":"10318","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"checkIndependence","params":"(LineAndShapeRendererr1@LineAndShapeRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/fc/e153b803a1ffc92c085cc118b9b7c154902b8b.src","preCode":"    private boolean checkIndependence(LineAndShapeRenderer r1,\n            LineAndShapeRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setDefaultLinesVisible(!r1.getDefaultLinesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultLinesVisible(r1.getDefaultLinesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesLinesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesLinesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesVisible(!r1.getDefaultShapesVisible());\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesVisible(r1.getDefaultShapesVisible());\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesVisible(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesVisible(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setSeriesShapesFilled(0, false);\n        r2.setSeriesShapesFilled(0, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(0, false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setDefaultShapesFilled(false);\n        r2.setDefaultShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setDefaultShapesFilled(false);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2020-03-11 13:27:14","commitOrder":5,"curCode":"    private boolean checkIndependence(ScatterRenderer r1, ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        return r1.equals(r2);\n\n    }\n","date":"2020-03-11 13:27:14","endLine":168,"groupId":"10318","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"checkIndependence","params":"(ScatterRendererr1@ScatterRendererr2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a4/03bb46dc1b54e00466eadc315aed0ad2c1230c.src","preCode":"    private boolean checkIndependence(ScatterRenderer r1, ScatterRenderer r2) {\n\n        \r\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        \r\n        r1.setSeriesShapesFilled(1, true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setSeriesShapesFilled(1, true);\n        if (!r1.equals(r2)) {\n            return false;\n        }\n\n        r1.setBaseShapesFilled(false);\n        r2.setBaseShapesFilled(true);\n        if (r1.equals(r2)) {\n            return false;\n        }\n        r2.setBaseShapesFilled(false);\n        return r1.equals(r2);\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/ScatterRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"}],"commitId":"43cab32bc700bfe7e1cc4599d00cb8166a43cc97","commitMessage":"@@@Fix NetBeans warning","date":"2020-03-11 13:27:50","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"}]
