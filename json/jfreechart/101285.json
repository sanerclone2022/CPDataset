[{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testFindRangeBounds2() {\n        YIntervalSeriesCollection dataset = new YIntervalSeriesCollection();\n        Range r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries s1 = new YIntervalSeries(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries s2 = new YIntervalSeries(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n\n        \r\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n    }\n","date":"2017-05-06 16:37:24","endLine":337,"groupId":"3149","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindRangeBounds2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testFindRangeBounds2() {\n        YIntervalSeriesCollection dataset = new YIntervalSeriesCollection();\n        Range r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries s1 = new YIntervalSeries(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries s2 = new YIntervalSeries(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n\n        \r\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"B"},{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testIterateRangeBounds4() {\n        YIntervalSeriesCollection dataset = new YIntervalSeriesCollection();\n        Range r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries s1 = new YIntervalSeries(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries s2 = new YIntervalSeries(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n    }\n","date":"2017-05-06 16:37:24","endLine":507,"groupId":"3149","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIterateRangeBounds4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testIterateRangeBounds4() {\n        YIntervalSeriesCollection dataset = new YIntervalSeriesCollection();\n        Range r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries s1 = new YIntervalSeries(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries s2 = new YIntervalSeries(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"B"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 23:07:02","codes":[{"authorDate":"2020-03-22 23:07:02","commitOrder":2,"curCode":"    public void testFindRangeBounds2() {\n        YIntervalSeriesCollection<String> dataset = new YIntervalSeriesCollection<>();\n        Range r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries<String> s2 = new YIntervalSeries<>(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n\n        \r\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n    }\n","date":"2020-03-22 23:07:02","endLine":322,"groupId":"101285","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindRangeBounds2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/e2d9321cd120a5249d47fee098bc7804298dc0.src","preCode":"    public void testFindRangeBounds2() {\n        YIntervalSeriesCollection dataset = new YIntervalSeriesCollection();\n        Range r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries s1 = new YIntervalSeries(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries s2 = new YIntervalSeries(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.findRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n\n        \r\n        r = DatasetUtils.findRangeBounds(dataset, false);\n        assertEquals(2.0, r.getLowerBound(), EPSILON);\n        assertEquals(2.0, r.getUpperBound(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"},{"authorDate":"2020-03-22 23:07:02","commitOrder":2,"curCode":"    public void testIterateRangeBounds4() {\n        YIntervalSeriesCollection<String> dataset = new YIntervalSeriesCollection<>();\n        Range r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries<String> s2 = new YIntervalSeries<>(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n    }\n","date":"2020-03-22 23:07:02","endLine":492,"groupId":"101285","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIterateRangeBounds4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/e2d9321cd120a5249d47fee098bc7804298dc0.src","preCode":"    public void testIterateRangeBounds4() {\n        YIntervalSeriesCollection dataset = new YIntervalSeriesCollection();\n        Range r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n        YIntervalSeries s1 = new YIntervalSeries(\"S1\");\n        dataset.addSeries(s1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertNull(r);\n\n        \r\n        s1.add(1.0, 2.0, 1.5, 2.5);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.5, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(2.0, 2.0, 1.4, 2.1);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        YIntervalSeries s2 = new YIntervalSeries(\"S2\");\n        dataset.addSeries(s2);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.5, r.getUpperBound(), EPSILON);\n\n        \r\n        s2.add(1.0, 2.0, 1.9, 2.6);\n        r = DatasetUtils.iterateRangeBounds(dataset);\n        assertEquals(1.4, r.getLowerBound(), EPSILON);\n        assertEquals(2.6, r.getUpperBound(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"M"}],"commitId":"65e1b052b3694b30d707b5b7ed88e1f73c68b003","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 23:07:02","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"}]
