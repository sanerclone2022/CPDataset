[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<Integer, XYDataset>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\n                this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":5603,"groupId":"538","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<Integer, XYDataset>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\n                this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":5536,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","date":"2016-02-19 16:24:22","endLine":5041,"groupId":"3699","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4977,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-03-08 01:39:11","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<Integer, XYDataset>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = (Map) ObjectUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = (Map) ObjectUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = (Map) ObjectUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = (Map) ObjectUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = (Point2D) ObjectUtils.clone(\n                this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","date":"2017-03-08 01:39:11","endLine":5600,"groupId":"767","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/cb/8424b3f22b7386fd24c0cc7f43cfb1bd4d161d.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<Integer, XYDataset>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\n                this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":5533,"status":"M"},{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","date":"2017-03-08 01:39:11","endLine":5048,"groupId":"3699","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/945677da3c26a1f99b00d8efa0bf0af0c69d3c.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4984,"status":"M"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-08 01:39:11","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":3,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","date":"2020-01-09 05:47:42","endLine":5347,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<Integer, XYDataset>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = (Map) ObjectUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = (Map) ObjectUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = (Map) ObjectUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = (Map) ObjectUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = (Point2D) ObjectUtils.clone(\n                this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":5283,"status":"M"},{"authorDate":"2017-03-08 01:39:11","commitOrder":3,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","date":"2017-03-08 01:39:11","endLine":5048,"groupId":"3699","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/945677da3c26a1f99b00d8efa0bf0af0c69d3c.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4984,"status":"N"}],"commitId":"3b75f318b1df03ef72738ae8c2e35fc779720691","commitMessage":"@@@Fix compiler warnings.\n","date":"2020-01-09 05:47:42","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-11 05:34:08","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":4,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","date":"2020-01-09 05:47:42","endLine":5347,"groupId":"0","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":5283,"status":"N"},{"authorDate":"2020-03-11 05:34:08","commitOrder":4,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","date":"2020-03-11 05:34:08","endLine":4974,"groupId":"845","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b5/db83183f766eb10bb6e4820b321ab321d5929c.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4910,"status":"M"}],"commitId":"7997d52f1ab449ddd2adf390f6ba94d848c2e3a5","commitMessage":"@@@Fix warnings.","date":"2020-03-11 05:34:08","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 18:04:41","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":5,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","date":"2020-01-09 05:47:42","endLine":5347,"groupId":"0","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":5283,"status":"N"},{"authorDate":"2020-03-29 18:04:41","commitOrder":5,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<R, C> clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<>(this.datasets);\n        for (CategoryDataset<R, C> dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = CloneUtils.cloneList(this.annotations);\n        clone.foregroundDomainMarkers = CloneUtils.cloneMapValues(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.cloneMapValues(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.cloneMapValues(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.cloneMapValues(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems = CloneUtils.clone(this.fixedLegendItems);\n        }\n        return clone;\n    }\n","date":"2020-03-29 18:04:41","endLine":4947,"groupId":"935","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        CategoryPlot clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<>(this.datasets);\n        for (CategoryDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        clone.foregroundDomainMarkers = cloneMarkerMap(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = cloneMarkerMap(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = cloneMarkerMap(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = cloneMarkerMap(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        return clone;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4883,"status":"M"}],"commitId":"e23eafd99eb9c5627dd100f927caa3ba7bbb036e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 18:04:41","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 18:04:41","codes":[{"authorDate":"2020-03-29 19:31:49","commitOrder":6,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        @SuppressWarnings(\"unchecked\")\n        XYPlot<S> clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset<S> dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = CloneUtils.cloneList(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","date":"2020-03-29 19:31:49","endLine":5335,"groupId":"101475","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/8139ed21abb7d847625ed3ad80b577a5121ec4.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        XYPlot clone = (XYPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (ValueAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.domainAxisLocations = new HashMap<>(this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(this.rangeAxisLocations);\n\n        \r\n        clone.datasets = new HashMap<>(this.datasets);\n        for (XYDataset dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (XYItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        clone.foregroundDomainMarkers = CloneUtils.clone(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.clone(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.clone(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.clone(\n                this.backgroundRangeMarkers);\n        clone.annotations = (List) ObjectUtils.deepClone(this.annotations);\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems\n                    = (LegendItemCollection) this.fixedLegendItems.clone();\n        }\n        clone.quadrantOrigin = CloneUtils.clone(this.quadrantOrigin);\n        clone.quadrantPaint = this.quadrantPaint.clone();\n        return clone;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":5270,"status":"M"},{"authorDate":"2020-03-29 18:04:41","commitOrder":6,"curCode":"    public Object clone() throws CloneNotSupportedException {\n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<R, C> clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<>(this.datasets);\n        for (CategoryDataset<R, C> dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = CloneUtils.cloneList(this.annotations);\n        clone.foregroundDomainMarkers = CloneUtils.cloneMapValues(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.cloneMapValues(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.cloneMapValues(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.cloneMapValues(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems = CloneUtils.clone(this.fixedLegendItems);\n        }\n        return clone;\n    }\n","date":"2020-03-29 18:04:41","endLine":4947,"groupId":"101475","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"clone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    public Object clone() throws CloneNotSupportedException {\n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<R, C> clone = (CategoryPlot) super.clone();\n        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);\n        for (CategoryAxis axis : clone.domainAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);\n        for (ValueAxis axis : clone.rangeAxes.values()) {\n            if (axis != null) {\n                axis.setPlot(clone);\n                axis.addChangeListener(clone);\n            }\n        }\n\n        \r\n        clone.domainAxisLocations = new HashMap<>(\n                this.domainAxisLocations);\n        clone.rangeAxisLocations = new HashMap<>(\n                this.rangeAxisLocations);\n\n        clone.datasets = new HashMap<>(this.datasets);\n        for (CategoryDataset<R, C> dataset : clone.datasets.values()) {\n            if (dataset != null) {\n                dataset.addChangeListener(clone);\n            }\n        }\n        clone.datasetToDomainAxesMap = new TreeMap<>();\n        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);\n        clone.datasetToRangeAxesMap = new TreeMap<>();\n        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);\n\n        clone.renderers = CloneUtils.cloneMapValues(this.renderers);\n        for (CategoryItemRenderer renderer : clone.renderers.values()) {\n            if (renderer != null) {\n                renderer.setPlot(clone);\n                renderer.addChangeListener(clone);\n            }\n        }\n        if (this.fixedDomainAxisSpace != null) {\n            clone.fixedDomainAxisSpace = CloneUtils.clone(\n                    this.fixedDomainAxisSpace);\n        }\n        if (this.fixedRangeAxisSpace != null) {\n            clone.fixedRangeAxisSpace = CloneUtils.clone(\n                    this.fixedRangeAxisSpace);\n        }\n\n        clone.annotations = CloneUtils.cloneList(this.annotations);\n        clone.foregroundDomainMarkers = CloneUtils.cloneMapValues(\n                this.foregroundDomainMarkers);\n        clone.backgroundDomainMarkers = CloneUtils.cloneMapValues(\n                this.backgroundDomainMarkers);\n        clone.foregroundRangeMarkers = CloneUtils.cloneMapValues(\n                this.foregroundRangeMarkers);\n        clone.backgroundRangeMarkers = CloneUtils.cloneMapValues(\n                this.backgroundRangeMarkers);\n        if (this.fixedLegendItems != null) {\n            clone.fixedLegendItems = CloneUtils.clone(this.fixedLegendItems);\n        }\n        return clone;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4883,"status":"N"}],"commitId":"de82cc1d6c0c13f7882bf9c3dd566cf12a59a01e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 19:31:49","modifiedFileCount":"8","status":"M","submitter":"David Gilbert"}]
