[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetDomainBoundsWithoutInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        dataset.setDomainIsPointsInTime(false);\n        Range r = dataset.getDomainBounds(false);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(1500.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(2250.0, r.getUpperBound(), EPSILON);  \n    }\n","date":"2016-02-19 15:40:32","endLine":180,"groupId":"469","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetDomainBoundsWithoutInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/b5b2dcb35b96af57ef2bc5d6c42621f3db7b97.src","preCode":"    public void testGetDomainBoundsWithoutInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        dataset.setDomainIsPointsInTime(false);\n        Range r = dataset.getDomainBounds(false);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(1500.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(2250.0, r.getUpperBound(), EPSILON);  \n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetDomainBoundsWithInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(true);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(2000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(3000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(6000L, 7000L), 1.5);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(new SimpleTimePeriod(4000L, 5000L), 1.4);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);    \n    }\n","date":"2016-02-19 15:40:32","endLine":219,"groupId":"1161","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetDomainBoundsWithInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/b5b2dcb35b96af57ef2bc5d6c42621f3db7b97.src","preCode":"    public void testGetDomainBoundsWithInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(true);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(2000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(3000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(6000L, 7000L), 1.5);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(new SimpleTimePeriod(4000L, 5000L), 1.4);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);    \n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-03-09 17:48:20","commitOrder":2,"curCode":"    public void testGetDomainBoundsWithoutInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(false);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(1500.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(2250.0, r.getUpperBound(), EPSILON);  \n    }\n","date":"2017-03-09 17:48:20","endLine":174,"groupId":"469","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetDomainBoundsWithoutInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/48/df292e356a42de6e67c2a64996455b670b73de.src","preCode":"    public void testGetDomainBoundsWithoutInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        dataset.setDomainIsPointsInTime(false);\n        Range r = dataset.getDomainBounds(false);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(1500.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(2250.0, r.getUpperBound(), EPSILON);  \n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testGetDomainBoundsWithInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(true);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(2000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(3000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(6000L, 7000L), 1.5);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(new SimpleTimePeriod(4000L, 5000L), 1.4);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);    \n    }\n","date":"2016-02-19 15:40:32","endLine":219,"groupId":"1161","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetDomainBoundsWithInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/b5b2dcb35b96af57ef2bc5d6c42621f3db7b97.src","preCode":"    public void testGetDomainBoundsWithInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(true);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(2000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(3000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(6000L, 7000L), 1.5);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(new SimpleTimePeriod(4000L, 5000L), 1.4);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);    \n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"}],"commitId":"e4e04e10a80308f2dd5784956d684376faf5b608","commitMessage":"@@@Remove deprecated code and update tests.","date":"2017-03-09 17:48:20","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-23 02:27:15","codes":[{"authorDate":"2020-03-23 02:27:15","commitOrder":3,"curCode":"    public void testGetDomainBoundsWithoutInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(false);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues<String> s1 = new TimePeriodValues<>(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(1500.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(2250.0, r.getUpperBound(), EPSILON);  \n    }\n","date":"2020-03-23 02:27:15","endLine":164,"groupId":"101200","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetDomainBoundsWithoutInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e2/ef135ece5d23f221cf96d80e2250954fee1bb0.src","preCode":"    public void testGetDomainBoundsWithoutInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(false);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(1500.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(false);\n        assertEquals(1500.0, r.getLowerBound(), EPSILON);\n        assertEquals(2250.0, r.getUpperBound(), EPSILON);  \n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2020-03-23 02:27:15","commitOrder":3,"curCode":"    public void testGetDomainBoundsWithInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(true);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues<String> s1 = new TimePeriodValues<>(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(2000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(3000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(6000L, 7000L), 1.5);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(new SimpleTimePeriod(4000L, 5000L), 1.4);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);    \n    }\n","date":"2020-03-23 02:27:15","endLine":203,"groupId":"101200","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetDomainBoundsWithInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e2/ef135ece5d23f221cf96d80e2250954fee1bb0.src","preCode":"    public void testGetDomainBoundsWithInterval() {\n        \r\n        TimePeriodValuesCollection dataset = new TimePeriodValuesCollection();\n        Range r = dataset.getDomainBounds(true);\n        assertNull(r);\n        \n        \r\n        TimePeriodValues s1 = new TimePeriodValues(\"S1\");\n        s1.add(new SimpleTimePeriod(1000L, 2000L), 1.0);\n        dataset.addSeries(s1);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(2000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(1500L, 3000L), 2.0);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(3000.0, r.getUpperBound(), EPSILON);\n        \n        \r\n        s1.add(new SimpleTimePeriod(6000L, 7000L), 1.5);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);\n\n        \r\n        s1.add(new SimpleTimePeriod(4000L, 5000L), 1.4);\n        r = dataset.getDomainBounds(true);\n        assertEquals(1000.0, r.getLowerBound(), EPSILON);\n        assertEquals(7000.0, r.getUpperBound(), EPSILON);    \n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"a203a3eded68ef89d52b8f746cd203922bc602a0","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 02:27:15","modifiedFileCount":"7","status":"M","submitter":"David Gilbert"}]
