[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetMinStartIndex() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(2, s.getMinStartIndex());\n    }\n","date":"2016-02-19 15:40:32","endLine":253,"groupId":"2446","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMinStartIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d5/ff7771f3053e32f16b6d1905caae1cef2f6551.src","preCode":"    public void testGetMinStartIndex() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(2, s.getMinStartIndex());\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void getMaxEndIndex() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(1, s.getMaxEndIndex());\n    }\n","date":"2016-02-19 15:40:32","endLine":330,"groupId":"2446","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxEndIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d5/ff7771f3053e32f16b6d1905caae1cef2f6551.src","preCode":"    public void getMaxEndIndex() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(1, s.getMaxEndIndex());\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetMinStartIndex() {\n        TimePeriodValues<String> s = new TimePeriodValues<>(\"Test\");\n        assertEquals(-1, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(2, s.getMinStartIndex());\n    }\n","date":"2020-03-22 19:36:23","endLine":247,"groupId":"101230","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMinStartIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/f286946a039b240e9cfd9515217bbc3374b05c.src","preCode":"    public void testGetMinStartIndex() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(0, s.getMinStartIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(2, s.getMinStartIndex());\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void getMaxEndIndex() {\n        TimePeriodValues<String> s = new TimePeriodValues<>(\"Test\");\n        assertEquals(-1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(1, s.getMaxEndIndex());\n    }\n","date":"2020-03-22 19:36:23","endLine":324,"groupId":"101230","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxEndIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/f286946a039b240e9cfd9515217bbc3374b05c.src","preCode":"    public void getMaxEndIndex() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(1, s.getMaxEndIndex());\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(1, s.getMaxEndIndex());\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimePeriodValuesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
