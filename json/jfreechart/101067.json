[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetRowKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getRowKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        d.addValue(new Double(1.0), \"R2\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        assertEquals(\"R2\", d.getRowKey(1));\n\n        \r\n        d = new DefaultKeyedValues2D(true);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        d.addValue(new Double(0.0), \"R0\", \"C1\");\n        assertEquals(\"R0\", d.getRowKey(0));\n        assertEquals(\"R1\", d.getRowKey(1));\n    }\n","date":"2016-02-19 15:40:32","endLine":240,"groupId":"369","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/8cf4c7ababf219973d8f272b5631ce91b213f8.src","preCode":"    public void testGetRowKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getRowKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        d.addValue(new Double(1.0), \"R2\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        assertEquals(\"R2\", d.getRowKey(1));\n\n        \r\n        d = new DefaultKeyedValues2D(true);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        d.addValue(new Double(0.0), \"R0\", \"C1\");\n        assertEquals(\"R0\", d.getRowKey(0));\n        assertEquals(\"R1\", d.getRowKey(1));\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetColumnKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getColumnKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        d.addValue(new Double(1.0), \"R1\", \"C2\");\n        assertEquals(\"C1\", d.getColumnKey(0));\n        assertEquals(\"C2\", d.getColumnKey(1));\n    }\n","date":"2016-02-19 15:40:32","endLine":260,"groupId":"1331","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetColumnKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/8cf4c7ababf219973d8f272b5631ce91b213f8.src","preCode":"    public void testGetColumnKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getColumnKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        d.addValue(new Double(1.0), \"R1\", \"C2\");\n        assertEquals(\"C1\", d.getColumnKey(0));\n        assertEquals(\"C2\", d.getColumnKey(1));\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-02-25 11:46:26","codes":[{"authorDate":"2020-02-25 11:46:26","commitOrder":2,"curCode":"    public void testGetRowKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getRowKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(1.0, \"R1\", \"C1\");\n        d.addValue(1.0, \"R2\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        assertEquals(\"R2\", d.getRowKey(1));\n\n        \r\n        d = new DefaultKeyedValues2D(true);\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        d.addValue(0.0, \"R0\", \"C1\");\n        assertEquals(\"R0\", d.getRowKey(0));\n        assertEquals(\"R1\", d.getRowKey(1));\n    }\n","date":"2020-02-25 11:46:26","endLine":231,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/da/b6aa9df7addf515f29a75f6a909cf88398946d.src","preCode":"    public void testGetRowKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getRowKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        d.addValue(new Double(1.0), \"R2\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        assertEquals(\"R2\", d.getRowKey(1));\n\n        \r\n        d = new DefaultKeyedValues2D(true);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        d.addValue(new Double(0.0), \"R0\", \"C1\");\n        assertEquals(\"R0\", d.getRowKey(0));\n        assertEquals(\"R1\", d.getRowKey(1));\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2020-02-25 11:46:26","commitOrder":2,"curCode":"    public void testGetColumnKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getColumnKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(1.0, \"R1\", \"C1\");\n        d.addValue(1.0, \"R1\", \"C2\");\n        assertEquals(\"C1\", d.getColumnKey(0));\n        assertEquals(\"C2\", d.getColumnKey(1));\n    }\n","date":"2020-02-25 11:46:26","endLine":251,"groupId":"4375","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetColumnKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/da/b6aa9df7addf515f29a75f6a909cf88398946d.src","preCode":"    public void testGetColumnKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getColumnKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        d.addValue(new Double(1.0), \"R1\", \"C2\");\n        assertEquals(\"C1\", d.getColumnKey(0));\n        assertEquals(\"C2\", d.getColumnKey(1));\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"fc43f0bd633d91b12f72d4638f74fe9db9f1ec0a","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 11:46:26","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public void testGetRowKey() {\n        DefaultKeyedValues2D<String, String> d = new DefaultKeyedValues2D<>();\n        boolean pass = false;\n        try {\n            d.getRowKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(1.0, \"R1\", \"C1\");\n        d.addValue(1.0, \"R2\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        assertEquals(\"R2\", d.getRowKey(1));\n\n        \r\n        d = new DefaultKeyedValues2D<>(true);\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        d.addValue(0.0, \"R0\", \"C1\");\n        assertEquals(\"R0\", d.getRowKey(0));\n        assertEquals(\"R1\", d.getRowKey(1));\n    }\n","date":"2020-03-09 01:06:45","endLine":231,"groupId":"101067","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/27/0bf8d91c72a8bf844377639f2931c792ebb88d.src","preCode":"    public void testGetRowKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getRowKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(1.0, \"R1\", \"C1\");\n        d.addValue(1.0, \"R2\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        assertEquals(\"R2\", d.getRowKey(1));\n\n        \r\n        d = new DefaultKeyedValues2D(true);\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(\"R1\", d.getRowKey(0));\n        d.addValue(0.0, \"R0\", \"C1\");\n        assertEquals(\"R0\", d.getRowKey(0));\n        assertEquals(\"R1\", d.getRowKey(1));\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public void testGetColumnKey() {\n        DefaultKeyedValues2D<String, String> d = new DefaultKeyedValues2D<>();\n        boolean pass = false;\n        try {\n            d.getColumnKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(1.0, \"R1\", \"C1\");\n        d.addValue(1.0, \"R1\", \"C2\");\n        assertEquals(\"C1\", d.getColumnKey(0));\n        assertEquals(\"C2\", d.getColumnKey(1));\n    }\n","date":"2020-03-09 01:06:45","endLine":251,"groupId":"101067","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetColumnKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/27/0bf8d91c72a8bf844377639f2931c792ebb88d.src","preCode":"    public void testGetColumnKey() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        boolean pass = false;\n        try {\n            d.getColumnKey(0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n        d.addValue(1.0, \"R1\", \"C1\");\n        d.addValue(1.0, \"R1\", \"C2\");\n        assertEquals(\"C1\", d.getColumnKey(0));\n        assertEquals(\"C2\", d.getColumnKey(1));\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"}]
