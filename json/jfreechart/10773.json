[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = (VectorSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":132,"groupId":"1243","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f0/9415e13382bad3d3f7f21aae045e3894900a45.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = (VectorSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/VectorSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = (OHLCSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":137,"groupId":"1243","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/38/3725ed20048a1414e60a0d58703eaef8bdd845.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = (OHLCSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-21 13:53:14","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = (VectorSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":132,"groupId":"1243","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f0/9415e13382bad3d3f7f21aae045e3894900a45.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = (VectorSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/VectorSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2020-03-21 13:53:14","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-21 13:53:14","endLine":131,"groupId":"1243","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/29ec7a6d793bb48fe04a27fafe2ffed7111da9.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = (OHLCSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"ffd1e8f7d00013d5ed88e7454f80c4c55277bb61","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 13:53:14","modifiedFileCount":"13","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 13:53:14","codes":[{"authorDate":"2020-03-21 14:04:13","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-21 14:04:13","endLine":128,"groupId":"1243","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e5/f3ab37d07345638144e78bd9f87efcf562fef9.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = (VectorSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/VectorSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2020-03-21 13:53:14","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-21 13:53:14","endLine":131,"groupId":"1243","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/29ec7a6d793bb48fe04a27fafe2ffed7111da9.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"N"}],"commitId":"9ea09ccfbc22aa058680ba2eb8ee46570beac02b","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 14:04:13","modifiedFileCount":"14","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 13:53:14","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries<String> s1 = new VectorSeries<>(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-22 19:36:23","endLine":128,"groupId":"1068","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9e/98e1986d2c15c93d4412b739f7f3f186a6eeee.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries s1 = new VectorSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/VectorSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2020-03-21 13:53:14","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-21 13:53:14","endLine":131,"groupId":"1243","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/29ec7a6d793bb48fe04a27fafe2ffed7111da9.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"N"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-23 02:27:15","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":5,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries<String> s1 = new VectorSeries<>(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-22 19:36:23","endLine":128,"groupId":"10773","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9e/98e1986d2c15c93d4412b739f7f3f186a6eeee.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        VectorSeries<String> s1 = new VectorSeries<>(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        VectorSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/VectorSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2020-03-23 02:27:15","commitOrder":5,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries<String> s1 = new OHLCSeries<>(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-23 02:27:15","endLine":131,"groupId":"10773","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b9/d5744e161d68ed46d99e6ed969b49f7f492143.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"a203a3eded68ef89d52b8f746cd203922bc602a0","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 02:27:15","modifiedFileCount":"7","status":"M","submitter":"David Gilbert"}]
