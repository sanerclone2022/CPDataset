[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public static double calculateQ1(List values) {\n        ParamChecks.nullNotPermitted(values, \"values\");\n\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, 0, count / 2);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, 0, count / 2 - 1);\n            }\n\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":201,"groupId":"2718","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateQ1","params":"(Listvalues)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9d/d2df6a38cd7752187fd9d79c4d32eb722065f8.src","preCode":"    public static double calculateQ1(List values) {\n        ParamChecks.nullNotPermitted(values, \"values\");\n\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, 0, count / 2);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, 0, count / 2 - 1);\n            }\n\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerCalculator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public static double calculateQ3(List values) {\n        ParamChecks.nullNotPermitted(values, \"values\");\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, count / 2,\n                            count - 1);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, count / 2,\n                        count - 1);\n            }\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":234,"groupId":"2718","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateQ3","params":"(Listvalues)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9d/d2df6a38cd7752187fd9d79c4d32eb722065f8.src","preCode":"    public static double calculateQ3(List values) {\n        ParamChecks.nullNotPermitted(values, \"values\");\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, count / 2,\n                            count - 1);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, count / 2,\n                        count - 1);\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerCalculator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public static double calculateQ1(List values) {\n        Args.nullNotPermitted(values, \"values\");\n\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, 0, count / 2);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, 0, count / 2 - 1);\n            }\n\n        }\n        return result;\n    }\n","date":"2017-05-12 05:28:15","endLine":201,"groupId":"101909","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateQ1","params":"(Listvalues)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/17/caaada3b97c0b45dde37102a3fce97cf3c8b59.src","preCode":"    public static double calculateQ1(List values) {\n        ParamChecks.nullNotPermitted(values, \"values\");\n\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, 0, count / 2);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, 0, count / 2 - 1);\n            }\n\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerCalculator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public static double calculateQ3(List values) {\n        Args.nullNotPermitted(values, \"values\");\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, count / 2,\n                            count - 1);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, count / 2,\n                        count - 1);\n            }\n        }\n        return result;\n    }\n","date":"2017-05-12 05:28:15","endLine":234,"groupId":"101909","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateQ3","params":"(Listvalues)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/17/caaada3b97c0b45dde37102a3fce97cf3c8b59.src","preCode":"    public static double calculateQ3(List values) {\n        ParamChecks.nullNotPermitted(values, \"values\");\n        double result = Double.NaN;\n        int count = values.size();\n        if (count > 0) {\n            if (count % 2 == 1) {\n                if (count > 1) {\n                    result = Statistics.calculateMedian(values, count / 2,\n                            count - 1);\n                }\n                else {\n                    result = Statistics.calculateMedian(values, 0, 0);\n                }\n            }\n            else {\n                result = Statistics.calculateMedian(values, count / 2,\n                        count - 1);\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerCalculator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"22701c9ec4cd5bd88f8a7f17ae11c18099dd1ec7","commitMessage":"@@@Rename ParamChecks --> Args.","date":"2017-05-12 05:28:15","modifiedFileCount":"216","status":"M","submitter":"David Gilbert"}]
