[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        Rectangle2D bounds1 = new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0);\n        b1.setBounds(bounds1);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n\n        bounds1.setFrame(2.0, 4.0, 6.0, 8.0);\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":141,"groupId":"624","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0f/dbd60895b306f9398f5f61ac8338d23f02370c.src","preCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        Rectangle2D bounds1 = new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0);\n        b1.setBounds(bounds1);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n\n        bounds1.setFrame(2.0, 4.0, 6.0, 8.0);\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/AbstractBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":94,"groupId":"624","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d2/076fa477e7c501100389c61aa2f1a149d76e9a.src","preCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/EmptyBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-20 14:16:26","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        Rectangle2D bounds1 = new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0);\n        b1.setBounds(bounds1);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n\n        bounds1.setFrame(2.0, 4.0, 6.0, 8.0);\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":141,"groupId":"10501","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0f/dbd60895b306f9398f5f61ac8338d23f02370c.src","preCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        Rectangle2D bounds1 = new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0);\n        b1.setBounds(bounds1);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n\n        bounds1.setFrame(2.0, 4.0, 6.0, 8.0);\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/AbstractBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2020-03-20 14:16:26","commitOrder":2,"curCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = CloneUtils.clone(b1);\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n    }\n","date":"2020-03-20 14:16:26","endLine":91,"groupId":"10501","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/50c4e26b897a481195c8a070e2694100d0f2dc.src","preCode":"    public void testCloning() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = null;\n\n        try {\n            b2 = (EmptyBlock) b1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            fail(e.toString());\n        }\n        assertTrue(b1 != b2);\n        assertTrue(b1.getClass() == b2.getClass());\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/EmptyBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"3b49d5ab6f13410477f8e88417e73591568f4fb9","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 14:16:26","modifiedFileCount":"21","status":"M","submitter":"David Gilbert"}]
