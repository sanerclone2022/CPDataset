[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testDelete3() {\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        s1.add(new Year(2011), 1.1);\n        s1.add(new Year(2012), 2.2);\n        s1.add(new Year(2013), 3.3);\n        s1.add(new Year(2014), 4.4);\n        s1.add(new Year(2015), 5.5);\n        s1.add(new Year(2016), 6.6);\n        s1.delete(2, 5);\n        assertEquals(2, s1.getItemCount());\n        assertEquals(new Year(2011), s1.getTimePeriod(0));\n        assertEquals(new Year(2012), s1.getTimePeriod(1));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":255,"groupId":"4084","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDelete3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/84/35a22af8ec31b47679df84f67a6546dd39ace8.src","preCode":"    public void testDelete3() {\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        s1.add(new Year(2011), 1.1);\n        s1.add(new Year(2012), 2.2);\n        s1.add(new Year(2013), 3.3);\n        s1.add(new Year(2014), 4.4);\n        s1.add(new Year(2015), 5.5);\n        s1.add(new Year(2016), 6.6);\n        s1.delete(2, 5);\n        assertEquals(2, s1.getItemCount());\n        assertEquals(new Year(2011), s1.getTimePeriod(0));\n        assertEquals(new Year(2012), s1.getTimePeriod(1));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testDelete_RegularTimePeriod() {\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        s1.add(new Year(2010), 1.1);\n        s1.add(new Year(2011), 2.2);\n        s1.add(new Year(2012), 3.3);\n        s1.add(new Year(2013), 4.4);\n        s1.delete(new Year(2010));\n        s1.delete(new Year(2013));\n        assertEquals(2.2, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":272,"groupId":"4306","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDelete_RegularTimePeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/84/35a22af8ec31b47679df84f67a6546dd39ace8.src","preCode":"    public void testDelete_RegularTimePeriod() {\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        s1.add(new Year(2010), 1.1);\n        s1.add(new Year(2011), 2.2);\n        s1.add(new Year(2012), 3.3);\n        s1.add(new Year(2013), 4.4);\n        s1.delete(new Year(2010));\n        s1.delete(new Year(2013));\n        assertEquals(2.2, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testDelete3() {\n        TimeSeries<String> s1 = new TimeSeries<>(\"S1\");\n        s1.add(new Year(2011), 1.1);\n        s1.add(new Year(2012), 2.2);\n        s1.add(new Year(2013), 3.3);\n        s1.add(new Year(2014), 4.4);\n        s1.add(new Year(2015), 5.5);\n        s1.add(new Year(2016), 6.6);\n        s1.delete(2, 5);\n        assertEquals(2, s1.getItemCount());\n        assertEquals(new Year(2011), s1.getTimePeriod(0));\n        assertEquals(new Year(2012), s1.getTimePeriod(1));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":237,"groupId":"101190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDelete3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8f/ca912ea4098491100ee4064656b72adc694bba.src","preCode":"    public void testDelete3() {\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        s1.add(new Year(2011), 1.1);\n        s1.add(new Year(2012), 2.2);\n        s1.add(new Year(2013), 3.3);\n        s1.add(new Year(2014), 4.4);\n        s1.add(new Year(2015), 5.5);\n        s1.add(new Year(2016), 6.6);\n        s1.delete(2, 5);\n        assertEquals(2, s1.getItemCount());\n        assertEquals(new Year(2011), s1.getTimePeriod(0));\n        assertEquals(new Year(2012), s1.getTimePeriod(1));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testDelete_RegularTimePeriod() {\n        TimeSeries<String> s1 = new TimeSeries<>(\"S1\");\n        s1.add(new Year(2010), 1.1);\n        s1.add(new Year(2011), 2.2);\n        s1.add(new Year(2012), 3.3);\n        s1.add(new Year(2013), 4.4);\n        s1.delete(new Year(2010));\n        s1.delete(new Year(2013));\n        assertEquals(2.2, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":254,"groupId":"101190","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDelete_RegularTimePeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8f/ca912ea4098491100ee4064656b72adc694bba.src","preCode":"    public void testDelete_RegularTimePeriod() {\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        s1.add(new Year(2010), 1.1);\n        s1.add(new Year(2011), 2.2);\n        s1.add(new Year(2012), 3.3);\n        s1.add(new Year(2013), 4.4);\n        s1.delete(new Year(2010));\n        s1.delete(new Year(2013));\n        assertEquals(2.2, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
