[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":468,"groupId":"3062","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLegendItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/31/38874a952c8f19d571d7a7528caab20dc67421.src","preCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":575,"groupId":"3062","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLegendItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2b/c0d9a3e819068d47f3f62ea1973c596fbf9fca.src","preCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":561,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2020-03-23 02:11:17","commitOrder":2,"curCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                for (CategoryPlot subplot : this.subplots) {\n                    LegendItemCollection more = subplot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-03-23 02:11:17","endLine":436,"groupId":"735","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLegendItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/7515ee805bf44c88af5daba24a464492ebd04c.src","preCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":424,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":575,"groupId":"3062","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLegendItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2b/c0d9a3e819068d47f3f62ea1973c596fbf9fca.src","preCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":561,"status":"N"}],"commitId":"6b83197035128701b202d112a935261aa9723fde","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 02:11:17","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-10-17 13:05:27","codes":[{"authorDate":"2020-03-23 02:11:17","commitOrder":3,"curCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                for (CategoryPlot subplot : this.subplots) {\n                    LegendItemCollection more = subplot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-03-23 02:11:17","endLine":436,"groupId":"101536","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLegendItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/7515ee805bf44c88af5daba24a464492ebd04c.src","preCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                for (CategoryPlot subplot : this.subplots) {\n                    LegendItemCollection more = subplot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":424,"status":"N"},{"authorDate":"2020-10-17 13:05:27","commitOrder":3,"curCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                for (CategoryPlot plot : this.subplots) {\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-10-17 13:05:27","endLine":537,"groupId":"101536","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getLegendItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/00/2eb80188a60ed812d737332d8d0f0e40531bd6.src","preCode":"    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = getFixedLegendItems();\n        if (result == null) {\n            result = new LegendItemCollection();\n            if (this.subplots != null) {\n                Iterator iterator = this.subplots.iterator();\n                while (iterator.hasNext()) {\n                    CategoryPlot plot = (CategoryPlot) iterator.next();\n                    LegendItemCollection more = plot.getLegendItems();\n                    result.addAll(more);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"M"}],"commitId":"61f3b48e99ddd733daf435eee2ea1c643c4f6a21","commitMessage":"@@@Merge pull request #178 from simon04/for-loop\n\nReplace while loop with enhanced for loop","date":"2020-10-17 13:05:27","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"}]
