[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtilities.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":555,"groupId":"541","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/48/b329b1e2808c0b8b3d2394aa745114524c3662.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtilities.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.linesVisible, that.linesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapesVisible, that.shapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapesFilled, that.shapesFilled)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":1099,"groupId":"3514","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/04/f80f7b0de234d3fa9df66f9b66a158d7f1011b.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.linesVisible, that.linesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapesVisible, that.shapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapesFilled, that.shapesFilled)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1049,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-03-08 01:39:11","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":553,"groupId":"541","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c2/b56a35d02882de720d309df4507977a0e0ee65.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtilities.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"M"},{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.linesVisible, that.linesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shapesVisible, that.shapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shapesFilled, that.shapesFilled)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":1098,"groupId":"1399","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8a/b9d0b98985b299d80767906b645675c42a7d3d.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.linesVisible, that.linesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapesVisible, that.shapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapesFilled, that.shapesFilled)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1048,"status":"M"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-11 02:23:23","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":553,"groupId":"541","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c2/b56a35d02882de720d309df4507977a0e0ee65.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"N"},{"authorDate":"2017-03-11 02:23:23","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-11 02:23:23","endLine":906,"groupId":"1399","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/75/3225a8abe41a18edd7c1e1f70827fd04c4dfd9.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.linesVisible, that.linesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shapesVisible, that.shapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shapesFilled, that.shapesFilled)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":865,"status":"M"}],"commitId":"1be317c64d9b5b295ca9b519f80f81779b418868","commitMessage":"@@@Remove deprecated code","date":"2017-03-11 02:23:23","modifiedFileCount":"24","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-15 12:51:52","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":4,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":553,"groupId":"541","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c2/b56a35d02882de720d309df4507977a0e0ee65.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"N"},{"authorDate":"2017-03-15 12:51:52","commitOrder":4,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.defaultLinesVisible != that.defaultLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (this.defaultShapesVisible != that.defaultShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.defaultShapesFilled != that.defaultShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-15 12:51:52","endLine":898,"groupId":"1399","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/aa/b8a616489035169968a564fdd18cc470600b6c.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.baseLinesVisible != that.baseLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"M"}],"commitId":"defa1876cae51be09178a7e8ec238d407c5643f3","commitMessage":"@@@Rename methods in LineAndShapeRenderer","date":"2017-03-15 12:51:52","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-07-01 12:16:46","codes":[{"authorDate":"2020-07-01 12:16:46","commitOrder":5,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!Objects.equals(this.seriesShapesFilled, that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2020-07-01 12:16:46","endLine":544,"groupId":"541","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b6/c1a8c053958e20bdaa923ed53217037a90f310.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"M"},{"authorDate":"2020-07-01 12:16:46","commitOrder":5,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.defaultLinesVisible != that.defaultLinesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesLinesVisible, that.seriesLinesVisible)) {\n            return false;\n        }\n        if (this.defaultShapesVisible != that.defaultShapesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesShapesVisible, that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesShapesFilled, that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.defaultShapesFilled != that.defaultShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2020-07-01 12:16:46","endLine":895,"groupId":"2030","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b6/9d0ae5b88184dcb3f078505fd168a181145e1f.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.defaultLinesVisible != that.defaultLinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesLinesVisible,\n                that.seriesLinesVisible)) {\n            return false;\n        }\n        if (this.defaultShapesVisible != that.defaultShapesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesVisible,\n                that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.seriesShapesFilled,\n                that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.defaultShapesFilled != that.defaultShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"M"}],"commitId":"1955cc38345a5ea52879eb186f09cf2e930bd9e6","commitMessage":"@@@Merge pull request #163 from simon04/use-Objects\n\nUse Objects.hashCode.  Objects.equals.  CloneUtils.clone.  CloneUtils.cloneList.  remove ObjectUtils","date":"2020-07-01 12:16:46","modifiedFileCount":"130","status":"M","submitter":"David Gilbert"},{"authorTime":"2021-03-05 13:51:37","codes":[{"authorDate":"2021-03-05 13:51:37","commitOrder":6,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!Objects.equals(this.seriesShapesFilledMap, that.seriesShapesFilledMap)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2021-03-05 13:51:37","endLine":544,"groupId":"101623","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0f/f26ee8b9ccad2d8f0e572655f6e56292f3852e.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ScatterRenderer)) {\n            return false;\n        }\n        ScatterRenderer that = (ScatterRenderer) obj;\n        if (!Objects.equals(this.seriesShapesFilled, that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.useFillPaint != that.useFillPaint) {\n            return false;\n        }\n        if (this.drawOutlines != that.drawOutlines) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"M"},{"authorDate":"2021-03-05 13:51:37","commitOrder":6,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.defaultLinesVisible != that.defaultLinesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesLinesVisibleMap, that.seriesLinesVisibleMap)) {\n            return false;\n        }\n        if (this.defaultShapesVisible != that.defaultShapesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesShapesVisibleMap, that.seriesShapesVisibleMap)) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesShapesFilledMap, that.seriesShapesFilledMap)) {\n            return false;\n        }\n        if (this.defaultShapesFilled != that.defaultShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2021-03-05 13:51:37","endLine":842,"groupId":"101623","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/dd/1b52a3ac0da5a61d5b956c7e1f1237a71ff4c0.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof LineAndShapeRenderer)) {\n            return false;\n        }\n\n        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;\n        if (this.defaultLinesVisible != that.defaultLinesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesLinesVisible, that.seriesLinesVisible)) {\n            return false;\n        }\n        if (this.defaultShapesVisible != that.defaultShapesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesShapesVisible, that.seriesShapesVisible)) {\n            return false;\n        }\n        if (!Objects.equals(this.seriesShapesFilled, that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.defaultShapesFilled != that.defaultShapesFilled) {\n            return false;\n        }\n        if (this.useOutlinePaint != that.useOutlinePaint) {\n            return false;\n        }\n        if (this.useSeriesOffset != that.useSeriesOffset) {\n            return false;\n        }\n        if (this.itemMargin != that.itemMargin) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"M"}],"commitId":"84888b4c5326a51cbfec517f6ee7f64a5e36f00f","commitMessage":"@@@Replace usage of BooleanList with Map<Integer.  Boolean>","date":"2021-03-05 13:51:37","modifiedFileCount":"7","status":"M","submitter":"David Gilbert"}]
