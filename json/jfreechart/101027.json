[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetMaxX() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxX()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.0, s1.getMaxX(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":600,"groupId":"1133","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMaxX","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testGetMaxX() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxX()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.0, s1.getMaxX(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":582,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetMaxY() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.1, s1.getMaxY(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":648,"groupId":"1133","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetMaxY","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testGetMaxY() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.1, s1.getMaxY(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":630,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetMaxX() {\n        XYSeries<String> s1 = new XYSeries<>(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxX()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.0, s1.getMaxX(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":594,"groupId":"101027","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMaxX","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f3/f587c233e4ad7c1bc2e384bd9a89bc19e65b17.src","preCode":"    public void testGetMaxX() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxX()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.0, s1.getMaxX(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(2.0, s1.getMaxX(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetMaxY() {\n        XYSeries<String> s1 = new XYSeries<>(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.1, s1.getMaxY(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":642,"groupId":"101027","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetMaxY","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f3/f587c233e4ad7c1bc2e384bd9a89bc19e65b17.src","preCode":"    public void testGetMaxY() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.add(1.0, 1.1);\n        assertEquals(1.1, s1.getMaxY(), EPSILON);\n\n        s1.add(2.0, 2.2);\n        assertEquals(2.2, s1.getMaxY(), EPSILON);\n\n        s1.add(Double.NaN, 99.9);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.1);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n\n        s1.add(0.0, null);\n        assertEquals(99.9, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":624,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
