[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertTrue(item1.equals(item2));\n    }\n","date":"2016-02-19 15:40:32","endLine":118,"groupId":"326","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/482803217908e1aaf66734998b39ab9ad4b986.src","preCode":"    public void testEquals() {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = (XYIntervalDataItem) item1.clone();\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","date":"2016-02-19 15:40:32","endLine":131,"groupId":"1940","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/482803217908e1aaf66734998b39ab9ad4b986.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = (XYIntervalDataItem) item1.clone();\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-21 19:26:58","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertTrue(item1.equals(item2));\n    }\n","date":"2016-02-19 15:40:32","endLine":118,"groupId":"101003","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/482803217908e1aaf66734998b39ab9ad4b986.src","preCode":"    public void testEquals() {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.0, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.9, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.1);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertFalse(item1.equals(item2));\n        item2 = new XYIntervalDataItem(1.1, 0.55, 1.55, 2.2, 1.99, 2.11);\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2020-03-21 19:26:58","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = CloneUtils.clone(item1);\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","date":"2020-03-21 19:26:58","endLine":128,"groupId":"101003","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6e/d9f13ae90d181bc0397acba71300d3d53a9712.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYIntervalDataItem item1 = new XYIntervalDataItem(1.0, 0.5, 1.5, 2.0,\n                1.9, 2.1);\n        XYIntervalDataItem item2 = (XYIntervalDataItem) item1.clone();\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"0964e1a75d38ec8d734f8340a6335accc414119c","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 19:26:58","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
