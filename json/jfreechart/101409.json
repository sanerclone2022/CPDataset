[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        Set<Integer> set = new HashSet<Integer>();\n        for (Integer item : indices) {\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":1518,"groupId":"511","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkAxisIndices","params":"(List<Integer>indices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        Set<Integer> set = new HashSet<Integer>();\n        for (Integer item : indices) {\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1500,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    private void checkAxisIndices(List indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        HashSet set = new HashSet();\n        for (int i = 0; i < count; i++) {\n            Object item = indices.get(i);\n            if (!(item instanceof Integer)) {\n                throw new IllegalArgumentException(\n                        \"Indices must be Integer instances.\");\n            }\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":1437,"groupId":"3638","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkAxisIndices","params":"(Listindices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    private void checkAxisIndices(List indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        HashSet set = new HashSet();\n        for (int i = 0; i < count; i++) {\n            Object item = indices.get(i);\n            if (!(item instanceof Integer)) {\n                throw new IllegalArgumentException(\n                        \"Indices must be Integer instances.\");\n            }\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1414,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":2,"curCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        Set<Integer> set = new HashSet<>();\n        for (Integer item : indices) {\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","date":"2020-01-09 05:47:42","endLine":1334,"groupId":"511","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkAxisIndices","params":"(List<Integer>indices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        Set<Integer> set = new HashSet<Integer>();\n        for (Integer item : indices) {\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1316,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    private void checkAxisIndices(List indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        HashSet set = new HashSet();\n        for (int i = 0; i < count; i++) {\n            Object item = indices.get(i);\n            if (!(item instanceof Integer)) {\n                throw new IllegalArgumentException(\n                        \"Indices must be Integer instances.\");\n            }\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":1437,"groupId":"3638","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkAxisIndices","params":"(Listindices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    private void checkAxisIndices(List indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        HashSet set = new HashSet();\n        for (int i = 0; i < count; i++) {\n            Object item = indices.get(i);\n            if (!(item instanceof Integer)) {\n                throw new IllegalArgumentException(\n                        \"Indices must be Integer instances.\");\n            }\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1414,"status":"N"}],"commitId":"3b75f318b1df03ef72738ae8c2e35fc779720691","commitMessage":"@@@Fix compiler warnings.\n","date":"2020-01-09 05:47:42","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 18:04:41","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":3,"curCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        Set<Integer> set = new HashSet<>();\n        for (Integer item : indices) {\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","date":"2020-01-09 05:47:42","endLine":1334,"groupId":"101409","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkAxisIndices","params":"(List<Integer>indices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        Set<Integer> set = new HashSet<>();\n        for (Integer item : indices) {\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1316,"status":"N"},{"authorDate":"2020-03-29 18:04:41","commitOrder":3,"curCode":"    private void checkAxisIndices(List<Integer> indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        HashSet<Integer> set = new HashSet<>();\n        for (int i = 0; i < count; i++) {\n            Integer item = indices.get(i);\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","date":"2020-03-29 18:04:41","endLine":1294,"groupId":"101409","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"checkAxisIndices","params":"(List<Integer>indices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    private void checkAxisIndices(List indices) {\n        \r\n        \r\n        \r\n        if (indices == null) {\n            return;  \r\n        }\n        int count = indices.size();\n        if (count == 0) {\n            throw new IllegalArgumentException(\"Empty list not permitted.\");\n        }\n        HashSet set = new HashSet();\n        for (int i = 0; i < count; i++) {\n            Object item = indices.get(i);\n            if (!(item instanceof Integer)) {\n                throw new IllegalArgumentException(\n                        \"Indices must be Integer instances.\");\n            }\n            if (set.contains(item)) {\n                throw new IllegalArgumentException(\"Indices must be unique.\");\n            }\n            set.add(item);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1275,"status":"M"}],"commitId":"e23eafd99eb9c5627dd100f927caa3ba7bbb036e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 18:04:41","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"}]
