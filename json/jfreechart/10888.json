[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        XIntervalSeriesCollection c1 = new XIntervalSeriesCollection();\n        XIntervalSeriesCollection c2 = new XIntervalSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        XIntervalSeries s1 = new XIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        XIntervalSeries s2 = new XIntervalSeries(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new XIntervalSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new XIntervalSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":83,"groupId":"2086","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d1/5cf5e5bf9fa340f9995dd42f2f0a43c8876ee1.src","preCode":"    public void testEquals() {\n        XIntervalSeriesCollection c1 = new XIntervalSeriesCollection();\n        XIntervalSeriesCollection c2 = new XIntervalSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        XIntervalSeries s1 = new XIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        XIntervalSeries s2 = new XIntervalSeries(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new XIntervalSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new XIntervalSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeriesCollection c2 = new OHLCSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        OHLCSeries s2 = new OHLCSeries(\"Series\");\n        s2.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n\n        c1.setXPosition(TimePeriodAnchor.END);\n        assertFalse(c1.equals(c2));\n        c2.setXPosition(TimePeriodAnchor.END);\n        assertTrue(c1.equals(c2));\n\n    }\n","date":"2016-02-19 15:40:32","endLine":94,"groupId":"2086","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ab/f1e34667bc87e558b1e622e275ea5bf574ee82.src","preCode":"    public void testEquals() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeriesCollection c2 = new OHLCSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        OHLCSeries s2 = new OHLCSeries(\"Series\");\n        s2.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n\n        c1.setXPosition(TimePeriodAnchor.END);\n        assertFalse(c1.equals(c2));\n        c2.setXPosition(TimePeriodAnchor.END);\n        assertTrue(c1.equals(c2));\n\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testEquals() {\n        XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>();\n        XIntervalSeriesCollection<String> c2 = new XIntervalSeriesCollection<>();\n        assertEquals(c1, c2);\n\n        \r\n        XIntervalSeries<String> s1 = new XIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        XIntervalSeries<String> s2 = new XIntervalSeries<>(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new XIntervalSeries<>(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new XIntervalSeries<>(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }\n","date":"2020-03-22 19:36:23","endLine":78,"groupId":"1035","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/ded441f0ac45d5bacbdac0a1afa5b7b97160be.src","preCode":"    public void testEquals() {\n        XIntervalSeriesCollection c1 = new XIntervalSeriesCollection();\n        XIntervalSeriesCollection c2 = new XIntervalSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        XIntervalSeries s1 = new XIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        XIntervalSeries s2 = new XIntervalSeries(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new XIntervalSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new XIntervalSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeriesCollection c2 = new OHLCSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        OHLCSeries s2 = new OHLCSeries(\"Series\");\n        s2.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n\n        c1.setXPosition(TimePeriodAnchor.END);\n        assertFalse(c1.equals(c2));\n        c2.setXPosition(TimePeriodAnchor.END);\n        assertTrue(c1.equals(c2));\n\n    }\n","date":"2016-02-19 15:40:32","endLine":94,"groupId":"2086","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ab/f1e34667bc87e558b1e622e275ea5bf574ee82.src","preCode":"    public void testEquals() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeriesCollection c2 = new OHLCSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        OHLCSeries s2 = new OHLCSeries(\"Series\");\n        s2.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n\n        c1.setXPosition(TimePeriodAnchor.END);\n        assertFalse(c1.equals(c2));\n        c2.setXPosition(TimePeriodAnchor.END);\n        assertTrue(c1.equals(c2));\n\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-23 02:27:15","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testEquals() {\n        XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>();\n        XIntervalSeriesCollection<String> c2 = new XIntervalSeriesCollection<>();\n        assertEquals(c1, c2);\n\n        \r\n        XIntervalSeries<String> s1 = new XIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        XIntervalSeries<String> s2 = new XIntervalSeries<>(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new XIntervalSeries<>(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new XIntervalSeries<>(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }\n","date":"2020-03-22 19:36:23","endLine":78,"groupId":"10888","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/ded441f0ac45d5bacbdac0a1afa5b7b97160be.src","preCode":"    public void testEquals() {\n        XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>();\n        XIntervalSeriesCollection<String> c2 = new XIntervalSeriesCollection<>();\n        assertEquals(c1, c2);\n\n        \r\n        XIntervalSeries<String> s1 = new XIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        XIntervalSeries<String> s2 = new XIntervalSeries<>(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new XIntervalSeries<>(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new XIntervalSeries<>(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"},{"authorDate":"2020-03-23 02:27:15","commitOrder":3,"curCode":"    public void testEquals() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeriesCollection c2 = new OHLCSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        OHLCSeries<String> s2 = new OHLCSeries<>(\"Series\");\n        s2.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new OHLCSeries<>(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new OHLCSeries<>(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n\n        c1.setXPosition(TimePeriodAnchor.END);\n        assertFalse(c1.equals(c2));\n        c2.setXPosition(TimePeriodAnchor.END);\n        assertTrue(c1.equals(c2));\n\n    }\n","date":"2020-03-23 02:27:15","endLine":89,"groupId":"10888","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/5443bc65575566b1d1225cf5c49171dac83bb6.src","preCode":"    public void testEquals() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeriesCollection c2 = new OHLCSeriesCollection();\n        assertEquals(c1, c2);\n\n        \r\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        assertFalse(c1.equals(c2));\n        OHLCSeries s2 = new OHLCSeries(\"Series\");\n        s2.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n        c2.addSeries(new OHLCSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n\n        c1.setXPosition(TimePeriodAnchor.END);\n        assertFalse(c1.equals(c2));\n        c2.setXPosition(TimePeriodAnchor.END);\n        assertTrue(c1.equals(c2));\n\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"a203a3eded68ef89d52b8f746cd203922bc602a0","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 02:27:15","modifiedFileCount":"7","status":"M","submitter":"David Gilbert"}]
