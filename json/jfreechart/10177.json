[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testListenersWithCategoryPlot() {\n        CategoryPlot plot = new CategoryPlot();\n        CategoryMarker marker1 = new CategoryMarker(\"X\");\n        ValueMarker marker2 = new ValueMarker(1.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","date":"2016-02-19 15:40:32","endLine":371,"groupId":"1252","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testListenersWithCategoryPlot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7a/0824a3fc1917768d9bb90ec4bc8897b6ff6f4f.src","preCode":"    public void testListenersWithCategoryPlot() {\n        CategoryPlot plot = new CategoryPlot();\n        CategoryMarker marker1 = new CategoryMarker(\"X\");\n        ValueMarker marker2 = new ValueMarker(1.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/MarkerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testListenersWithXYPlot() {\n        XYPlot plot = new XYPlot();\n        ValueMarker marker1 = new ValueMarker(1.0);\n        ValueMarker marker2 = new ValueMarker(2.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","date":"2016-02-19 15:40:32","endLine":395,"groupId":"1252","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testListenersWithXYPlot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7a/0824a3fc1917768d9bb90ec4bc8897b6ff6f4f.src","preCode":"    public void testListenersWithXYPlot() {\n        XYPlot plot = new XYPlot();\n        ValueMarker marker1 = new ValueMarker(1.0);\n        ValueMarker marker2 = new ValueMarker(2.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/MarkerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-05-02 17:02:47","codes":[{"authorDate":"2020-05-02 17:02:47","commitOrder":2,"curCode":"    public void testListenersWithCategoryPlot() {\n        CategoryPlot<String, String> plot = new CategoryPlot<>();\n        CategoryMarker marker1 = new CategoryMarker(\"X\");\n        ValueMarker marker2 = new ValueMarker(1.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","date":"2020-05-02 17:02:47","endLine":367,"groupId":"10177","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testListenersWithCategoryPlot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ee/169ec7973d3a7392dd4dd7a6b303ee78d9f1ea.src","preCode":"    public void testListenersWithCategoryPlot() {\n        CategoryPlot plot = new CategoryPlot();\n        CategoryMarker marker1 = new CategoryMarker(\"X\");\n        ValueMarker marker2 = new ValueMarker(1.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/MarkerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"M"},{"authorDate":"2020-05-02 17:02:47","commitOrder":2,"curCode":"    public void testListenersWithXYPlot() {\n        XYPlot<String> plot = new XYPlot<>();\n        ValueMarker marker1 = new ValueMarker(1.0);\n        ValueMarker marker2 = new ValueMarker(2.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","date":"2020-05-02 17:02:47","endLine":391,"groupId":"10177","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testListenersWithXYPlot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ee/169ec7973d3a7392dd4dd7a6b303ee78d9f1ea.src","preCode":"    public void testListenersWithXYPlot() {\n        XYPlot plot = new XYPlot();\n        ValueMarker marker1 = new ValueMarker(1.0);\n        ValueMarker marker2 = new ValueMarker(2.0);\n        plot.addDomainMarker(marker1);\n        plot.addRangeMarker(marker2);\n        EventListener[] listeners1 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners1).contains(plot));\n        EventListener[] listeners2 = marker1.getListeners(\n                MarkerChangeListener.class);\n        assertTrue(Arrays.asList(listeners2).contains(plot));\n        plot.clearDomainMarkers();\n        plot.clearRangeMarkers();\n        listeners1 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners1).contains(plot));\n        listeners2 = marker1.getListeners(MarkerChangeListener.class);\n        assertFalse(Arrays.asList(listeners2).contains(plot));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/MarkerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"M"}],"commitId":"b2727580a3e9f8b32bf9d673054a476b8c7343e8","commitMessage":"@@@Fix compiler warnings.","date":"2020-05-02 17:02:47","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"}]
