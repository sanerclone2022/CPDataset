[{"authorTime":"2017-05-06 16:43:53","codes":[{"authorDate":"2017-05-06 16:43:53","commitOrder":1,"curCode":"    public void testFindLiveItemsLowerBound_Ascending() {\n        DefaultXYDataset d = new DefaultXYDataset() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.ASCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0,\n                11.1));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0,\n                2.2));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{1.0, 2.0}, {9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0,\n                2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0,\n                3.3));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0,\n                4.4));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{1.0, 2.0, 3.0}, {9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0,\n                2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0,\n                3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0,\n                4.4));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 3.0, 4.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0,\n                2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0,\n                3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0,\n                4.4));\n        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0,\n                5.5));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 2.0, 2.0, 3.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0,\n                4.0));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0,\n                4.0));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0,\n                4.0));\n        assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0,\n                4.0));\n\n    }\n","date":"2017-05-06 16:43:53","endLine":188,"groupId":"734","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLiveItemsLowerBound_Ascending","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a5/48d502def175584762e83070e64ea4c5948e3c.src","preCode":"    public void testFindLiveItemsLowerBound_Ascending() {\n        DefaultXYDataset d = new DefaultXYDataset() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.ASCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0,\n                11.1));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0,\n                2.2));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{1.0, 2.0}, {9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0,\n                2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0,\n                3.3));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0,\n                4.4));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{1.0, 2.0, 3.0}, {9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0,\n                2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0,\n                3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0,\n                4.4));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 3.0, 4.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0,\n                1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0,\n                2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0,\n                3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0,\n                4.4));\n        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0,\n                5.5));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 2.0, 2.0, 3.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0,\n                4.0));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0,\n                4.0));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0,\n                4.0));\n        assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0,\n                4.0));\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"B"},{"authorDate":"2017-05-06 16:43:53","commitOrder":1,"curCode":"    public void testFindLiveItemsUpperBound_Descending() {\n        DefaultXYDataset d = new DefaultXYDataset() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.DESCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0,\n                11.0));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0,\n                1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 1.1,\n                2.0));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{2.0, 1.0}, {9.9, 9.9}});\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1,\n                0.5));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1,\n                1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 1.1,\n                2.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 2.2,\n                3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 3.3,\n                4.0));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{3.0, 2.0, 1.0}, {9.9, 9.9, 9.9}});\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0,\n                1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0,\n                2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0,\n                3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0,\n                4.0));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{4.0, 3.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1,\n                0.5));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1,\n                1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 1.1,\n                2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 2.2,\n                3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 3.3,\n                4.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 4.4,\n                5.0));\n\n        \r\n        d.addSeries(\"S6\", new double[][] {{3.0, 2.0, 2.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 0.0,\n                5.0));\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 1.0,\n                5.0));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 5, 2.0,\n                5.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 5, 3.0,\n                5.0));\n    }\n","date":"2017-05-06 16:43:53","endLine":479,"groupId":"734","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindLiveItemsUpperBound_Descending","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a5/48d502def175584762e83070e64ea4c5948e3c.src","preCode":"    public void testFindLiveItemsUpperBound_Descending() {\n        DefaultXYDataset d = new DefaultXYDataset() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.DESCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0,\n                11.0));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0,\n                1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 1.1,\n                2.0));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{2.0, 1.0}, {9.9, 9.9}});\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1,\n                0.5));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1,\n                1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 1.1,\n                2.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 2.2,\n                3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 3.3,\n                4.0));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{3.0, 2.0, 1.0}, {9.9, 9.9, 9.9}});\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0,\n                1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0,\n                2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0,\n                3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0,\n                4.0));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{4.0, 3.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1,\n                0.5));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1,\n                1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 1.1,\n                2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 2.2,\n                3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 3.3,\n                4.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 4.4,\n                5.0));\n\n        \r\n        d.addSeries(\"S6\", new double[][] {{3.0, 2.0, 2.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 0.0,\n                5.0));\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 1.0,\n                5.0));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 5, 2.0,\n                5.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 5, 3.0,\n                5.0));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":407,"status":"B"}],"commitId":"b19a328a7e890bb0318760164e5e3ab7ba73a750","commitMessage":"@@@Rename RendererUtilities --> RendererUtils.","date":"2017-05-06 16:43:53","modifiedFileCount":"1","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-24 19:47:03","codes":[{"authorDate":"2020-03-24 19:47:03","commitOrder":2,"curCode":"    public void testFindLiveItemsLowerBound_Ascending() {\n        DefaultXYDataset<String> d = new DefaultXYDataset<String>() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.ASCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.1));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 2.2));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{1.0, 2.0}, {9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{1.0, 2.0, 3.0}, {9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 3.0, 4.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4));\n        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 2.0, 2.0, 3.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 4.0));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 4.0));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 4.0));\n        assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.0));\n\n    }\n","date":"2020-03-24 19:47:03","endLine":150,"groupId":"10448","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLiveItemsLowerBound_Ascending","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/cd93dd6ca60f64914d0d73ab18c09798789b09.src","preCode":"    public void testFindLiveItemsLowerBound_Ascending() {\n        DefaultXYDataset d = new DefaultXYDataset() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.ASCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.1));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 2.2));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{1.0, 2.0}, {9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{1.0, 2.0, 3.0}, {9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 3.0, 4.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3));\n        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4));\n        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{1.0, 2.0, 2.0, 2.0, 3.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 4.0));\n        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 4.0));\n        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 4.0));\n        assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.0));\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-03-24 19:47:03","commitOrder":2,"curCode":"    public void testFindLiveItemsUpperBound_Descending() {\n        DefaultXYDataset<String> d = new DefaultXYDataset<String>() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.DESCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 1.1, 2.0));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{2.0, 1.0}, {9.9, 9.9}});\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 0.5));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 1.1, 2.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 2.2, 3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 3.3, 4.0));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{3.0, 2.0, 1.0}, {9.9, 9.9, 9.9}});\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.0));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{4.0, 3.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 0.5));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 1.1, 2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 2.2, 3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 3.3, 4.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 4.4, 5.0));\n\n        \r\n        d.addSeries(\"S6\", new double[][] {{3.0, 2.0, 2.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 0.0, 5.0));\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 1.0, 5.0));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 5, 2.0, 5.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 5, 3.0, 5.0));\n    }\n","date":"2020-03-24 19:47:03","endLine":361,"groupId":"10448","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindLiveItemsUpperBound_Descending","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/cd93dd6ca60f64914d0d73ab18c09798789b09.src","preCode":"    public void testFindLiveItemsUpperBound_Descending() {\n        DefaultXYDataset d = new DefaultXYDataset() {\n            @Override\n            public DomainOrder getDomainOrder() {\n                \r\n                \r\n                return DomainOrder.DESCENDING;\n            }\n        };\n        \r\n        d.addSeries(\"S1\", new double[][] {{}, {}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0));\n\n        \r\n        d.addSeries(\"S2\", new double[][] {{1.0}, {9.9}});\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 1.1, 2.0));\n\n        \r\n        d.addSeries(\"S3\", new double[][] {{2.0, 1.0}, {9.9, 9.9}});\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 0.5));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 1.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 1.1, 2.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 2.2, 3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 3.3, 4.0));\n\n        \r\n        d.addSeries(\"S4\", new double[][] {{3.0, 2.0, 1.0}, {9.9, 9.9, 9.9}});\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.0));\n\n        \r\n        d.addSeries(\"S5\", new double[][] {{4.0, 3.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9}});\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 0.5));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 1.0));\n        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 1.1, 2.0));\n        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 2.2, 3.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 3.3, 4.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 4.4, 5.0));\n\n        \r\n        d.addSeries(\"S6\", new double[][] {{3.0, 2.0, 2.0, 2.0, 1.0}, {9.9, 9.9,\n                9.9, 9.9, 9.9}});\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 0.0, 5.0));\n        assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 1.0, 5.0));\n        assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 5, 2.0, 5.0));\n        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 5, 3.0, 5.0));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"768ee10eb77abd31a62f6f26d6e0153c05a415c9","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-24 19:47:03","modifiedFileCount":"23","status":"M","submitter":"David Gilbert"}]
