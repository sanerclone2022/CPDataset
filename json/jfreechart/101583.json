[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":4967,"groupId":"3470","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4788,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.domainIsPointsInTime != that.domainIsPointsInTime) {\n            return false;\n        }\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":461,"groupId":"3310","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/74/df865d1075952137a12b8b3dd4d0bb1232ad76.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.domainIsPointsInTime != that.domainIsPointsInTime) {\n            return false;\n        }\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-03-08 01:39:11","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":4974,"groupId":"3483","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/945677da3c26a1f99b00d8efa0bf0af0c69d3c.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4795,"status":"M"},{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.domainIsPointsInTime != that.domainIsPointsInTime) {\n            return false;\n        }\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2017-03-08 01:39:11","endLine":461,"groupId":"3310","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1b/194b5636e7d3a4d61938408c225297323b8cce.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.domainIsPointsInTime != that.domainIsPointsInTime) {\n            return false;\n        }\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"M"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-09 17:48:20","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":4974,"groupId":"3483","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/945677da3c26a1f99b00d8efa0bf0af0c69d3c.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4795,"status":"N"},{"authorDate":"2017-03-09 17:48:20","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2017-03-09 17:48:20","endLine":450,"groupId":"3483","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/7b929a18870869d6d911c997687609f7cecb4f.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.domainIsPointsInTime != that.domainIsPointsInTime) {\n            return false;\n        }\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"M"}],"commitId":"e4e04e10a80308f2dd5784956d684376faf5b608","commitMessage":"@@@Remove deprecated code and update tests.","date":"2017-03-09 17:48:20","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-09 17:48:20","codes":[{"authorDate":"2020-01-03 06:39:51","commitOrder":4,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasets, that.datasets)){\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2020-01-03 06:39:51","endLine":4951,"groupId":"3483","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/dd/7a120494c78b3a6d318d54e99520df2055ab09.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4769,"status":"M"},{"authorDate":"2017-03-09 17:48:20","commitOrder":4,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2017-03-09 17:48:20","endLine":450,"groupId":"3483","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/7b929a18870869d6d911c997687609f7cecb4f.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"N"}],"commitId":"b8078029e88acfe85e50caaa4b078184d55c2a15","commitMessage":"@@@Merge pr/115","date":"2020-01-03 06:39:51","modifiedFileCount":"26","status":"M","submitter":"Tracy Hiltbrand"},{"authorTime":"2017-03-09 17:48:20","codes":[{"authorDate":"2020-03-29 18:04:41","commitOrder":5,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }               \n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<R, C> that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasets, that.datasets)){\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2020-03-29 18:04:41","endLine":4776,"groupId":"3483","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }\n        CategoryPlot that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasets, that.datasets)){\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4593,"status":"M"},{"authorDate":"2017-03-09 17:48:20","commitOrder":5,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2017-03-09 17:48:20","endLine":450,"groupId":"3483","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/7b929a18870869d6d911c997687609f7cecb4f.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"N"}],"commitId":"e23eafd99eb9c5627dd100f927caa3ba7bbb036e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 18:04:41","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-07-01 12:16:46","codes":[{"authorDate":"2020-07-01 12:16:46","commitOrder":6,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }               \n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<R, C> that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!Objects.equals(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!Objects.equals(this.datasetToDomainAxesMap, that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!Objects.equals(this.datasetToRangeAxesMap, that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!Objects.equals(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!Objects.equals(this.domainGridlineStroke, that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!Objects.equals(this.rangeGridlineStroke, that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!Objects.equals(this.rangeCrosshairStroke, that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!Objects.equals(this.foregroundDomainMarkers, that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!Objects.equals(this.datasets, that.datasets)){\n            return false;\n        }\n        if (!Objects.equals(this.backgroundDomainMarkers, that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!Objects.equals(this.foregroundRangeMarkers, that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!Objects.equals(this.backgroundRangeMarkers, that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!Objects.equals(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!Objects.equals(this.fixedDomainAxisSpace, that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!Objects.equals(this.fixedRangeAxisSpace, that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!Objects.equals(this.fixedLegendItems, that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!Objects.equals(this.domainCrosshairColumnKey, that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!Objects.equals(this.domainCrosshairRowKey, that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!Objects.equals(this.domainCrosshairStroke, that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!Objects.equals(this.rangeMinorGridlineStroke, that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!Objects.equals(this.rangeZeroBaselineStroke, that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!Objects.equals(this.shadowGenerator, that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2020-07-01 12:16:46","endLine":4758,"groupId":"101583","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4d/89a3aa8bb9d31b92eb890a6e248eb28d44eaed.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryPlot)) {\n            return false;\n        }               \n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<R, C> that = (CategoryPlot) obj;\n        if (this.orientation != that.orientation) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.axisOffset, that.axisOffset)) {\n            return false;\n        }\n        if (!this.domainAxes.equals(that.domainAxes)) {\n            return false;\n        }\n        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {\n            return false;\n        }\n        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {\n            return false;\n        }\n        if (!this.rangeAxes.equals(that.rangeAxes)) {\n            return false;\n        }\n        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToDomainAxesMap,\n                that.datasetToDomainAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasetToRangeAxesMap,\n                that.datasetToRangeAxesMap)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.renderers, that.renderers)) {\n            return false;\n        }\n        if (this.renderingOrder != that.renderingOrder) {\n            return false;\n        }\n        if (this.columnRenderingOrder != that.columnRenderingOrder) {\n            return false;\n        }\n        if (this.rowRenderingOrder != that.rowRenderingOrder) {\n            return false;\n        }\n        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {\n            return false;\n        }\n        if (this.domainGridlinePosition != that.domainGridlinePosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainGridlineStroke,\n                that.domainGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainGridlinePaint,\n                that.domainGridlinePaint)) {\n            return false;\n        }\n        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeGridlineStroke,\n                that.rangeGridlineStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeGridlinePaint,\n                that.rangeGridlinePaint)) {\n            return false;\n        }\n        if (this.anchorValue != that.anchorValue) {\n            return false;\n        }\n        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {\n            return false;\n        }\n        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeCrosshairStroke,\n                that.rangeCrosshairStroke)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeCrosshairPaint,\n                that.rangeCrosshairPaint)) {\n            return false;\n        }\n        if (this.rangeCrosshairLockedOnData\n                != that.rangeCrosshairLockedOnData) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundDomainMarkers,\n                that.foregroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.datasets, that.datasets)){\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundDomainMarkers,\n                that.backgroundDomainMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.foregroundRangeMarkers,\n                that.foregroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.backgroundRangeMarkers,\n                that.backgroundRangeMarkers)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.annotations, that.annotations)) {\n            return false;\n        }\n        if (this.weight != that.weight) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedDomainAxisSpace,\n                that.fixedDomainAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedRangeAxisSpace,\n                that.fixedRangeAxisSpace)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.fixedLegendItems,\n                that.fixedLegendItems)) {\n            return false;\n        }\n        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {\n            return false;\n        }\n        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairColumnKey,\n                that.domainCrosshairColumnKey)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairRowKey,\n                that.domainCrosshairRowKey)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.domainCrosshairPaint,\n                that.domainCrosshairPaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.domainCrosshairStroke,\n                that.domainCrosshairStroke)) {\n            return false;\n        }\n        if (this.rangeMinorGridlinesVisible\n                != that.rangeMinorGridlinesVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeMinorGridlinePaint,\n                that.rangeMinorGridlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeMinorGridlineStroke,\n                that.rangeMinorGridlineStroke)) {\n            return false;\n        }\n        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,\n                that.rangeZeroBaselinePaint)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rangeZeroBaselineStroke,\n                that.rangeZeroBaselineStroke)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.shadowGenerator,\n                that.shadowGenerator)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4593,"status":"M"},{"authorDate":"2020-07-01 12:16:46","commitOrder":6,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!Objects.equals(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2020-07-01 12:16:46","endLine":439,"groupId":"101583","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/62/dcfa9458aede761a7530759ed0c403731a6be0.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimePeriodValuesCollection)) {\n            return false;\n        }\n        TimePeriodValuesCollection that = (TimePeriodValuesCollection) obj;\n        if (this.xPosition != that.xPosition) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":424,"status":"M"}],"commitId":"1955cc38345a5ea52879eb186f09cf2e930bd9e6","commitMessage":"@@@Merge pull request #163 from simon04/use-Objects\n\nUse Objects.hashCode.  Objects.equals.  CloneUtils.clone.  CloneUtils.cloneList.  remove ObjectUtils","date":"2020-07-01 12:16:46","modifiedFileCount":"130","status":"M","submitter":"David Gilbert"}]
