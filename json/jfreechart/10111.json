[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = (DialPointer) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        i1.addChangeListener(l1);\n        assertTrue(i1.hasListener(l1));\n        assertFalse(i2.hasListener(l1));\n    }\n","date":"2016-02-19 15:40:32","endLine":151,"groupId":"3118","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/20/63b63d997477626f951ca36ba35f2384b845ef.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = (DialPointer) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        i1.addChangeListener(l1);\n        assertTrue(i1.hasListener(l1));\n        assertFalse(i2.hasListener(l1));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() {\n        XYDataItem i1 = new XYDataItem(1.0, 1.1);\n        XYDataItem i2 = (XYDataItem) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n    }\n","date":"2016-02-19 15:40:32","endLine":82,"groupId":"658","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/dd/1b59e00f59a614d05a9e50a31f0ae669ed8304.src","preCode":"    public void testCloning() {\n        XYDataItem i1 = new XYDataItem(1.0, 1.1);\n        XYDataItem i2 = (XYDataItem) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-03-20 13:30:17","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = CloneUtils.clone(i1);\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        i1.addChangeListener(l1);\n        assertTrue(i1.hasListener(l1));\n        assertFalse(i2.hasListener(l1));\n    }\n","date":"2020-03-20 13:30:17","endLine":147,"groupId":"3118","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a9/426b036552b599c7c50481c932eb6bf9f58c16.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = (DialPointer) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        i1.addChangeListener(l1);\n        assertTrue(i1.hasListener(l1));\n        assertFalse(i2.hasListener(l1));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() {\n        XYDataItem i1 = new XYDataItem(1.0, 1.1);\n        XYDataItem i2 = (XYDataItem) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n    }\n","date":"2016-02-19 15:40:32","endLine":82,"groupId":"658","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/dd/1b59e00f59a614d05a9e50a31f0ae669ed8304.src","preCode":"    public void testCloning() {\n        XYDataItem i1 = new XYDataItem(1.0, 1.1);\n        XYDataItem i2 = (XYDataItem) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"3aca96e09a7df5fc1974f5be952f174849b860df","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 13:30:17","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 14:04:13","codes":[{"authorDate":"2020-03-20 13:30:17","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = CloneUtils.clone(i1);\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        i1.addChangeListener(l1);\n        assertTrue(i1.hasListener(l1));\n        assertFalse(i2.hasListener(l1));\n    }\n","date":"2020-03-20 13:30:17","endLine":147,"groupId":"10111","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a9/426b036552b599c7c50481c932eb6bf9f58c16.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = CloneUtils.clone(i1);\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        i1.addChangeListener(l1);\n        assertTrue(i1.hasListener(l1));\n        assertFalse(i2.hasListener(l1));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"N"},{"authorDate":"2020-03-21 14:04:13","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYDataItem i1 = new XYDataItem(1.0, 1.1);\n        XYDataItem i2 = CloneUtils.clone(i1);\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n    }\n","date":"2020-03-21 14:04:13","endLine":79,"groupId":"10111","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1a/72c9bbc44b37e8293ace17e706581d87e9d51b.src","preCode":"    public void testCloning() {\n        XYDataItem i1 = new XYDataItem(1.0, 1.1);\n        XYDataItem i2 = (XYDataItem) i1.clone();\n        assertTrue(i1 != i2);\n        assertTrue(i1.getClass() == i2.getClass());\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYDataItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"9ea09ccfbc22aa058680ba2eb8ee46570beac02b","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 14:04:13","modifiedFileCount":"14","status":"M","submitter":"David Gilbert"}]
