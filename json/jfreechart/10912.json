[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":102,"groupId":"3413","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/f85dd49887c7dddfadc0590ddceb5c1ab9a895.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2016-02-19 15:40:32","endLine":124,"groupId":"1243","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/f85dd49887c7dddfadc0590ddceb5c1ab9a895.src","preCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":102,"groupId":"3413","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/f85dd49887c7dddfadc0590ddceb5c1ab9a895.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2017-05-06 16:41:21","endLine":124,"groupId":"1243","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b6/6539e3abe375a8d557ed0debe480beec43fc5d.src","preCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 19:26:58","codes":[{"authorDate":"2020-03-21 19:26:58","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2020-03-21 19:26:58","endLine":97,"groupId":"2413","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/85d75b4b0b3afa4f54110902cb04e61e2d3930.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2020-03-21 19:26:58","commitOrder":3,"curCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-03-21 19:26:58","endLine":118,"groupId":"1243","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/85d75b4b0b3afa4f54110902cb04e61e2d3930.src","preCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = (YIntervalSeriesCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"0964e1a75d38ec8d734f8340a6335accc414119c","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 19:26:58","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 21:16:11","codes":[{"authorDate":"2020-03-22 21:16:11","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection<String> c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2020-03-22 21:16:11","endLine":97,"groupId":"1427","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a2/d99eaa5ae77e30bbe0e9e7b6e4dd4fb6b46fd1.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2020-03-22 21:16:11","commitOrder":4,"curCode":"    public void testSerialization() {\n        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-03-22 21:16:11","endLine":119,"groupId":"1427","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a2/d99eaa5ae77e30bbe0e9e7b6e4dd4fb6b46fd1.src","preCode":"    public void testSerialization() {\n        YIntervalSeriesCollection c1 = new YIntervalSeriesCollection();\n        YIntervalSeries s1 = new YIntervalSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        YIntervalSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"cb65254c83ba27848719a0d4765348ca3f2bbd5c","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 21:16:11","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-09-28 02:21:39","codes":[{"authorDate":"2020-03-22 21:16:11","commitOrder":5,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection<String> c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2020-03-22 21:16:11","endLine":97,"groupId":"10912","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a2/d99eaa5ae77e30bbe0e9e7b6e4dd4fb6b46fd1.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection<String> c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"},{"authorDate":"2020-09-28 02:21:39","commitOrder":5,"curCode":"    public void testSerialization() {\n        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection<String> c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-09-28 02:21:39","endLine":119,"groupId":"10912","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8f/82299a6183da82d9a51f12e2cf556f7f26a5e1.src","preCode":"    public void testSerialization() {\n        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        YIntervalSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"974c482aab44e6b02931934beb28155f0fabe62e","commitMessage":"@@@Fix compiler warnings in test classes.","date":"2020-09-28 02:21:39","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"}]
