[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSizingWithWidthConstraint() {\n        RectangleConstraint constraint = new RectangleConstraint(\n                10.0, new Range(10.0, 10.0), LengthConstraintType.FIXED,\n                0.0, new Range(0.0, 0.0), LengthConstraintType.NONE);\n\n        BlockContainer container = new BlockContainer(new BorderArrangement());\n        BufferedImage image = new BufferedImage(200, 100,\n                BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2 = image.createGraphics();\n\n        \r\n        \r\n        container.add(new EmptyBlock(5.0, 6.0));\n        Size2D size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(6.0, size.height, EPSILON);\n\n        container.clear();\n        container.add(new EmptyBlock(15.0, 16.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(7.0, 20.0));\n        container.add(new EmptyBlock(8.0, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(5.4, 3.2), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(12.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(0.0, size.height, EPSILON);\n\n    }\n","date":"2016-02-19 15:40:32","endLine":775,"groupId":"3529","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSizingWithWidthConstraint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1b/e859089afb1b49710b691f176a898546ad661d.src","preCode":"    public void testSizingWithWidthConstraint() {\n        RectangleConstraint constraint = new RectangleConstraint(\n                10.0, new Range(10.0, 10.0), LengthConstraintType.FIXED,\n                0.0, new Range(0.0, 0.0), LengthConstraintType.NONE);\n\n        BlockContainer container = new BlockContainer(new BorderArrangement());\n        BufferedImage image = new BufferedImage(200, 100,\n                BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2 = image.createGraphics();\n\n        \r\n        \r\n        container.add(new EmptyBlock(5.0, 6.0));\n        Size2D size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(6.0, size.height, EPSILON);\n\n        container.clear();\n        container.add(new EmptyBlock(15.0, 16.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(7.0, 20.0));\n        container.add(new EmptyBlock(8.0, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(5.4, 3.2), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(12.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(0.0, size.height, EPSILON);\n\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BorderArrangementTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        BlockContainer c1 = new BlockContainer(new FlowArrangement());\n        c1.add(new EmptyBlock(1.2, 3.4));\n        BlockContainer c2 = (BlockContainer) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":87,"groupId":"3888","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/86/5e3460033de8c622ad743c4ef4921a0baf35d2.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        BlockContainer c1 = new BlockContainer(new FlowArrangement());\n        c1.add(new EmptyBlock(1.2, 3.4));\n        BlockContainer c2 = (BlockContainer) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BlockContainerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-20 14:01:04","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testSizingWithWidthConstraint() {\n        RectangleConstraint constraint = new RectangleConstraint(\n                10.0, new Range(10.0, 10.0), LengthConstraintType.FIXED,\n                0.0, new Range(0.0, 0.0), LengthConstraintType.NONE);\n\n        BlockContainer container = new BlockContainer(new BorderArrangement());\n        BufferedImage image = new BufferedImage(200, 100,\n                BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2 = image.createGraphics();\n\n        \r\n        \r\n        container.add(new EmptyBlock(5.0, 6.0));\n        Size2D size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(6.0, size.height, EPSILON);\n\n        container.clear();\n        container.add(new EmptyBlock(15.0, 16.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(7.0, 20.0));\n        container.add(new EmptyBlock(8.0, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(5.4, 3.2), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(12.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(0.0, size.height, EPSILON);\n\n    }\n","date":"2016-02-19 15:40:32","endLine":775,"groupId":"10497","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSizingWithWidthConstraint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1b/e859089afb1b49710b691f176a898546ad661d.src","preCode":"    public void testSizingWithWidthConstraint() {\n        RectangleConstraint constraint = new RectangleConstraint(\n                10.0, new Range(10.0, 10.0), LengthConstraintType.FIXED,\n                0.0, new Range(0.0, 0.0), LengthConstraintType.NONE);\n\n        BlockContainer container = new BlockContainer(new BorderArrangement());\n        BufferedImage image = new BufferedImage(200, 100,\n                BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2 = image.createGraphics();\n\n        \r\n        \r\n        container.add(new EmptyBlock(5.0, 6.0));\n        Size2D size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(6.0, size.height, EPSILON);\n\n        container.clear();\n        container.add(new EmptyBlock(15.0, 16.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(7.0, 20.0));\n        container.add(new EmptyBlock(8.0, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(5.4, 3.2), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(45.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0));\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(12.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(65.6, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3));\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(77.9, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(14.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);\n        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);\n        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);\n        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);\n        container.add(new EmptyBlock(9.0, 10.0));\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(16.0, size.height, EPSILON);\n\n        \r\n        \r\n        container.clear();\n        size = container.arrange(g2, constraint);\n        assertEquals(10.0, size.width, EPSILON);\n        assertEquals(0.0, size.height, EPSILON);\n\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BorderArrangementTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"N"},{"authorDate":"2020-03-20 14:01:04","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        BlockContainer c1 = new BlockContainer(new FlowArrangement());\n        c1.add(new EmptyBlock(1.2, 3.4));\n        BlockContainer c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n    }\n","date":"2020-03-20 14:01:04","endLine":84,"groupId":"10497","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/85/0bae42548d0094ee242762016d1113b4390e0c.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        BlockContainer c1 = new BlockContainer(new FlowArrangement());\n        c1.add(new EmptyBlock(1.2, 3.4));\n        BlockContainer c2 = (BlockContainer) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BlockContainerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"5fa94e7dc3519c78a929b17b16274b9e66f2812a","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 14:01:04","modifiedFileCount":"8","status":"M","submitter":"David Gilbert"}]
