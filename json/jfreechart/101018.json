[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 100.0);\n        s1.add(2.0, null);\n        s1.add(3.0, 200.0);\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":148,"groupId":"702","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 100.0);\n        s1.add(2.0, null);\n        s1.add(3.0, 200.0);\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning3() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":164,"groupId":"702","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testCloning3() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-21 14:04:13","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 100.0);\n        s1.add(2.0, null);\n        s1.add(3.0, 200.0);\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":148,"groupId":"702","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 100.0);\n        s1.add(2.0, null);\n        s1.add(3.0, 200.0);\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"N"},{"authorDate":"2020-03-21 14:04:13","commitOrder":2,"curCode":"    public void testCloning3() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        XYSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-21 14:04:13","endLine":158,"groupId":"702","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8e/fee7082329735f1a7e72124bbd0ca928fe68d7.src","preCode":"    public void testCloning3() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"9ea09ccfbc22aa058680ba2eb8ee46570beac02b","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 14:04:13","modifiedFileCount":"14","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        XYSeries<String> s1 = new XYSeries<>(\"S1\");\n        s1.add(1.0, 100.0);\n        s1.add(2.0, null);\n        s1.add(3.0, 200.0);\n        XYSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-22 19:36:23","endLine":141,"groupId":"101018","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f3/f587c233e4ad7c1bc2e384bd9a89bc19e65b17.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 100.0);\n        s1.add(2.0, null);\n        s1.add(3.0, 200.0);\n        XYSeries s2 = (XYSeries) s1.clone();\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testCloning3() throws CloneNotSupportedException {\n        XYSeries<String> s1 = new XYSeries<>(\"S1\");\n        XYSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-22 19:36:23","endLine":158,"groupId":"101018","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f3/f587c233e4ad7c1bc2e384bd9a89bc19e65b17.src","preCode":"    public void testCloning3() throws CloneNotSupportedException {\n        XYSeries s1 = new XYSeries(\"S1\");\n        XYSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s2.add(4.0, 300.0);\n        assertFalse(s1.equals(s2));\n        s1.add(4.0, 300.0);\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
