[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCalculateMedian4() {\n        List values = new ArrayList();\n        values.add(new Double(7.0));\n        values.add(new Double(2.0));\n        values.add(new Double(3.0));\n        values.add(new Double(5.0));\n        values.add(new Double(4.0));\n        values.add(new Double(6.0));\n        values.add(new Double(1.0));\n        double median = Statistics.calculateMedian(values);\n        assertEquals(4.0, median, 0.0000001);\n    }\n","date":"2016-02-19 15:40:32","endLine":288,"groupId":"570","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateMedian4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/fc/2495a1ccfb4967684c83d506830abd12f595d7.src","preCode":"    public void testCalculateMedian4() {\n        List values = new ArrayList();\n        values.add(new Double(7.0));\n        values.add(new Double(2.0));\n        values.add(new Double(3.0));\n        values.add(new Double(5.0));\n        values.add(new Double(4.0));\n        values.add(new Double(6.0));\n        values.add(new Double(1.0));\n        double median = Statistics.calculateMedian(values);\n        assertEquals(4.0, median, 0.0000001);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/StatisticsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCalculateMedian5() {\n        List values = new ArrayList();\n        values.add(new Double(11.228692993861783));\n        values.add(new Double(11.30823353859889));\n        values.add(new Double(11.75312904769314));\n        values.add(new Double(11.825102897465314));\n        values.add(new Double(10.184252778401783));\n        values.add(new Double(12.207951828057766));\n        values.add(new Double(10.68841994040566));\n        values.add(new Double(12.099522004479438));\n        values.add(new Double(11.508874945056881));\n        values.add(new Double(12.052517729558513));\n        values.add(new Double(12.401481645578734));\n        values.add(new Double(12.185377793028543));\n        values.add(new Double(10.666372951930315));\n        values.add(new Double(11.680978041499548));\n        values.add(new Double(11.06528277406718));\n        values.add(new Double(11.36876492904596));\n        values.add(new Double(11.927565516175939));\n        values.add(new Double(11.39307785978655));\n        values.add(new Double(11.989603679523857));\n        values.add(new Double(12.009834360354864));\n        values.add(new Double(10.653351822461559));\n        values.add(new Double(11.851776254376754));\n        values.add(new Double(11.045441544755946));\n        values.add(new Double(11.993674040560624));\n        values.add(new Double(12.898219965238944));\n        values.add(new Double(11.97095782819647));\n        values.add(new Double(11.73234406745488));\n        values.add(new Double(11.649006017243991));\n        values.add(new Double(12.20549704915365));\n        values.add(new Double(11.799723639384919));\n        values.add(new Double(11.896208658005628));\n        values.add(new Double(12.164149111823424));\n        values.add(new Double(12.042795103513766));\n        values.add(new Double(12.114839532596426));\n        values.add(new Double(12.166609097075824));\n        values.add(new Double(12.183017546225935));\n        values.add(new Double(11.622009125845342));\n        values.add(new Double(11.289365786738633));\n        values.add(new Double(12.462984323671568));\n        values.add(new Double(11.573494921030598));\n        values.add(new Double(10.862867940485804));\n        values.add(new Double(12.018186939664872));\n        values.add(new Double(10.418046849313018));\n        values.add(new Double(11.326344465881341));\n        double median = Statistics.calculateMedian(values, true);\n        assertEquals(11.812413268425116, median, 0.000001);\n        Collections.sort(values);\n        double median2 = Statistics.calculateMedian(values, false);\n        assertEquals(11.812413268425116, median2, 0.000001);\n    }\n","date":"2016-02-19 15:40:32","endLine":345,"groupId":"570","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateMedian5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/fc/2495a1ccfb4967684c83d506830abd12f595d7.src","preCode":"    public void testCalculateMedian5() {\n        List values = new ArrayList();\n        values.add(new Double(11.228692993861783));\n        values.add(new Double(11.30823353859889));\n        values.add(new Double(11.75312904769314));\n        values.add(new Double(11.825102897465314));\n        values.add(new Double(10.184252778401783));\n        values.add(new Double(12.207951828057766));\n        values.add(new Double(10.68841994040566));\n        values.add(new Double(12.099522004479438));\n        values.add(new Double(11.508874945056881));\n        values.add(new Double(12.052517729558513));\n        values.add(new Double(12.401481645578734));\n        values.add(new Double(12.185377793028543));\n        values.add(new Double(10.666372951930315));\n        values.add(new Double(11.680978041499548));\n        values.add(new Double(11.06528277406718));\n        values.add(new Double(11.36876492904596));\n        values.add(new Double(11.927565516175939));\n        values.add(new Double(11.39307785978655));\n        values.add(new Double(11.989603679523857));\n        values.add(new Double(12.009834360354864));\n        values.add(new Double(10.653351822461559));\n        values.add(new Double(11.851776254376754));\n        values.add(new Double(11.045441544755946));\n        values.add(new Double(11.993674040560624));\n        values.add(new Double(12.898219965238944));\n        values.add(new Double(11.97095782819647));\n        values.add(new Double(11.73234406745488));\n        values.add(new Double(11.649006017243991));\n        values.add(new Double(12.20549704915365));\n        values.add(new Double(11.799723639384919));\n        values.add(new Double(11.896208658005628));\n        values.add(new Double(12.164149111823424));\n        values.add(new Double(12.042795103513766));\n        values.add(new Double(12.114839532596426));\n        values.add(new Double(12.166609097075824));\n        values.add(new Double(12.183017546225935));\n        values.add(new Double(11.622009125845342));\n        values.add(new Double(11.289365786738633));\n        values.add(new Double(12.462984323671568));\n        values.add(new Double(11.573494921030598));\n        values.add(new Double(10.862867940485804));\n        values.add(new Double(12.018186939664872));\n        values.add(new Double(10.418046849313018));\n        values.add(new Double(11.326344465881341));\n        double median = Statistics.calculateMedian(values, true);\n        assertEquals(11.812413268425116, median, 0.000001);\n        Collections.sort(values);\n        double median2 = Statistics.calculateMedian(values, false);\n        assertEquals(11.812413268425116, median2, 0.000001);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/StatisticsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-01-02 22:51:31","codes":[{"authorDate":"2020-01-02 22:51:31","commitOrder":2,"curCode":"    public void testCalculateMedian4() {\n        List<Double> values = new ArrayList<>();\n        values.add(7.0);\n        values.add(2.0);\n        values.add(3.0);\n        values.add(5.0);\n        values.add(4.0);\n        values.add(6.0);\n        values.add(1.0);\n        double median = Statistics.calculateMedian(values);\n        assertEquals(4.0, median, 0.0000001);\n    }\n","date":"2020-01-02 22:51:31","endLine":267,"groupId":"10694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateMedian4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1d/ad0c0f4fba2cc478c1352a8ca9a8b93ccc9e02.src","preCode":"    public void testCalculateMedian4() {\n        List values = new ArrayList();\n        values.add(new Double(7.0));\n        values.add(new Double(2.0));\n        values.add(new Double(3.0));\n        values.add(new Double(5.0));\n        values.add(new Double(4.0));\n        values.add(new Double(6.0));\n        values.add(new Double(1.0));\n        double median = Statistics.calculateMedian(values);\n        assertEquals(4.0, median, 0.0000001);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/StatisticsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"},{"authorDate":"2020-01-02 22:51:31","commitOrder":2,"curCode":"    public void testCalculateMedian5() {\n        List<Double> values = new ArrayList<>();\n        values.add(11.228692993861783);\n        values.add(11.30823353859889);\n        values.add(11.75312904769314);\n        values.add(11.825102897465314);\n        values.add(10.184252778401783);\n        values.add(12.207951828057766);\n        values.add(10.68841994040566);\n        values.add(12.099522004479438);\n        values.add(11.508874945056881);\n        values.add(12.052517729558513);\n        values.add(12.401481645578734);\n        values.add(12.185377793028543);\n        values.add(10.666372951930315);\n        values.add(11.680978041499548);\n        values.add(11.06528277406718);\n        values.add(11.36876492904596);\n        values.add(11.927565516175939);\n        values.add(11.39307785978655);\n        values.add(11.989603679523857);\n        values.add(12.009834360354864);\n        values.add(10.653351822461559);\n        values.add(11.851776254376754);\n        values.add(11.045441544755946);\n        values.add(11.993674040560624);\n        values.add(12.898219965238944);\n        values.add(11.97095782819647);\n        values.add(11.73234406745488);\n        values.add(11.649006017243991);\n        values.add(12.20549704915365);\n        values.add(11.799723639384919);\n        values.add(11.896208658005628);\n        values.add(12.164149111823424);\n        values.add(12.042795103513766);\n        values.add(12.114839532596426);\n        values.add(12.166609097075824);\n        values.add(12.183017546225935);\n        values.add(11.622009125845342);\n        values.add(11.289365786738633);\n        values.add(12.462984323671568);\n        values.add(11.573494921030598);\n        values.add(10.862867940485804);\n        values.add(12.018186939664872);\n        values.add(10.418046849313018);\n        values.add(11.326344465881341);\n        double median = Statistics.calculateMedian(values, true);\n        assertEquals(11.812413268425116, median, 0.000001);\n        Collections.sort(values);\n        double median2 = Statistics.calculateMedian(values, false);\n        assertEquals(11.812413268425116, median2, 0.000001);\n    }\n","date":"2020-01-02 22:51:31","endLine":324,"groupId":"10694","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateMedian5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1d/ad0c0f4fba2cc478c1352a8ca9a8b93ccc9e02.src","preCode":"    public void testCalculateMedian5() {\n        List values = new ArrayList();\n        values.add(new Double(11.228692993861783));\n        values.add(new Double(11.30823353859889));\n        values.add(new Double(11.75312904769314));\n        values.add(new Double(11.825102897465314));\n        values.add(new Double(10.184252778401783));\n        values.add(new Double(12.207951828057766));\n        values.add(new Double(10.68841994040566));\n        values.add(new Double(12.099522004479438));\n        values.add(new Double(11.508874945056881));\n        values.add(new Double(12.052517729558513));\n        values.add(new Double(12.401481645578734));\n        values.add(new Double(12.185377793028543));\n        values.add(new Double(10.666372951930315));\n        values.add(new Double(11.680978041499548));\n        values.add(new Double(11.06528277406718));\n        values.add(new Double(11.36876492904596));\n        values.add(new Double(11.927565516175939));\n        values.add(new Double(11.39307785978655));\n        values.add(new Double(11.989603679523857));\n        values.add(new Double(12.009834360354864));\n        values.add(new Double(10.653351822461559));\n        values.add(new Double(11.851776254376754));\n        values.add(new Double(11.045441544755946));\n        values.add(new Double(11.993674040560624));\n        values.add(new Double(12.898219965238944));\n        values.add(new Double(11.97095782819647));\n        values.add(new Double(11.73234406745488));\n        values.add(new Double(11.649006017243991));\n        values.add(new Double(12.20549704915365));\n        values.add(new Double(11.799723639384919));\n        values.add(new Double(11.896208658005628));\n        values.add(new Double(12.164149111823424));\n        values.add(new Double(12.042795103513766));\n        values.add(new Double(12.114839532596426));\n        values.add(new Double(12.166609097075824));\n        values.add(new Double(12.183017546225935));\n        values.add(new Double(11.622009125845342));\n        values.add(new Double(11.289365786738633));\n        values.add(new Double(12.462984323671568));\n        values.add(new Double(11.573494921030598));\n        values.add(new Double(10.862867940485804));\n        values.add(new Double(12.018186939664872));\n        values.add(new Double(10.418046849313018));\n        values.add(new Double(11.326344465881341));\n        double median = Statistics.calculateMedian(values, true);\n        assertEquals(11.812413268425116, median, 0.000001);\n        Collections.sort(values);\n        double median2 = Statistics.calculateMedian(values, false);\n        assertEquals(11.812413268425116, median2, 0.000001);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/StatisticsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"074c717f60bfabb44669be23706328a00abc7bcd","commitMessage":"@@@Fix compiler warnings.","date":"2020-01-02 22:51:31","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"}]
