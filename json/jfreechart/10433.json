[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        StandardXYItemRenderer r1 = new StandardXYItemRenderer();\n        StandardXYItemRenderer r2 = new StandardXYItemRenderer();\n        assertEquals(r1, r2);\n\n        r1.setBaseShapesVisible(true);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesVisible(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotLines(false);\n        assertFalse(r1.equals(r2));\n        r2.setPlotLines(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotImages(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotImages(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotDiscontinuous(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotDiscontinuous(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThresholdType(UnitType.ABSOLUTE);\n        assertFalse(r1.equals(r2));\n        r2.setGapThresholdType(UnitType.ABSOLUTE);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThreshold(1.23);\n        assertFalse(r1.equals(r2));\n        r2.setGapThreshold(1.23);\n        assertTrue(r1.equals(r2));\n\n        r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(r1.equals(r2));\n        r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(r1.equals(r2));\n\n        r1.setShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        r1.setBaseShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setDrawSeriesLineAsPath(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawSeriesLineAsPath(true);\n        assertTrue(r1.equals(r2));\n    }\n","date":"2016-02-19 15:40:32","endLine":142,"groupId":"4326","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/81/10e8c868437b7e1281d0df6725d57128d12e8c.src","preCode":"    public void testEquals() {\n        StandardXYItemRenderer r1 = new StandardXYItemRenderer();\n        StandardXYItemRenderer r2 = new StandardXYItemRenderer();\n        assertEquals(r1, r2);\n\n        r1.setBaseShapesVisible(true);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesVisible(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotLines(false);\n        assertFalse(r1.equals(r2));\n        r2.setPlotLines(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotImages(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotImages(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotDiscontinuous(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotDiscontinuous(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThresholdType(UnitType.ABSOLUTE);\n        assertFalse(r1.equals(r2));\n        r2.setGapThresholdType(UnitType.ABSOLUTE);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThreshold(1.23);\n        assertFalse(r1.equals(r2));\n        r2.setGapThreshold(1.23);\n        assertTrue(r1.equals(r2));\n\n        r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(r1.equals(r2));\n        r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(r1.equals(r2));\n\n        r1.setShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        r1.setBaseShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setDrawSeriesLineAsPath(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawSeriesLineAsPath(true);\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals2() {\n        TestRenderer r1 = new TestRenderer();\n        TestRenderer r2 = new TestRenderer();\n        assertTrue(r1.equals(r2));\n        r1.setTreatLegendShapeAsLine(true);\n        assertFalse(r1.equals(r2));\n        r2.setTreatLegendShapeAsLine(true);\n        assertTrue(r1.equals(r2));\n    }\n","date":"2016-02-19 15:40:32","endLine":496,"groupId":"4326","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3b/2dfd5a614592a080f2744c67b4b81c674d356e.src","preCode":"    public void testEquals2() {\n        TestRenderer r1 = new TestRenderer();\n        TestRenderer r2 = new TestRenderer();\n        assertTrue(r1.equals(r2));\n        r1.setTreatLegendShapeAsLine(true);\n        assertFalse(r1.equals(r2));\n        r2.setTreatLegendShapeAsLine(true);\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-03-11 02:23:23","commitOrder":2,"curCode":"    public void testEquals() {\n        StandardXYItemRenderer r1 = new StandardXYItemRenderer();\n        StandardXYItemRenderer r2 = new StandardXYItemRenderer();\n        assertEquals(r1, r2);\n\n        r1.setBaseShapesVisible(true);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesVisible(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotLines(false);\n        assertFalse(r1.equals(r2));\n        r2.setPlotLines(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotImages(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotImages(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotDiscontinuous(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotDiscontinuous(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThresholdType(UnitType.ABSOLUTE);\n        assertFalse(r1.equals(r2));\n        r2.setGapThresholdType(UnitType.ABSOLUTE);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThreshold(1.23);\n        assertFalse(r1.equals(r2));\n        r2.setGapThreshold(1.23);\n        assertTrue(r1.equals(r2));\n\n        r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(r1.equals(r2));\n        r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(r1.equals(r2));\n\n        r1.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        r1.setBaseShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setDrawSeriesLineAsPath(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawSeriesLineAsPath(true);\n        assertTrue(r1.equals(r2));\n    }\n","date":"2017-03-11 02:23:23","endLine":137,"groupId":"10433","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/db/57ae4bab4dba0f8f70de84b62ee97f73b10007.src","preCode":"    public void testEquals() {\n        StandardXYItemRenderer r1 = new StandardXYItemRenderer();\n        StandardXYItemRenderer r2 = new StandardXYItemRenderer();\n        assertEquals(r1, r2);\n\n        r1.setBaseShapesVisible(true);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesVisible(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotLines(false);\n        assertFalse(r1.equals(r2));\n        r2.setPlotLines(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotImages(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotImages(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotDiscontinuous(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotDiscontinuous(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThresholdType(UnitType.ABSOLUTE);\n        assertFalse(r1.equals(r2));\n        r2.setGapThresholdType(UnitType.ABSOLUTE);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThreshold(1.23);\n        assertFalse(r1.equals(r2));\n        r2.setGapThreshold(1.23);\n        assertTrue(r1.equals(r2));\n\n        r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(r1.equals(r2));\n        r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(r1.equals(r2));\n\n        r1.setShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        r1.setBaseShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setDrawSeriesLineAsPath(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawSeriesLineAsPath(true);\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals2() {\n        TestRenderer r1 = new TestRenderer();\n        TestRenderer r2 = new TestRenderer();\n        assertTrue(r1.equals(r2));\n        r1.setTreatLegendShapeAsLine(true);\n        assertFalse(r1.equals(r2));\n        r2.setTreatLegendShapeAsLine(true);\n        assertTrue(r1.equals(r2));\n    }\n","date":"2016-02-19 15:40:32","endLine":496,"groupId":"10433","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3b/2dfd5a614592a080f2744c67b4b81c674d356e.src","preCode":"    public void testEquals2() {\n        TestRenderer r1 = new TestRenderer();\n        TestRenderer r2 = new TestRenderer();\n        assertTrue(r1.equals(r2));\n        r1.setTreatLegendShapeAsLine(true);\n        assertFalse(r1.equals(r2));\n        r2.setTreatLegendShapeAsLine(true);\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"N"}],"commitId":"1be317c64d9b5b295ca9b519f80f81779b418868","commitMessage":"@@@Remove deprecated code","date":"2017-03-11 02:23:23","modifiedFileCount":"24","status":"M","submitter":"David Gilbert"}]
