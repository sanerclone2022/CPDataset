[{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testFindMinimumStackedRangeValue() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n\n        \r\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertNull(min);\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-3.0, \"R3\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(Double.NaN, \"R4\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","date":"2017-05-06 16:37:24","endLine":930,"groupId":"1123","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindMinimumStackedRangeValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testFindMinimumStackedRangeValue() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n\n        \r\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertNull(min);\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-3.0, \"R3\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(Double.NaN, \"R4\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":908,"status":"B"},{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testFindMinimumStackedRangeValue2() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(-1.0, \"R1\", \"C1\");\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-1.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","date":"2017-05-06 16:37:24","endLine":945,"groupId":"1124","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindMinimumStackedRangeValue2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testFindMinimumStackedRangeValue2() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(-1.0, \"R1\", \"C1\");\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-1.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":936,"status":"B"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-09 11:01:25","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":2,"curCode":"    public void testFindMinimumStackedRangeValue() {\n        DefaultCategoryDataset<String, String> dataset \n                = new DefaultCategoryDataset<>();\n\n        \r\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertNull(min);\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-3.0, \"R3\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(Double.NaN, \"R4\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","date":"2020-03-09 11:01:25","endLine":914,"groupId":"101289","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindMinimumStackedRangeValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f8/d711e8fc55b20664f8b8d0bc17e794ba0a3d8d.src","preCode":"    public void testFindMinimumStackedRangeValue() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n\n        \r\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertNull(min);\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(0.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-3.0, \"R3\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(Double.NaN, \"R4\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":891,"status":"M"},{"authorDate":"2020-03-09 11:01:25","commitOrder":2,"curCode":"    public void testFindMinimumStackedRangeValue2() {\n        DefaultCategoryDataset<String, String> dataset \n                = new DefaultCategoryDataset<>();\n        dataset.addValue(-1.0, \"R1\", \"C1\");\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-1.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","date":"2020-03-09 11:01:25","endLine":930,"groupId":"101289","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindMinimumStackedRangeValue2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f8/d711e8fc55b20664f8b8d0bc17e794ba0a3d8d.src","preCode":"    public void testFindMinimumStackedRangeValue2() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(-1.0, \"R1\", \"C1\");\n        Number min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-1.0, min.doubleValue(), EPSILON);\n\n        dataset.addValue(-2.0, \"R2\", \"C1\");\n        min = DatasetUtils.findMinimumStackedRangeValue(dataset);\n        assertEquals(-3.0, min.doubleValue(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":920,"status":"M"}],"commitId":"156d2f017215afd500475c72ac2d95595994282c","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-09 11:01:25","modifiedFileCount":"20","status":"M","submitter":"David Gilbert"}]
