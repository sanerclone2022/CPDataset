[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ValueAxis)) {\n            return false;\n        }\n        ValueAxis that = (ValueAxis) obj;\n        if (this.positiveArrowVisible != that.positiveArrowVisible) {\n            return false;\n        }\n        if (this.negativeArrowVisible != that.negativeArrowVisible) {\n            return false;\n        }\n        if (this.inverted != that.inverted) {\n            return false;\n        }\n        \r\n        if (!this.autoRange && !ObjectUtilities.equal(this.range, that.range)) {\n            return false;\n        }\n        if (this.autoRange != that.autoRange) {\n            return false;\n        }\n        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {\n            return false;\n        }\n        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {\n            return false;\n        }\n        if (this.upperMargin != that.upperMargin) {\n            return false;\n        }\n        if (this.lowerMargin != that.lowerMargin) {\n            return false;\n        }\n        if (this.fixedAutoRange != that.fixedAutoRange) {\n            return false;\n        }\n        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.standardTickUnits,\n                that.standardTickUnits)) {\n            return false;\n        }\n        if (this.verticalTickLabels != that.verticalTickLabels) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":1739,"groupId":"3982","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/73/696e919d53f2510182868dd4774a0ca7324d4a.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ValueAxis)) {\n            return false;\n        }\n        ValueAxis that = (ValueAxis) obj;\n        if (this.positiveArrowVisible != that.positiveArrowVisible) {\n            return false;\n        }\n        if (this.negativeArrowVisible != that.negativeArrowVisible) {\n            return false;\n        }\n        if (this.inverted != that.inverted) {\n            return false;\n        }\n        \r\n        if (!this.autoRange && !ObjectUtilities.equal(this.range, that.range)) {\n            return false;\n        }\n        if (this.autoRange != that.autoRange) {\n            return false;\n        }\n        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {\n            return false;\n        }\n        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {\n            return false;\n        }\n        if (this.upperMargin != that.upperMargin) {\n            return false;\n        }\n        if (this.lowerMargin != that.lowerMargin) {\n            return false;\n        }\n        if (this.fixedAutoRange != that.fixedAutoRange) {\n            return false;\n        }\n        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.standardTickUnits,\n                that.standardTickUnits)) {\n            return false;\n        }\n        if (this.verticalTickLabels != that.verticalTickLabels) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1686,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":435,"groupId":"3169","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/ebea79e52e26f162e96c41eda284aea89ecbd6.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ModuloAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ValueAxis)) {\n            return false;\n        }\n        ValueAxis that = (ValueAxis) obj;\n        if (this.positiveArrowVisible != that.positiveArrowVisible) {\n            return false;\n        }\n        if (this.negativeArrowVisible != that.negativeArrowVisible) {\n            return false;\n        }\n        if (this.inverted != that.inverted) {\n            return false;\n        }\n        \r\n        if (!this.autoRange && !ObjectUtils.equal(this.range, that.range)) {\n            return false;\n        }\n        if (this.autoRange != that.autoRange) {\n            return false;\n        }\n        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {\n            return false;\n        }\n        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {\n            return false;\n        }\n        if (this.upperMargin != that.upperMargin) {\n            return false;\n        }\n        if (this.lowerMargin != that.lowerMargin) {\n            return false;\n        }\n        if (this.fixedAutoRange != that.fixedAutoRange) {\n            return false;\n        }\n        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.standardTickUnits,\n                that.standardTickUnits)) {\n            return false;\n        }\n        if (this.verticalTickLabels != that.verticalTickLabels) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":1737,"groupId":"609","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8e/d13acb73be0562344fb6bca2d9ca064680d061.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ValueAxis)) {\n            return false;\n        }\n        ValueAxis that = (ValueAxis) obj;\n        if (this.positiveArrowVisible != that.positiveArrowVisible) {\n            return false;\n        }\n        if (this.negativeArrowVisible != that.negativeArrowVisible) {\n            return false;\n        }\n        if (this.inverted != that.inverted) {\n            return false;\n        }\n        \r\n        if (!this.autoRange && !ObjectUtilities.equal(this.range, that.range)) {\n            return false;\n        }\n        if (this.autoRange != that.autoRange) {\n            return false;\n        }\n        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {\n            return false;\n        }\n        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {\n            return false;\n        }\n        if (this.upperMargin != that.upperMargin) {\n            return false;\n        }\n        if (this.lowerMargin != that.lowerMargin) {\n            return false;\n        }\n        if (this.fixedAutoRange != that.fixedAutoRange) {\n            return false;\n        }\n        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.standardTickUnits,\n                that.standardTickUnits)) {\n            return false;\n        }\n        if (this.verticalTickLabels != that.verticalTickLabels) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1684,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":435,"groupId":"3169","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/ebea79e52e26f162e96c41eda284aea89ecbd6.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ModuloAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"N"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2020-07-01 12:16:46","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ValueAxis)) {\n            return false;\n        }\n        ValueAxis that = (ValueAxis) obj;\n        if (this.positiveArrowVisible != that.positiveArrowVisible) {\n            return false;\n        }\n        if (this.negativeArrowVisible != that.negativeArrowVisible) {\n            return false;\n        }\n        if (this.inverted != that.inverted) {\n            return false;\n        }\n        \r\n        if (!this.autoRange && !Objects.equals(this.range, that.range)) {\n            return false;\n        }\n        if (this.autoRange != that.autoRange) {\n            return false;\n        }\n        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {\n            return false;\n        }\n        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {\n            return false;\n        }\n        if (this.upperMargin != that.upperMargin) {\n            return false;\n        }\n        if (this.lowerMargin != that.lowerMargin) {\n            return false;\n        }\n        if (this.fixedAutoRange != that.fixedAutoRange) {\n            return false;\n        }\n        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {\n            return false;\n        }\n        if (!Objects.equals(this.standardTickUnits, that.standardTickUnits)) {\n            return false;\n        }\n        if (this.verticalTickLabels != that.verticalTickLabels) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2020-07-01 12:16:46","endLine":1720,"groupId":"101854","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/78/5cd19b897c87b064c389cbea3eb07bd9371550.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ValueAxis)) {\n            return false;\n        }\n        ValueAxis that = (ValueAxis) obj;\n        if (this.positiveArrowVisible != that.positiveArrowVisible) {\n            return false;\n        }\n        if (this.negativeArrowVisible != that.negativeArrowVisible) {\n            return false;\n        }\n        if (this.inverted != that.inverted) {\n            return false;\n        }\n        \r\n        if (!this.autoRange && !ObjectUtils.equal(this.range, that.range)) {\n            return false;\n        }\n        if (this.autoRange != that.autoRange) {\n            return false;\n        }\n        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {\n            return false;\n        }\n        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {\n            return false;\n        }\n        if (this.upperMargin != that.upperMargin) {\n            return false;\n        }\n        if (this.lowerMargin != that.lowerMargin) {\n            return false;\n        }\n        if (this.fixedAutoRange != that.fixedAutoRange) {\n            return false;\n        }\n        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.standardTickUnits,\n                that.standardTickUnits)) {\n            return false;\n        }\n        if (this.verticalTickLabels != that.verticalTickLabels) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1668,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":435,"groupId":"101854","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/50/ebea79e52e26f162e96c41eda284aea89ecbd6.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ModuloAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"N"}],"commitId":"1955cc38345a5ea52879eb186f09cf2e930bd9e6","commitMessage":"@@@Merge pull request #163 from simon04/use-Objects\n\nUse Objects.hashCode.  Objects.equals.  CloneUtils.clone.  CloneUtils.cloneList.  remove ObjectUtils","date":"2020-07-01 12:16:46","modifiedFileCount":"130","status":"M","submitter":"David Gilbert"}]
