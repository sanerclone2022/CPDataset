[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    private List<Integer> getDatasetIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Map.Entry<Integer, CategoryDataset> entry : \n                this.datasets.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":3713,"groupId":"2739","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDatasetIndices","params":"(DatasetRenderingOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    private List<Integer> getDatasetIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Map.Entry<Integer, CategoryDataset> entry : \n                this.datasets.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3700,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Map.Entry<Integer, CategoryItemRenderer> entry: \n                this.renderers.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;        \n    }\n","date":"2016-02-19 16:24:22","endLine":3736,"groupId":"4031","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRendererIndices","params":"(DatasetRenderingOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Map.Entry<Integer, CategoryItemRenderer> entry: \n                this.renderers.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;        \n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3723,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-11 05:34:08","codes":[{"authorDate":"2020-03-11 05:34:08","commitOrder":2,"curCode":"    private List<Integer> getDatasetIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<>();\n        for (Map.Entry<Integer, CategoryDataset> entry : \n                this.datasets.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;\n    }\n","date":"2020-03-11 05:34:08","endLine":3564,"groupId":"2739","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDatasetIndices","params":"(DatasetRenderingOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b5/db83183f766eb10bb6e4820b321ab321d5929c.src","preCode":"    private List<Integer> getDatasetIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Map.Entry<Integer, CategoryDataset> entry : \n                this.datasets.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3551,"status":"M"},{"authorDate":"2020-03-11 05:34:08","commitOrder":2,"curCode":"    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<>();\n        for (Map.Entry<Integer, CategoryItemRenderer> entry: \n                this.renderers.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;        \n    }\n","date":"2020-03-11 05:34:08","endLine":3587,"groupId":"4031","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRendererIndices","params":"(DatasetRenderingOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b5/db83183f766eb10bb6e4820b321ab321d5929c.src","preCode":"    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Map.Entry<Integer, CategoryItemRenderer> entry: \n                this.renderers.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;        \n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3574,"status":"M"}],"commitId":"7997d52f1ab449ddd2adf390f6ba94d848c2e3a5","commitMessage":"@@@Fix warnings.","date":"2020-03-11 05:34:08","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-11 05:34:08","codes":[{"authorDate":"2020-03-29 18:04:41","commitOrder":3,"curCode":"    private List<Integer> getDatasetIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<>();\n        for (Map.Entry<Integer, CategoryDataset<R, C>> entry : \n                this.datasets.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;\n    }\n","date":"2020-03-29 18:04:41","endLine":3558,"groupId":"101444","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getDatasetIndices","params":"(DatasetRenderingOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    private List<Integer> getDatasetIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<>();\n        for (Map.Entry<Integer, CategoryDataset> entry : \n                this.datasets.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3545,"status":"M"},{"authorDate":"2020-03-11 05:34:08","commitOrder":3,"curCode":"    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<>();\n        for (Map.Entry<Integer, CategoryItemRenderer> entry: \n                this.renderers.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;        \n    }\n","date":"2020-03-11 05:34:08","endLine":3587,"groupId":"101444","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRendererIndices","params":"(DatasetRenderingOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b5/db83183f766eb10bb6e4820b321ab321d5929c.src","preCode":"    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {\n        List<Integer> result = new ArrayList<>();\n        for (Map.Entry<Integer, CategoryItemRenderer> entry: \n                this.renderers.entrySet()) {\n            if (entry.getValue() != null) {\n                result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n        if (order == DatasetRenderingOrder.REVERSE) {\n            Collections.reverse(result);\n        }\n        return result;        \n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3574,"status":"N"}],"commitId":"e23eafd99eb9c5627dd100f927caa3ba7bbb036e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 18:04:41","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"}]
