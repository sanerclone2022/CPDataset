[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":113,"groupId":"3413","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ab/f1e34667bc87e558b1e622e275ea5bf574ee82.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2016-02-19 15:40:32","endLine":127,"groupId":"3413","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ab/f1e34667bc87e558b1e622e275ea5bf574ee82.src","preCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":113,"groupId":"3413","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ab/f1e34667bc87e558b1e622e275ea5bf574ee82.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2017-05-06 16:41:21","endLine":127,"groupId":"3413","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/36/ac92475b269c2de6234b13e10d616a1ab24777.src","preCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 20:09:30","codes":[{"authorDate":"2020-03-21 20:09:30","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2020-03-21 20:09:30","endLine":108,"groupId":"2413","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ac/a19c63976f6574070c8e692539b4b522adccdb.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2020-03-21 20:09:30","commitOrder":3,"curCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-03-21 20:09:30","endLine":121,"groupId":"2413","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ac/a19c63976f6574070c8e692539b4b522adccdb.src","preCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = (OHLCSeriesCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"e04969547734974fb01ca16b2f5b681ba8452d24","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 20:09:30","modifiedFileCount":"3","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-23 02:27:15","codes":[{"authorDate":"2020-03-23 02:27:15","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","date":"2020-03-23 02:27:15","endLine":108,"groupId":"10904","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/5443bc65575566b1d1225cf5c49171dac83bb6.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        s1.setDescription(\"XYZ\");\n        assertFalse(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2020-03-23 02:27:15","commitOrder":4,"curCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-03-23 02:27:15","endLine":121,"groupId":"10904","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/5443bc65575566b1d1225cf5c49171dac83bb6.src","preCode":"    public void testSerialization() {\n        OHLCSeriesCollection c1 = new OHLCSeriesCollection();\n        OHLCSeries s1 = new OHLCSeries(\"Series\");\n        s1.add(new Year(2006), 1.0, 1.1, 1.2, 1.3);\n        c1.addSeries(s1);\n        OHLCSeriesCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"a203a3eded68ef89d52b8f746cd203922bc602a0","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 02:27:15","modifiedFileCount":"7","status":"M","submitter":"David Gilbert"}]
