[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void test697153() {\n\n        TaskSeries s1 = new TaskSeries(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeries s2 = new TaskSeries(\"S2\");\n        s2.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 4\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n        tsc.add(s2);\n\n        s1.removeAll();\n\n        int taskCount = tsc.getColumnCount();\n\n        assertEquals(3, taskCount);\n\n    }\n","date":"2016-02-19 15:40:32","endLine":534,"groupId":"1265","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test697153","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/43/e238160ba8f23925ddfcfc3f429ff5236f6e14.src","preCode":"    public void test697153() {\n\n        TaskSeries s1 = new TaskSeries(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeries s2 = new TaskSeries(\"S2\");\n        s2.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 4\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n        tsc.add(s2);\n\n        s1.removeAll();\n\n        int taskCount = tsc.getColumnCount();\n\n        assertEquals(3, taskCount);\n\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":506,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void test800324() {\n        TaskSeries s1 = new TaskSeries(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n\n        \r\n        \r\n        try {\n             tsc.getStartValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getEndValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getSubIntervalCount(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n    }\n","date":"2016-02-19 15:40:32","endLine":575,"groupId":"94","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test800324","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/43/e238160ba8f23925ddfcfc3f429ff5236f6e14.src","preCode":"    public void test800324() {\n        TaskSeries s1 = new TaskSeries(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n\n        \r\n        \r\n        try {\n             tsc.getStartValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getEndValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getSubIntervalCount(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 21:16:11","codes":[{"authorDate":"2020-03-22 21:16:11","commitOrder":2,"curCode":"    public void test697153() {\n\n        TaskSeries<String> s1 = new TaskSeries<>(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeries<String> s2 = new TaskSeries<>(\"S2\");\n        s2.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 4\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n        tsc.add(s2);\n\n        s1.removeAll();\n\n        int taskCount = tsc.getColumnCount();\n\n        assertEquals(3, taskCount);\n\n    }\n","date":"2020-03-22 21:16:11","endLine":530,"groupId":"1265","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test697153","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ba/4fb91771c046953b7f4d3af88f8a7b5b78e110.src","preCode":"    public void test697153() {\n\n        TaskSeries s1 = new TaskSeries(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeries s2 = new TaskSeries(\"S2\");\n        s2.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 4\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n        tsc.add(s2);\n\n        s1.removeAll();\n\n        int taskCount = tsc.getColumnCount();\n\n        assertEquals(3, taskCount);\n\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"},{"authorDate":"2020-03-22 21:16:11","commitOrder":2,"curCode":"    public void test800324() {\n        TaskSeries<String> s1 = new TaskSeries<>(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n\n        \r\n        \r\n        try {\n             tsc.getStartValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getEndValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getSubIntervalCount(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n    }\n","date":"2020-03-22 21:16:11","endLine":571,"groupId":"94","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test800324","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ba/4fb91771c046953b7f4d3af88f8a7b5b78e110.src","preCode":"    public void test800324() {\n        TaskSeries s1 = new TaskSeries(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n\n        \r\n        \r\n        try {\n             tsc.getStartValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getEndValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getSubIntervalCount(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":536,"status":"M"}],"commitId":"cb65254c83ba27848719a0d4765348ca3f2bbd5c","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 21:16:11","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-28 17:12:15","codes":[{"authorDate":"2020-03-28 17:12:15","commitOrder":3,"curCode":"    public void test697153() {\n\n        TaskSeries<String> s1 = new TaskSeries<>(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeries<String> s2 = new TaskSeries<>(\"S2\");\n        s2.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 4\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection<String, String> tsc = new TaskSeriesCollection<>();\n        tsc.add(s1);\n        tsc.add(s2);\n\n        s1.removeAll();\n\n        int taskCount = tsc.getColumnCount();\n\n        assertEquals(3, taskCount);\n\n    }\n","date":"2020-03-28 17:12:15","endLine":530,"groupId":"10736","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test697153","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/1f432c2a29844f42719a9efdde7e16f5508941.src","preCode":"    public void test697153() {\n\n        TaskSeries<String> s1 = new TaskSeries<>(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeries<String> s2 = new TaskSeries<>(\"S2\");\n        s2.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s2.add(new Task(\"Task 4\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n        tsc.add(s2);\n\n        s1.removeAll();\n\n        int taskCount = tsc.getColumnCount();\n\n        assertEquals(3, taskCount);\n\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"},{"authorDate":"2020-03-28 17:12:15","commitOrder":3,"curCode":"    public void test800324() {\n        TaskSeries<String> s1 = new TaskSeries<>(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection<String, String> tsc = new TaskSeriesCollection<>();\n        tsc.add(s1);\n\n        \r\n        \r\n        try {\n             tsc.getStartValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getEndValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getSubIntervalCount(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n    }\n","date":"2020-03-28 17:12:15","endLine":571,"groupId":"10736","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test800324","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/1f432c2a29844f42719a9efdde7e16f5508941.src","preCode":"    public void test800324() {\n        TaskSeries<String> s1 = new TaskSeries<>(\"S1\");\n        s1.add(new Task(\"Task 1\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 2\", new SimpleTimePeriod(new Date(),\n                new Date())));\n        s1.add(new Task(\"Task 3\", new SimpleTimePeriod(new Date(),\n                new Date())));\n\n        TaskSeriesCollection tsc = new TaskSeriesCollection();\n        tsc.add(s1);\n\n        \r\n        \r\n        try {\n             tsc.getStartValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getEndValue(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n        try {\n             tsc.getSubIntervalCount(0, 3);\n            assertTrue(false);\n        }\n        catch (IndexOutOfBoundsException e) {\n            \r\n        }\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":536,"status":"M"}],"commitId":"906d58925f98a0e5d6e2f2470a3a64f693fd8d7c","commitMessage":"@@@Fix Netbeans warnings.","date":"2020-03-28 17:12:15","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
