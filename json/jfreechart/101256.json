[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n\n        \r\n        d1.setZValue(0, 0, 11.0);\n        assertFalse(d1.equals(d2));\n        d2.setZValue(0, 0, 11.0);\n        assertTrue(d1.equals(d2));\n    }\n","date":"2016-02-19 15:40:32","endLine":179,"groupId":"4165","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1f/851ad3173150b14e65f484d87e3d0c8d0323dd.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n\n        \r\n        d1.setZValue(0, 0, 11.0);\n        assertFalse(d1.equals(d2));\n        d2.setZValue(0, 0, 11.0);\n        assertTrue(d1.equals(d2));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) \n                TestUtilities.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2016-02-19 15:40:32","endLine":195,"groupId":"4165","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1f/851ad3173150b14e65f484d87e3d0c8d0323dd.src","preCode":"    public void testSerialization() {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) \n                TestUtilities.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n\n        \r\n        d1.setZValue(0, 0, 11.0);\n        assertFalse(d1.equals(d2));\n        d2.setZValue(0, 0, 11.0);\n        assertTrue(d1.equals(d2));\n    }\n","date":"2016-02-19 15:40:32","endLine":179,"groupId":"4165","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1f/851ad3173150b14e65f484d87e3d0c8d0323dd.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n\n        \r\n        d1.setZValue(0, 0, 11.0);\n        assertFalse(d1.equals(d2));\n        d2.setZValue(0, 0, 11.0);\n        assertTrue(d1.equals(d2));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2017-05-06 16:41:21","endLine":195,"groupId":"4165","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0a/b0491c9b018d2e19d7d2480e781b794cfe57b3.src","preCode":"    public void testSerialization() {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) \n                TestUtilities.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = CloneUtils.clone(d1);\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n\n        \r\n        d1.setZValue(0, 0, 11.0);\n        assertFalse(d1.equals(d2));\n        d2.setZValue(0, 0, 11.0);\n        assertTrue(d1.equals(d2));\n    }\n","date":"2020-03-22 19:36:23","endLine":176,"groupId":"101256","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/30/261b7eed92b8df1bf31aff2ae49c2246a529da.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n\n        \r\n        d1.setZValue(0, 0, 11.0);\n        assertFalse(d1.equals(d2));\n        d2.setZValue(0, 0, 11.0);\n        assertTrue(d1.equals(d2));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testSerialization() {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2020-03-22 19:36:23","endLine":191,"groupId":"101256","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/30/261b7eed92b8df1bf31aff2ae49c2246a529da.src","preCode":"    public void testSerialization() {\n        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,\n                -2.0, 5.0);\n        d1.setZValue(0, 0, 10.0);\n        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);\n        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);\n        d1.setZValue(1, 0, Double.NaN);\n        DefaultHeatMapDataset d2 = (DefaultHeatMapDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
