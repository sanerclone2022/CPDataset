[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject ko1 = new KeyedObject(\"Test\", \"Object\");\n        KeyedObject ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2016-02-19 15:40:32","endLine":91,"groupId":"270","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/bd/3a00a20eb1cc0a320b298d2a698bba8a56002d.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject ko1 = new KeyedObject(\"Test\", \"Object\");\n        KeyedObject ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", new Integer(1));\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", new Integer(3));\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2016-02-19 15:40:32","endLine":73,"groupId":"3978","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/59/084ce98b93c575026b515bb42db5d2d94138f4.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", new Integer(1));\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", new Integer(3));\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-02-25 16:12:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject ko1 = new KeyedObject(\"Test\", \"Object\");\n        KeyedObject ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2016-02-19 15:40:32","endLine":91,"groupId":"270","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/bd/3a00a20eb1cc0a320b298d2a698bba8a56002d.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject ko1 = new KeyedObject(\"Test\", \"Object\");\n        KeyedObject ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2020-02-25 16:12:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-02-25 16:12:32","endLine":68,"groupId":"479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d8/09476b0c57581781b1fc2ef52fd3b4ead6e912.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", new Integer(1));\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", new Integer(3));\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"442a5fad22d169e1a8cfcfe1e231483d17e0a371","commitMessage":"@@@Fix compiler warnings.","date":"2020-02-25 16:12:32","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-02-25 16:12:32","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject<String> ko1 = new KeyedObject<>(\"Test\", \"Object\");\n        KeyedObject<String> ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-03-09 11:01:25","endLine":85,"groupId":"270","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9e/008c16da9f1ab219e78a83d758b3628b0b36e5.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject ko1 = new KeyedObject(\"Test\", \"Object\");\n        KeyedObject ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-02-25 16:12:32","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-02-25 16:12:32","endLine":68,"groupId":"479","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d8/09476b0c57581781b1fc2ef52fd3b4ead6e912.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"156d2f017215afd500475c72ac2d95595994282c","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-09 11:01:25","modifiedFileCount":"20","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 06:34:00","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject<String> ko1 = new KeyedObject<>(\"Test\", \"Object\");\n        KeyedObject<String> ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-03-09 11:01:25","endLine":85,"groupId":"270","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9e/008c16da9f1ab219e78a83d758b3628b0b36e5.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject<String> ko1 = new KeyedObject<>(\"Test\", \"Object\");\n        KeyedObject<String> ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2020-03-21 06:34:00","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-03-21 06:34:00","endLine":69,"groupId":"479","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/9dc34ec4e6cdfc6cd4d037151a924a486dc249.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"d13f8d95839a34ec745c90d755e40c9f5a2bb406","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 06:34:00","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 06:34:00","codes":[{"authorDate":"2020-03-21 17:21:39","commitOrder":5,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject<String> ko1 = new KeyedObject<>(\"Test\", \"Object\");\n        KeyedObject<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-03-21 17:21:39","endLine":86,"groupId":"101036","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/2e122bd428772924db87c5206324810bead861.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObject<String> ko1 = new KeyedObject<>(\"Test\", \"Object\");\n        KeyedObject<String> ko2 = (KeyedObject) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-03-21 06:34:00","commitOrder":5,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","date":"2020-03-21 06:34:00","endLine":69,"groupId":"101036","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/9dc34ec4e6cdfc6cd4d037151a924a486dc249.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"V1\", 1);\n        ko1.addObject(\"V2\", null);\n        ko1.addObject(\"V3\", 3);\n        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"880bda6ccf2c1053a201c7f59a1a7a823fe74f94","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 17:21:39","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"}]
