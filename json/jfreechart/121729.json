[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2017-05-06 13:04:03","commitOrder":2,"curCode":"    public static void drawRotatedString(String text, Graphics2D g2,\n            float textX, float textY, \n            double angle, float rotateX, float rotateY) {\n\n        if ((text == null) || (text.equals(\"\"))) {\n            return;\n        }\n        if (angle == 0.0) {\n            drawAlignedString(text, g2, textX, textY, TextAnchor.BASELINE_LEFT);\n            return;\n        }\n        \n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(\n                angle, rotateX, rotateY);\n        g2.transform(rotate);\n\n        if (useDrawRotatedStringWorkaround) {\n            \r\n            TextLayout tl = new TextLayout(text, g2.getFont(),\n                    g2.getFontRenderContext());\n            tl.draw(g2, textX, textY);\n        }\n        else {\n            if (!drawStringsWithFontAttributes) {\n                g2.drawString(text, textX, textY);\n            } else {\n                AttributedString as = new AttributedString(text, \n                        g2.getFont().getAttributes());\n                g2.drawString(as.getIterator(), textX, textY);\n            }\n        }\n        g2.setTransform(saved);\n\n    }\n","date":"2017-05-06 13:04:03","endLine":448,"groupId":"3246","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"drawRotatedString","params":"(Stringtext@Graphics2Dg2@floattextX@floattextY@doubleangle@floatrotateX@floatrotateY)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/cf/896925a7ee58770aacc9bfca58c8f87230c6b5.src","preCode":"    public static void drawRotatedString(String text, Graphics2D g2,\n            float textX, float textY, \n            double angle, float rotateX, float rotateY) {\n\n        if ((text == null) || (text.equals(\"\"))) {\n            return;\n        }\n        if (angle == 0.0) {\n            drawAlignedString(text, g2, textX, textY, TextAnchor.BASELINE_LEFT);\n            return;\n        }\n        \n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(\n                angle, rotateX, rotateY);\n        g2.transform(rotate);\n\n        if (useDrawRotatedStringWorkaround) {\n            \r\n            TextLayout tl = new TextLayout(text, g2.getFont(),\n                    g2.getFontRenderContext());\n            tl.draw(g2, textX, textY);\n        }\n        else {\n            if (!drawStringsWithFontAttributes) {\n                g2.drawString(text, textX, textY);\n            } else {\n                AttributedString as = new AttributedString(text, \n                        g2.getFont().getAttributes());\n                g2.drawString(as.getIterator(), textX, textY);\n            }\n        }\n        g2.setTransform(saved);\n\n    }\n","realPath":"src/main/java/org/jfree/chart/text/TextUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public static void drawRotatedString(AttributedString text, Graphics2D g2, \n            float textX, float textY, double angle, float rotateX, \n            float rotateY) {\n        ParamChecks.nullNotPermitted(text, \"text\");\n\n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(angle, \n                rotateX, rotateY);\n        g2.transform(rotate);\n        TextLayout tl = new TextLayout(text.getIterator(),\n                    g2.getFontRenderContext());\n        tl.draw(g2, textX, textY);\n        \n        g2.setTransform(saved);        \n    }\n","date":"2016-02-19 16:24:22","endLine":124,"groupId":"3246","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRotatedString","params":"(AttributedStringtext@Graphics2Dg2@floattextX@floattextY@doubleangle@floatrotateX@floatrotateY)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/05/bf4b87d8c6028a6785d9b18c8927b40821f874.src","preCode":"    public static void drawRotatedString(AttributedString text, Graphics2D g2, \n            float textX, float textY, double angle, float rotateX, \n            float rotateY) {\n        ParamChecks.nullNotPermitted(text, \"text\");\n\n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(angle, \n                rotateX, rotateY);\n        g2.transform(rotate);\n        TextLayout tl = new TextLayout(text.getIterator(),\n                    g2.getFontRenderContext());\n        tl.draw(g2, textX, textY);\n        \n        g2.setTransform(saved);        \n    }\n","realPath":"src/main/java/org/jfree/chart/util/AttrStringUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"NB"}],"commitId":"ea1b09dba6931ba20e0ce2e1e8e528793a7fbae3","commitMessage":"@@@Rename TextUtilities -> TextUtils.","date":"2017-05-06 13:04:03","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2017-05-06 13:04:03","commitOrder":3,"curCode":"    public static void drawRotatedString(String text, Graphics2D g2,\n            float textX, float textY, \n            double angle, float rotateX, float rotateY) {\n\n        if ((text == null) || (text.equals(\"\"))) {\n            return;\n        }\n        if (angle == 0.0) {\n            drawAlignedString(text, g2, textX, textY, TextAnchor.BASELINE_LEFT);\n            return;\n        }\n        \n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(\n                angle, rotateX, rotateY);\n        g2.transform(rotate);\n\n        if (useDrawRotatedStringWorkaround) {\n            \r\n            TextLayout tl = new TextLayout(text, g2.getFont(),\n                    g2.getFontRenderContext());\n            tl.draw(g2, textX, textY);\n        }\n        else {\n            if (!drawStringsWithFontAttributes) {\n                g2.drawString(text, textX, textY);\n            } else {\n                AttributedString as = new AttributedString(text, \n                        g2.getFont().getAttributes());\n                g2.drawString(as.getIterator(), textX, textY);\n            }\n        }\n        g2.setTransform(saved);\n\n    }\n","date":"2017-05-06 13:04:03","endLine":448,"groupId":"121729","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"drawRotatedString","params":"(Stringtext@Graphics2Dg2@floattextX@floattextY@doubleangle@floatrotateX@floatrotateY)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/cf/896925a7ee58770aacc9bfca58c8f87230c6b5.src","preCode":"    public static void drawRotatedString(String text, Graphics2D g2,\n            float textX, float textY, \n            double angle, float rotateX, float rotateY) {\n\n        if ((text == null) || (text.equals(\"\"))) {\n            return;\n        }\n        if (angle == 0.0) {\n            drawAlignedString(text, g2, textX, textY, TextAnchor.BASELINE_LEFT);\n            return;\n        }\n        \n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(\n                angle, rotateX, rotateY);\n        g2.transform(rotate);\n\n        if (useDrawRotatedStringWorkaround) {\n            \r\n            TextLayout tl = new TextLayout(text, g2.getFont(),\n                    g2.getFontRenderContext());\n            tl.draw(g2, textX, textY);\n        }\n        else {\n            if (!drawStringsWithFontAttributes) {\n                g2.drawString(text, textX, textY);\n            } else {\n                AttributedString as = new AttributedString(text, \n                        g2.getFont().getAttributes());\n                g2.drawString(as.getIterator(), textX, textY);\n            }\n        }\n        g2.setTransform(saved);\n\n    }\n","realPath":"src/main/java/org/jfree/chart/text/TextUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"N"},{"authorDate":"2017-05-12 05:28:15","commitOrder":3,"curCode":"    public static void drawRotatedString(AttributedString text, Graphics2D g2, \n            float textX, float textY, double angle, float rotateX, \n            float rotateY) {\n        Args.nullNotPermitted(text, \"text\");\n\n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(angle, \n                rotateX, rotateY);\n        g2.transform(rotate);\n        TextLayout tl = new TextLayout(text.getIterator(),\n                    g2.getFontRenderContext());\n        tl.draw(g2, textX, textY);\n        \n        g2.setTransform(saved);        \n    }\n","date":"2017-05-12 05:28:15","endLine":124,"groupId":"121729","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRotatedString","params":"(AttributedStringtext@Graphics2Dg2@floattextX@floattextY@doubleangle@floatrotateX@floatrotateY)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/69/9db6c702a2585c3ef39bafe698457e26660a7b.src","preCode":"    public static void drawRotatedString(AttributedString text, Graphics2D g2, \n            float textX, float textY, double angle, float rotateX, \n            float rotateY) {\n        ParamChecks.nullNotPermitted(text, \"text\");\n\n        AffineTransform saved = g2.getTransform();\n        AffineTransform rotate = AffineTransform.getRotateInstance(angle, \n                rotateX, rotateY);\n        g2.transform(rotate);\n        TextLayout tl = new TextLayout(text.getIterator(),\n                    g2.getFontRenderContext());\n        tl.draw(g2, textX, textY);\n        \n        g2.setTransform(saved);        \n    }\n","realPath":"src/main/java/org/jfree/chart/util/AttrStringUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"22701c9ec4cd5bd88f8a7f17ae11c18099dd1ec7","commitMessage":"@@@Rename ParamChecks --> Args.","date":"2017-05-12 05:28:15","modifiedFileCount":"216","status":"M","submitter":"David Gilbert"}]
