[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public Range findDomainBounds(XYDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorXValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getXValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getXValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getXValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":148,"groupId":"4129","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findDomainBounds","params":"(XYDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9d/e4c6ef7a425eb0010ec4fa2399aaf597980009.src","preCode":"    public Range findDomainBounds(XYDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorXValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getXValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getXValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getXValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public Range findRangeBounds(XYDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorYValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getYValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getYValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getYValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":203,"groupId":"4129","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findRangeBounds","params":"(XYDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9d/e4c6ef7a425eb0010ec4fa2399aaf597980009.src","preCode":"    public Range findRangeBounds(XYDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorYValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getYValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getYValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getYValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public Range findDomainBounds(XYDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorXValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getXValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getXValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getXValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","date":"2017-05-12 05:28:15","endLine":148,"groupId":"101697","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findDomainBounds","params":"(XYDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5e/12db54a770bee1441459d6e859220f953ae403.src","preCode":"    public Range findDomainBounds(XYDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorXValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getXValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getXValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getXValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public Range findRangeBounds(XYDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorYValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getYValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getYValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getYValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","date":"2017-05-12 05:28:15","endLine":203,"groupId":"101697","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findRangeBounds","params":"(XYDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5e/12db54a770bee1441459d6e859220f953ae403.src","preCode":"    public Range findRangeBounds(XYDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        double minimum = Double.POSITIVE_INFINITY;\n        double maximum = Double.NEGATIVE_INFINITY;\n        int seriesCount = dataset.getSeriesCount();\n        double lvalue;\n        double uvalue;\n        if (dataset instanceof VectorXYDataset) {\n            VectorXYDataset vdataset = (VectorXYDataset) dataset;\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    double delta = vdataset.getVectorYValue(series, item);\n                    if (delta < 0.0) {\n                        uvalue = vdataset.getYValue(series, item);\n                        lvalue = uvalue + delta;\n                    }\n                    else {\n                        lvalue = vdataset.getYValue(series, item);\n                        uvalue = lvalue + delta;\n                    }\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        else {\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n                    lvalue = dataset.getYValue(series, item);\n                    uvalue = lvalue;\n                    minimum = Math.min(minimum, lvalue);\n                    maximum = Math.max(maximum, uvalue);\n                }\n            }\n        }\n        if (minimum > maximum) {\n            return null;\n        }\n        else {\n            return new Range(minimum, maximum);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"22701c9ec4cd5bd88f8a7f17ae11c18099dd1ec7","commitMessage":"@@@Rename ParamChecks --> Args.","date":"2017-05-12 05:28:15","modifiedFileCount":"216","status":"M","submitter":"David Gilbert"}]
