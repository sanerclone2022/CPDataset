[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        \r\n        if (!(obj instanceof TextAnnotation)) {\n            return false;\n        }\n        TextAnnotation that = (TextAnnotation) obj;\n        if (!ObjectUtilities.equal(this.text, that.getText())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.font, that.getFont())) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.paint, that.getPaint())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.textAnchor, that.getTextAnchor())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rotationAnchor,\n                that.getRotationAnchor())) {\n            return false;\n        }\n        if (this.rotationAngle != that.getRotationAngle()) {\n            return false;\n        }\n\n        \r\n        return true;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":323,"groupId":"387","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6b/a8073468b236d5cfb4095d2a1b9ebeb72099c0.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        \r\n        if (!(obj instanceof TextAnnotation)) {\n            return false;\n        }\n        TextAnnotation that = (TextAnnotation) obj;\n        if (!ObjectUtilities.equal(this.text, that.getText())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.font, that.getFont())) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.paint, that.getPaint())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.textAnchor, that.getTextAnchor())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rotationAnchor,\n                that.getRotationAnchor())) {\n            return false;\n        }\n        if (this.rotationAngle != that.getRotationAngle()) {\n            return false;\n        }\n\n        \r\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/annotations/TextAnnotation.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof BoxAndWhiskerItem)) {\n            return false;\n        }\n        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;\n        if (!ObjectUtilities.equal(this.mean, that.mean)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.median, that.median)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.q1, that.q1)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.q3, that.q3)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.minRegularValue,\n                that.minRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.maxRegularValue,\n                that.maxRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.minOutlier, that.minOutlier)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.maxOutlier, that.maxOutlier)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outliers, that.outliers)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":296,"groupId":"3517","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/34/ae0bd36d5c03af365ea28a47963367d632be14.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof BoxAndWhiskerItem)) {\n            return false;\n        }\n        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;\n        if (!ObjectUtilities.equal(this.mean, that.mean)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.median, that.median)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.q1, that.q1)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.q3, that.q3)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.minRegularValue,\n                that.minRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.maxRegularValue,\n                that.maxRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.minOutlier, that.minOutlier)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.maxOutlier, that.maxOutlier)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outliers, that.outliers)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerItem.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-03-08 01:39:11","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        \r\n        if (!(obj instanceof TextAnnotation)) {\n            return false;\n        }\n        TextAnnotation that = (TextAnnotation) obj;\n        if (!ObjectUtils.equal(this.text, that.getText())) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.font, that.getFont())) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.paint, that.getPaint())) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.textAnchor, that.getTextAnchor())) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rotationAnchor,\n                that.getRotationAnchor())) {\n            return false;\n        }\n        if (this.rotationAngle != that.getRotationAngle()) {\n            return false;\n        }\n\n        \r\n        return true;\n\n    }\n","date":"2017-03-08 01:39:11","endLine":323,"groupId":"931","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/18/6774ae8e05c4eedb8710a62aa1e5fba7ab9e8a.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        \r\n        if (!(obj instanceof TextAnnotation)) {\n            return false;\n        }\n        TextAnnotation that = (TextAnnotation) obj;\n        if (!ObjectUtilities.equal(this.text, that.getText())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.font, that.getFont())) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.paint, that.getPaint())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.textAnchor, that.getTextAnchor())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.rotationAnchor,\n                that.getRotationAnchor())) {\n            return false;\n        }\n        if (this.rotationAngle != that.getRotationAngle()) {\n            return false;\n        }\n\n        \r\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/annotations/TextAnnotation.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"},{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof BoxAndWhiskerItem)) {\n            return false;\n        }\n        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;\n        if (!ObjectUtils.equal(this.mean, that.mean)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.median, that.median)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.q1, that.q1)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.q3, that.q3)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.minRegularValue,\n                that.minRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.maxRegularValue,\n                that.maxRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.minOutlier, that.minOutlier)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.maxOutlier, that.maxOutlier)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.outliers, that.outliers)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2017-03-08 01:39:11","endLine":295,"groupId":"3328","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/42/c4b6166b2d488aacddcbcc03bac6b585dc6b3f.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof BoxAndWhiskerItem)) {\n            return false;\n        }\n        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;\n        if (!ObjectUtilities.equal(this.mean, that.mean)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.median, that.median)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.q1, that.q1)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.q3, that.q3)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.minRegularValue,\n                that.minRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.maxRegularValue,\n                that.maxRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.minOutlier, that.minOutlier)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.maxOutlier, that.maxOutlier)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outliers, that.outliers)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerItem.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-07-01 12:16:46","codes":[{"authorDate":"2020-07-01 12:16:46","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        \r\n        if (!(obj instanceof TextAnnotation)) {\n            return false;\n        }\n        TextAnnotation that = (TextAnnotation) obj;\n        if (!Objects.equals(this.text, that.getText())) {\n            return false;\n        }\n        if (!Objects.equals(this.font, that.getFont())) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.paint, that.getPaint())) {\n            return false;\n        }\n        if (!Objects.equals(this.textAnchor, that.getTextAnchor())) {\n            return false;\n        }\n        if (!Objects.equals(this.rotationAnchor, that.getRotationAnchor())) {\n            return false;\n        }\n        if (this.rotationAngle != that.getRotationAngle()) {\n            return false;\n        }\n\n        \r\n        return true;\n\n    }\n","date":"2020-07-01 12:16:46","endLine":304,"groupId":"101342","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/1e7079068e5f5f4254407b439ef5631932ba42.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        \r\n        if (!(obj instanceof TextAnnotation)) {\n            return false;\n        }\n        TextAnnotation that = (TextAnnotation) obj;\n        if (!ObjectUtils.equal(this.text, that.getText())) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.font, that.getFont())) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.paint, that.getPaint())) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.textAnchor, that.getTextAnchor())) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.rotationAnchor,\n                that.getRotationAnchor())) {\n            return false;\n        }\n        if (this.rotationAngle != that.getRotationAngle()) {\n            return false;\n        }\n\n        \r\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/annotations/TextAnnotation.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2020-07-01 12:16:46","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof BoxAndWhiskerItem)) {\n            return false;\n        }\n        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;\n        if (!Objects.equals(this.mean, that.mean)) {\n            return false;\n        }\n        if (!Objects.equals(this.median, that.median)) {\n            return false;\n        }\n        if (!Objects.equals(this.q1, that.q1)) {\n            return false;\n        }\n        if (!Objects.equals(this.q3, that.q3)) {\n            return false;\n        }\n        if (!Objects.equals(this.minRegularValue, that.minRegularValue)) {\n            return false;\n        }\n        if (!Objects.equals(this.maxRegularValue, that.maxRegularValue)) {\n            return false;\n        }\n        if (!Objects.equals(this.minOutlier, that.minOutlier)) {\n            return false;\n        }\n        if (!Objects.equals(this.maxOutlier, that.maxOutlier)) {\n            return false;\n        }\n        if (!Objects.equals(this.outliers, that.outliers)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2020-07-01 12:16:46","endLine":279,"groupId":"101342","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4c/14775cd4711933b206917e098e0beec6d32ff8.src","preCode":"    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof BoxAndWhiskerItem)) {\n            return false;\n        }\n        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;\n        if (!ObjectUtils.equal(this.mean, that.mean)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.median, that.median)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.q1, that.q1)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.q3, that.q3)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.minRegularValue,\n                that.minRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.maxRegularValue,\n                that.maxRegularValue)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.minOutlier, that.minOutlier)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.maxOutlier, that.maxOutlier)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.outliers, that.outliers)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/statistics/BoxAndWhiskerItem.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"}],"commitId":"1955cc38345a5ea52879eb186f09cf2e930bd9e6","commitMessage":"@@@Merge pull request #163 from simon04/use-Objects\n\nUse Objects.hashCode.  Objects.equals.  CloneUtils.clone.  CloneUtils.cloneList.  remove ObjectUtils","date":"2020-07-01 12:16:46","modifiedFileCount":"130","status":"M","submitter":"David Gilbert"}]
