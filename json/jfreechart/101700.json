[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StandardDialScale)) {\n            return false;\n        }\n        StandardDialScale that = (StandardDialScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.extent != that.extent) {\n            return false;\n        }\n        if (this.tickRadius != that.tickRadius) {\n            return false;\n        }\n        if (this.majorTickIncrement != that.majorTickIncrement) {\n            return false;\n        }\n        if (this.majorTickLength != that.majorTickLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.majorTickPaint, that.majorTickPaint)) {\n            return false;\n        }\n        if (!this.majorTickStroke.equals(that.majorTickStroke)) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        if (this.minorTickLength != that.minorTickLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.minorTickPaint, that.minorTickPaint)) {\n            return false;\n        }\n        if (!this.minorTickStroke.equals(that.minorTickStroke)) {\n            return false;\n        }\n        if (this.tickLabelsVisible != that.tickLabelsVisible) {\n            return false;\n        }\n        if (this.tickLabelOffset != that.tickLabelOffset) {\n            return false;\n        }\n        if (!this.tickLabelFont.equals(that.tickLabelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2016-02-19 16:24:22","endLine":937,"groupId":"3496","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4d/b7f35fe3fa907a9633a8d03a58867ccc105c56.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StandardDialScale)) {\n            return false;\n        }\n        StandardDialScale that = (StandardDialScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.extent != that.extent) {\n            return false;\n        }\n        if (this.tickRadius != that.tickRadius) {\n            return false;\n        }\n        if (this.majorTickIncrement != that.majorTickIncrement) {\n            return false;\n        }\n        if (this.majorTickLength != that.majorTickLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.majorTickPaint, that.majorTickPaint)) {\n            return false;\n        }\n        if (!this.majorTickStroke.equals(that.majorTickStroke)) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        if (this.minorTickLength != that.minorTickLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.minorTickPaint, that.minorTickPaint)) {\n            return false;\n        }\n        if (!this.minorTickStroke.equals(that.minorTickStroke)) {\n            return false;\n        }\n        if (this.tickLabelsVisible != that.tickLabelsVisible) {\n            return false;\n        }\n        if (this.tickLabelOffset != that.tickLabelOffset) {\n            return false;\n        }\n        if (!this.tickLabelFont.equals(that.tickLabelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":877,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof GrayPaintScale)) {\n            return false;\n        }\n        GrayPaintScale that = (GrayPaintScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":208,"groupId":"3496","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c7/fb63506ea0f6e25c22146b7b2732be252c5a5a.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof GrayPaintScale)) {\n            return false;\n        }\n        GrayPaintScale that = (GrayPaintScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/GrayPaintScale.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StandardDialScale)) {\n            return false;\n        }\n        StandardDialScale that = (StandardDialScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.extent != that.extent) {\n            return false;\n        }\n        if (this.tickRadius != that.tickRadius) {\n            return false;\n        }\n        if (this.majorTickIncrement != that.majorTickIncrement) {\n            return false;\n        }\n        if (this.majorTickLength != that.majorTickLength) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.majorTickPaint, that.majorTickPaint)) {\n            return false;\n        }\n        if (!this.majorTickStroke.equals(that.majorTickStroke)) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        if (this.minorTickLength != that.minorTickLength) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.minorTickPaint, that.minorTickPaint)) {\n            return false;\n        }\n        if (!this.minorTickStroke.equals(that.minorTickStroke)) {\n            return false;\n        }\n        if (this.tickLabelsVisible != that.tickLabelsVisible) {\n            return false;\n        }\n        if (this.tickLabelOffset != that.tickLabelOffset) {\n            return false;\n        }\n        if (!this.tickLabelFont.equals(that.tickLabelFont)) {\n            return false;\n        }\n        if (!PaintUtils.equal(this.tickLabelPaint, that.tickLabelPaint)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","date":"2017-03-08 01:39:11","endLine":936,"groupId":"101700","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d8/7dbe48155c3bbfdad9c4a78594a9ec2c1564ef.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StandardDialScale)) {\n            return false;\n        }\n        StandardDialScale that = (StandardDialScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.extent != that.extent) {\n            return false;\n        }\n        if (this.tickRadius != that.tickRadius) {\n            return false;\n        }\n        if (this.majorTickIncrement != that.majorTickIncrement) {\n            return false;\n        }\n        if (this.majorTickLength != that.majorTickLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.majorTickPaint, that.majorTickPaint)) {\n            return false;\n        }\n        if (!this.majorTickStroke.equals(that.majorTickStroke)) {\n            return false;\n        }\n        if (this.minorTickCount != that.minorTickCount) {\n            return false;\n        }\n        if (this.minorTickLength != that.minorTickLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.minorTickPaint, that.minorTickPaint)) {\n            return false;\n        }\n        if (!this.minorTickStroke.equals(that.minorTickStroke)) {\n            return false;\n        }\n        if (this.tickLabelsVisible != that.tickLabelsVisible) {\n            return false;\n        }\n        if (this.tickLabelOffset != that.tickLabelOffset) {\n            return false;\n        }\n        if (!this.tickLabelFont.equals(that.tickLabelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":876,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof GrayPaintScale)) {\n            return false;\n        }\n        GrayPaintScale that = (GrayPaintScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":208,"groupId":"101700","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c7/fb63506ea0f6e25c22146b7b2732be252c5a5a.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof GrayPaintScale)) {\n            return false;\n        }\n        GrayPaintScale that = (GrayPaintScale) obj;\n        if (this.lowerBound != that.lowerBound) {\n            return false;\n        }\n        if (this.upperBound != that.upperBound) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/GrayPaintScale.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"N"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"}]
