[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1.setID(\"Test\");\n        assertFalse(b1.equals(b2));\n        b2.setID(\"Test\");\n        assertTrue(b1.equals(b2));\n\n        b1.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setFrame(new BlockBorder(Color.red));\n        assertFalse(b1.equals(b2));\n        b2.setFrame(new BlockBorder(Color.red));\n        assertTrue(b1.equals(b2));\n\n        b1.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertFalse(b1.equals(b2));\n        b2.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setWidth(1.23);\n        assertFalse(b1.equals(b2));\n        b2.setWidth(1.23);\n        assertTrue(b1.equals(b2));\n\n        b1.setHeight(4.56);\n        assertFalse(b1.equals(b2));\n        b2.setHeight(4.56);\n        assertTrue(b1.equals(b2));\n\n        b1.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":115,"groupId":"4355","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0f/dbd60895b306f9398f5f61ac8338d23f02370c.src","preCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1.setID(\"Test\");\n        assertFalse(b1.equals(b2));\n        b2.setID(\"Test\");\n        assertTrue(b1.equals(b2));\n\n        b1.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setFrame(new BlockBorder(Color.red));\n        assertFalse(b1.equals(b2));\n        b2.setFrame(new BlockBorder(Color.red));\n        assertTrue(b1.equals(b2));\n\n        b1.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertFalse(b1.equals(b2));\n        b2.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setWidth(1.23);\n        assertFalse(b1.equals(b2));\n        b2.setWidth(1.23);\n        assertTrue(b1.equals(b2));\n\n        b1.setHeight(4.56);\n        assertFalse(b1.equals(b2));\n        b2.setHeight(4.56);\n        assertTrue(b1.equals(b2));\n\n        b1.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/AbstractBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":75,"groupId":"4355","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d2/076fa477e7c501100389c61aa2f1a149d76e9a.src","preCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/EmptyBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1.setID(\"Test\");\n        assertFalse(b1.equals(b2));\n        b2.setID(\"Test\");\n        assertTrue(b1.equals(b2));\n\n        b1.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setFrame(new BlockBorder(Color.RED));\n        assertFalse(b1.equals(b2));\n        b2.setFrame(new BlockBorder(Color.RED));\n        assertTrue(b1.equals(b2));\n\n        b1.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertFalse(b1.equals(b2));\n        b2.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setWidth(1.23);\n        assertFalse(b1.equals(b2));\n        b2.setWidth(1.23);\n        assertTrue(b1.equals(b2));\n\n        b1.setHeight(4.56);\n        assertFalse(b1.equals(b2));\n        b2.setHeight(4.56);\n        assertTrue(b1.equals(b2));\n\n        b1.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2017-05-06 13:49:04","endLine":115,"groupId":"10499","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/44/9642eba1d83738d041e4ab2f957576b1dc5ca7.src","preCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1.setID(\"Test\");\n        assertFalse(b1.equals(b2));\n        b2.setID(\"Test\");\n        assertTrue(b1.equals(b2));\n\n        b1.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setMargin(new RectangleInsets(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setFrame(new BlockBorder(Color.red));\n        assertFalse(b1.equals(b2));\n        b2.setFrame(new BlockBorder(Color.red));\n        assertTrue(b1.equals(b2));\n\n        b1.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertFalse(b1.equals(b2));\n        b2.setPadding(new RectangleInsets(2.0, 4.0, 6.0, 8.0));\n        assertTrue(b1.equals(b2));\n\n        b1.setWidth(1.23);\n        assertFalse(b1.equals(b2));\n        b2.setWidth(1.23);\n        assertTrue(b1.equals(b2));\n\n        b1.setHeight(4.56);\n        assertFalse(b1.equals(b2));\n        b2.setHeight(4.56);\n        assertTrue(b1.equals(b2));\n\n        b1.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(b1.equals(b2));\n        b2.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/AbstractBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":75,"groupId":"10499","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d2/076fa477e7c501100389c61aa2f1a149d76e9a.src","preCode":"    public void testEquals() {\n        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);\n        EmptyBlock b2 = new EmptyBlock(1.0, 2.0);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.0);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.0);\n        assertTrue(b1.equals(b2));\n\n        b1 = new EmptyBlock(1.1, 2.2);\n        assertFalse(b1.equals(b2));\n        b2 = new EmptyBlock(1.1, 2.2);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/EmptyBlockTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"}]
