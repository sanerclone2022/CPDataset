[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testFindRangeBounds() {\n        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        KeyToGroupMap m = new KeyToGroupMap(\"G1\");\n        m.mapKeyToGroup(\"R1\", \"G1\");\n        m.mapKeyToGroup(\"R2\", \"G1\");\n        m.mapKeyToGroup(\"R3\", \"G2\");\n        r.setSeriesToGroupMap(m);\n\n        dataset.addValue(0.5, \"R3\", \"C1\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(5.0, \"R3\", \"C2\");\n        assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset));\n    }\n","date":"2016-02-19 15:40:32","endLine":177,"groupId":"76","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d1/3bac67014b78f98977ff1ab21c716c78a9c947.src","preCode":"    public void testFindRangeBounds() {\n        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        KeyToGroupMap m = new KeyToGroupMap(\"G1\");\n        m.mapKeyToGroup(\"R1\", \"G1\");\n        m.mapKeyToGroup(\"R2\", \"G1\");\n        m.mapKeyToGroup(\"R3\", \"G2\");\n        r.setSeriesToGroupMap(m);\n\n        dataset.addValue(0.5, \"R3\", \"C1\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(5.0, \"R3\", \"C2\");\n        assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testFindRangeBounds() {\n        StackedAreaRenderer r = new StackedAreaRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R2\", \"C2\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n    }\n","date":"2016-02-19 15:40:32","endLine":88,"groupId":"3367","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ce/d58eba90fcd920616f40e2f641b7fc8c6068be.src","preCode":"    public void testFindRangeBounds() {\n        StackedAreaRenderer r = new StackedAreaRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R2\", \"C2\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":2,"curCode":"    public void testFindRangeBounds() {\n        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        KeyToGroupMap<String, String> m = new KeyToGroupMap<>(\"G1\");\n        m.mapKeyToGroup(\"R1\", \"G1\");\n        m.mapKeyToGroup(\"R2\", \"G1\");\n        m.mapKeyToGroup(\"R3\", \"G2\");\n        r.setSeriesToGroupMap(m);\n\n        dataset.addValue(0.5, \"R3\", \"C1\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(5.0, \"R3\", \"C2\");\n        assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset));\n    }\n","date":"2020-03-09 01:06:45","endLine":172,"groupId":"2725","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4f/961421b3981095c1e19afdaa0ebcf0d5a7f70f.src","preCode":"    public void testFindRangeBounds() {\n        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        KeyToGroupMap m = new KeyToGroupMap(\"G1\");\n        m.mapKeyToGroup(\"R1\", \"G1\");\n        m.mapKeyToGroup(\"R2\", \"G1\");\n        m.mapKeyToGroup(\"R3\", \"G2\");\n        r.setSeriesToGroupMap(m);\n\n        dataset.addValue(0.5, \"R3\", \"C1\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(5.0, \"R3\", \"C2\");\n        assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testFindRangeBounds() {\n        StackedAreaRenderer r = new StackedAreaRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R2\", \"C2\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n    }\n","date":"2016-02-19 15:40:32","endLine":88,"groupId":"3367","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ce/d58eba90fcd920616f40e2f641b7fc8c6068be.src","preCode":"    public void testFindRangeBounds() {\n        StackedAreaRenderer r = new StackedAreaRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R2\", \"C2\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 11:24:15","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public void testFindRangeBounds() {\n        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        KeyToGroupMap<String, String> m = new KeyToGroupMap<>(\"G1\");\n        m.mapKeyToGroup(\"R1\", \"G1\");\n        m.mapKeyToGroup(\"R2\", \"G1\");\n        m.mapKeyToGroup(\"R3\", \"G2\");\n        r.setSeriesToGroupMap(m);\n\n        dataset.addValue(0.5, \"R3\", \"C1\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(5.0, \"R3\", \"C2\");\n        assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset));\n    }\n","date":"2020-03-09 01:06:45","endLine":172,"groupId":"10328","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4f/961421b3981095c1e19afdaa0ebcf0d5a7f70f.src","preCode":"    public void testFindRangeBounds() {\n        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        KeyToGroupMap<String, String> m = new KeyToGroupMap<>(\"G1\");\n        m.mapKeyToGroup(\"R1\", \"G1\");\n        m.mapKeyToGroup(\"R2\", \"G1\");\n        m.mapKeyToGroup(\"R3\", \"G2\");\n        r.setSeriesToGroupMap(m);\n\n        dataset.addValue(0.5, \"R3\", \"C1\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(5.0, \"R3\", \"C2\");\n        assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"},{"authorDate":"2020-03-09 11:24:15","commitOrder":3,"curCode":"    public void testFindRangeBounds() {\n        StackedAreaRenderer r = new StackedAreaRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R2\", \"C2\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n    }\n","date":"2020-03-09 11:24:15","endLine":82,"groupId":"10328","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c6/614257279e68edca76aa1a9295a0d2cc4e3530.src","preCode":"    public void testFindRangeBounds() {\n        StackedAreaRenderer r = new StackedAreaRenderer();\n        assertNull(r.findRangeBounds(null));\n\n        \r\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        assertNull(r.findRangeBounds(dataset));\n\n        dataset.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(-2.0, \"R1\", \"C2\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R1\", \"C3\");\n        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(2.0, \"R2\", \"C1\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n\n        dataset.addValue(null, \"R2\", \"C2\");\n        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"14f6ae88edbedc0579f8133bf02d3b52db86fa7d","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-09 11:24:15","modifiedFileCount":"11","status":"M","submitter":"David Gilbert"}]
