[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","date":"2016-02-19 16:24:22","endLine":1158,"groupId":"2770","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"drawBackgroundImage","params":"(Graphics2Dg2@Rectangle2Darea)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/5bf3cad0b4e03b00933075749d46502d2c4a32.src","preCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/Plot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1140,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map m = new HashMap<String, String>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        Iterator iterator = this.subtitles.iterator();\n        while (iterator.hasNext()) {\n            Title currentTitle = (Title) iterator.next();\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","date":"2016-02-19 16:24:22","endLine":1309,"groupId":"2966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"draw","params":"(Graphics2Dg2@Rectangle2DchartArea@Point2Danchor@ChartRenderingInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/fb/883224bafbc809c218d9bf9c637c23dd9f2169.src","preCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map m = new HashMap<String, String>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        Iterator iterator = this.subtitles.iterator();\n        while (iterator.hasNext()) {\n            Title currentTitle = (Title) iterator.next();\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","realPath":"src/main/java/org/jfree/chart/JFreeChart.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1202,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2018-02-27 02:24:57","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","date":"2016-02-19 16:24:22","endLine":1158,"groupId":"2770","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"drawBackgroundImage","params":"(Graphics2Dg2@Rectangle2Darea)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/5bf3cad0b4e03b00933075749d46502d2c4a32.src","preCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/Plot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1140,"status":"N"},{"authorDate":"2018-02-27 02:24:57","commitOrder":2,"curCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map m = new HashMap<String, String>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","date":"2018-02-27 02:24:57","endLine":1173,"groupId":"2966","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"draw","params":"(Graphics2Dg2@Rectangle2DchartArea@Point2Danchor@ChartRenderingInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d1/fb5b1889d1214a68d150dd7dec8e049f9aa0f5.src","preCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map m = new HashMap<String, String>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        Iterator iterator = this.subtitles.iterator();\n        while (iterator.hasNext()) {\n            Title currentTitle = (Title) iterator.next();\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","realPath":"src/main/java/org/jfree/chart/JFreeChart.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1068,"status":"M"}],"commitId":"893f9b150212790041c1f5019ea5c04d3904a713","commitMessage":"@@@Add generics for subtitles list.","date":"2018-02-27 02:24:57","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-01-09 05:47:42","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":3,"curCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","date":"2016-02-19 16:24:22","endLine":1158,"groupId":"2770","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"drawBackgroundImage","params":"(Graphics2Dg2@Rectangle2Darea)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/5bf3cad0b4e03b00933075749d46502d2c4a32.src","preCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/Plot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1140,"status":"N"},{"authorDate":"2020-01-09 05:47:42","commitOrder":3,"curCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map<String, String> m = new HashMap<>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","date":"2020-01-09 05:47:42","endLine":1173,"groupId":"2966","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"draw","params":"(Graphics2Dg2@Rectangle2DchartArea@Point2Danchor@ChartRenderingInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e3/b95aec0ef5ff1556b66db9f282933ee3973b34.src","preCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map m = new HashMap<String, String>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","realPath":"src/main/java/org/jfree/chart/JFreeChart.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1068,"status":"M"}],"commitId":"3b75f318b1df03ef72738ae8c2e35fc779720691","commitMessage":"@@@Fix compiler warnings.\n","date":"2020-01-09 05:47:42","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-19 11:41:17","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":4,"curCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","date":"2016-02-19 16:24:22","endLine":1158,"groupId":"2770","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"drawBackgroundImage","params":"(Graphics2Dg2@Rectangle2Darea)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/5bf3cad0b4e03b00933075749d46502d2c4a32.src","preCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/Plot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1140,"status":"N"},{"authorDate":"2020-03-19 11:41:17","commitOrder":4,"curCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEventType.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map<String, String> m = new HashMap<>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEventType.DRAWING_FINISHED, 100));\n    }\n","date":"2020-03-19 11:41:17","endLine":1174,"groupId":"2966","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"draw","params":"(Graphics2Dg2@Rectangle2DchartArea@Point2Danchor@ChartRenderingInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3c/8dc1061cf863cd2cefdafac9466929fab6dc05.src","preCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map<String, String> m = new HashMap<>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEvent.DRAWING_FINISHED, 100));\n    }\n","realPath":"src/main/java/org/jfree/chart/JFreeChart.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1069,"status":"M"}],"commitId":"da262a5bb4ce47665413effc6ea3fa1fab561991","commitMessage":"@@@Use enumeration instead of integer constants.","date":"2020-03-19 11:41:17","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2021-02-28 00:11:48","codes":[{"authorDate":"2021-02-28 00:11:48","commitOrder":5,"curCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        this.backgroundImageAlignment.align(dest, area);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","date":"2021-02-28 00:11:48","endLine":1065,"groupId":"101378","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"drawBackgroundImage","params":"(Graphics2Dg2@Rectangle2Darea)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4e/227c3b2135d3cbaf465183792de83b19532980.src","preCode":"    public void drawBackgroundImage(Graphics2D g2, Rectangle2D area) {\n        if (this.backgroundImage == null) {\n            return;  \r\n        }\n        Composite savedComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                this.backgroundImageAlpha));\n        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                this.backgroundImage.getWidth(null),\n                this.backgroundImage.getHeight(null));\n        Align.align(dest, area, this.backgroundImageAlignment);\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n        g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                (int) dest.getY(), (int) dest.getWidth() + 1,\n                (int) dest.getHeight() + 1, null);\n        g2.setClip(savedClip);\n        g2.setComposite(savedComposite);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/Plot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1047,"status":"M"},{"authorDate":"2021-02-28 00:11:48","commitOrder":5,"curCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEventType.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map<String, String> m = new HashMap<>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            this.backgroundImageAlignment.align(dest, chartArea);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEventType.DRAWING_FINISHED, 100));\n    }\n","date":"2021-02-28 00:11:48","endLine":1125,"groupId":"101378","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"draw","params":"(Graphics2Dg2@Rectangle2DchartArea@Point2Danchor@ChartRenderingInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ff/7e1ba798416ab76c5b03005a55b02f50e3c468.src","preCode":"    public void draw(Graphics2D g2, Rectangle2D chartArea, Point2D anchor,\n             ChartRenderingInfo info) {\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEventType.DRAWING_STARTED, 0));\n        \n        if (this.elementHinting) {\n            Map<String, String> m = new HashMap<>();\n            if (this.id != null) {\n                m.put(\"id\", this.id);\n            }\n            m.put(\"ref\", \"JFREECHART_TOP_LEVEL\");            \n            g2.setRenderingHint(ChartHints.KEY_BEGIN_ELEMENT, m);            \n        }\n        \n        EntityCollection entities = null;\n        \r\n        if (info != null) {\n            info.clear();\n            info.setChartArea(chartArea);\n            entities = info.getEntityCollection();\n        }\n        if (entities != null) {\n            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),\n                    this));\n        }\n\n        \r\n        Shape savedClip = g2.getClip();\n        g2.clip(chartArea);\n\n        g2.addRenderingHints(this.renderingHints);\n\n        \r\n        if (this.backgroundPaint != null) {\n            g2.setPaint(this.backgroundPaint);\n            g2.fill(chartArea);\n        }\n\n        if (this.backgroundImage != null) {\n            Composite originalComposite = g2.getComposite();\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n                    this.backgroundImageAlpha));\n            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,\n                    this.backgroundImage.getWidth(null),\n                    this.backgroundImage.getHeight(null));\n            Align.align(dest, chartArea, this.backgroundImageAlignment);\n            g2.drawImage(this.backgroundImage, (int) dest.getX(),\n                    (int) dest.getY(), (int) dest.getWidth(),\n                    (int) dest.getHeight(), null);\n            g2.setComposite(originalComposite);\n        }\n\n        if (isBorderVisible()) {\n            Paint paint = getBorderPaint();\n            Stroke stroke = getBorderStroke();\n            if (paint != null && stroke != null) {\n                Rectangle2D borderArea = new Rectangle2D.Double(\n                        chartArea.getX(), chartArea.getY(),\n                        chartArea.getWidth() - 1.0, chartArea.getHeight()\n                        - 1.0);\n                g2.setPaint(paint);\n                g2.setStroke(stroke);\n                g2.draw(borderArea);\n            }\n        }\n\n        \r\n        Rectangle2D nonTitleArea = new Rectangle2D.Double();\n        nonTitleArea.setRect(chartArea);\n        this.padding.trim(nonTitleArea);\n\n        if (this.title != null && this.title.isVisible()) {\n            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,\n                    (entities != null));\n            if (e != null && entities != null) {\n                entities.addAll(e);\n            }\n        }\n\n        for (Title currentTitle : this.subtitles) {\n            if (currentTitle.isVisible()) {\n                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,\n                        (entities != null));\n                if (e != null && entities != null) {\n                    entities.addAll(e);\n                }\n            }\n        }\n\n        Rectangle2D plotArea = nonTitleArea;\n\n        \r\n        PlotRenderingInfo plotInfo = null;\n        if (info != null) {\n            plotInfo = info.getPlotInfo();\n        }\n        this.plot.draw(g2, plotArea, anchor, null, plotInfo);\n        g2.setClip(savedClip);\n        if (this.elementHinting) {         \n            g2.setRenderingHint(ChartHints.KEY_END_ELEMENT, Boolean.TRUE);            \n        }\n\n        notifyListeners(new ChartProgressEvent(this, this,\n                ChartProgressEventType.DRAWING_FINISHED, 100));\n    }\n","realPath":"src/main/java/org/jfree/chart/JFreeChart.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1020,"status":"M"}],"commitId":"8e1cbdf1ab13892f6a1a9af83223ddf062319f87","commitMessage":"@@@Replace Align class with RectangleAlignment enum.","date":"2021-02-28 00:11:48","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"}]
