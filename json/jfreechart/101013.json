[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        DefaultHighLowDataset d2 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n        assertTrue(d2.equals(d1));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertTrue(d1.equals(d2));\n\n    }\n","date":"2016-02-19 15:40:32","endLine":145,"groupId":"4165","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3d/23ca25eeb3caa740623808b9cf28026bd4f3ca.src","preCode":"    public void testEquals() {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        DefaultHighLowDataset d2 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n        assertTrue(d2.equals(d1));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertTrue(d1.equals(d2));\n\n    }\n","realPath":"src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        DefaultHighLowDataset d2 = (DefaultHighLowDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n    }\n","date":"2016-02-19 15:40:32","endLine":160,"groupId":"4165","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3d/23ca25eeb3caa740623808b9cf28026bd4f3ca.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        DefaultHighLowDataset d2 = (DefaultHighLowDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-21 19:26:58","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        DefaultHighLowDataset d2 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n        assertTrue(d2.equals(d1));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertTrue(d1.equals(d2));\n\n    }\n","date":"2016-02-19 15:40:32","endLine":145,"groupId":"101013","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3d/23ca25eeb3caa740623808b9cf28026bd4f3ca.src","preCode":"    public void testEquals() {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        DefaultHighLowDataset d2 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n        assertTrue(d2.equals(d1));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[0], new double[0], new double[0], new double[0],\n                new double[0], new double[0]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[1], new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],\n                new double[1], new double[1], new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[1], new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[1],\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[1]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultHighLowDataset(\"Series 2\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        assertTrue(d1.equals(d2));\n\n    }\n","realPath":"src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"},{"authorDate":"2020-03-21 19:26:58","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        DefaultHighLowDataset d2 = CloneUtils.clone(d1);\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n    }\n","date":"2020-03-21 19:26:58","endLine":156,"groupId":"101013","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/bc/d2faa7039c64ddbc2f88cde49737b634ac17fc.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",\n                new Date[] {new Date(123L)}, new double[] {1.2},\n                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},\n                new double[] {99.9});\n        DefaultHighLowDataset d2 = (DefaultHighLowDataset) d1.clone();\n        assertTrue(d1 != d2);\n        assertTrue(d1.getClass() == d2.getClass());\n        assertTrue(d1.equals(d2));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"0964e1a75d38ec8d734f8340a6335accc414119c","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 19:26:58","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
