[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":335,"groupId":"662","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ca/fb7d9fd84ee1e94f70ddd491439349234d627d.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/category/CategoryToPieDataset.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":348,"groupId":"662","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/90/fb4616f780ac93f9d6938238909d9ca8bc355d.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/data/general/DefaultPieDataset.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-23 13:01:14","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":335,"groupId":"101978","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ca/fb7d9fd84ee1e94f70ddd491439349234d627d.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/data/category/CategoryToPieDataset.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"N"},{"authorDate":"2020-03-23 13:01:14","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset<K> that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n\n        for (int i = 0; i < count; i++) {\n            K k1 = getKey(i);\n            K k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2020-03-23 13:01:14","endLine":320,"groupId":"101978","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8f/d90d123f6e206a0617c4dc54fb1ea275de01b8.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (!(obj instanceof PieDataset)) {\n            return false;\n        }\n        PieDataset that = (PieDataset) obj;\n        int count = getItemCount();\n        if (that.getItemCount() != count) {\n            return false;\n        }\n\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/data/general/DefaultPieDataset.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"}],"commitId":"86abdc8ee7722b81276c6d7626fc18d3c59a9451","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 13:01:14","modifiedFileCount":"13","status":"M","submitter":"David Gilbert"}]
