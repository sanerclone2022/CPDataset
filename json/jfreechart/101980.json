[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        YIntervalSeries ts = (YIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","date":"2016-02-19 16:24:22","endLine":295,"groupId":"1833","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeSeries","params":"(intseries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d1/8f45a732073e8767b132f71020e834bfd77dcc.src","preCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        YIntervalSeries ts = (YIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","realPath":"src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        XIntervalSeries ts = (XIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","date":"2016-02-19 16:24:22","endLine":297,"groupId":"1833","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeSeries","params":"(intseries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f7/3eff59fd829d7fb23bfb81f3236077d99c7487.src","preCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        XIntervalSeries ts = (XIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","realPath":"src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        YIntervalSeries ts = (YIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","date":"2016-02-19 16:24:22","endLine":295,"groupId":"1833","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeSeries","params":"(intseries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d1/8f45a732073e8767b132f71020e834bfd77dcc.src","preCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        YIntervalSeries ts = (YIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","realPath":"src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"N"},{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void removeSeries(int series) {\n        Args.requireInRange(series, \"series\", 0, this.data.size() - 1);\n        XIntervalSeries ts = this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","date":"2020-03-22 19:36:23","endLine":296,"groupId":"796","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeSeries","params":"(intseries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ef/1df6788b241d2de08e5b721159dac86e5af522.src","preCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        XIntervalSeries ts = (XIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","realPath":"src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 21:16:11","commitOrder":3,"curCode":"    public void removeSeries(int series) {\n        Args.requireInRange(series, \"series\", 0, this.data.size() - 1);\n        YIntervalSeries ts = this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","date":"2020-03-22 21:16:11","endLine":293,"groupId":"101980","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"removeSeries","params":"(intseries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4b/690e9c7e1fe72e0c352fafafe46237336bae2d.src","preCode":"    public void removeSeries(int series) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\"Series index out of bounds.\");\n        }\n        YIntervalSeries ts = (YIntervalSeries) this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","realPath":"src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void removeSeries(int series) {\n        Args.requireInRange(series, \"series\", 0, this.data.size() - 1);\n        XIntervalSeries ts = this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","date":"2020-03-22 19:36:23","endLine":296,"groupId":"101980","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeSeries","params":"(intseries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ef/1df6788b241d2de08e5b721159dac86e5af522.src","preCode":"    public void removeSeries(int series) {\n        Args.requireInRange(series, \"series\", 0, this.data.size() - 1);\n        XIntervalSeries ts = this.data.get(series);\n        ts.removeChangeListener(this);\n        this.data.remove(series);\n        fireDatasetChanged();\n    }\n","realPath":"src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"N"}],"commitId":"cb65254c83ba27848719a0d4765348ca3f2bbd5c","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 21:16:11","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
