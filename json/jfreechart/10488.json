[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.red);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.red);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.red);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.red);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.blue);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.blue);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2016-02-19 15:40:32","endLine":89,"groupId":"2807","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/bce0d68e3b8bd180034aca34784b422839cf36.src","preCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.red);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.red);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.red);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.red);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.blue);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.blue);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BlockBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtilities.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","date":"2016-02-19 15:40:32","endLine":115,"groupId":"3683","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2a/d1f7aa1fa7058269928659ade7487704014d15.src","preCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtilities.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","realPath":"src/test/java/org/jfree/chart/block/LineBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 13:49:04","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2017-05-06 13:49:04","endLine":89,"groupId":"2807","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/00/a9f9e5f14f3e6f89569cb0e94cf852646a7a30.src","preCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.red);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.red);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.red);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.red);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.blue);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.blue);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BlockBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtilities.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","date":"2017-05-06 13:49:04","endLine":115,"groupId":"3683","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/65/771f693af54bd5ccb1ea68196c14a4ab4b9ff3.src","preCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtilities.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","realPath":"src/test/java/org/jfree/chart/block/LineBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":3,"curCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2017-05-06 13:49:04","endLine":89,"groupId":"2807","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/00/a9f9e5f14f3e6f89569cb0e94cf852646a7a30.src","preCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BlockBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":3,"curCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtils.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","date":"2017-05-06 16:41:21","endLine":115,"groupId":"3683","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/89/97c04fd9ae659bbaf717aa31dce03ce991b62f.src","preCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtilities.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","realPath":"src/test/java/org/jfree/chart/block/LineBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 14:16:26","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":4,"curCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertTrue(b1.equals(b2));\n    }\n","date":"2017-05-06 13:49:04","endLine":89,"groupId":"10488","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/00/a9f9e5f14f3e6f89569cb0e94cf852646a7a30.src","preCode":"    public void testEquals() {\n        BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0,\n                4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n        assertTrue(b2.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE, 1.0, 2.0,\n                3.0, 4.0), Color.RED);\n        assertTrue(b1.equals(b2));\n\n        \r\n        b1 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertFalse(b1.equals(b2));\n        b2 = new BlockBorder(new RectangleInsets(1.0, 2.0, 3.0, 4.0),\n                Color.BLUE);\n        assertTrue(b1.equals(b2));\n    }\n","realPath":"src/test/java/org/jfree/chart/block/BlockBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2020-03-20 14:16:26","commitOrder":4,"curCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = TestUtils.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","date":"2020-03-20 14:16:26","endLine":111,"groupId":"10488","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/57/44b69863de370c4d99f4bc08b16ae026a0b38a.src","preCode":"    public void testSerialization() {\n        LineBorder b1 = new LineBorder(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.0f),\n                new RectangleInsets(1.0, 1.0, 1.0, 1.0));\n        LineBorder b2 = (LineBorder) TestUtils.serialised(b1);\n        assertEquals(b1, b2);\n    }\n","realPath":"src/test/java/org/jfree/chart/block/LineBorderTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"3b49d5ab6f13410477f8e88417e73591568f4fb9","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 14:16:26","modifiedFileCount":"21","status":"M","submitter":"David Gilbert"}]
