[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected Size2D arrangeFN(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double width = constraint.getWidth() / this.columns;\n        RectangleConstraint bc = constraint.toFixedWidth(width);\n        List blocks = container.getBlocks();\n        double maxH = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = (Block) blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxH = Math.max(maxH, s.getHeight());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedHeight(maxH * this.rows);\n        return arrange(container, g2, cc);\n    }\n","date":"2016-02-19 16:24:22","endLine":385,"groupId":"2502","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"arrangeFN","params":"(BlockContainercontainer@Graphics2Dg2@RectangleConstraintconstraint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f1/659299b88fd3c543b0f0a3161e707967b07d39.src","preCode":"    protected Size2D arrangeFN(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double width = constraint.getWidth() / this.columns;\n        RectangleConstraint bc = constraint.toFixedWidth(width);\n        List blocks = container.getBlocks();\n        double maxH = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = (Block) blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxH = Math.max(maxH, s.getHeight());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedHeight(maxH * this.rows);\n        return arrange(container, g2, cc);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/GridArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected Size2D arrangeNF(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double height = constraint.getHeight() / this.rows;\n        RectangleConstraint bc = constraint.toFixedHeight(height);\n        List blocks = container.getBlocks();\n        double maxW = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = (Block) blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxW = Math.max(maxW, s.getWidth());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedWidth(maxW * this.columns);\n        return arrange(container, g2, cc);\n    }\n","date":"2016-02-19 16:24:22","endLine":418,"groupId":"834","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"arrangeNF","params":"(BlockContainercontainer@Graphics2Dg2@RectangleConstraintconstraint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f1/659299b88fd3c543b0f0a3161e707967b07d39.src","preCode":"    protected Size2D arrangeNF(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double height = constraint.getHeight() / this.rows;\n        RectangleConstraint bc = constraint.toFixedHeight(height);\n        List blocks = container.getBlocks();\n        double maxW = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = (Block) blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxW = Math.max(maxW, s.getWidth());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedWidth(maxW * this.columns);\n        return arrange(container, g2, cc);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/GridArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2021-02-06 13:14:37","codes":[{"authorDate":"2021-02-06 13:14:37","commitOrder":2,"curCode":"    protected Size2D arrangeFN(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double width = constraint.getWidth() / this.columns;\n        RectangleConstraint bc = constraint.toFixedWidth(width);\n        List<Block> blocks = container.getBlocks();\n        double maxH = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxH = Math.max(maxH, s.getHeight());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedHeight(maxH * this.rows);\n        return arrange(container, g2, cc);\n    }\n","date":"2021-02-06 13:14:37","endLine":376,"groupId":"101763","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"arrangeFN","params":"(BlockContainercontainer@Graphics2Dg2@RectangleConstraintconstraint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/67/7cd6c9ff0eb84eb9e40ca01fe5c7f8c9d6e43f.src","preCode":"    protected Size2D arrangeFN(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double width = constraint.getWidth() / this.columns;\n        RectangleConstraint bc = constraint.toFixedWidth(width);\n        List blocks = container.getBlocks();\n        double maxH = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = (Block) blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxH = Math.max(maxH, s.getHeight());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedHeight(maxH * this.rows);\n        return arrange(container, g2, cc);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/GridArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"M"},{"authorDate":"2021-02-06 13:14:37","commitOrder":2,"curCode":"    protected Size2D arrangeNF(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double height = constraint.getHeight() / this.rows;\n        RectangleConstraint bc = constraint.toFixedHeight(height);\n        List<Block> blocks = container.getBlocks();\n        double maxW = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxW = Math.max(maxW, s.getWidth());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedWidth(maxW * this.columns);\n        return arrange(container, g2, cc);\n    }\n","date":"2021-02-06 13:14:37","endLine":409,"groupId":"101763","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"arrangeNF","params":"(BlockContainercontainer@Graphics2Dg2@RectangleConstraintconstraint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/67/7cd6c9ff0eb84eb9e40ca01fe5c7f8c9d6e43f.src","preCode":"    protected Size2D arrangeNF(BlockContainer container, Graphics2D g2,\n                               RectangleConstraint constraint) {\n\n        double height = constraint.getHeight() / this.rows;\n        RectangleConstraint bc = constraint.toFixedHeight(height);\n        List blocks = container.getBlocks();\n        double maxW = 0.0;\n        for (int r = 0; r < this.rows; r++) {\n            for (int c = 0; c < this.columns; c++) {\n                int index = r * this.columns + c;\n                if (index >= blocks.size()) {\n                    break;\n                }\n                Block b = (Block) blocks.get(index);\n                if (b != null) {\n                    Size2D s = b.arrange(g2, bc);\n                    maxW = Math.max(maxW, s.getWidth());\n                }\n            }\n        }\n        RectangleConstraint cc = constraint.toFixedWidth(maxW * this.columns);\n        return arrange(container, g2, cc);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/GridArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"}],"commitId":"fc4ddeed916c4cfd6479bf7378c6cdb94f6a19fe","commitMessage":"@@@Merge pull request #211 from zgh-public/code-cleanup-pr\n\nDifferent improvements of old fashioned code","date":"2021-02-06 13:14:37","modifiedFileCount":"149","status":"M","submitter":"David Gilbert"}]
