[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2016-02-19 15:40:32","endLine":237,"groupId":"978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/be/1053c4c2febd8185545b84d77f1ccdd2f97d85.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setPaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlinePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelPaint(Color.blue);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.blue);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.blue);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setNegativeItemLabelPosition(\n            new ItemLabelPosition(ItemLabelAnchor.CENTER, TextAnchor.CENTER)\n        );\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2016-02-19 15:40:32","endLine":937,"groupId":"978","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3b/2dfd5a614592a080f2744c67b4b81c674d356e.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setPaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlinePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelPaint(Color.blue);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.blue);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.blue);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setNegativeItemLabelPosition(\n            new ItemLabelPosition(ItemLabelAnchor.CENTER, TextAnchor.CENTER)\n        );\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":793,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-04-25 23:33:48","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2016-02-19 15:40:32","endLine":237,"groupId":"978","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/be/1053c4c2febd8185545b84d77f1ccdd2f97d85.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"N"},{"authorDate":"2016-04-25 23:33:48","commitOrder":2,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setPaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setNegativeItemLabelPosition(\n            new ItemLabelPosition(ItemLabelAnchor.CENTER, TextAnchor.CENTER)\n        );\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2016-04-25 23:33:48","endLine":946,"groupId":"978","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8c/61dd279913f1c38df620885037af19fcd0267e.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setPaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlinePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.red);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelPaint(Color.blue);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.blue);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.blue);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setNegativeItemLabelPosition(\n            new ItemLabelPosition(ItemLabelAnchor.CENTER, TextAnchor.CENTER)\n        );\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":802,"status":"M"}],"commitId":"86129e001ba438bfff7484eb7b70c1667482fe2b","commitMessage":"@@@Update clone test and capitalise Color constants.","date":"2016-04-25 23:33:48","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-10 23:59:03","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":3,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2016-02-19 15:40:32","endLine":237,"groupId":"978","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/be/1053c4c2febd8185545b84d77f1ccdd2f97d85.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"N"},{"authorDate":"2017-03-10 23:59:03","commitOrder":3,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2017-03-10 23:59:03","endLine":684,"groupId":"978","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a9/dda2ef64d222b0dd5d32f705f745866c00921a.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setPaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setNegativeItemLabelPosition(\n            new ItemLabelPosition(ItemLabelAnchor.CENTER, TextAnchor.CENTER)\n        );\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":583,"status":"M"}],"commitId":"61220d6f207fdee783a87ad7428baa0d61c7ad79","commitMessage":"@@@Remove deprecated code","date":"2017-03-10 23:59:03","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-13 17:42:58","codes":[{"authorDate":"2017-03-13 17:42:58","commitOrder":4,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setDefaultPaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2017-03-13 17:42:58","endLine":237,"groupId":"978","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8c/3874980f55e647288d4510719943d6ff62a36e.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2017-03-13 17:42:58","commitOrder":4,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultPaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2017-03-13 17:42:58","endLine":684,"groupId":"978","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ca/8e413ef2b295bca26c33ca9df7899f05651e1c.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":583,"status":"M"}],"commitId":"6a67a2027cb181c8d00b88145a1b4b0116c38805","commitMessage":"@@@Change 'base' to 'default' for renderer attributes.","date":"2017-03-13 17:42:58","modifiedFileCount":"35","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-03-13 17:42:58","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":5,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setDefaultPaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2017-05-06 13:49:04","endLine":237,"groupId":"10388","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0d/23a00d0b1ebe7de686e7c5c4a7164531f2fded.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();\n        r1.addChangeListener(detector);\n\n        detector.setNotified(false);\n        r1.setDefaultPaint(Color.red);\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2017-03-13 17:42:58","commitOrder":5,"curCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultPaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","date":"2017-03-13 17:42:58","endLine":684,"groupId":"10388","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testEventNotification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ca/8e413ef2b295bca26c33ca9df7899f05651e1c.src","preCode":"    public void testEventNotification() {\n\n        RendererChangeDetector detector = new RendererChangeDetector();\n        BarRenderer r1 = new BarRenderer();  \r\n                                             \r\n        r1.addChangeListener(detector);\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultPaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlinePaint(0, Color.RED);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultOutlinePaint(Color.RED);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesOutlineStroke(0, new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultOutlineStroke(new BasicStroke(1.0f));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesShape(0, new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultShape(new Rectangle2D.Float());\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelsVisible(0, Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelsVisible(Boolean.TRUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelFont(0, new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelFont(new Font(\"Serif\", Font.PLAIN, 12));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesItemLabelPaint(0, Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultItemLabelPaint(Color.BLUE);\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultPositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        \r\n        detector.setNotified(false);\n        r1.setSeriesNegativeItemLabelPosition(0, new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n        detector.setNotified(false);\n        r1.setDefaultNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.CENTER, TextAnchor.CENTER));\n        assertTrue(detector.getNotified());\n\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/AbstractRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":583,"status":"N"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"}]
