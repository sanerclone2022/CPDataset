[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        DialValueIndicator i1 = new DialValueIndicator(0);\n        DialValueIndicator i2 = new DialValueIndicator(0);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setDatasetIndex(99);\n        assertFalse(i1.equals(i2));\n        i2.setDatasetIndex(99);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setAngle(43);\n        assertFalse(i1.equals(i2));\n        i2.setAngle(43);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setRadius(0.77);\n        assertFalse(i1.equals(i2));\n        i2.setRadius(0.77);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTemplateValue(new Double(1.23));\n        assertFalse(i1.equals(i2));\n        i2.setTemplateValue(new Double(1.23));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(i1.equals(i2));\n        i2.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(i1.equals(i2));\n        i2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(i1.equals(i2));\n        i2.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","date":"2016-02-19 15:40:32","endLine":163,"groupId":"437","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/82/01fe9de0fed4353f4f5787e9b36238294d29b5.src","preCode":"    public void testEquals() {\n        DialValueIndicator i1 = new DialValueIndicator(0);\n        DialValueIndicator i2 = new DialValueIndicator(0);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setDatasetIndex(99);\n        assertFalse(i1.equals(i2));\n        i2.setDatasetIndex(99);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setAngle(43);\n        assertFalse(i1.equals(i2));\n        i2.setAngle(43);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setRadius(0.77);\n        assertFalse(i1.equals(i2));\n        i2.setRadius(0.77);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTemplateValue(new Double(1.23));\n        assertFalse(i1.equals(i2));\n        i2.setTemplateValue(new Double(1.23));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(i1.equals(i2));\n        i2.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(i1.equals(i2));\n        i2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(i1.equals(i2));\n        i2.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialValueIndicatorTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = new DialPointer.Pin(1);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1 = new DialPointer.Pin(2);\n        assertFalse(i1.equals(i2));\n        i2 = new DialPointer.Pin(2);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","date":"2016-02-19 15:40:32","endLine":79,"groupId":"462","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/20/63b63d997477626f951ca36ba35f2384b845ef.src","preCode":"    public void testEquals() {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = new DialPointer.Pin(1);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1 = new DialPointer.Pin(2);\n        assertFalse(i1.equals(i2));\n        i2 = new DialPointer.Pin(2);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testEquals() {\n        DialValueIndicator i1 = new DialValueIndicator(0);\n        DialValueIndicator i2 = new DialValueIndicator(0);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setDatasetIndex(99);\n        assertFalse(i1.equals(i2));\n        i2.setDatasetIndex(99);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setAngle(43);\n        assertFalse(i1.equals(i2));\n        i2.setAngle(43);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setRadius(0.77);\n        assertFalse(i1.equals(i2));\n        i2.setRadius(0.77);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTemplateValue(new Double(1.23));\n        assertFalse(i1.equals(i2));\n        i2.setTemplateValue(new Double(1.23));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(i1.equals(i2));\n        i2.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(i1.equals(i2));\n        i2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(i1.equals(i2));\n        i2.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","date":"2017-05-06 13:49:04","endLine":163,"groupId":"437","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a7/f2756b058820c510b72f826b3941b5eb407695.src","preCode":"    public void testEquals() {\n        DialValueIndicator i1 = new DialValueIndicator(0);\n        DialValueIndicator i2 = new DialValueIndicator(0);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setDatasetIndex(99);\n        assertFalse(i1.equals(i2));\n        i2.setDatasetIndex(99);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setAngle(43);\n        assertFalse(i1.equals(i2));\n        i2.setAngle(43);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setRadius(0.77);\n        assertFalse(i1.equals(i2));\n        i2.setRadius(0.77);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTemplateValue(new Double(1.23));\n        assertFalse(i1.equals(i2));\n        i2.setTemplateValue(new Double(1.23));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(i1.equals(i2));\n        i2.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(i1.equals(i2));\n        i2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(i1.equals(i2));\n        i2.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialValueIndicatorTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = new DialPointer.Pin(1);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1 = new DialPointer.Pin(2);\n        assertFalse(i1.equals(i2));\n        i2 = new DialPointer.Pin(2);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","date":"2016-02-19 15:40:32","endLine":79,"groupId":"462","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/20/63b63d997477626f951ca36ba35f2384b845ef.src","preCode":"    public void testEquals() {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = new DialPointer.Pin(1);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1 = new DialPointer.Pin(2);\n        assertFalse(i1.equals(i2));\n        i2 = new DialPointer.Pin(2);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-02-25 12:33:13","commitOrder":3,"curCode":"    public void testEquals() {\n        DialValueIndicator i1 = new DialValueIndicator(0);\n        DialValueIndicator i2 = new DialValueIndicator(0);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setDatasetIndex(99);\n        assertFalse(i1.equals(i2));\n        i2.setDatasetIndex(99);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setAngle(43);\n        assertFalse(i1.equals(i2));\n        i2.setAngle(43);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setRadius(0.77);\n        assertFalse(i1.equals(i2));\n        i2.setRadius(0.77);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTemplateValue(1.23);\n        assertFalse(i1.equals(i2));\n        i2.setTemplateValue(1.23);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(i1.equals(i2));\n        i2.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.GREEN));\n        assertFalse(i1.equals(i2));\n        i2.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.GREEN));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.GREEN));\n        assertFalse(i1.equals(i2));\n        i2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.GREEN));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(i1.equals(i2));\n        i2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.GREEN));\n        assertFalse(i1.equals(i2));\n        i2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.GREEN));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(i1.equals(i2));\n        i2.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","date":"2020-02-25 12:33:13","endLine":158,"groupId":"10103","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2a/684861972392ff7283c79404aa92878fc1d386.src","preCode":"    public void testEquals() {\n        DialValueIndicator i1 = new DialValueIndicator(0);\n        DialValueIndicator i2 = new DialValueIndicator(0);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setDatasetIndex(99);\n        assertFalse(i1.equals(i2));\n        i2.setDatasetIndex(99);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setAngle(43);\n        assertFalse(i1.equals(i2));\n        i2.setAngle(43);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setRadius(0.77);\n        assertFalse(i1.equals(i2));\n        i2.setRadius(0.77);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setFrameAnchor(RectangleAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTemplateValue(new Double(1.23));\n        assertFalse(i1.equals(i2));\n        i2.setTemplateValue(new Double(1.23));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(i1.equals(i2));\n        i2.setFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(i1.equals(i2));\n        i2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(i1.equals(i2));\n        i2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(i1.equals(i2));\n        i2.setInsets(new RectangleInsets(1, 2, 3, 4));\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setValueAnchor(RectangleAnchor.BOTTOM_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertFalse(i1.equals(i2));\n        i2.setTextAnchor(TextAnchor.TOP_LEFT);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialValueIndicatorTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":3,"curCode":"    public void testEquals() {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = new DialPointer.Pin(1);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1 = new DialPointer.Pin(2);\n        assertFalse(i1.equals(i2));\n        i2 = new DialPointer.Pin(2);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","date":"2016-02-19 15:40:32","endLine":79,"groupId":"10103","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/20/63b63d997477626f951ca36ba35f2384b845ef.src","preCode":"    public void testEquals() {\n        DialPointer i1 = new DialPointer.Pin(1);\n        DialPointer i2 = new DialPointer.Pin(1);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1 = new DialPointer.Pin(2);\n        assertFalse(i1.equals(i2));\n        i2 = new DialPointer.Pin(2);\n        assertTrue(i1.equals(i2));\n\n        \r\n        i1.setVisible(false);\n        assertFalse(i1.equals(i2));\n        i2.setVisible(false);\n        assertTrue(i1.equals(i2));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"}],"commitId":"829ac15627cb3462b26a88921e68f6647842625d","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 12:33:13","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
