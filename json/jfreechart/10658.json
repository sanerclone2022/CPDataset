[{"authorTime":"2017-05-06 16:39:34","codes":[{"authorDate":"2017-05-06 16:39:34","commitOrder":1,"curCode":"    public void testCalculateColumnTotal2() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(new Double(1.0), \"R0\", \"C0\");\n        table.addValue(new Double(2.0), \"R0\", \"C1\");\n        table.addValue(new Double(3.0), \"R1\", \"C0\");\n        table.addValue(new Double(4.0), \"R1\", \"C1\");\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(1.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0}), EPSILON);\n        assertEquals(3.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {}), EPSILON);\n\n        assertEquals(6.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0}), EPSILON);\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n    }\n","date":"2017-05-06 16:39:34","endLine":119,"groupId":"3473","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateColumnTotal2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d8/f66f8d06f9a7adebc942ba58b93b182a87c0ef.src","preCode":"    public void testCalculateColumnTotal2() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(new Double(1.0), \"R0\", \"C0\");\n        table.addValue(new Double(2.0), \"R0\", \"C1\");\n        table.addValue(new Double(3.0), \"R1\", \"C0\");\n        table.addValue(new Double(4.0), \"R1\", \"C1\");\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(1.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0}), EPSILON);\n        assertEquals(3.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {}), EPSILON);\n\n        assertEquals(6.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0}), EPSILON);\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/DataUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"},{"authorDate":"2017-05-06 16:39:34","commitOrder":1,"curCode":"    public void testCalculateRowTotal() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(new Double(1.0), \"R0\", \"C0\");\n        table.addValue(new Double(2.0), \"R0\", \"C1\");\n        table.addValue(new Double(3.0), \"R1\", \"C0\");\n        table.addValue(new Double(4.0), \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);\n        assertEquals(7.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n    }\n","date":"2017-05-06 16:39:34","endLine":135,"groupId":"3642","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateRowTotal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d8/f66f8d06f9a7adebc942ba58b93b182a87c0ef.src","preCode":"    public void testCalculateRowTotal() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(new Double(1.0), \"R0\", \"C0\");\n        table.addValue(new Double(2.0), \"R0\", \"C1\");\n        table.addValue(new Double(3.0), \"R1\", \"C0\");\n        table.addValue(new Double(4.0), \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);\n        assertEquals(7.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/DataUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"}],"commitId":"871490272e372e910414952594d658611899da55","commitMessage":"@@@Rename DataUtilities --> DataUtils.","date":"2017-05-06 16:39:34","modifiedFileCount":"6","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-01-02 20:03:16","codes":[{"authorDate":"2020-01-02 20:03:16","commitOrder":2,"curCode":"    public void testCalculateColumnTotal2() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(1.0, \"R0\", \"C0\");\n        table.addValue(2.0, \"R0\", \"C1\");\n        table.addValue(3.0, \"R1\", \"C0\");\n        table.addValue(4.0, \"R1\", \"C1\");\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(1.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0}), EPSILON);\n        assertEquals(3.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {}), EPSILON);\n\n        assertEquals(6.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0}), EPSILON);\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n    }\n","date":"2020-01-02 20:03:16","endLine":112,"groupId":"3473","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateColumnTotal2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/03/3333a847509630d5f08fbbb7ec01f6ed0ad26a.src","preCode":"    public void testCalculateColumnTotal2() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(new Double(1.0), \"R0\", \"C0\");\n        table.addValue(new Double(2.0), \"R0\", \"C1\");\n        table.addValue(new Double(3.0), \"R1\", \"C0\");\n        table.addValue(new Double(4.0), \"R1\", \"C1\");\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(1.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0}), EPSILON);\n        assertEquals(3.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {}), EPSILON);\n\n        assertEquals(6.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0}), EPSILON);\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/DataUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-01-02 20:03:16","commitOrder":2,"curCode":"    public void testCalculateRowTotal() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(1.0, \"R0\", \"C0\");\n        table.addValue(2.0, \"R0\", \"C1\");\n        table.addValue(3.0, \"R1\", \"C0\");\n        table.addValue(4.0, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);\n        assertEquals(7.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n    }\n","date":"2020-01-02 20:03:16","endLine":128,"groupId":"929","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateRowTotal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/03/3333a847509630d5f08fbbb7ec01f6ed0ad26a.src","preCode":"    public void testCalculateRowTotal() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(new Double(1.0), \"R0\", \"C0\");\n        table.addValue(new Double(2.0), \"R0\", \"C1\");\n        table.addValue(new Double(3.0), \"R1\", \"C0\");\n        table.addValue(new Double(4.0), \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);\n        assertEquals(7.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/DataUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"3f43a549922f5ae52ade2598e265737feff3a589","commitMessage":"@@@Fix compiler warnings.","date":"2020-01-02 20:03:16","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public void testCalculateColumnTotal2() {\n        DefaultKeyedValues2D<String, String> table = new DefaultKeyedValues2D<>();\n        table.addValue(1.0, \"R0\", \"C0\");\n        table.addValue(2.0, \"R0\", \"C1\");\n        table.addValue(3.0, \"R1\", \"C0\");\n        table.addValue(4.0, \"R1\", \"C1\");\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(1.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0}), EPSILON);\n        assertEquals(3.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {}), EPSILON);\n\n        assertEquals(6.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0}), EPSILON);\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n    }\n","date":"2020-03-09 01:06:45","endLine":112,"groupId":"10658","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateColumnTotal2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ad/0ded171d33c26945da1832a6e744f16b4424dc.src","preCode":"    public void testCalculateColumnTotal2() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(1.0, \"R0\", \"C0\");\n        table.addValue(2.0, \"R0\", \"C1\");\n        table.addValue(3.0, \"R1\", \"C0\");\n        table.addValue(4.0, \"R1\", \"C1\");\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(1.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {0}), EPSILON);\n        assertEquals(3.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 0,\n                new int[] {}), EPSILON);\n\n        assertEquals(6.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0}), EPSILON);\n        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(2.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {0, 1}), EPSILON);\n        assertEquals(0.0, DataUtils.calculateColumnTotal(table, 1,\n                new int[] {1}), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/DataUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public void testCalculateRowTotal() {\n        DefaultKeyedValues2D<String, String> table = new DefaultKeyedValues2D<>();\n        table.addValue(1.0, \"R0\", \"C0\");\n        table.addValue(2.0, \"R0\", \"C1\");\n        table.addValue(3.0, \"R1\", \"C0\");\n        table.addValue(4.0, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);\n        assertEquals(7.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n    }\n","date":"2020-03-09 01:06:45","endLine":128,"groupId":"10658","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateRowTotal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ad/0ded171d33c26945da1832a6e744f16b4424dc.src","preCode":"    public void testCalculateRowTotal() {\n        DefaultKeyedValues2D table = new DefaultKeyedValues2D();\n        table.addValue(1.0, \"R0\", \"C0\");\n        table.addValue(2.0, \"R0\", \"C1\");\n        table.addValue(3.0, \"R1\", \"C0\");\n        table.addValue(4.0, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);\n        assertEquals(7.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n        table.setValue(null, \"R1\", \"C1\");\n        assertEquals(3.0, DataUtils.calculateRowTotal(table, 1), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/DataUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"}]
