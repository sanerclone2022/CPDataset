[{"authorTime":"2020-02-15 18:41:04","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testGetValueByIndex() {\n        KeyedObjects2D data = new KeyedObjects2D();\n        data.addObject(\"Obj1\", \"R1\", \"C1\");\n        data.addObject(\"Obj2\", \"R2\", \"C2\");\n        assertEquals(\"Obj1\", data.getObject(0, 0));\n        assertEquals(\"Obj2\", data.getObject(1, 1));\n        assertNull(data.getObject(0, 1));\n        assertNull(data.getObject(1, 0));\n\n        \r\n        boolean pass = false;\n        try {\n            data.getObject(-1, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, -1);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(2, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, 2);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2016-02-19 15:40:32","endLine":156,"groupId":"4230","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValueByIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9a/0b8acdcc84e4ba4da9dfe10ba53d3e9d8ae3ed.src","preCode":"    public void testGetValueByIndex() {\n        KeyedObjects2D data = new KeyedObjects2D();\n        data.addObject(\"Obj1\", \"R1\", \"C1\");\n        data.addObject(\"Obj2\", \"R2\", \"C2\");\n        assertEquals(\"Obj1\", data.getObject(0, 0));\n        assertEquals(\"Obj2\", data.getObject(1, 1));\n        assertNull(data.getObject(0, 1));\n        assertNull(data.getObject(1, 0));\n\n        \r\n        boolean pass = false;\n        try {\n            data.getObject(-1, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, -1);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(2, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, 2);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjects2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"NB"},{"authorDate":"2020-02-15 18:41:04","commitOrder":2,"curCode":"    public void testBug134() {\n        boolean pass = false;\n        try {\n            Week w = new Week(0, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            Week w = new Week(54, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-15 18:41:04","endLine":523,"groupId":"4230","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBug134","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c9/2c0fb3b735a3637212f43abe06b6cd95ecbb2f.src","preCode":"    public void testBug134() {\n        boolean pass = false;\n        try {\n            Week w = new Week(0, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            Week w = new Week(54, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/time/WeekTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"B"}],"commitId":"952e96e8a3297c9bdd96d059aaf6212a3e6a0cfa","commitMessage":"@@@Add test for bug 134\n","date":"2020-02-15 18:41:04","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-02-15 18:41:04","codes":[{"authorDate":"2020-03-21 06:34:00","commitOrder":3,"curCode":"    public void testGetValueByIndex() {\n        KeyedObjects2D<String, String> data = new KeyedObjects2D<>();\n        data.addObject(\"Obj1\", \"R1\", \"C1\");\n        data.addObject(\"Obj2\", \"R2\", \"C2\");\n        assertEquals(\"Obj1\", data.getObject(0, 0));\n        assertEquals(\"Obj2\", data.getObject(1, 1));\n        assertNull(data.getObject(0, 1));\n        assertNull(data.getObject(1, 0));\n\n        \r\n        boolean pass = false;\n        try {\n            data.getObject(-1, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, -1);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(2, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, 2);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-03-21 06:34:00","endLine":152,"groupId":"10708","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValueByIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/aa/90ff533ef8728e2c2824b345c8097d44f8d341.src","preCode":"    public void testGetValueByIndex() {\n        KeyedObjects2D data = new KeyedObjects2D();\n        data.addObject(\"Obj1\", \"R1\", \"C1\");\n        data.addObject(\"Obj2\", \"R2\", \"C2\");\n        assertEquals(\"Obj1\", data.getObject(0, 0));\n        assertEquals(\"Obj2\", data.getObject(1, 1));\n        assertNull(data.getObject(0, 1));\n        assertNull(data.getObject(1, 0));\n\n        \r\n        boolean pass = false;\n        try {\n            data.getObject(-1, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, -1);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(2, 0);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.getObject(0, 2);\n        }\n        catch (IndexOutOfBoundsException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjects2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2020-02-15 18:41:04","commitOrder":3,"curCode":"    public void testBug134() {\n        boolean pass = false;\n        try {\n            Week w = new Week(0, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            Week w = new Week(54, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-15 18:41:04","endLine":523,"groupId":"10708","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBug134","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c9/2c0fb3b735a3637212f43abe06b6cd95ecbb2f.src","preCode":"    public void testBug134() {\n        boolean pass = false;\n        try {\n            Week w = new Week(0, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            Week w = new Week(54, 2020);\n        } catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/time/WeekTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"N"}],"commitId":"d13f8d95839a34ec745c90d755e40c9f5a2bb406","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 06:34:00","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"}]
