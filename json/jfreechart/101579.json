[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        Integer key = new Integer(axisIndex);\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (CategoryDataset dataset : this.datasets.values()) {\n            if (dataset == null) {\n                continue;\n            }\n            int i = indexOf(dataset);\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    new Integer(i));\n            if (mappedAxes == null) {\n                if (key.equals(ZERO)) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(key)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":4308,"groupId":"3949","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"datasetsMappedToDomainAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        Integer key = new Integer(axisIndex);\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (CategoryDataset dataset : this.datasets.values()) {\n            if (dataset == null) {\n                continue;\n            }\n            int i = indexOf(dataset);\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    new Integer(i));\n            if (mappedAxes == null) {\n                if (key.equals(ZERO)) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(key)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4287,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    private List datasetsMappedToRangeAxis(int index) {\n        Integer key = new Integer(index);\n        List result = new ArrayList();\n        for (CategoryDataset dataset : this.datasets.values()) {\n            int i = indexOf(dataset);\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    new Integer(i));\n            if (mappedAxes == null) {\n                if (key.equals(ZERO)) {\n                    result.add(this.datasets.get(i));\n                }\n            } else {\n                if (mappedAxes.contains(key)) {\n                    result.add(this.datasets.get(i));\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-02-19 16:24:22","endLine":4336,"groupId":"3951","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"datasetsMappedToRangeAxis","params":"(intindex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/0767afb1d381c9a29c14b84546b2390b8a2460.src","preCode":"    private List datasetsMappedToRangeAxis(int index) {\n        Integer key = new Integer(index);\n        List result = new ArrayList();\n        for (CategoryDataset dataset : this.datasets.values()) {\n            int i = indexOf(dataset);\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    new Integer(i));\n            if (mappedAxes == null) {\n                if (key.equals(ZERO)) {\n                    result.add(this.datasets.get(i));\n                }\n            } else {\n                if (mappedAxes.contains(key)) {\n                    result.add(this.datasets.get(i));\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4318,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-04-02 15:03:12","codes":[{"authorDate":"2016-04-02 15:03:12","commitOrder":2,"curCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            CategoryDataset dataset = entry.getValue();\n            if (dataset == null) {\n                continue;\n            }\n            Integer datasetIndex = entry.getKey();\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-04-02 15:03:12","endLine":4316,"groupId":"312","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"datasetsMappedToDomainAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/65/9ac3c5fa752cbccceaec63d637008307c41aa4.src","preCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        Integer key = new Integer(axisIndex);\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (CategoryDataset dataset : this.datasets.values()) {\n            if (dataset == null) {\n                continue;\n            }\n            int i = indexOf(dataset);\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    new Integer(i));\n            if (mappedAxes == null) {\n                if (key.equals(ZERO)) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(key)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4295,"status":"M"},{"authorDate":"2016-04-02 15:03:12","commitOrder":2,"curCode":"    private List<CategoryDataset> datasetsMappedToRangeAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            Integer datasetIndex = entry.getKey();\n            CategoryDataset dataset = entry.getValue();\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2016-04-02 15:03:12","endLine":4344,"groupId":"312","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"datasetsMappedToRangeAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/65/9ac3c5fa752cbccceaec63d637008307c41aa4.src","preCode":"    private List datasetsMappedToRangeAxis(int index) {\n        Integer key = new Integer(index);\n        List result = new ArrayList();\n        for (CategoryDataset dataset : this.datasets.values()) {\n            int i = indexOf(dataset);\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    new Integer(i));\n            if (mappedAxes == null) {\n                if (key.equals(ZERO)) {\n                    result.add(this.datasets.get(i));\n                }\n            } else {\n                if (mappedAxes.contains(key)) {\n                    result.add(this.datasets.get(i));\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4326,"status":"M"}],"commitId":"8ecd92ddb40c6739de862e994d336ffe860e0f6f","commitMessage":"@@@Performance improvement for CategoryPlot dataset-to-axis mapping - see SourceForge #1147","date":"2016-04-02 15:03:12","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-11 05:34:08","codes":[{"authorDate":"2020-03-11 05:34:08","commitOrder":3,"curCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            CategoryDataset dataset = entry.getValue();\n            if (dataset == null) {\n                continue;\n            }\n            Integer datasetIndex = entry.getKey();\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-03-11 05:34:08","endLine":4141,"groupId":"312","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"datasetsMappedToDomainAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b5/db83183f766eb10bb6e4820b321ab321d5929c.src","preCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            CategoryDataset dataset = entry.getValue();\n            if (dataset == null) {\n                continue;\n            }\n            Integer datasetIndex = entry.getKey();\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4120,"status":"M"},{"authorDate":"2020-03-11 05:34:08","commitOrder":3,"curCode":"    private List<CategoryDataset> datasetsMappedToRangeAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            Integer datasetIndex = entry.getKey();\n            CategoryDataset dataset = entry.getValue();\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-03-11 05:34:08","endLine":4169,"groupId":"312","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"datasetsMappedToRangeAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b5/db83183f766eb10bb6e4820b321ab321d5929c.src","preCode":"    private List<CategoryDataset> datasetsMappedToRangeAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<CategoryDataset>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            Integer datasetIndex = entry.getKey();\n            CategoryDataset dataset = entry.getValue();\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4151,"status":"M"}],"commitId":"7997d52f1ab449ddd2adf390f6ba94d848c2e3a5","commitMessage":"@@@Fix warnings.","date":"2020-03-11 05:34:08","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 18:04:41","codes":[{"authorDate":"2020-03-29 18:04:41","commitOrder":4,"curCode":"    private List<CategoryDataset<R, C>> datasetsMappedToDomainAxis(int axisIndex) {\n        List<CategoryDataset<R, C>> result = new ArrayList<>();\n        for (Entry<Integer, CategoryDataset<R, C>> entry : this.datasets.entrySet()) {\n            CategoryDataset<R, C> dataset = entry.getValue();\n            if (dataset == null) {\n                continue;\n            }\n            Integer datasetIndex = entry.getKey();\n            List<Integer> mappedAxes = this.datasetToDomainAxesMap.get(datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-03-29 18:04:41","endLine":4113,"groupId":"101579","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"datasetsMappedToDomainAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            CategoryDataset dataset = entry.getValue();\n            if (dataset == null) {\n                continue;\n            }\n            Integer datasetIndex = entry.getKey();\n            List mappedAxes = (List) this.datasetToDomainAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4093,"status":"M"},{"authorDate":"2020-03-29 18:04:41","commitOrder":4,"curCode":"    private List<CategoryDataset<R, C>> datasetsMappedToRangeAxis(int axisIndex) {\n        List<CategoryDataset<R, C>> result = new ArrayList<>();\n        for (Entry<Integer, CategoryDataset<R, C>> entry : this.datasets.entrySet()) {\n            Integer datasetIndex = entry.getKey();\n            CategoryDataset<R, C> dataset = entry.getValue();\n            List<Integer> mappedAxes = this.datasetToRangeAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","date":"2020-03-29 18:04:41","endLine":4141,"groupId":"101579","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"datasetsMappedToRangeAxis","params":"(intaxisIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e1/445ebb037297945fbb44fd539a2fa331f3355f.src","preCode":"    private List<CategoryDataset> datasetsMappedToRangeAxis(int axisIndex) {\n        List<CategoryDataset> result = new ArrayList<>();\n        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {\n            Integer datasetIndex = entry.getKey();\n            CategoryDataset dataset = entry.getValue();\n            List mappedAxes = (List) this.datasetToRangeAxesMap.get(\n                    datasetIndex);\n            if (mappedAxes == null) {\n                if (axisIndex == 0) {\n                    result.add(dataset);\n                }\n            } else {\n                if (mappedAxes.contains(axisIndex)) {\n                    result.add(dataset);\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/CategoryPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":4123,"status":"M"}],"commitId":"e23eafd99eb9c5627dd100f927caa3ba7bbb036e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 18:04:41","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"}]
