[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected double findMaximumTickLabelHeight(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        g2.setFont(font);\n        double maxHeight = 0.0;\n        if (vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtilities.getTextBounds(\n                            tick.getText(), g2, fm);\n                }\n                if (labelBounds != null && labelBounds.getWidth() \n                        + insets.getTop() + insets.getBottom() > maxHeight) {\n                    maxHeight = labelBounds.getWidth()\n                                + insets.getTop() + insets.getBottom();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxHeight = metrics.getHeight()\n                        + insets.getTop() + insets.getBottom();\n        }\n        return maxHeight;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":896,"groupId":"344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findMaximumTickLabelHeight","params":"(Listticks@Graphics2Dg2@Rectangle2DdrawArea@booleanvertical)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/73/696e919d53f2510182868dd4774a0ca7324d4a.src","preCode":"    protected double findMaximumTickLabelHeight(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        g2.setFont(font);\n        double maxHeight = 0.0;\n        if (vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtilities.getTextBounds(\n                            tick.getText(), g2, fm);\n                }\n                if (labelBounds != null && labelBounds.getWidth() \n                        + insets.getTop() + insets.getBottom() > maxHeight) {\n                    maxHeight = labelBounds.getWidth()\n                                + insets.getTop() + insets.getBottom();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxHeight = metrics.getHeight()\n                        + insets.getTop() + insets.getBottom();\n        }\n        return maxHeight;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":859,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected double findMaximumTickLabelWidth(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        double maxWidth = 0.0;\n        if (!vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtilities.getTextBounds(tick.getText(), \n                            g2, fm);\n                }\n                if (labelBounds != null \n                        && labelBounds.getWidth() + insets.getLeft()\n                        + insets.getRight() > maxWidth) {\n                    maxWidth = labelBounds.getWidth()\n                               + insets.getLeft() + insets.getRight();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxWidth = metrics.getHeight()\n                       + insets.getTop() + insets.getBottom();\n        }\n        return maxWidth;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":946,"groupId":"3109","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumTickLabelWidth","params":"(Listticks@Graphics2Dg2@Rectangle2DdrawArea@booleanvertical)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/73/696e919d53f2510182868dd4774a0ca7324d4a.src","preCode":"    protected double findMaximumTickLabelWidth(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        double maxWidth = 0.0;\n        if (!vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtilities.getTextBounds(tick.getText(), \n                            g2, fm);\n                }\n                if (labelBounds != null \n                        && labelBounds.getWidth() + insets.getLeft()\n                        + insets.getRight() > maxWidth) {\n                    maxWidth = labelBounds.getWidth()\n                               + insets.getLeft() + insets.getRight();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxWidth = metrics.getHeight()\n                       + insets.getTop() + insets.getBottom();\n        }\n        return maxWidth;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":909,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 13:04:03","codes":[{"authorDate":"2017-05-06 13:04:03","commitOrder":2,"curCode":"    protected double findMaximumTickLabelHeight(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        g2.setFont(font);\n        double maxHeight = 0.0;\n        if (vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtils.getTextBounds(\n                            tick.getText(), g2, fm);\n                }\n                if (labelBounds != null && labelBounds.getWidth() \n                        + insets.getTop() + insets.getBottom() > maxHeight) {\n                    maxHeight = labelBounds.getWidth()\n                                + insets.getTop() + insets.getBottom();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxHeight = metrics.getHeight()\n                        + insets.getTop() + insets.getBottom();\n        }\n        return maxHeight;\n\n    }\n","date":"2017-05-06 13:04:03","endLine":880,"groupId":"344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findMaximumTickLabelHeight","params":"(Listticks@Graphics2Dg2@Rectangle2DdrawArea@booleanvertical)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/33/5c2a11e9e513fcc115f415133f420c568aa154.src","preCode":"    protected double findMaximumTickLabelHeight(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        g2.setFont(font);\n        double maxHeight = 0.0;\n        if (vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtilities.getTextBounds(\n                            tick.getText(), g2, fm);\n                }\n                if (labelBounds != null && labelBounds.getWidth() \n                        + insets.getTop() + insets.getBottom() > maxHeight) {\n                    maxHeight = labelBounds.getWidth()\n                                + insets.getTop() + insets.getBottom();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxHeight = metrics.getHeight()\n                        + insets.getTop() + insets.getBottom();\n        }\n        return maxHeight;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":843,"status":"M"},{"authorDate":"2017-05-06 13:04:03","commitOrder":2,"curCode":"    protected double findMaximumTickLabelWidth(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        double maxWidth = 0.0;\n        if (!vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtils.getTextBounds(tick.getText(), \n                            g2, fm);\n                }\n                if (labelBounds != null \n                        && labelBounds.getWidth() + insets.getLeft()\n                        + insets.getRight() > maxWidth) {\n                    maxWidth = labelBounds.getWidth()\n                               + insets.getLeft() + insets.getRight();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxWidth = metrics.getHeight()\n                       + insets.getTop() + insets.getBottom();\n        }\n        return maxWidth;\n\n    }\n","date":"2017-05-06 13:04:03","endLine":930,"groupId":"3826","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumTickLabelWidth","params":"(Listticks@Graphics2Dg2@Rectangle2DdrawArea@booleanvertical)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/33/5c2a11e9e513fcc115f415133f420c568aa154.src","preCode":"    protected double findMaximumTickLabelWidth(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        double maxWidth = 0.0;\n        if (!vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtilities.getTextBounds(tick.getText(), \n                            g2, fm);\n                }\n                if (labelBounds != null \n                        && labelBounds.getWidth() + insets.getLeft()\n                        + insets.getRight() > maxWidth) {\n                    maxWidth = labelBounds.getWidth()\n                               + insets.getLeft() + insets.getRight();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxWidth = metrics.getHeight()\n                       + insets.getTop() + insets.getBottom();\n        }\n        return maxWidth;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":893,"status":"M"}],"commitId":"ea1b09dba6931ba20e0ce2e1e8e528793a7fbae3","commitMessage":"@@@Rename TextUtilities -> TextUtils.","date":"2017-05-06 13:04:03","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-10-17 13:05:27","codes":[{"authorDate":"2020-10-17 13:05:27","commitOrder":3,"curCode":"    protected double findMaximumTickLabelHeight(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        g2.setFont(font);\n        double maxHeight = 0.0;\n        if (vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            for (Object o : ticks) {\n                Tick tick = (Tick) o;\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtils.getTextBounds(\n                            tick.getText(), g2, fm);\n                }\n                if (labelBounds != null && labelBounds.getWidth()\n                        + insets.getTop() + insets.getBottom() > maxHeight) {\n                    maxHeight = labelBounds.getWidth()\n                            + insets.getTop() + insets.getBottom();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxHeight = metrics.getHeight()\n                        + insets.getTop() + insets.getBottom();\n        }\n        return maxHeight;\n\n    }\n","date":"2020-10-17 13:05:27","endLine":878,"groupId":"101853","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"findMaximumTickLabelHeight","params":"(Listticks@Graphics2Dg2@Rectangle2DdrawArea@booleanvertical)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/08/aa343cbd801e56bfa12272b6b2c3b8921e9d6a.src","preCode":"    protected double findMaximumTickLabelHeight(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        g2.setFont(font);\n        double maxHeight = 0.0;\n        if (vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtils.getTextBounds(\n                            tick.getText(), g2, fm);\n                }\n                if (labelBounds != null && labelBounds.getWidth() \n                        + insets.getTop() + insets.getBottom() > maxHeight) {\n                    maxHeight = labelBounds.getWidth()\n                                + insets.getTop() + insets.getBottom();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxHeight = metrics.getHeight()\n                        + insets.getTop() + insets.getBottom();\n        }\n        return maxHeight;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":842,"status":"M"},{"authorDate":"2020-10-17 13:05:27","commitOrder":3,"curCode":"    protected double findMaximumTickLabelWidth(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        double maxWidth = 0.0;\n        if (!vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            for (Object o : ticks) {\n                Tick tick = (Tick) o;\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtils.getTextBounds(tick.getText(),\n                            g2, fm);\n                }\n                if (labelBounds != null\n                        && labelBounds.getWidth() + insets.getLeft()\n                        + insets.getRight() > maxWidth) {\n                    maxWidth = labelBounds.getWidth()\n                            + insets.getLeft() + insets.getRight();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxWidth = metrics.getHeight()\n                       + insets.getTop() + insets.getBottom();\n        }\n        return maxWidth;\n\n    }\n","date":"2020-10-17 13:05:27","endLine":927,"groupId":"101853","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumTickLabelWidth","params":"(Listticks@Graphics2Dg2@Rectangle2DdrawArea@booleanvertical)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/08/aa343cbd801e56bfa12272b6b2c3b8921e9d6a.src","preCode":"    protected double findMaximumTickLabelWidth(List ticks, Graphics2D g2,\n            Rectangle2D drawArea, boolean vertical) {\n\n        RectangleInsets insets = getTickLabelInsets();\n        Font font = getTickLabelFont();\n        double maxWidth = 0.0;\n        if (!vertical) {\n            FontMetrics fm = g2.getFontMetrics(font);\n            Iterator iterator = ticks.iterator();\n            while (iterator.hasNext()) {\n                Tick tick = (Tick) iterator.next();\n                Rectangle2D labelBounds = null;\n                if (tick instanceof LogTick) {\n                    LogTick lt = (LogTick) tick;\n                    if (lt.getAttributedLabel() != null) {\n                        labelBounds = AttrStringUtils.getTextBounds(\n                                lt.getAttributedLabel(), g2);\n                    }\n                } else if (tick.getText() != null) {\n                    labelBounds = TextUtils.getTextBounds(tick.getText(), \n                            g2, fm);\n                }\n                if (labelBounds != null \n                        && labelBounds.getWidth() + insets.getLeft()\n                        + insets.getRight() > maxWidth) {\n                    maxWidth = labelBounds.getWidth()\n                               + insets.getLeft() + insets.getRight();\n                }\n            }\n        } else {\n            LineMetrics metrics = font.getLineMetrics(\"ABCxyz\",\n                    g2.getFontRenderContext());\n            maxWidth = metrics.getHeight()\n                       + insets.getTop() + insets.getBottom();\n        }\n        return maxWidth;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/axis/ValueAxis.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":891,"status":"M"}],"commitId":"61f3b48e99ddd733daf435eee2ea1c643c4f6a21","commitMessage":"@@@Merge pull request #178 from simon04/for-loop\n\nReplace while loop with enhanced for loop","date":"2020-10-17 13:05:27","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"}]
