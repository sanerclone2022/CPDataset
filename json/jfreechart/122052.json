[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public TimePeriodValues createCopy(int start, int end) \n        throws CloneNotSupportedException {\n\n        TimePeriodValues copy = (TimePeriodValues) super.clone();\n\n        copy.data = new ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimePeriodValue item = (TimePeriodValue) this.data.get(index);\n                TimePeriodValue clone = (TimePeriodValue) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    System.err.println(\"Failed to add cloned item.\");\n                }\n            }\n        }\n        return copy;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":516,"groupId":"374","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCopy","params":"(intstart@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/04/55b2674a438658b08c09a2fe0a5adaeb9ead5c.src","preCode":"    public TimePeriodValues createCopy(int start, int end) \n        throws CloneNotSupportedException {\n\n        TimePeriodValues copy = (TimePeriodValues) super.clone();\n\n        copy.data = new ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimePeriodValue item = (TimePeriodValue) this.data.get(index);\n                TimePeriodValue clone = (TimePeriodValue) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    System.err.println(\"Failed to add cloned item.\");\n                }\n            }\n        }\n        return copy;\n\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValues.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        return copy;\n    }\n","date":"2016-02-19 16:24:22","endLine":1164,"groupId":"374","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCopy","params":"(intstart@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/89/4706025f8e1ab63fd08e582596a1bfab55f151.src","preCode":"    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        return copy;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimeSeries.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1138,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2020-03-20 12:37:43","commitOrder":2,"curCode":"    public TimePeriodValues createCopy(int start, int end) \n        throws CloneNotSupportedException {\n\n        TimePeriodValues copy = (TimePeriodValues) super.clone();\n\n        copy.data = new ArrayList<>();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimePeriodValue item = this.data.get(index);\n                TimePeriodValue clone = (TimePeriodValue) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    System.err.println(\"Failed to add cloned item.\");\n                }\n            }\n        }\n        return copy;\n\n    }\n","date":"2020-03-20 12:37:43","endLine":504,"groupId":"2186","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCopy","params":"(intstart@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/62/0f58ebfd259e86f2e2feade3942f64d745952f.src","preCode":"    public TimePeriodValues createCopy(int start, int end) \n        throws CloneNotSupportedException {\n\n        TimePeriodValues copy = (TimePeriodValues) super.clone();\n\n        copy.data = new ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimePeriodValue item = (TimePeriodValue) this.data.get(index);\n                TimePeriodValue clone = (TimePeriodValue) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    System.err.println(\"Failed to add cloned item.\");\n                }\n            }\n        }\n        return copy;\n\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValues.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":484,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        return copy;\n    }\n","date":"2016-02-19 16:24:22","endLine":1164,"groupId":"374","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCopy","params":"(intstart@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/89/4706025f8e1ab63fd08e582596a1bfab55f151.src","preCode":"    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        return copy;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimeSeries.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1138,"status":"N"}],"commitId":"8a7e9afd7afa9a462e456f798593ce0e42cdc1d1","commitMessage":"@@@Add generics","date":"2020-03-20 12:37:43","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-20 12:37:43","commitOrder":3,"curCode":"    public TimePeriodValues createCopy(int start, int end) \n        throws CloneNotSupportedException {\n\n        TimePeriodValues copy = (TimePeriodValues) super.clone();\n\n        copy.data = new ArrayList<>();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimePeriodValue item = this.data.get(index);\n                TimePeriodValue clone = (TimePeriodValue) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    System.err.println(\"Failed to add cloned item.\");\n                }\n            }\n        }\n        return copy;\n\n    }\n","date":"2020-03-20 12:37:43","endLine":504,"groupId":"122052","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createCopy","params":"(intstart@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/62/0f58ebfd259e86f2e2feade3942f64d745952f.src","preCode":"    public TimePeriodValues createCopy(int start, int end) \n        throws CloneNotSupportedException {\n\n        TimePeriodValues copy = (TimePeriodValues) super.clone();\n\n        copy.data = new ArrayList<>();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimePeriodValue item = this.data.get(index);\n                TimePeriodValue clone = (TimePeriodValue) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    System.err.println(\"Failed to add cloned item.\");\n                }\n            }\n        }\n        return copy;\n\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimePeriodValues.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":484,"status":"N"},{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public TimeSeries<S> createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries<S> copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        return copy;\n    }\n","date":"2020-03-22 19:36:23","endLine":1112,"groupId":"122052","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createCopy","params":"(intstart@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f1/92750d2d08ac951f2171b58312c937243aa32a.src","preCode":"    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        return copy;\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimeSeries.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1086,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
