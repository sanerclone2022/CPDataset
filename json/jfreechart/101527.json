[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n        if (!isDomainGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n        Iterator iterator = ticks.iterator();\n        while (iterator.hasNext()) {\n            ValueTick tick = (ValueTick) iterator.next();\n            double v = this.domainAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.BOTTOM);\n            Line2D line = new Line2D.Double(v, dataArea.getMinY(), v,\n                    dataArea.getMaxY());\n            g2.setPaint(getDomainGridlinePaint());\n            g2.setStroke(getDomainGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","date":"2016-02-19 16:24:22","endLine":643,"groupId":"1719","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"drawDomainGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@Listticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e8/51cd688bb5fd4927051ac3eb9cbfb363beaa06.src","preCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n        if (!isDomainGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n        Iterator iterator = ticks.iterator();\n        while (iterator.hasNext()) {\n            ValueTick tick = (ValueTick) iterator.next();\n            double v = this.domainAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.BOTTOM);\n            Line2D line = new Line2D.Double(v, dataArea.getMinY(), v,\n                    dataArea.getMaxY());\n            g2.setPaint(getDomainGridlinePaint());\n            g2.setStroke(getDomainGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/FastScatterPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":623,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n\n        if (!isRangeGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n\n        Iterator iterator = ticks.iterator();\n        while (iterator.hasNext()) {\n            ValueTick tick = (ValueTick) iterator.next();\n            double v = this.rangeAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.LEFT);\n            Line2D line = new Line2D.Double(dataArea.getMinX(), v,\n                    dataArea.getMaxX(), v);\n            g2.setPaint(getRangeGridlinePaint());\n            g2.setStroke(getRangeGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","date":"2016-02-19 16:24:22","endLine":674,"groupId":"1719","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRangeGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@Listticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e8/51cd688bb5fd4927051ac3eb9cbfb363beaa06.src","preCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n\n        if (!isRangeGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n\n        Iterator iterator = ticks.iterator();\n        while (iterator.hasNext()) {\n            ValueTick tick = (ValueTick) iterator.next();\n            double v = this.rangeAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.LEFT);\n            Line2D line = new Line2D.Double(dataArea.getMinX(), v,\n                    dataArea.getMaxX(), v);\n            g2.setPaint(getRangeGridlinePaint());\n            g2.setStroke(getRangeGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/FastScatterPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":652,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-10-17 13:05:27","codes":[{"authorDate":"2020-10-17 13:05:27","commitOrder":2,"curCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n        if (!isDomainGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n        for (Object o : ticks) {\n            ValueTick tick = (ValueTick) o;\n            double v = this.domainAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.BOTTOM);\n            Line2D line = new Line2D.Double(v, dataArea.getMinY(), v,\n                    dataArea.getMaxY());\n            g2.setPaint(getDomainGridlinePaint());\n            g2.setStroke(getDomainGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","date":"2020-10-17 13:05:27","endLine":642,"groupId":"101527","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"drawDomainGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@Listticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ef/bf30e9c293bfc927f03473454433481d1fcaae.src","preCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n        if (!isDomainGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n        Iterator iterator = ticks.iterator();\n        while (iterator.hasNext()) {\n            ValueTick tick = (ValueTick) iterator.next();\n            double v = this.domainAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.BOTTOM);\n            Line2D line = new Line2D.Double(v, dataArea.getMinY(), v,\n                    dataArea.getMaxY());\n            g2.setPaint(getDomainGridlinePaint());\n            g2.setStroke(getDomainGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/FastScatterPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":623,"status":"M"},{"authorDate":"2020-10-17 13:05:27","commitOrder":2,"curCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n\n        if (!isRangeGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n\n        for (Object o : ticks) {\n            ValueTick tick = (ValueTick) o;\n            double v = this.rangeAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.LEFT);\n            Line2D line = new Line2D.Double(dataArea.getMinX(), v,\n                    dataArea.getMaxX(), v);\n            g2.setPaint(getRangeGridlinePaint());\n            g2.setStroke(getRangeGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","date":"2020-10-17 13:05:27","endLine":672,"groupId":"101527","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRangeGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@Listticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ef/bf30e9c293bfc927f03473454433481d1fcaae.src","preCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n            List ticks) {\n\n        if (!isRangeGridlinesVisible()) {\n            return;\n        }\n        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, \n                RenderingHints.VALUE_STROKE_NORMALIZE);\n\n        Iterator iterator = ticks.iterator();\n        while (iterator.hasNext()) {\n            ValueTick tick = (ValueTick) iterator.next();\n            double v = this.rangeAxis.valueToJava2D(tick.getValue(),\n                    dataArea, RectangleEdge.LEFT);\n            Line2D line = new Line2D.Double(dataArea.getMinX(), v,\n                    dataArea.getMaxX(), v);\n            g2.setPaint(getRangeGridlinePaint());\n            g2.setStroke(getRangeGridlineStroke());\n            g2.draw(line);\n        }\n        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/FastScatterPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":651,"status":"M"}],"commitId":"61f3b48e99ddd733daf435eee2ea1c643c4f6a21","commitMessage":"@@@Merge pull request #178 from simon04/for-loop\n\nReplace while loop with enhanced for loop","date":"2020-10-17 13:05:27","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"}]
