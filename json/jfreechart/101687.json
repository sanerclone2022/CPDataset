[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected Range findRangeBounds(CategoryDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getRowCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getRowKey(s));\n                }\n            }\n            return DatasetUtilities.findRangeBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        else {\n            return DatasetUtilities.findRangeBounds(dataset, includeInterval);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":685,"groupId":"916","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findRangeBounds","params":"(CategoryDatasetdataset@booleanincludeInterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/07/e4cba9f4ee95637f4e8ae610b129982513dbad.src","preCode":"    protected Range findRangeBounds(CategoryDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getRowCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getRowKey(s));\n                }\n            }\n            return DatasetUtilities.findRangeBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        else {\n            return DatasetUtilities.findRangeBounds(dataset, includeInterval);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":666,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected Range findDomainBounds(XYDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getSeriesCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getSeriesKey(s));\n                }\n            }\n            return DatasetUtilities.findDomainBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        return DatasetUtilities.findDomainBounds(dataset, includeInterval);\n    }\n","date":"2016-02-19 16:24:22","endLine":744,"groupId":"916","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findDomainBounds","params":"(XYDatasetdataset@booleanincludeInterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a4/b0abd1f7eeb66858307fac3abc26eee65d49e1.src","preCode":"    protected Range findDomainBounds(XYDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getSeriesCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getSeriesKey(s));\n                }\n            }\n            return DatasetUtilities.findDomainBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        return DatasetUtilities.findDomainBounds(dataset, includeInterval);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":727,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":2,"curCode":"    protected Range findRangeBounds(CategoryDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getRowCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getRowKey(s));\n                }\n            }\n            return DatasetUtils.findRangeBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        else {\n            return DatasetUtils.findRangeBounds(dataset, includeInterval);\n        }\n    }\n","date":"2017-05-06 16:37:24","endLine":769,"groupId":"101687","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findRangeBounds","params":"(CategoryDatasetdataset@booleanincludeInterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/97/729825740f9af4d61a38999d9650c8294ab661.src","preCode":"    protected Range findRangeBounds(CategoryDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getRowCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getRowKey(s));\n                }\n            }\n            return DatasetUtilities.findRangeBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        else {\n            return DatasetUtilities.findRangeBounds(dataset, includeInterval);\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":750,"status":"M"},{"authorDate":"2017-05-06 16:37:24","commitOrder":2,"curCode":"    protected Range findDomainBounds(XYDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getSeriesCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getSeriesKey(s));\n                }\n            }\n            return DatasetUtils.findDomainBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        return DatasetUtils.findDomainBounds(dataset, includeInterval);\n    }\n","date":"2017-05-06 16:37:24","endLine":734,"groupId":"101687","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findDomainBounds","params":"(XYDatasetdataset@booleanincludeInterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8b/26144ae705cd2b803d3f93fb6b16d5146edb89.src","preCode":"    protected Range findDomainBounds(XYDataset dataset,\n            boolean includeInterval) {\n        if (dataset == null) {\n            return null;\n        }\n        if (getDataBoundsIncludesVisibleSeriesOnly()) {\n            List visibleSeriesKeys = new ArrayList();\n            int seriesCount = dataset.getSeriesCount();\n            for (int s = 0; s < seriesCount; s++) {\n                if (isSeriesVisible(s)) {\n                    visibleSeriesKeys.add(dataset.getSeriesKey(s));\n                }\n            }\n            return DatasetUtilities.findDomainBounds(dataset,\n                    visibleSeriesKeys, includeInterval);\n        }\n        return DatasetUtilities.findDomainBounds(dataset, includeInterval);\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":717,"status":"M"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"M","submitter":"David Gilbert"}]
