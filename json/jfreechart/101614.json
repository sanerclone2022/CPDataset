[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        if (!isSeriesVisible(row)) {\n            return;\n        }\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        double total = 0.0;  \r\n        if (this.renderAsPercentages) {\n            total = DataUtilities.calculateColumnTotal(dataset, column,\n                    state.getVisibleSeriesArray());\n            value = value / total;\n        }\n\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),\n                dataArea, plot.getDomainAxisEdge())\n                - state.getBarWidth() / 2.0;\n\n        double positiveBase = getBase();\n        double negativeBase = positiveBase;\n\n        for (int i = 0; i < row; i++) {\n            Number v = dataset.getValue(i, column);\n            if (v != null && isSeriesVisible(i)) {\n                double d = v.doubleValue();\n                if (this.renderAsPercentages) {\n                    d = d / total;\n                }\n                if (d > 0) {\n                    positiveBase = positiveBase + d;\n                }\n                else {\n                    negativeBase = negativeBase + d;\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (positive) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        if (pass == 0) {\n            if (getShadowsVisible()) {\n                boolean pegToBase = (positive && (positiveBase == getBase()))\n                        || (!positive && (negativeBase == getBase()));\n                getBarPainter().paintBarShadow(g2, this, row, column, bar,\n                        barBase, pegToBase);\n            }\n        }\n        else if (pass == 1) {\n            getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n            \r\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n        else if (pass == 2) {\n            CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                    column);\n            if (generator != null && isItemLabelVisible(row, column)) {\n                drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                        (value < 0.0));\n            }\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":407,"groupId":"2930","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"drawItem","params":"(Graphics2Dg2@CategoryItemRendererStatestate@Rectangle2DdataArea@CategoryPlotplot@CategoryAxisdomainAxis@ValueAxisrangeAxis@CategoryDatasetdataset@introw@intcolumn@intpass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1d/73917cabd76b440366e7a2e349a3559425b480.src","preCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        if (!isSeriesVisible(row)) {\n            return;\n        }\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        double total = 0.0;  \r\n        if (this.renderAsPercentages) {\n            total = DataUtilities.calculateColumnTotal(dataset, column,\n                    state.getVisibleSeriesArray());\n            value = value / total;\n        }\n\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),\n                dataArea, plot.getDomainAxisEdge())\n                - state.getBarWidth() / 2.0;\n\n        double positiveBase = getBase();\n        double negativeBase = positiveBase;\n\n        for (int i = 0; i < row; i++) {\n            Number v = dataset.getValue(i, column);\n            if (v != null && isSeriesVisible(i)) {\n                double d = v.doubleValue();\n                if (this.renderAsPercentages) {\n                    d = d / total;\n                }\n                if (d > 0) {\n                    positiveBase = positiveBase + d;\n                }\n                else {\n                    negativeBase = negativeBase + d;\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (positive) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        if (pass == 0) {\n            if (getShadowsVisible()) {\n                boolean pegToBase = (positive && (positiveBase == getBase()))\n                        || (!positive && (negativeBase == getBase()));\n                getBarPainter().paintBarShadow(g2, this, row, column, bar,\n                        barBase, pegToBase);\n            }\n        }\n        else if (pass == 1) {\n            getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n            \r\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n        else if (pass == 2) {\n            CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                    column);\n            if (generator != null && isItemLabelVisible(row, column)) {\n                drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                        (value < 0.0));\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        Comparable group = this.seriesToGroupMap.getGroup(\n                dataset.getRowKey(row));\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis,\n                state, row, column);\n\n        double positiveBase = 0.0;\n        double negativeBase = 0.0;\n\n        for (int i = 0; i < row; i++) {\n            if (group.equals(this.seriesToGroupMap.getGroup(\n                    dataset.getRowKey(i)))) {\n                Number v = dataset.getValue(i, column);\n                if (v != null) {\n                    double d = v.doubleValue();\n                    if (d > 0) {\n                        positiveBase = positiveBase + d;\n                    }\n                    else {\n                        negativeBase = negativeBase + d;\n                    }\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (value > 0.0) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                column);\n        if (generator != null && isItemLabelVisible(row, column)) {\n            drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                    (value < 0.0));\n        }\n\n        \r\n        if (state.getInfo() != null) {\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n\n    }\n","date":"2016-02-19 16:24:22","endLine":347,"groupId":"199","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"drawItem","params":"(Graphics2Dg2@CategoryItemRendererStatestate@Rectangle2DdataArea@CategoryPlotplot@CategoryAxisdomainAxis@ValueAxisrangeAxis@CategoryDatasetdataset@introw@intcolumn@intpass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/39/0969b0a414419cf33fab731eeac07d58d74c75.src","preCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        Comparable group = this.seriesToGroupMap.getGroup(\n                dataset.getRowKey(row));\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis,\n                state, row, column);\n\n        double positiveBase = 0.0;\n        double negativeBase = 0.0;\n\n        for (int i = 0; i < row; i++) {\n            if (group.equals(this.seriesToGroupMap.getGroup(\n                    dataset.getRowKey(i)))) {\n                Number v = dataset.getValue(i, column);\n                if (v != null) {\n                    double d = v.doubleValue();\n                    if (d > 0) {\n                        positiveBase = positiveBase + d;\n                    }\n                    else {\n                        negativeBase = negativeBase + d;\n                    }\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (value > 0.0) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                column);\n        if (generator != null && isItemLabelVisible(row, column)) {\n            drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                    (value < 0.0));\n        }\n\n        \r\n        if (state.getInfo() != null) {\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2017-05-06 16:39:34","commitOrder":2,"curCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        if (!isSeriesVisible(row)) {\n            return;\n        }\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        double total = 0.0;  \r\n        if (this.renderAsPercentages) {\n            total = DataUtils.calculateColumnTotal(dataset, column,\n                    state.getVisibleSeriesArray());\n            value = value / total;\n        }\n\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),\n                dataArea, plot.getDomainAxisEdge())\n                - state.getBarWidth() / 2.0;\n\n        double positiveBase = getBase();\n        double negativeBase = positiveBase;\n\n        for (int i = 0; i < row; i++) {\n            Number v = dataset.getValue(i, column);\n            if (v != null && isSeriesVisible(i)) {\n                double d = v.doubleValue();\n                if (this.renderAsPercentages) {\n                    d = d / total;\n                }\n                if (d > 0) {\n                    positiveBase = positiveBase + d;\n                }\n                else {\n                    negativeBase = negativeBase + d;\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (positive) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        if (pass == 0) {\n            if (getShadowsVisible()) {\n                boolean pegToBase = (positive && (positiveBase == getBase()))\n                        || (!positive && (negativeBase == getBase()));\n                getBarPainter().paintBarShadow(g2, this, row, column, bar,\n                        barBase, pegToBase);\n            }\n        }\n        else if (pass == 1) {\n            getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n            \r\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n        else if (pass == 2) {\n            CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                    column);\n            if (generator != null && isItemLabelVisible(row, column)) {\n                drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                        (value < 0.0));\n            }\n        }\n    }\n","date":"2017-05-06 16:39:34","endLine":407,"groupId":"101614","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"drawItem","params":"(Graphics2Dg2@CategoryItemRendererStatestate@Rectangle2DdataArea@CategoryPlotplot@CategoryAxisdomainAxis@ValueAxisrangeAxis@CategoryDatasetdataset@introw@intcolumn@intpass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/97/9795ddb2d0180cd28433289f01db0ca1715d09.src","preCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        if (!isSeriesVisible(row)) {\n            return;\n        }\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        double total = 0.0;  \r\n        if (this.renderAsPercentages) {\n            total = DataUtilities.calculateColumnTotal(dataset, column,\n                    state.getVisibleSeriesArray());\n            value = value / total;\n        }\n\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),\n                dataArea, plot.getDomainAxisEdge())\n                - state.getBarWidth() / 2.0;\n\n        double positiveBase = getBase();\n        double negativeBase = positiveBase;\n\n        for (int i = 0; i < row; i++) {\n            Number v = dataset.getValue(i, column);\n            if (v != null && isSeriesVisible(i)) {\n                double d = v.doubleValue();\n                if (this.renderAsPercentages) {\n                    d = d / total;\n                }\n                if (d > 0) {\n                    positiveBase = positiveBase + d;\n                }\n                else {\n                    negativeBase = negativeBase + d;\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (positive) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        if (pass == 0) {\n            if (getShadowsVisible()) {\n                boolean pegToBase = (positive && (positiveBase == getBase()))\n                        || (!positive && (negativeBase == getBase()));\n                getBarPainter().paintBarShadow(g2, this, row, column, bar,\n                        barBase, pegToBase);\n            }\n        }\n        else if (pass == 1) {\n            getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n            \r\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n        else if (pass == 2) {\n            CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                    column);\n            if (generator != null && isItemLabelVisible(row, column)) {\n                drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                        (value < 0.0));\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        Comparable group = this.seriesToGroupMap.getGroup(\n                dataset.getRowKey(row));\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis,\n                state, row, column);\n\n        double positiveBase = 0.0;\n        double negativeBase = 0.0;\n\n        for (int i = 0; i < row; i++) {\n            if (group.equals(this.seriesToGroupMap.getGroup(\n                    dataset.getRowKey(i)))) {\n                Number v = dataset.getValue(i, column);\n                if (v != null) {\n                    double d = v.doubleValue();\n                    if (d > 0) {\n                        positiveBase = positiveBase + d;\n                    }\n                    else {\n                        negativeBase = negativeBase + d;\n                    }\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (value > 0.0) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                column);\n        if (generator != null && isItemLabelVisible(row, column)) {\n            drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                    (value < 0.0));\n        }\n\n        \r\n        if (state.getInfo() != null) {\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n\n    }\n","date":"2016-02-19 16:24:22","endLine":347,"groupId":"101614","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"drawItem","params":"(Graphics2Dg2@CategoryItemRendererStatestate@Rectangle2DdataArea@CategoryPlotplot@CategoryAxisdomainAxis@ValueAxisrangeAxis@CategoryDatasetdataset@introw@intcolumn@intpass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/39/0969b0a414419cf33fab731eeac07d58d74c75.src","preCode":"    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row,\n            int column, int pass) {\n\n        \r\n        Number dataValue = dataset.getValue(row, column);\n        if (dataValue == null) {\n            return;\n        }\n\n        double value = dataValue.doubleValue();\n        Comparable group = this.seriesToGroupMap.getGroup(\n                dataset.getRowKey(row));\n        PlotOrientation orientation = plot.getOrientation();\n        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis,\n                state, row, column);\n\n        double positiveBase = 0.0;\n        double negativeBase = 0.0;\n\n        for (int i = 0; i < row; i++) {\n            if (group.equals(this.seriesToGroupMap.getGroup(\n                    dataset.getRowKey(i)))) {\n                Number v = dataset.getValue(i, column);\n                if (v != null) {\n                    double d = v.doubleValue();\n                    if (d > 0) {\n                        positiveBase = positiveBase + d;\n                    }\n                    else {\n                        negativeBase = negativeBase + d;\n                    }\n                }\n            }\n        }\n\n        double translatedBase;\n        double translatedValue;\n        boolean positive = (value > 0.0);\n        boolean inverted = rangeAxis.isInverted();\n        RectangleEdge barBase;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            if (positive && inverted || !positive && !inverted) {\n                barBase = RectangleEdge.RIGHT;\n            }\n            else {\n                barBase = RectangleEdge.LEFT;\n            }\n        }\n        else {\n            if (positive && !inverted || !positive && inverted) {\n                barBase = RectangleEdge.BOTTOM;\n            }\n            else {\n                barBase = RectangleEdge.TOP;\n            }\n        }\n        RectangleEdge location = plot.getRangeAxisEdge();\n        if (value > 0.0) {\n            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,\n                    dataArea, location);\n        }\n        else {\n            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,\n                    location);\n            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,\n                    dataArea, location);\n        }\n        double barL0 = Math.min(translatedBase, translatedValue);\n        double barLength = Math.max(Math.abs(translatedValue - translatedBase),\n                getMinimumBarLength());\n\n        Rectangle2D bar;\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            bar = new Rectangle2D.Double(barL0, barW0, barLength,\n                    state.getBarWidth());\n        }\n        else {\n            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),\n                    barLength);\n        }\n        getBarPainter().paintBar(g2, this, row, column, bar, barBase);\n\n        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,\n                column);\n        if (generator != null && isItemLabelVisible(row, column)) {\n            drawItemLabel(g2, dataset, row, column, plot, generator, bar,\n                    (value < 0.0));\n        }\n\n        \r\n        if (state.getInfo() != null) {\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addItemEntity(entities, dataset, row, column, bar);\n            }\n        }\n\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"N"}],"commitId":"871490272e372e910414952594d658611899da55","commitMessage":"@@@Rename DataUtilities --> DataUtils.","date":"2017-05-06 16:39:34","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"}]
