[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            Iterator iterator = ticks.iterator();\n            boolean paintLine;\n            while (iterator.hasNext()) {\n                paintLine = false;\n                ValueTick tick = (ValueTick) iterator.next();\n                if ((tick.getTickType() == TickType.MINOR)\n                        && isDomainMinorGridlinesVisible()) {\n                    gridStroke = getDomainMinorGridlineStroke();\n                    gridPaint = getDomainMinorGridlinePaint();\n                    paintLine = true;\n                } else if ((tick.getTickType() == TickType.MAJOR)\n                        && isDomainGridlinesVisible()) {\n                    gridStroke = getDomainGridlineStroke();\n                    gridPaint = getDomainGridlinePaint();\n                    paintLine = true;\n                }\n                XYItemRenderer r = getRenderer();\n                if ((r instanceof AbstractXYItemRenderer) && paintLine) {\n                    ((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\n                            getDomainAxis(), dataArea, tick.getValue(),\n                            gridPaint, gridStroke);\n                }\n            }\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":3868,"groupId":"2393","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"drawDomainGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@Listticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            Iterator iterator = ticks.iterator();\n            boolean paintLine;\n            while (iterator.hasNext()) {\n                paintLine = false;\n                ValueTick tick = (ValueTick) iterator.next();\n                if ((tick.getTickType() == TickType.MINOR)\n                        && isDomainMinorGridlinesVisible()) {\n                    gridStroke = getDomainMinorGridlineStroke();\n                    gridPaint = getDomainMinorGridlinePaint();\n                    paintLine = true;\n                } else if ((tick.getTickType() == TickType.MAJOR)\n                        && isDomainGridlinesVisible()) {\n                    gridStroke = getDomainGridlineStroke();\n                    gridPaint = getDomainGridlinePaint();\n                    paintLine = true;\n                }\n                XYItemRenderer r = getRenderer();\n                if ((r instanceof AbstractXYItemRenderer) && paintLine) {\n                    ((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\n                            getDomainAxis(), dataArea, tick.getValue(),\n                            gridPaint, gridStroke);\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3832,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            ValueAxis axis = getRangeAxis();\n            if (axis != null) {\n                Iterator iterator = ticks.iterator();\n                boolean paintLine;\n                while (iterator.hasNext()) {\n                    paintLine = false;\n                    ValueTick tick = (ValueTick) iterator.next();\n                    if ((tick.getTickType() == TickType.MINOR)\n                            && isRangeMinorGridlinesVisible()) {\n                        gridStroke = getRangeMinorGridlineStroke();\n                        gridPaint = getRangeMinorGridlinePaint();\n                        paintLine = true;\n                    } else if ((tick.getTickType() == TickType.MAJOR)\n                            && isRangeGridlinesVisible()) {\n                        gridStroke = getRangeGridlineStroke();\n                        gridPaint = getRangeGridlinePaint();\n                        paintLine = true;\n                    }\n                    if ((tick.getValue() != 0.0\n                            || !isRangeZeroBaselineVisible()) && paintLine) {\n                        getRenderer().drawRangeLine(g2, this, getRangeAxis(),\n                                area, tick.getValue(), gridPaint, gridStroke);\n                    }\n                }\n            }\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":3918,"groupId":"3380","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRangeGridlines","params":"(Graphics2Dg2@Rectangle2Darea@Listticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            ValueAxis axis = getRangeAxis();\n            if (axis != null) {\n                Iterator iterator = ticks.iterator();\n                boolean paintLine;\n                while (iterator.hasNext()) {\n                    paintLine = false;\n                    ValueTick tick = (ValueTick) iterator.next();\n                    if ((tick.getTickType() == TickType.MINOR)\n                            && isRangeMinorGridlinesVisible()) {\n                        gridStroke = getRangeMinorGridlineStroke();\n                        gridPaint = getRangeMinorGridlinePaint();\n                        paintLine = true;\n                    } else if ((tick.getTickType() == TickType.MAJOR)\n                            && isRangeGridlinesVisible()) {\n                        gridStroke = getRangeGridlineStroke();\n                        gridPaint = getRangeGridlinePaint();\n                        paintLine = true;\n                    }\n                    if ((tick.getValue() != 0.0\n                            || !isRangeZeroBaselineVisible()) && paintLine) {\n                        getRenderer().drawRangeLine(g2, this, getRangeAxis(),\n                                area, tick.getValue(), gridPaint, gridStroke);\n                    }\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3880,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-01-09 05:47:42","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":2,"curCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List<ValueTick> ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            Iterator iterator = ticks.iterator();\n            boolean paintLine;\n            while (iterator.hasNext()) {\n                paintLine = false;\n                ValueTick tick = (ValueTick) iterator.next();\n                if ((tick.getTickType() == TickType.MINOR)\n                        && isDomainMinorGridlinesVisible()) {\n                    gridStroke = getDomainMinorGridlineStroke();\n                    gridPaint = getDomainMinorGridlinePaint();\n                    paintLine = true;\n                } else if ((tick.getTickType() == TickType.MAJOR)\n                        && isDomainGridlinesVisible()) {\n                    gridStroke = getDomainGridlineStroke();\n                    gridPaint = getDomainGridlinePaint();\n                    paintLine = true;\n                }\n                XYItemRenderer r = getRenderer();\n                if ((r instanceof AbstractXYItemRenderer) && paintLine) {\n                    ((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\n                            getDomainAxis(), dataArea, tick.getValue(),\n                            gridPaint, gridStroke);\n                }\n            }\n        }\n    }\n","date":"2020-01-09 05:47:42","endLine":3634,"groupId":"2393","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"drawDomainGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@List<ValueTick>ticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            Iterator iterator = ticks.iterator();\n            boolean paintLine;\n            while (iterator.hasNext()) {\n                paintLine = false;\n                ValueTick tick = (ValueTick) iterator.next();\n                if ((tick.getTickType() == TickType.MINOR)\n                        && isDomainMinorGridlinesVisible()) {\n                    gridStroke = getDomainMinorGridlineStroke();\n                    gridPaint = getDomainMinorGridlinePaint();\n                    paintLine = true;\n                } else if ((tick.getTickType() == TickType.MAJOR)\n                        && isDomainGridlinesVisible()) {\n                    gridStroke = getDomainGridlineStroke();\n                    gridPaint = getDomainGridlinePaint();\n                    paintLine = true;\n                }\n                XYItemRenderer r = getRenderer();\n                if ((r instanceof AbstractXYItemRenderer) && paintLine) {\n                    ((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\n                            getDomainAxis(), dataArea, tick.getValue(),\n                            gridPaint, gridStroke);\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3598,"status":"M"},{"authorDate":"2020-01-09 05:47:42","commitOrder":2,"curCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List<ValueTick> ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            ValueAxis axis = getRangeAxis();\n            if (axis != null) {\n                Iterator iterator = ticks.iterator();\n                boolean paintLine;\n                while (iterator.hasNext()) {\n                    paintLine = false;\n                    ValueTick tick = (ValueTick) iterator.next();\n                    if ((tick.getTickType() == TickType.MINOR)\n                            && isRangeMinorGridlinesVisible()) {\n                        gridStroke = getRangeMinorGridlineStroke();\n                        gridPaint = getRangeMinorGridlinePaint();\n                        paintLine = true;\n                    } else if ((tick.getTickType() == TickType.MAJOR)\n                            && isRangeGridlinesVisible()) {\n                        gridStroke = getRangeGridlineStroke();\n                        gridPaint = getRangeGridlinePaint();\n                        paintLine = true;\n                    }\n                    if ((tick.getValue() != 0.0\n                            || !isRangeZeroBaselineVisible()) && paintLine) {\n                        getRenderer().drawRangeLine(g2, this, getRangeAxis(),\n                                area, tick.getValue(), gridPaint, gridStroke);\n                    }\n                }\n            }\n        }\n    }\n","date":"2020-01-09 05:47:42","endLine":3684,"groupId":"3380","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRangeGridlines","params":"(Graphics2Dg2@Rectangle2Darea@List<ValueTick>ticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            ValueAxis axis = getRangeAxis();\n            if (axis != null) {\n                Iterator iterator = ticks.iterator();\n                boolean paintLine;\n                while (iterator.hasNext()) {\n                    paintLine = false;\n                    ValueTick tick = (ValueTick) iterator.next();\n                    if ((tick.getTickType() == TickType.MINOR)\n                            && isRangeMinorGridlinesVisible()) {\n                        gridStroke = getRangeMinorGridlineStroke();\n                        gridPaint = getRangeMinorGridlinePaint();\n                        paintLine = true;\n                    } else if ((tick.getTickType() == TickType.MAJOR)\n                            && isRangeGridlinesVisible()) {\n                        gridStroke = getRangeGridlineStroke();\n                        gridPaint = getRangeGridlinePaint();\n                        paintLine = true;\n                    }\n                    if ((tick.getValue() != 0.0\n                            || !isRangeZeroBaselineVisible()) && paintLine) {\n                        getRenderer().drawRangeLine(g2, this, getRangeAxis(),\n                                area, tick.getValue(), gridPaint, gridStroke);\n                    }\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3646,"status":"M"}],"commitId":"3b75f318b1df03ef72738ae8c2e35fc779720691","commitMessage":"@@@Fix compiler warnings.\n","date":"2020-01-09 05:47:42","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 19:31:49","codes":[{"authorDate":"2020-03-29 19:31:49","commitOrder":3,"curCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List<ValueTick> ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            for (ValueTick tick : ticks) {\n                boolean paintLine = false;\n                if ((tick.getTickType() == TickType.MINOR)\n                        && isDomainMinorGridlinesVisible()) {\n                    gridStroke = getDomainMinorGridlineStroke();\n                    gridPaint = getDomainMinorGridlinePaint();\n                    paintLine = true;\n                } else if ((tick.getTickType() == TickType.MAJOR)\n                        && isDomainGridlinesVisible()) {\n                    gridStroke = getDomainGridlineStroke();\n                    gridPaint = getDomainGridlinePaint();\n                    paintLine = true;\n                }\n                XYItemRenderer r = getRenderer();\n                if ((r instanceof AbstractXYItemRenderer) && paintLine) {\n                    ((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\n                            getDomainAxis(), dataArea, tick.getValue(),\n                            gridPaint, gridStroke);\n                }\n            }\n        }\n    }\n","date":"2020-03-29 19:31:49","endLine":3633,"groupId":"101453","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"drawDomainGridlines","params":"(Graphics2Dg2@Rectangle2DdataArea@List<ValueTick>ticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/8139ed21abb7d847625ed3ad80b577a5121ec4.src","preCode":"    protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List<ValueTick> ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            Iterator iterator = ticks.iterator();\n            boolean paintLine;\n            while (iterator.hasNext()) {\n                paintLine = false;\n                ValueTick tick = (ValueTick) iterator.next();\n                if ((tick.getTickType() == TickType.MINOR)\n                        && isDomainMinorGridlinesVisible()) {\n                    gridStroke = getDomainMinorGridlineStroke();\n                    gridPaint = getDomainMinorGridlinePaint();\n                    paintLine = true;\n                } else if ((tick.getTickType() == TickType.MAJOR)\n                        && isDomainGridlinesVisible()) {\n                    gridStroke = getDomainGridlineStroke();\n                    gridPaint = getDomainGridlinePaint();\n                    paintLine = true;\n                }\n                XYItemRenderer r = getRenderer();\n                if ((r instanceof AbstractXYItemRenderer) && paintLine) {\n                    ((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\n                            getDomainAxis(), dataArea, tick.getValue(),\n                            gridPaint, gridStroke);\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3600,"status":"M"},{"authorDate":"2020-03-29 19:31:49","commitOrder":3,"curCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List<ValueTick> ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            ValueAxis axis = getRangeAxis();\n            if (axis != null) {\n                for (ValueTick tick : ticks) {\n                     boolean paintLine = false;\n                    if ((tick.getTickType() == TickType.MINOR)\n                            && isRangeMinorGridlinesVisible()) {\n                        gridStroke = getRangeMinorGridlineStroke();\n                        gridPaint = getRangeMinorGridlinePaint();\n                        paintLine = true;\n                    } else if ((tick.getTickType() == TickType.MAJOR)\n                            && isRangeGridlinesVisible()) {\n                        gridStroke = getRangeGridlineStroke();\n                        gridPaint = getRangeGridlinePaint();\n                        paintLine = true;\n                    }\n                    if ((tick.getValue() != 0.0\n                            || !isRangeZeroBaselineVisible()) && paintLine) {\n                        getRenderer().drawRangeLine(g2, this, getRangeAxis(),\n                                area, tick.getValue(), gridPaint, gridStroke);\n                    }\n                }\n            }\n        }\n    }\n","date":"2020-03-29 19:31:49","endLine":3680,"groupId":"101453","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"drawRangeGridlines","params":"(Graphics2Dg2@Rectangle2Darea@List<ValueTick>ticks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/8139ed21abb7d847625ed3ad80b577a5121ec4.src","preCode":"    protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List<ValueTick> ticks) {\n\n        \r\n        if (getRenderer() == null) {\n            return;\n        }\n\n        \r\n        if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible()) {\n            Stroke gridStroke = null;\n            Paint gridPaint = null;\n            ValueAxis axis = getRangeAxis();\n            if (axis != null) {\n                Iterator iterator = ticks.iterator();\n                boolean paintLine;\n                while (iterator.hasNext()) {\n                    paintLine = false;\n                    ValueTick tick = (ValueTick) iterator.next();\n                    if ((tick.getTickType() == TickType.MINOR)\n                            && isRangeMinorGridlinesVisible()) {\n                        gridStroke = getRangeMinorGridlineStroke();\n                        gridPaint = getRangeMinorGridlinePaint();\n                        paintLine = true;\n                    } else if ((tick.getTickType() == TickType.MAJOR)\n                            && isRangeGridlinesVisible()) {\n                        gridStroke = getRangeGridlineStroke();\n                        gridPaint = getRangeGridlinePaint();\n                        paintLine = true;\n                    }\n                    if ((tick.getValue() != 0.0\n                            || !isRangeZeroBaselineVisible()) && paintLine) {\n                        getRenderer().drawRangeLine(g2, this, getRangeAxis(),\n                                area, tick.getValue(), gridPaint, gridStroke);\n                    }\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":3645,"status":"M"}],"commitId":"de82cc1d6c0c13f7882bf9c3dd566cf12a59a01e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 19:31:49","modifiedFileCount":"8","status":"M","submitter":"David Gilbert"}]
