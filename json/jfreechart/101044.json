[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","date":"2016-02-19 15:40:32","endLine":103,"groupId":"4142","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/59/084ce98b93c575026b515bb42db5d2d94138f4.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtilities.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","date":"2016-02-19 15:40:32","endLine":157,"groupId":"1535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/59/084ce98b93c575026b515bb42db5d2d94138f4.src","preCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtilities.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","date":"2016-02-19 15:40:32","endLine":103,"groupId":"4142","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/59/084ce98b93c575026b515bb42db5d2d94138f4.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","date":"2017-05-06 16:41:21","endLine":157,"groupId":"1535","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/5097b6dc134334b8be630535bb346924c62181.src","preCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtilities.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2020-02-25 16:12:32","commitOrder":3,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<Object>();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","date":"2020-02-25 16:12:32","endLine":99,"groupId":"4142","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d8/09476b0c57581781b1fc2ef52fd3b4ead6e912.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":3,"curCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","date":"2017-05-06 16:41:21","endLine":157,"groupId":"1535","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/5097b6dc134334b8be630535bb346924c62181.src","preCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"N"}],"commitId":"442a5fad22d169e1a8cfcfe1e231483d17e0a371","commitMessage":"@@@Fix compiler warnings.","date":"2020-02-25 16:12:32","modifiedFileCount":"1","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2020-03-11 13:41:55","commitOrder":4,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<>();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","date":"2020-03-11 13:41:55","endLine":99,"groupId":"4142","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3b/2eaafd1fd9abafc456b138f8f85a567c6bfacf.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<Object>();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":4,"curCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","date":"2017-05-06 16:41:21","endLine":157,"groupId":"1535","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9f/5097b6dc134334b8be630535bb346924c62181.src","preCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"N"}],"commitId":"516e68ff9a8a04394f12d85e718c32dde92cd74d","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-11 13:41:55","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 06:34:00","codes":[{"authorDate":"2020-03-21 06:34:00","commitOrder":5,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<>();\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset<String>();\n        ko1 = new KeyedObjects<>();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","date":"2020-03-21 06:34:00","endLine":100,"groupId":"481","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/9dc34ec4e6cdfc6cd4d037151a924a486dc249.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<>();\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset();\n        ko1 = new KeyedObjects();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-03-21 06:34:00","commitOrder":5,"curCode":"    public void testSerialization() {\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects<String> ko2 = TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","date":"2020-03-21 06:34:00","endLine":154,"groupId":"1535","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/9dc34ec4e6cdfc6cd4d037151a924a486dc249.src","preCode":"    public void testSerialization() {\n        KeyedObjects ko1 = new KeyedObjects();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects ko2 = (KeyedObjects) TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"d13f8d95839a34ec745c90d755e40c9f5a2bb406","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 06:34:00","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 06:34:00","codes":[{"authorDate":"2020-03-21 22:57:48","commitOrder":6,"curCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<>();\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset<String>();\n        ko1 = new KeyedObjects<>();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","date":"2020-03-21 22:57:48","endLine":100,"groupId":"101044","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/05/ff12c4d3b9a7ce316142f8ebad35b8e1ad80e4.src","preCode":"    public void testCloning2() throws CloneNotSupportedException {\n        \r\n        Object obj1 = new ArrayList<>();\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"K1\", obj1);\n        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") == obj1);\n\n        \r\n        obj1 = new DefaultPieDataset<String>();\n        ko1 = new KeyedObjects<>();\n        ko1.addObject(\"K1\", obj1);\n        ko2 = (KeyedObjects) ko1.clone();\n        assertTrue(ko1 != ko2);\n        assertTrue(ko1.getClass() == ko2.getClass());\n        assertTrue(ko1.equals(ko2));\n\n        \r\n        assertTrue(ko2.getObject(\"K1\") != obj1);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-03-21 06:34:00","commitOrder":6,"curCode":"    public void testSerialization() {\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects<String> ko2 = TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","date":"2020-03-21 06:34:00","endLine":154,"groupId":"101044","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/9dc34ec4e6cdfc6cd4d037151a924a486dc249.src","preCode":"    public void testSerialization() {\n        KeyedObjects<String> ko1 = new KeyedObjects<>();\n        ko1.addObject(\"Key 1\", \"Object 1\");\n        ko1.addObject(\"Key 2\", null);\n        ko1.addObject(\"Key 3\", \"Object 2\");\n        KeyedObjects<String> ko2 = TestUtils.serialised(ko1);\n        assertEquals(ko1, ko2);\n    }\n","realPath":"src/test/java/org/jfree/data/KeyedObjectsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"}],"commitId":"8b7b0fe7073c12ea76f13aa33784d9c192036f15","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 22:57:48","modifiedFileCount":"11","status":"M","submitter":"David Gilbert"}]
