[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        XYPointerAnnotation a1 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        XYPointerAnnotation a2 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setX(11.0);\n        assertFalse(a1.equals(a2));\n        a2.setX(11.0);\n        assertTrue(a1.equals(a2));\n\n        a1.setY(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setY(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.blue);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.blue);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","date":"2016-02-19 15:40:32","endLine":139,"groupId":"4193","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7d/8f8d0379babc71663d025441fba067b571a528.src","preCode":"    public void testEquals() {\n        XYPointerAnnotation a1 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        XYPointerAnnotation a2 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setX(11.0);\n        assertFalse(a1.equals(a2));\n        a2.setX(11.0);\n        assertTrue(a1.equals(a2));\n\n        a1.setY(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setY(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.blue);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.blue);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","realPath":"src/test/java/org/jfree/chart/annotations/XYPointerAnnotationTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        CategoryPointerAnnotation a1 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        CategoryPointerAnnotation a2 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setCategory(\"Key 2\");\n        assertFalse(a1.equals(a2));\n        a2.setCategory(\"Key 2\");\n        assertTrue(a1.equals(a2));\n\n        a1.setValue(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setValue(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.blue);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.blue);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","date":"2016-02-19 15:40:32","endLine":136,"groupId":"4193","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/fa/2f8bb86647a496bc1c8be4b589cd8509e72e65.src","preCode":"    public void testEquals() {\n        CategoryPointerAnnotation a1 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        CategoryPointerAnnotation a2 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setCategory(\"Key 2\");\n        assertFalse(a1.equals(a2));\n        a2.setCategory(\"Key 2\");\n        assertTrue(a1.equals(a2));\n\n        a1.setValue(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setValue(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.blue);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.blue);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","realPath":"src/test/java/org/jfree/chart/annotations/CategoryPointerAnnotationTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 13:49:04","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testEquals() {\n        XYPointerAnnotation a1 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        XYPointerAnnotation a2 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setX(11.0);\n        assertFalse(a1.equals(a2));\n        a2.setX(11.0);\n        assertTrue(a1.equals(a2));\n\n        a1.setY(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setY(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.BLUE);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.BLUE);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","date":"2017-05-06 13:49:04","endLine":139,"groupId":"1060","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/47/505cd3be0a94e9076b7e85456ebe94bc60ef13.src","preCode":"    public void testEquals() {\n        XYPointerAnnotation a1 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        XYPointerAnnotation a2 = new XYPointerAnnotation(\"Label\", 10.0, 20.0,\n                Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new XYPointerAnnotation(\"Label2\", 10.0, 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setX(11.0);\n        assertFalse(a1.equals(a2));\n        a2.setX(11.0);\n        assertTrue(a1.equals(a2));\n\n        a1.setY(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setY(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.blue);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.blue);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","realPath":"src/test/java/org/jfree/chart/annotations/XYPointerAnnotationTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testEquals() {\n        CategoryPointerAnnotation a1 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        CategoryPointerAnnotation a2 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setCategory(\"Key 2\");\n        assertFalse(a1.equals(a2));\n        a2.setCategory(\"Key 2\");\n        assertTrue(a1.equals(a2));\n\n        a1.setValue(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setValue(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.BLUE);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.BLUE);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","date":"2017-05-06 13:49:04","endLine":136,"groupId":"1060","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f4/82f756d81a15f2eb4a58e7bf35be1759ba4a08.src","preCode":"    public void testEquals() {\n        CategoryPointerAnnotation a1 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        CategoryPointerAnnotation a2 = new CategoryPointerAnnotation(\"Label\",\n                \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertFalse(a1.equals(a2));\n        a2 = new CategoryPointerAnnotation(\"Label2\", \"Key 1\", 20.0, Math.PI);\n        assertTrue(a1.equals(a2));\n\n        a1.setCategory(\"Key 2\");\n        assertFalse(a1.equals(a2));\n        a2.setCategory(\"Key 2\");\n        assertTrue(a1.equals(a2));\n\n        a1.setValue(22.0);\n        assertFalse(a1.equals(a2));\n        a2.setValue(22.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setAngle(Math.PI / 4.0);\n        assertFalse(a1.equals(a2));\n        a2.setAngle(Math.PI / 4.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setTipRadius(20.0);\n        assertFalse(a1.equals(a2));\n        a2.setTipRadius(20.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setBaseRadius(5.0);\n        assertFalse(a1.equals(a2));\n        a2.setBaseRadius(5.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowLength(33.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowLength(33.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowWidth(9.0);\n        assertFalse(a1.equals(a2));\n        a2.setArrowWidth(9.0);\n        assertTrue(a1.equals(a2));\n\n        \r\n        Stroke stroke = new BasicStroke(1.5f);\n        a1.setArrowStroke(stroke);\n        assertFalse(a1.equals(a2));\n        a2.setArrowStroke(stroke);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setArrowPaint(Color.blue);\n        assertFalse(a1.equals(a2));\n        a2.setArrowPaint(Color.blue);\n        assertTrue(a1.equals(a2));\n\n        \r\n        a1.setLabelOffset(10.0);\n        assertFalse(a1.equals(a2));\n        a2.setLabelOffset(10.0);\n        assertTrue(a1.equals(a2));\n    }\n","realPath":"src/test/java/org/jfree/chart/annotations/CategoryPointerAnnotationTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"}]
