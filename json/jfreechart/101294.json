[{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testIterateRangeBounds_IntervalCategoryDataset() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(4.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, new Double(2.0), new Double(3.0), \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        \r\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, null, \"R1\", \"C1\");\n        assertNull(DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(new Double(1.0), null, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, new Double(1.0), null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, new Double(1.0), \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","date":"2017-05-06 16:37:24","endLine":1347,"groupId":"3161","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIterateRangeBounds_IntervalCategoryDataset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testIterateRangeBounds_IntervalCategoryDataset() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(4.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, new Double(2.0), new Double(3.0), \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        \r\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, null, \"R1\", \"C1\");\n        assertNull(DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(new Double(1.0), null, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, new Double(1.0), null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, new Double(1.0), \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1307,"status":"B"},{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testBug2849731() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        d.addItem(new Double(4.0), null, null, \"R2\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","date":"2017-05-06 16:37:24","endLine":1359,"groupId":"1131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBug2849731","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testBug2849731() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        d.addItem(new Double(4.0), null, null, \"R2\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1353,"status":"B"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-02-15 12:18:10","codes":[{"authorDate":"2020-02-15 12:18:10","commitOrder":2,"curCode":"    public void testIterateRangeBounds_IntervalCategoryDataset() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(4.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        \r\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, null, \"R1\", \"C1\");\n        assertNull(DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, null, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, 1.0, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, 1.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","date":"2020-02-15 12:18:10","endLine":1331,"groupId":"3161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIterateRangeBounds_IntervalCategoryDataset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/54/5d34a33ec76f66b4437c5adc828710c8907579.src","preCode":"    public void testIterateRangeBounds_IntervalCategoryDataset() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(4.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, new Double(2.0), new Double(3.0), \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        \r\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, null, \"R1\", \"C1\");\n        assertNull(DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(new Double(1.0), null, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, new Double(1.0), null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, new Double(1.0), \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1291,"status":"M"},{"authorDate":"2020-02-15 12:18:10","commitOrder":2,"curCode":"    public void testBug2849731() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        d.addItem(4.0, null, null, \"R2\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","date":"2020-02-15 12:18:10","endLine":1343,"groupId":"1433","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBug2849731","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/54/5d34a33ec76f66b4437c5adc828710c8907579.src","preCode":"    public void testBug2849731() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        d.addItem(new Double(4.0), null, null, \"R2\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1337,"status":"M"}],"commitId":"6597144e4cc722e70daa6843b396a50999f6f622","commitMessage":"@@@Add test case and fix for bug #141","date":"2020-02-15 12:18:10","modifiedFileCount":"2","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-24 19:47:03","codes":[{"authorDate":"2020-03-24 19:47:03","commitOrder":3,"curCode":"    public void testIterateRangeBounds_IntervalCategoryDataset() {\n        TestIntervalCategoryDataset<String, String> d \n                = new TestIntervalCategoryDataset<>();\n        d.addItem(1.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0), DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(4.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 4.0), DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(null, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0), DatasetUtils.iterateRangeBounds(d));\n\n        \r\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(null, null, null, \"R1\", \"C1\");\n        assertNull(DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(1.0, null, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(null, 1.0, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset<>();\n        d.addItem(null, null, 1.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d));\n    }\n","date":"2020-03-24 19:47:03","endLine":1329,"groupId":"101294","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIterateRangeBounds_IntervalCategoryDataset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ec/31c890007e5dbe773016a5cf11145ded7e9659.src","preCode":"    public void testIterateRangeBounds_IntervalCategoryDataset() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(4.0, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, 2.0, 3.0, \"R1\", \"C1\");\n        assertEquals(new Range(2.0, 3.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        \r\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, null, \"R1\", \"C1\");\n        assertNull(DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(1.0, null, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, 1.0, null, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n\n        d = new TestIntervalCategoryDataset();\n        d.addItem(null, null, 1.0, \"R1\", \"C1\");\n        assertEquals(new Range(1.0, 1.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1295,"status":"M"},{"authorDate":"2020-03-24 19:47:03","commitOrder":3,"curCode":"    public void testBug2849731() {\n        TestIntervalCategoryDataset<String, String> d \n                = new TestIntervalCategoryDataset<>();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        d.addItem(4.0, null, null, \"R2\", \"C1\");\n        assertEquals(new Range(2.0, 4.0), DatasetUtils.iterateRangeBounds(d));\n    }\n","date":"2020-03-24 19:47:03","endLine":1341,"groupId":"101294","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBug2849731","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ec/31c890007e5dbe773016a5cf11145ded7e9659.src","preCode":"    public void testBug2849731() {\n        TestIntervalCategoryDataset d = new TestIntervalCategoryDataset();\n        d.addItem(2.5, 2.0, 3.0, \"R1\", \"C1\");\n        d.addItem(4.0, null, null, \"R2\", \"C1\");\n        assertEquals(new Range(2.0, 4.0),\n                DatasetUtils.iterateRangeBounds(d));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1335,"status":"M"}],"commitId":"768ee10eb77abd31a62f6f26d6e0153c05a415c9","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-24 19:47:03","modifiedFileCount":"23","status":"M","submitter":"David Gilbert"}]
