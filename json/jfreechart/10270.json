[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer();\n        MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer();\n        assertEquals(r1, r2);\n\n        r1.setDrawLines(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawLines(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.yellow));\n        assertFalse(r1.equals(r2));\n        r2.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.yellow));\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupStroke(new BasicStroke(1.2f));\n        assertFalse(r1.equals(r2));\n        r2.setGroupStroke(new BasicStroke(1.2f));\n        assertTrue(r1.equals(r2));\n    }\n","date":"2016-02-19 15:40:32","endLine":93,"groupId":"4060","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d3/43e464272ab8e99405950cc6b4b2c0362b8a67.src","preCode":"    public void testEquals() {\n        MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer();\n        MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer();\n        assertEquals(r1, r2);\n\n        r1.setDrawLines(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawLines(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.yellow));\n        assertFalse(r1.equals(r2));\n        r2.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.yellow));\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupStroke(new BasicStroke(1.2f));\n        assertFalse(r1.equals(r2));\n        r2.setGroupStroke(new BasicStroke(1.2f));\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/MinMaxCategoryRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        StackedAreaRenderer r1 = new StackedAreaRenderer();\n        StackedAreaRenderer r2 = new StackedAreaRenderer();\n        assertEquals(r1, r2);\n\n        r1.setRenderAsPercentages(true);\n        assertFalse(r1.equals(r2));\n        r2.setRenderAsPercentages(true);\n        assertTrue(r1.equals(r2));\n    }\n","date":"2016-02-19 15:40:32","endLine":103,"groupId":"4060","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ce/d58eba90fcd920616f40e2f641b7fc8c6068be.src","preCode":"    public void testEquals() {\n        StackedAreaRenderer r1 = new StackedAreaRenderer();\n        StackedAreaRenderer r2 = new StackedAreaRenderer();\n        assertEquals(r1, r2);\n\n        r1.setRenderAsPercentages(true);\n        assertFalse(r1.equals(r2));\n        r2.setRenderAsPercentages(true);\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testEquals() {\n        MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer();\n        MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer();\n        assertEquals(r1, r2);\n\n        r1.setDrawLines(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawLines(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.YELLOW));\n        assertFalse(r1.equals(r2));\n        r2.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,\n                Color.YELLOW));\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupStroke(new BasicStroke(1.2f));\n        assertFalse(r1.equals(r2));\n        r2.setGroupStroke(new BasicStroke(1.2f));\n        assertTrue(r1.equals(r2));\n    }\n","date":"2017-05-06 13:49:04","endLine":93,"groupId":"10270","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/4a/407ce97a9cc7799d3aea4f8cc9306b3e0f39d8.src","preCode":"    public void testEquals() {\n        MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer();\n        MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer();\n        assertEquals(r1, r2);\n\n        r1.setDrawLines(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawLines(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.yellow));\n        assertFalse(r1.equals(r2));\n        r2.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.yellow));\n        assertTrue(r1.equals(r2));\n\n        r1.setGroupStroke(new BasicStroke(1.2f));\n        assertFalse(r1.equals(r2));\n        r2.setGroupStroke(new BasicStroke(1.2f));\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/MinMaxCategoryRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        StackedAreaRenderer r1 = new StackedAreaRenderer();\n        StackedAreaRenderer r2 = new StackedAreaRenderer();\n        assertEquals(r1, r2);\n\n        r1.setRenderAsPercentages(true);\n        assertFalse(r1.equals(r2));\n        r2.setRenderAsPercentages(true);\n        assertTrue(r1.equals(r2));\n    }\n","date":"2016-02-19 15:40:32","endLine":103,"groupId":"10270","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ce/d58eba90fcd920616f40e2f641b7fc8c6068be.src","preCode":"    public void testEquals() {\n        StackedAreaRenderer r1 = new StackedAreaRenderer();\n        StackedAreaRenderer r2 = new StackedAreaRenderer();\n        assertEquals(r1, r2);\n\n        r1.setRenderAsPercentages(true);\n        assertFalse(r1.equals(r2));\n        r2.setRenderAsPercentages(true);\n        assertTrue(r1.equals(r2));\n    }\n","realPath":"src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"}]
