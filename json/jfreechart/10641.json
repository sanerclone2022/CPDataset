[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = (XYItemEntity) e1.clone();\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","date":"2016-02-19 15:40:32","endLine":108,"groupId":"2353","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/da4b35b235abecafe2070ed4f682411e9a344b.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = (XYItemEntity) e1.clone();\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/XYItemEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        CategoryLabelEntity e1 = new CategoryLabelEntity(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity e2 = new CategoryLabelEntity(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","date":"2016-02-19 15:40:32","endLine":89,"groupId":"250","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2a/2e18551712ebd56cd9d3951dd72ce4698bd33a.src","preCode":"    public void testEquals() {\n        CategoryLabelEntity e1 = new CategoryLabelEntity(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity e2 = new CategoryLabelEntity(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-20 13:13:37","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = (XYItemEntity) e1.clone();\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","date":"2016-02-19 15:40:32","endLine":108,"groupId":"2353","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/da4b35b235abecafe2070ed4f682411e9a344b.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = (XYItemEntity) e1.clone();\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/XYItemEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"},{"authorDate":"2020-03-20 13:13:37","commitOrder":2,"curCode":"    public void testEquals() {\n        CategoryLabelEntity<String> e1 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity<String> e2 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","date":"2020-03-20 13:13:37","endLine":85,"groupId":"250","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7e/1e53970f04a62395014a4f48c280ffcc26e43a.src","preCode":"    public void testEquals() {\n        CategoryLabelEntity e1 = new CategoryLabelEntity(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity e2 = new CategoryLabelEntity(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"291359cafd030333462b647743fa0e7925adfd2a","commitMessage":"@@@Fix NetBeans warnings.","date":"2020-03-20 13:13:37","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 13:13:37","codes":[{"authorDate":"2020-03-20 14:16:26","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = CloneUtils.clone(e1);\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","date":"2020-03-20 14:16:26","endLine":105,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/00/2d15f79ea9524fd19a59039ef5476aa52656d7.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = (XYItemEntity) e1.clone();\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/XYItemEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2020-03-20 13:13:37","commitOrder":3,"curCode":"    public void testEquals() {\n        CategoryLabelEntity<String> e1 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity<String> e2 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","date":"2020-03-20 13:13:37","endLine":85,"groupId":"250","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7e/1e53970f04a62395014a4f48c280ffcc26e43a.src","preCode":"    public void testEquals() {\n        CategoryLabelEntity<String> e1 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity<String> e2 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"3b49d5ab6f13410477f8e88417e73591568f4fb9","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 14:16:26","modifiedFileCount":"21","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 13:13:37","codes":[{"authorDate":"2020-03-23 02:11:17","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection<String>(), 1, 9, \"ToolTip\", \n                \"URL\");\n        XYItemEntity e2 = CloneUtils.clone(e1);\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","date":"2020-03-23 02:11:17","endLine":108,"groupId":"10641","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/59/1921dd2da4039a51d093f836e4c8b41734fb85.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        XYItemEntity e1 = new XYItemEntity(new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), new TimeSeriesCollection(), 1, 9, \"ToolTip\", \"URL\");\n        XYItemEntity e2 = CloneUtils.clone(e1);\n        assertTrue(e1 != e2);\n        assertTrue(e1.getClass() == e2.getClass());\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/XYItemEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2020-03-20 13:13:37","commitOrder":4,"curCode":"    public void testEquals() {\n        CategoryLabelEntity<String> e1 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity<String> e2 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","date":"2020-03-20 13:13:37","endLine":85,"groupId":"10641","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7e/1e53970f04a62395014a4f48c280ffcc26e43a.src","preCode":"    public void testEquals() {\n        CategoryLabelEntity<String> e1 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        CategoryLabelEntity<String> e2 = new CategoryLabelEntity<>(\"A\",\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertFalse(e1.equals(e2));\n        e2 = new CategoryLabelEntity<>(\"B\", new Rectangle2D.Double(1.0, 2.0,\n                3.0, 4.0), \"ToolTip\", \"URL\");\n        assertTrue(e1.equals(e2));\n\n        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertFalse(e1.equals(e2));\n        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));\n        assertTrue(e1.equals(e2));\n\n        e1.setToolTipText(\"New ToolTip\");\n        assertFalse(e1.equals(e2));\n        e2.setToolTipText(\"New ToolTip\");\n        assertTrue(e1.equals(e2));\n\n        e1.setURLText(\"New URL\");\n        assertFalse(e1.equals(e2));\n        e2.setURLText(\"New URL\");\n        assertTrue(e1.equals(e2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"6b83197035128701b202d112a935261aa9723fde","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-23 02:11:17","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"}]
