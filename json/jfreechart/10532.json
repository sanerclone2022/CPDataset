[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = (LegendItem) item1.clone();\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","date":"2016-02-19 15:40:32","endLine":357,"groupId":"3855","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/15/2cd65f99b482f59de0d763f06b077cd21225f8.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = (LegendItem) item1.clone();\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","realPath":"src/test/java/org/jfree/chart/LegendItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(new Integer(1),\n                \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","date":"2016-02-19 15:40:32","endLine":106,"groupId":"3855","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f4/49a185906c4fb6f95b9c04e99ec3e9f8e1e374.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(new Integer(1),\n                \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","realPath":"src/test/java/org/jfree/data/ComparableObjectItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-01-06 08:29:49","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = (LegendItem) item1.clone();\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","date":"2016-02-19 15:40:32","endLine":357,"groupId":"3855","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/15/2cd65f99b482f59de0d763f06b077cd21225f8.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = (LegendItem) item1.clone();\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","realPath":"src/test/java/org/jfree/chart/LegendItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"N"},{"authorDate":"2020-01-06 08:29:49","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(1, \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","date":"2020-01-06 08:29:49","endLine":100,"groupId":"3855","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/86/e221a65e44904ec2f63ff073f5c1d15e319231.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(new Integer(1),\n                \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","realPath":"src/test/java/org/jfree/data/ComparableObjectItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"5da94a14d497cf0741937b27365882515a12528e","commitMessage":"@@@Merge branch 'master' of https://github.com/jfree/jfreechart\n","date":"2020-01-06 08:29:49","modifiedFileCount":"12","status":"M","submitter":"Tracy Hiltbrand"},{"authorTime":"2020-01-06 08:29:49","codes":[{"authorDate":"2020-03-20 13:51:54","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = CloneUtils.clone(item1);\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","date":"2020-03-20 13:51:54","endLine":348,"groupId":"3855","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/39/ef3c274b173501d6da5b445e43fa3e07d0f1b5.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = (LegendItem) item1.clone();\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","realPath":"src/test/java/org/jfree/chart/LegendItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"},{"authorDate":"2020-01-06 08:29:49","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(1, \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","date":"2020-01-06 08:29:49","endLine":100,"groupId":"3855","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/86/e221a65e44904ec2f63ff073f5c1d15e319231.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(1, \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","realPath":"src/test/java/org/jfree/data/ComparableObjectItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"}],"commitId":"b91af7a7053ff1a52f8fab97629661fa39fec042","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 13:51:54","modifiedFileCount":"40","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 17:21:39","codes":[{"authorDate":"2020-03-20 13:51:54","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = CloneUtils.clone(item1);\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","date":"2020-03-20 13:51:54","endLine":348,"groupId":"10532","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/39/ef3c274b173501d6da5b445e43fa3e07d0f1b5.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        LegendItem item1 = new LegendItem(\"Item\");\n        LegendItem item2 = CloneUtils.clone(item1);\n\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n\n        \r\n        assertSame(item1.getDataset(), item2.getDataset());\n    }\n","realPath":"src/test/java/org/jfree/chart/LegendItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"N"},{"authorDate":"2020-03-21 17:21:39","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(1, \"XYZ\");\n        ComparableObjectItem item2 = CloneUtils.clone(item1);\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","date":"2020-03-21 17:21:39","endLine":101,"groupId":"10532","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/90/bb41dad86a7b79524172fc4887a42159d7e384.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        ComparableObjectItem item1 = new ComparableObjectItem(1, \"XYZ\");\n        ComparableObjectItem item2 = (ComparableObjectItem) item1.clone();\n        assertNotSame(item1, item2);\n        assertSame(item1.getClass(), item2.getClass());\n        assertEquals(item1, item2);\n    }\n","realPath":"src/test/java/org/jfree/data/ComparableObjectItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"880bda6ccf2c1053a201c7f59a1a7a823fe74f94","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 17:21:39","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"}]
