[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testUpdateByIndex2() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, Double.NaN);\n\n        assertTrue(Double.isNaN(s1.getMinY()));\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.updateByIndex(0, new Double(1.0));\n        assertEquals(1.0, s1.getMinY(), EPSILON);\n        assertEquals(1.0, s1.getMaxY(), EPSILON);\n\n        s1.updateByIndex(0, new Double(2.0));\n        assertEquals(2.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.0);\n        s1.updateByIndex(0, new Double(0.0));\n        assertEquals(0.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":739,"groupId":"1135","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateByIndex2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testUpdateByIndex2() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, Double.NaN);\n\n        assertTrue(Double.isNaN(s1.getMinY()));\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.updateByIndex(0, new Double(1.0));\n        assertEquals(1.0, s1.getMinY(), EPSILON);\n        assertEquals(1.0, s1.getMaxY(), EPSILON);\n\n        s1.updateByIndex(0, new Double(2.0));\n        assertEquals(2.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.0);\n        s1.updateByIndex(0, new Double(0.0));\n        assertEquals(0.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":720,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testUpdateByIndex3() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 1.1);\n        s1.add(2.0, 2.2);\n        s1.add(3.0, 3.3);\n\n        s1.updateByIndex(1, new Double(2.05));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":754,"groupId":"2640","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateByIndex3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/d4/ffbffdef4290335e87f510c2188dce43a99a4a.src","preCode":"    public void testUpdateByIndex3() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 1.1);\n        s1.add(2.0, 2.2);\n        s1.add(3.0, 3.3);\n\n        s1.updateByIndex(1, new Double(2.05));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-02-25 12:33:13","codes":[{"authorDate":"2020-02-25 12:33:13","commitOrder":2,"curCode":"    public void testUpdateByIndex2() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, Double.NaN);\n\n        assertTrue(Double.isNaN(s1.getMinY()));\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.updateByIndex(0, 1.0);\n        assertEquals(1.0, s1.getMinY(), EPSILON);\n        assertEquals(1.0, s1.getMaxY(), EPSILON);\n\n        s1.updateByIndex(0, 2.0);\n        assertEquals(2.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.0);\n        s1.updateByIndex(0, 0.0);\n        assertEquals(0.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-02-25 12:33:13","endLine":732,"groupId":"1135","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateByIndex2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/79/3cc4e8caa37a6a7f944dc14585e47477050164.src","preCode":"    public void testUpdateByIndex2() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, Double.NaN);\n\n        assertTrue(Double.isNaN(s1.getMinY()));\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.updateByIndex(0, new Double(1.0));\n        assertEquals(1.0, s1.getMinY(), EPSILON);\n        assertEquals(1.0, s1.getMaxY(), EPSILON);\n\n        s1.updateByIndex(0, new Double(2.0));\n        assertEquals(2.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.0);\n        s1.updateByIndex(0, new Double(0.0));\n        assertEquals(0.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":713,"status":"M"},{"authorDate":"2020-02-25 12:33:13","commitOrder":2,"curCode":"    public void testUpdateByIndex3() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 1.1);\n        s1.add(2.0, 2.2);\n        s1.add(3.0, 3.3);\n\n        s1.updateByIndex(1, 2.05);\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-02-25 12:33:13","endLine":747,"groupId":"2640","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateByIndex3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/79/3cc4e8caa37a6a7f944dc14585e47477050164.src","preCode":"    public void testUpdateByIndex3() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 1.1);\n        s1.add(2.0, 2.2);\n        s1.add(3.0, 3.3);\n\n        s1.updateByIndex(1, new Double(2.05));\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":738,"status":"M"}],"commitId":"829ac15627cb3462b26a88921e68f6647842625d","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 12:33:13","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testUpdateByIndex2() {\n        XYSeries<String> s1 = new XYSeries<>(\"S1\");\n        s1.add(1.0, Double.NaN);\n\n        assertTrue(Double.isNaN(s1.getMinY()));\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.updateByIndex(0, 1.0);\n        assertEquals(1.0, s1.getMinY(), EPSILON);\n        assertEquals(1.0, s1.getMaxY(), EPSILON);\n\n        s1.updateByIndex(0, 2.0);\n        assertEquals(2.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.0);\n        s1.updateByIndex(0, 0.0);\n        assertEquals(0.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":733,"groupId":"101031","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateByIndex2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f3/f587c233e4ad7c1bc2e384bd9a89bc19e65b17.src","preCode":"    public void testUpdateByIndex2() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, Double.NaN);\n\n        assertTrue(Double.isNaN(s1.getMinY()));\n        assertTrue(Double.isNaN(s1.getMaxY()));\n\n        s1.updateByIndex(0, 1.0);\n        assertEquals(1.0, s1.getMinY(), EPSILON);\n        assertEquals(1.0, s1.getMaxY(), EPSILON);\n\n        s1.updateByIndex(0, 2.0);\n        assertEquals(2.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n\n        s1.add(-1.0, -1.0);\n        s1.updateByIndex(0, 0.0);\n        assertEquals(0.0, s1.getMinY(), EPSILON);\n        assertEquals(2.0, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":714,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testUpdateByIndex3() {\n        XYSeries<String> s1 = new XYSeries<>(\"S1\");\n        s1.add(1.0, 1.1);\n        s1.add(2.0, 2.2);\n        s1.add(3.0, 3.3);\n\n        s1.updateByIndex(1, 2.05);\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":748,"groupId":"101031","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateByIndex3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f3/f587c233e4ad7c1bc2e384bd9a89bc19e65b17.src","preCode":"    public void testUpdateByIndex3() {\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 1.1);\n        s1.add(2.0, 2.2);\n        s1.add(3.0, 3.3);\n\n        s1.updateByIndex(1, 2.05);\n        assertEquals(1.1, s1.getMinY(), EPSILON);\n        assertEquals(3.3, s1.getMaxY(), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":739,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
