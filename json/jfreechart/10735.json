[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":95,"groupId":"1243","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/53/9f82d570e4f31ed49bd351bf8c5016863362c0.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) TestUtilities.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","date":"2016-02-19 15:40:32","endLine":107,"groupId":"1243","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/53/9f82d570e4f31ed49bd351bf8c5016863362c0.src","preCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) TestUtilities.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":95,"groupId":"1243","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/53/9f82d570e4f31ed49bd351bf8c5016863362c0.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) TestUtils.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","date":"2017-05-06 16:41:21","endLine":107,"groupId":"1243","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f9/30ea502d0bb989f90ce5f3a046302211d1b8fe.src","preCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) TestUtilities.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-21 12:59:12","codes":[{"authorDate":"2020-03-21 12:59:12","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-21 12:59:12","endLine":91,"groupId":"1243","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0c/49e206174ba0f3f9088ca19c446c2f674f6b24.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-03-21 12:59:12","commitOrder":3,"curCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = TestUtils.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","date":"2020-03-21 12:59:12","endLine":103,"groupId":"1243","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0c/49e206174ba0f3f9088ca19c446c2f674f6b24.src","preCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = (TaskSeries) TestUtils.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"9a050ecda6db1df960c59525d384ac7c53b543f5","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 12:59:12","modifiedFileCount":"12","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries<String> s1 = new TaskSeries<>(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries<String> s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","date":"2020-03-22 19:36:23","endLine":91,"groupId":"10735","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f6/3f716c2984523b58ff9937e87447dd08768276.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertFalse(s1.equals(s2));\n        s2.add(new Task(\"T3\", new Date(22), new Date(33)));\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":4,"curCode":"    public void testSerialization() {\n        TaskSeries<String> s1 = new TaskSeries<>(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries<String> s2 = TestUtils.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","date":"2020-03-22 19:36:23","endLine":103,"groupId":"10735","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f6/3f716c2984523b58ff9937e87447dd08768276.src","preCode":"    public void testSerialization() {\n        TaskSeries s1 = new TaskSeries(\"S\");\n        s1.add(new Task(\"T1\", new Date(1), new Date(2)));\n        s1.add(new Task(\"T2\", new Date(11), new Date(22)));\n        TaskSeries s2 = TestUtils.serialised(s1);\n        assertEquals(s1, s2);\n    }\n","realPath":"src/test/java/org/jfree/data/gantt/TaskSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
