[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double x = 0.0;\n        double width = 0.0;\n        double maxHeight = 0.0;\n        List blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = (Block) blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                width = width + sizes[i].getWidth();\n                maxHeight = Math.max(sizes[i].height, maxHeight);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        x, 0.0, sizes[i].width, sizes[i].height\n                    )\n                );\n                x = x + sizes[i].width + this.horizontalGap;\n            }\n            if (blockCount > 1) {\n                width = width + this.horizontalGap * (blockCount - 1);\n            }\n            if (this.verticalAlignment != VerticalAlignment.TOP) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.verticalAlignment == VerticalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.verticalAlignment\n                            == VerticalAlignment.BOTTOM) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(width, maxHeight);\n    }\n","date":"2016-02-19 16:24:22","endLine":394,"groupId":"3851","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"arrangeNN","params":"(BlockContainercontainer@Graphics2Dg2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9b/58a9755719edc66e513916df2abff19d4e3616.src","preCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double x = 0.0;\n        double width = 0.0;\n        double maxHeight = 0.0;\n        List blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = (Block) blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                width = width + sizes[i].getWidth();\n                maxHeight = Math.max(sizes[i].height, maxHeight);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        x, 0.0, sizes[i].width, sizes[i].height\n                    )\n                );\n                x = x + sizes[i].width + this.horizontalGap;\n            }\n            if (blockCount > 1) {\n                width = width + this.horizontalGap * (blockCount - 1);\n            }\n            if (this.verticalAlignment != VerticalAlignment.TOP) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.verticalAlignment == VerticalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.verticalAlignment\n                            == VerticalAlignment.BOTTOM) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(width, maxHeight);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/FlowArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double y = 0.0;\n        double height = 0.0;\n        double maxWidth = 0.0;\n        List blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = (Block) blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                height = height + sizes[i].getHeight();\n                maxWidth = Math.max(sizes[i].width, maxWidth);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        0.0, y, sizes[i].width, sizes[i].height\n                    )\n                );\n                y = y + sizes[i].height + this.verticalGap;\n            }\n            if (blockCount > 1) {\n                height = height + this.verticalGap * (blockCount - 1);\n            }\n            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.horizontalAlignment\n                            == HorizontalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.horizontalAlignment\n                            == HorizontalAlignment.RIGHT) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(maxWidth, height);\n    }\n","date":"2016-02-19 16:24:22","endLine":350,"groupId":"2797","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"arrangeNN","params":"(BlockContainercontainer@Graphics2Dg2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/97/e3a4f498b2d25e0bf6f7b23d06fbd4a6a14c36.src","preCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double y = 0.0;\n        double height = 0.0;\n        double maxWidth = 0.0;\n        List blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = (Block) blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                height = height + sizes[i].getHeight();\n                maxWidth = Math.max(sizes[i].width, maxWidth);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        0.0, y, sizes[i].width, sizes[i].height\n                    )\n                );\n                y = y + sizes[i].height + this.verticalGap;\n            }\n            if (blockCount > 1) {\n                height = height + this.verticalGap * (blockCount - 1);\n            }\n            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.horizontalAlignment\n                            == HorizontalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.horizontalAlignment\n                            == HorizontalAlignment.RIGHT) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(maxWidth, height);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/ColumnArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2021-02-06 13:14:37","codes":[{"authorDate":"2021-02-06 13:14:37","commitOrder":2,"curCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double x = 0.0;\n        double width = 0.0;\n        double maxHeight = 0.0;\n        List<Block> blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                width = width + sizes[i].getWidth();\n                maxHeight = Math.max(sizes[i].height, maxHeight);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        x, 0.0, sizes[i].width, sizes[i].height\n                    )\n                );\n                x = x + sizes[i].width + this.horizontalGap;\n            }\n            if (blockCount > 1) {\n                width = width + this.horizontalGap * (blockCount - 1);\n            }\n            if (this.verticalAlignment != VerticalAlignment.TOP) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.verticalAlignment == VerticalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.verticalAlignment\n                            == VerticalAlignment.BOTTOM) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(width, maxHeight);\n    }\n","date":"2021-02-06 13:14:37","endLine":392,"groupId":"101760","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"arrangeNN","params":"(BlockContainercontainer@Graphics2Dg2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/11/9b776a08272a25c8c02ed1246205081c0a2243.src","preCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double x = 0.0;\n        double width = 0.0;\n        double maxHeight = 0.0;\n        List blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = (Block) blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                width = width + sizes[i].getWidth();\n                maxHeight = Math.max(sizes[i].height, maxHeight);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        x, 0.0, sizes[i].width, sizes[i].height\n                    )\n                );\n                x = x + sizes[i].width + this.horizontalGap;\n            }\n            if (blockCount > 1) {\n                width = width + this.horizontalGap * (blockCount - 1);\n            }\n            if (this.verticalAlignment != VerticalAlignment.TOP) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.verticalAlignment == VerticalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.verticalAlignment\n                            == VerticalAlignment.BOTTOM) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(width, maxHeight);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/FlowArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2021-02-06 13:14:37","commitOrder":2,"curCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double y = 0.0;\n        double height = 0.0;\n        double maxWidth = 0.0;\n        List<Block> blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                height = height + sizes[i].getHeight();\n                maxWidth = Math.max(sizes[i].width, maxWidth);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        0.0, y, sizes[i].width, sizes[i].height\n                    )\n                );\n                y = y + sizes[i].height + this.verticalGap;\n            }\n            if (blockCount > 1) {\n                height = height + this.verticalGap * (blockCount - 1);\n            }\n            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.horizontalAlignment\n                            == HorizontalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.horizontalAlignment\n                            == HorizontalAlignment.RIGHT) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(maxWidth, height);\n    }\n","date":"2021-02-06 13:14:37","endLine":348,"groupId":"101760","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"arrangeNN","params":"(BlockContainercontainer@Graphics2Dg2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ec/f8f99b718f945b920a5592d0de554119fbda1a.src","preCode":"    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {\n        double y = 0.0;\n        double height = 0.0;\n        double maxWidth = 0.0;\n        List blocks = container.getBlocks();\n        int blockCount = blocks.size();\n        if (blockCount > 0) {\n            Size2D[] sizes = new Size2D[blocks.size()];\n            for (int i = 0; i < blocks.size(); i++) {\n                Block block = (Block) blocks.get(i);\n                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);\n                height = height + sizes[i].getHeight();\n                maxWidth = Math.max(sizes[i].width, maxWidth);\n                block.setBounds(\n                    new Rectangle2D.Double(\n                        0.0, y, sizes[i].width, sizes[i].height\n                    )\n                );\n                y = y + sizes[i].height + this.verticalGap;\n            }\n            if (blockCount > 1) {\n                height = height + this.verticalGap * (blockCount - 1);\n            }\n            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {\n                for (int i = 0; i < blocks.size(); i++) {\n                    \r\n                    if (this.horizontalAlignment\n                            == HorizontalAlignment.CENTER) {\n                        \r\n                    }\n                    else if (this.horizontalAlignment\n                            == HorizontalAlignment.RIGHT) {\n                        \r\n                    }\n                }\n            }\n        }\n        return new Size2D(maxWidth, height);\n    }\n","realPath":"src/main/java/org/jfree/chart/block/ColumnArrangement.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"fc4ddeed916c4cfd6479bf7378c6cdb94f6a19fe","commitMessage":"@@@Merge pull request #211 from zgh-public/code-cleanup-pr\n\nDifferent improvements of old fashioned code","date":"2021-02-06 13:14:37","modifiedFileCount":"149","status":"M","submitter":"David Gilbert"}]
