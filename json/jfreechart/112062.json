[{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":2,"curCode":"    public static CategoryDataset<String, String> createCategoryDataset(\n            String rowKeyPrefix, String columnKeyPrefix, Number[][] data) {\n\n        DefaultCategoryDataset<String, String> result \n                = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            String rowKey = rowKeyPrefix + (r + 1);\n            for (int c = 0; c < data[r].length; c++) {\n                String columnKey = columnKeyPrefix + (c + 1);\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","date":"2020-03-09 01:06:45","endLine":323,"groupId":"3080","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCategoryDataset","params":"(StringrowKeyPrefix@StringcolumnKeyPrefix@Number[][]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/56/42a62fd1a4e0eac1d35feceeaa1dd62a89d240.src","preCode":"    public static CategoryDataset<String, String> createCategoryDataset(\n            String rowKeyPrefix, String columnKeyPrefix, Number[][] data) {\n\n        DefaultCategoryDataset<String, String> result \n                = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            String rowKey = rowKeyPrefix + (r + 1);\n            for (int c = 0; c < data[r].length; c++) {\n                String columnKey = columnKeyPrefix + (c + 1);\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"MB"},{"authorDate":"2020-03-09 01:06:45","commitOrder":2,"curCode":"            CategoryDataset createCategoryDataset(R[] rowKeys, C[] columnKeys, \n            double[][] data) {\n\n        Args.nullNotPermitted(rowKeys, \"rowKeys\");\n        Args.nullNotPermitted(columnKeys, \"columnKeys\");\n        if (ArrayUtils.hasDuplicateItems(rowKeys)) {\n            throw new IllegalArgumentException(\"Duplicate items in 'rowKeys'.\");\n        }\n        if (ArrayUtils.hasDuplicateItems(columnKeys)) {\n            throw new IllegalArgumentException(\n                    \"Duplicate items in 'columnKeys'.\");\n        }\n        if (rowKeys.length != data.length) {\n            throw new IllegalArgumentException(\n                \"The number of row keys does not match the number of rows in \"\n                + \"the data array.\");\n        }\n        int columnCount = 0;\n        for (int r = 0; r < data.length; r++) {\n            columnCount = Math.max(columnCount, data[r].length);\n        }\n        if (columnKeys.length != columnCount) {\n            throw new IllegalArgumentException(\n                \"The number of column keys does not match the number of \"\n                + \"columns in the data array.\");\n        }\n\n        \r\n        DefaultCategoryDataset<R, C> result = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            R rowKey = rowKeys[r];\n            for (int c = 0; c < data[r].length; c++) {\n                C columnKey = columnKeys[c];\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","date":"2020-03-09 01:06:45","endLine":377,"groupId":"3080","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCategoryDataset","params":"(R[]rowKeys@C[]columnKeys@double[][]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/56/42a62fd1a4e0eac1d35feceeaa1dd62a89d240.src","preCode":"            CategoryDataset createCategoryDataset(R[] rowKeys, C[] columnKeys, \n            double[][] data) {\n\n        Args.nullNotPermitted(rowKeys, \"rowKeys\");\n        Args.nullNotPermitted(columnKeys, \"columnKeys\");\n        if (ArrayUtils.hasDuplicateItems(rowKeys)) {\n            throw new IllegalArgumentException(\"Duplicate items in 'rowKeys'.\");\n        }\n        if (ArrayUtils.hasDuplicateItems(columnKeys)) {\n            throw new IllegalArgumentException(\n                    \"Duplicate items in 'columnKeys'.\");\n        }\n        if (rowKeys.length != data.length) {\n            throw new IllegalArgumentException(\n                \"The number of row keys does not match the number of rows in \"\n                + \"the data array.\");\n        }\n        int columnCount = 0;\n        for (int r = 0; r < data.length; r++) {\n            columnCount = Math.max(columnCount, data[r].length);\n        }\n        if (columnKeys.length != columnCount) {\n            throw new IllegalArgumentException(\n                \"The number of column keys does not match the number of \"\n                + \"columns in the data array.\");\n        }\n\n        \r\n        DefaultCategoryDataset<R, C> result = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            R rowKey = rowKeys[r];\n            for (int c = 0; c < data[r].length; c++) {\n                C columnKey = columnKeys[c];\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"B"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-15 15:36:15","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public static CategoryDataset<String, String> createCategoryDataset(\n            String rowKeyPrefix, String columnKeyPrefix, Number[][] data) {\n\n        DefaultCategoryDataset<String, String> result \n                = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            String rowKey = rowKeyPrefix + (r + 1);\n            for (int c = 0; c < data[r].length; c++) {\n                String columnKey = columnKeyPrefix + (c + 1);\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","date":"2020-03-09 01:06:45","endLine":323,"groupId":"112062","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCategoryDataset","params":"(StringrowKeyPrefix@StringcolumnKeyPrefix@Number[][]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/56/42a62fd1a4e0eac1d35feceeaa1dd62a89d240.src","preCode":"    public static CategoryDataset<String, String> createCategoryDataset(\n            String rowKeyPrefix, String columnKeyPrefix, Number[][] data) {\n\n        DefaultCategoryDataset<String, String> result \n                = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            String rowKey = rowKeyPrefix + (r + 1);\n            for (int c = 0; c < data[r].length; c++) {\n                String columnKey = columnKeyPrefix + (c + 1);\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"},{"authorDate":"2020-03-15 15:36:15","commitOrder":3,"curCode":"            CategoryDataset<R, C> createCategoryDataset(R[] rowKeys, C[] columnKeys, \n            double[][] data) {\n\n        Args.nullNotPermitted(rowKeys, \"rowKeys\");\n        Args.nullNotPermitted(columnKeys, \"columnKeys\");\n        if (ArrayUtils.hasDuplicateItems(rowKeys)) {\n            throw new IllegalArgumentException(\"Duplicate items in 'rowKeys'.\");\n        }\n        if (ArrayUtils.hasDuplicateItems(columnKeys)) {\n            throw new IllegalArgumentException(\n                    \"Duplicate items in 'columnKeys'.\");\n        }\n        if (rowKeys.length != data.length) {\n            throw new IllegalArgumentException(\n                \"The number of row keys does not match the number of rows in \"\n                + \"the data array.\");\n        }\n        int columnCount = 0;\n        for (int r = 0; r < data.length; r++) {\n            columnCount = Math.max(columnCount, data[r].length);\n        }\n        if (columnKeys.length != columnCount) {\n            throw new IllegalArgumentException(\n                \"The number of column keys does not match the number of \"\n                + \"columns in the data array.\");\n        }\n\n        \r\n        DefaultCategoryDataset<R, C> result = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            R rowKey = rowKeys[r];\n            for (int c = 0; c < data[r].length; c++) {\n                C columnKey = columnKeys[c];\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","date":"2020-03-15 15:36:15","endLine":377,"groupId":"112062","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCategoryDataset","params":"(R[]rowKeys@C[]columnKeys@double[][]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2b/f55a95d2f3a0fda94e483fcdd44f8c0c38f24c.src","preCode":"            CategoryDataset createCategoryDataset(R[] rowKeys, C[] columnKeys, \n            double[][] data) {\n\n        Args.nullNotPermitted(rowKeys, \"rowKeys\");\n        Args.nullNotPermitted(columnKeys, \"columnKeys\");\n        if (ArrayUtils.hasDuplicateItems(rowKeys)) {\n            throw new IllegalArgumentException(\"Duplicate items in 'rowKeys'.\");\n        }\n        if (ArrayUtils.hasDuplicateItems(columnKeys)) {\n            throw new IllegalArgumentException(\n                    \"Duplicate items in 'columnKeys'.\");\n        }\n        if (rowKeys.length != data.length) {\n            throw new IllegalArgumentException(\n                \"The number of row keys does not match the number of rows in \"\n                + \"the data array.\");\n        }\n        int columnCount = 0;\n        for (int r = 0; r < data.length; r++) {\n            columnCount = Math.max(columnCount, data[r].length);\n        }\n        if (columnKeys.length != columnCount) {\n            throw new IllegalArgumentException(\n                \"The number of column keys does not match the number of \"\n                + \"columns in the data array.\");\n        }\n\n        \r\n        DefaultCategoryDataset<R, C> result = new DefaultCategoryDataset<>();\n        for (int r = 0; r < data.length; r++) {\n            R rowKey = rowKeys[r];\n            for (int c = 0; c < data[r].length; c++) {\n                C columnKey = columnKeys[c];\n                result.addValue(data[r][c], rowKey, columnKey);\n            }\n        }\n        return result;\n\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"}],"commitId":"3e13a50e8b025d15b978faffb0843080be20d4b3","commitMessage":"@@@Fix NetBeans warnings.","date":"2020-03-15 15:36:15","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"}]
