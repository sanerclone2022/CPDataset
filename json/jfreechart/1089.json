[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        \r\n        StandardDialScale s1 = new StandardDialScale();\n        StandardDialScale s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new StandardDialScale();\n        s1.setExtent(123.4);\n        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.white));\n        s1.setMajorTickStroke(new BasicStroke(2.0f));\n        s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        s1.addChangeListener(l1);\n        assertTrue(s1.hasListener(l1));\n        assertFalse(s2.hasListener(l1));\n    }\n","date":"2016-02-19 15:40:32","endLine":212,"groupId":"850","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3f/4030939232f1e0732dc6eb89f9f24e8faa9de3.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        \r\n        StandardDialScale s1 = new StandardDialScale();\n        StandardDialScale s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new StandardDialScale();\n        s1.setExtent(123.4);\n        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.white));\n        s1.setMajorTickStroke(new BasicStroke(2.0f));\n        s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        s1.addChangeListener(l1);\n        assertTrue(s1.hasListener(l1));\n        assertFalse(s2.hasListener(l1));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/StandardDialScaleTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        AxisSpace s1 = new AxisSpace();\n        AxisSpace s2 = (AxisSpace) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":107,"groupId":"1243","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/2851cd57afeef47a0f108ecb4c1a2ae06b5ce4.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        AxisSpace s1 = new AxisSpace();\n        AxisSpace s2 = (AxisSpace) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/AxisSpaceTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        \r\n        StandardDialScale s1 = new StandardDialScale();\n        StandardDialScale s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new StandardDialScale();\n        s1.setExtent(123.4);\n        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.WHITE));\n        s1.setMajorTickStroke(new BasicStroke(2.0f));\n        s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        s1.addChangeListener(l1);\n        assertTrue(s1.hasListener(l1));\n        assertFalse(s2.hasListener(l1));\n    }\n","date":"2017-05-06 13:49:04","endLine":212,"groupId":"850","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/a300490af16c6e8c3aa1a5ac1bed87cecd7ec8.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        \r\n        StandardDialScale s1 = new StandardDialScale();\n        StandardDialScale s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new StandardDialScale();\n        s1.setExtent(123.4);\n        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f,\n                4.0f, Color.white));\n        s1.setMajorTickStroke(new BasicStroke(2.0f));\n        s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        s1.addChangeListener(l1);\n        assertTrue(s1.hasListener(l1));\n        assertFalse(s2.hasListener(l1));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/StandardDialScaleTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        AxisSpace s1 = new AxisSpace();\n        AxisSpace s2 = (AxisSpace) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":107,"groupId":"1243","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/2851cd57afeef47a0f108ecb4c1a2ae06b5ce4.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        AxisSpace s1 = new AxisSpace();\n        AxisSpace s2 = (AxisSpace) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/AxisSpaceTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-03-20 19:42:25","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        \r\n        StandardDialScale s1 = new StandardDialScale();\n        StandardDialScale s2 = CloneUtils.clone(s1);\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new StandardDialScale();\n        s1.setExtent(123.4);\n        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.WHITE));\n        s1.setMajorTickStroke(new BasicStroke(2.0f));\n        s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        s1.addChangeListener(l1);\n        assertTrue(s1.hasListener(l1));\n        assertFalse(s2.hasListener(l1));\n    }\n","date":"2020-03-20 19:42:25","endLine":207,"groupId":"1089","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ae/1ff86d9fd1dbbde1a5da900f83795bf564d928.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        \r\n        StandardDialScale s1 = new StandardDialScale();\n        StandardDialScale s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new StandardDialScale();\n        s1.setExtent(123.4);\n        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,\n                4.0f, Color.WHITE));\n        s1.setMajorTickStroke(new BasicStroke(2.0f));\n        s2 = (StandardDialScale) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n\n        \r\n        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();\n        s1.addChangeListener(l1);\n        assertTrue(s1.hasListener(l1));\n        assertFalse(s2.hasListener(l1));\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/dial/StandardDialScaleTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        AxisSpace s1 = new AxisSpace();\n        AxisSpace s2 = (AxisSpace) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","date":"2016-02-19 15:40:32","endLine":107,"groupId":"1089","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6f/2851cd57afeef47a0f108ecb4c1a2ae06b5ce4.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        AxisSpace s1 = new AxisSpace();\n        AxisSpace s2 = (AxisSpace) s1.clone();\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/AxisSpaceTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"}],"commitId":"0cfd8706aa5e721374d2073ab640ece8b9773c0a","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 19:42:25","modifiedFileCount":"13","status":"M","submitter":"David Gilbert"}]
