[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetValue() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(\n                new Comparable[] {\"Series 1\", \"Series 2\"},\n                new Comparable[] {\"Category 1\", \"Category 2\", \"Category 3\"},\n                DataUtilities.createNumberArray2D(starts),\n                DataUtilities.createNumberArray2D(ends));\n\n        assertEquals(new Double(0.1), d.getStartValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.2), d.getStartValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.4), d.getStartValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.5), d.getStartValue(\"Series 2\",\n                \"Category 3\"));\n\n        assertEquals(new Double(0.5), d.getEndValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.6), d.getEndValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.8), d.getEndValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.9), d.getEndValue(\"Series 2\",\n                \"Category 3\"));\n\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"Category 1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"Series 1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2016-02-19 15:40:32","endLine":121,"groupId":"3369","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e8/58232d9286649e01c1a103733f2b9acce232fa.src","preCode":"    public void testGetValue() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(\n                new Comparable[] {\"Series 1\", \"Series 2\"},\n                new Comparable[] {\"Category 1\", \"Category 2\", \"Category 3\"},\n                DataUtilities.createNumberArray2D(starts),\n                DataUtilities.createNumberArray2D(ends));\n\n        assertEquals(new Double(0.1), d.getStartValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.2), d.getStartValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.4), d.getStartValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.5), d.getStartValue(\"Series 2\",\n                \"Category 3\"));\n\n        assertEquals(new Double(0.5), d.getEndValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.6), d.getEndValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.8), d.getEndValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.9), d.getEndValue(\"Series 2\",\n                \"Category 3\"));\n\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"Category 1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"Series 1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetRowAndColumnCount() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d\n                = new DefaultIntervalCategoryDataset(starts, ends);\n\n        assertEquals(2, d.getRowCount());\n        assertEquals(3, d.getColumnCount());\n    }\n","date":"2016-02-19 15:40:32","endLine":140,"groupId":"3369","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRowAndColumnCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e8/58232d9286649e01c1a103733f2b9acce232fa.src","preCode":"    public void testGetRowAndColumnCount() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d\n                = new DefaultIntervalCategoryDataset(starts, ends);\n\n        assertEquals(2, d.getRowCount());\n        assertEquals(3, d.getColumnCount());\n    }\n","realPath":"src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-05-06 16:39:34","commitOrder":2,"curCode":"    public void testGetValue() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(\n                new Comparable[] {\"Series 1\", \"Series 2\"},\n                new Comparable[] {\"Category 1\", \"Category 2\", \"Category 3\"},\n                DataUtils.createNumberArray2D(starts),\n                DataUtils.createNumberArray2D(ends));\n\n        assertEquals(new Double(0.1), d.getStartValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.2), d.getStartValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.4), d.getStartValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.5), d.getStartValue(\"Series 2\",\n                \"Category 3\"));\n\n        assertEquals(new Double(0.5), d.getEndValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.6), d.getEndValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.8), d.getEndValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.9), d.getEndValue(\"Series 2\",\n                \"Category 3\"));\n\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"Category 1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"Series 1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2017-05-06 16:39:34","endLine":121,"groupId":"3369","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7d/ab0c09dab7443416ecff263875e74cd0b20c92.src","preCode":"    public void testGetValue() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(\n                new Comparable[] {\"Series 1\", \"Series 2\"},\n                new Comparable[] {\"Category 1\", \"Category 2\", \"Category 3\"},\n                DataUtilities.createNumberArray2D(starts),\n                DataUtilities.createNumberArray2D(ends));\n\n        assertEquals(new Double(0.1), d.getStartValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.2), d.getStartValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.4), d.getStartValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.5), d.getStartValue(\"Series 2\",\n                \"Category 3\"));\n\n        assertEquals(new Double(0.5), d.getEndValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.6), d.getEndValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.8), d.getEndValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.9), d.getEndValue(\"Series 2\",\n                \"Category 3\"));\n\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"Category 1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"Series 1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testGetRowAndColumnCount() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d\n                = new DefaultIntervalCategoryDataset(starts, ends);\n\n        assertEquals(2, d.getRowCount());\n        assertEquals(3, d.getColumnCount());\n    }\n","date":"2016-02-19 15:40:32","endLine":140,"groupId":"3369","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRowAndColumnCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e8/58232d9286649e01c1a103733f2b9acce232fa.src","preCode":"    public void testGetRowAndColumnCount() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d\n                = new DefaultIntervalCategoryDataset(starts, ends);\n\n        assertEquals(2, d.getRowCount());\n        assertEquals(3, d.getColumnCount());\n    }\n","realPath":"src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"871490272e372e910414952594d658611899da55","commitMessage":"@@@Rename DataUtilities --> DataUtils.","date":"2017-05-06 16:39:34","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-02-25 12:33:13","commitOrder":3,"curCode":"    public void testGetValue() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(\n                new Comparable[] {\"Series 1\", \"Series 2\"},\n                new Comparable[] {\"Category 1\", \"Category 2\", \"Category 3\"},\n                DataUtils.createNumberArray2D(starts),\n                DataUtils.createNumberArray2D(ends));\n\n        assertEquals(0.1, d.getStartValue(\"Series 1\", \"Category 1\"));\n        assertEquals(0.2, d.getStartValue(\"Series 1\", \"Category 2\"));\n        assertEquals(0.3, d.getStartValue(\"Series 1\", \"Category 3\"));\n        assertEquals(0.3, d.getStartValue(\"Series 2\", \"Category 1\"));\n        assertEquals(0.4, d.getStartValue(\"Series 2\", \"Category 2\"));\n        assertEquals(0.5, d.getStartValue(\"Series 2\", \"Category 3\"));\n        assertEquals(0.5, d.getEndValue(\"Series 1\", \"Category 1\"));\n        assertEquals(0.6, d.getEndValue(\"Series 1\", \"Category 2\"));\n        assertEquals(0.7, d.getEndValue(\"Series 1\", \"Category 3\"));\n        assertEquals(0.7, d.getEndValue(\"Series 2\", \"Category 1\"));\n        assertEquals(0.8, d.getEndValue(\"Series 2\", \"Category 2\"));\n        assertEquals(0.9, d.getEndValue(\"Series 2\", \"Category 3\"));\n\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"Category 1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"Series 1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-25 12:33:13","endLine":102,"groupId":"10779","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b0/f0b4705102a17000edc3a8d36f75667ebfab32.src","preCode":"    public void testGetValue() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(\n                new Comparable[] {\"Series 1\", \"Series 2\"},\n                new Comparable[] {\"Category 1\", \"Category 2\", \"Category 3\"},\n                DataUtils.createNumberArray2D(starts),\n                DataUtils.createNumberArray2D(ends));\n\n        assertEquals(new Double(0.1), d.getStartValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.2), d.getStartValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.3), d.getStartValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.4), d.getStartValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.5), d.getStartValue(\"Series 2\",\n                \"Category 3\"));\n\n        assertEquals(new Double(0.5), d.getEndValue(\"Series 1\",\n                \"Category 1\"));\n        assertEquals(new Double(0.6), d.getEndValue(\"Series 1\",\n                \"Category 2\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 1\",\n                \"Category 3\"));\n        assertEquals(new Double(0.7), d.getEndValue(\"Series 2\",\n                \"Category 1\"));\n        assertEquals(new Double(0.8), d.getEndValue(\"Series 2\",\n                \"Category 2\"));\n        assertEquals(new Double(0.9), d.getEndValue(\"Series 2\",\n                \"Category 3\"));\n\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"Category 1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"Series 1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":3,"curCode":"    public void testGetRowAndColumnCount() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d\n                = new DefaultIntervalCategoryDataset(starts, ends);\n\n        assertEquals(2, d.getRowCount());\n        assertEquals(3, d.getColumnCount());\n    }\n","date":"2016-02-19 15:40:32","endLine":140,"groupId":"10779","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRowAndColumnCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/e8/58232d9286649e01c1a103733f2b9acce232fa.src","preCode":"    public void testGetRowAndColumnCount() {\n        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};\n        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};\n        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};\n        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};\n        double[][] starts = new double[][] {starts_S1, starts_S2};\n        double[][] ends = new double[][] {ends_S1, ends_S2};\n        DefaultIntervalCategoryDataset d\n                = new DefaultIntervalCategoryDataset(starts, ends);\n\n        assertEquals(2, d.getRowCount());\n        assertEquals(3, d.getColumnCount());\n    }\n","realPath":"src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"829ac15627cb3462b26a88921e68f6647842625d","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 12:33:13","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
