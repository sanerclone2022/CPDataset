[{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","date":"2017-05-06 16:37:24","endLine":2075,"groupId":"643","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findMinimumStackedRangeValue","params":"(CategoryDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/dc/8b6a0ddbf3de1c88397f2cde6fc21c654ede9f.src","preCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2049,"status":"B"},{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = new Double(maximum);\n        }\n        return result;\n    }\n","date":"2017-05-06 16:37:24","endLine":2112,"groupId":"643","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumStackedRangeValue","params":"(CategoryDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/dc/8b6a0ddbf3de1c88397f2cde6fc21c654ede9f.src","preCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = new Double(maximum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2087,"status":"B"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","date":"2017-05-12 05:28:15","endLine":2075,"groupId":"643","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findMinimumStackedRangeValue","params":"(CategoryDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/57/fedbdb6f2ba5f9f0c0c73cd2e21515625fcee8.src","preCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2049,"status":"M"},{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = new Double(maximum);\n        }\n        return result;\n    }\n","date":"2017-05-12 05:28:15","endLine":2112,"groupId":"643","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumStackedRangeValue","params":"(CategoryDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/57/fedbdb6f2ba5f9f0c0c73cd2e21515625fcee8.src","preCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        ParamChecks.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = new Double(maximum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2087,"status":"M"}],"commitId":"22701c9ec4cd5bd88f8a7f17ae11c18099dd1ec7","commitMessage":"@@@Rename ParamChecks --> Args.","date":"2017-05-12 05:28:15","modifiedFileCount":"216","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2017-05-12 05:28:15","commitOrder":3,"curCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","date":"2017-05-12 05:28:15","endLine":2075,"groupId":"643","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"findMinimumStackedRangeValue","params":"(CategoryDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/57/fedbdb6f2ba5f9f0c0c73cd2e21515625fcee8.src","preCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2049,"status":"N"},{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = maximum;\n        }\n        return result;\n    }\n","date":"2020-03-09 01:06:45","endLine":2051,"groupId":"643","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumStackedRangeValue","params":"(CategoryDatasetdataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/56/42a62fd1a4e0eac1d35feceeaa1dd62a89d240.src","preCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = new Double(maximum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2026,"status":"M"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 16:37:24","codes":[{"authorDate":"2020-03-29 16:37:24","commitOrder":4,"curCode":"            findMinimumStackedRangeValue(CategoryDataset<R, C> dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = minimum;\n        }\n        return result;\n    }\n","date":"2020-03-29 16:37:24","endLine":2008,"groupId":"102077","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"findMinimumStackedRangeValue","params":"(CategoryDataset<R@C>dataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5b/c5866b92930fd53a8a92248e13bc02bdaa2334.src","preCode":"    public static Number findMinimumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double minimum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value < 0.0) {\n                        total = total + value;\n                        \r\n                    }\n                }\n            }\n            minimum = Math.min(minimum, total);\n        }\n        if (hasValidData) {\n            result = new Double(minimum);\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1982,"status":"M"},{"authorDate":"2020-03-29 16:37:24","commitOrder":4,"curCode":"            findMaximumStackedRangeValue(CategoryDataset<R, C> dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = maximum;\n        }\n        return result;\n    }\n","date":"2020-03-29 16:37:24","endLine":2046,"groupId":"102077","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"findMaximumStackedRangeValue","params":"(CategoryDataset<R@C>dataset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5b/c5866b92930fd53a8a92248e13bc02bdaa2334.src","preCode":"    public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        Args.nullNotPermitted(dataset, \"dataset\");\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = maximum;\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jfree/data/general/DatasetUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2021,"status":"M"}],"commitId":"e21c4225a7fb294665bc97a40f5738a5449a0824","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 16:37:24","modifiedFileCount":"8","status":"M","submitter":"David Gilbert"}]
