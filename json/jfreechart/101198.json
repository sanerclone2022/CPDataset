[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetMinY2() {\n        TimeSeries ts = new TimeSeries(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMinY()));\n    }\n","date":"2016-02-19 15:40:32","endLine":1000,"groupId":"1212","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMinY2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/84/35a22af8ec31b47679df84f67a6546dd39ace8.src","preCode":"    public void testGetMinY2() {\n        TimeSeries ts = new TimeSeries(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMinY()));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":985,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetMaxY2() {\n        TimeSeries ts = new TimeSeries(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMaxY()));\n    }\n","date":"2016-02-19 15:40:32","endLine":1045,"groupId":"1212","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetMaxY2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/84/35a22af8ec31b47679df84f67a6546dd39ace8.src","preCode":"    public void testGetMaxY2() {\n        TimeSeries ts = new TimeSeries(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMaxY()));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1030,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetMinY2() {\n        TimeSeries<String> ts = new TimeSeries<>(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMinY()));\n    }\n","date":"2020-03-22 19:36:23","endLine":973,"groupId":"101198","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetMinY2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8f/ca912ea4098491100ee4064656b72adc694bba.src","preCode":"    public void testGetMinY2() {\n        TimeSeries ts = new TimeSeries(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMinY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMinY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMinY()));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":958,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetMaxY2() {\n        TimeSeries<String> ts = new TimeSeries<>(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMaxY()));\n    }\n","date":"2020-03-22 19:36:23","endLine":1018,"groupId":"101198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetMaxY2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8f/ca912ea4098491100ee4064656b72adc694bba.src","preCode":"    public void testGetMaxY2() {\n        TimeSeries ts = new TimeSeries(\"Time Series\");\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.add(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n        \n        ts.addOrUpdate(new Year(2014), null);\n        assertTrue(Double.isNaN(ts.getMaxY()));\n        \n        ts.addOrUpdate(new Year(2014), 1.0);\n        assertEquals(1.0, ts.getMaxY(), EPSILON);\n\n        ts.clear();\n        assertTrue(Double.isNaN(ts.getMaxY()));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1003,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
