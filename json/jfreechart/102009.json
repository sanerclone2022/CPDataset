[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        ParamChecks.nullNotPermitted(data, \"data\");\n        ParamChecks.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        Iterator iterator = data.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n","date":"2016-02-19 16:24:22","endLine":117,"groupId":"1118","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeKeyedValues","params":"(KeyedValuesdata@Writerwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3e/9dd1ffa121e3e968fe8ff374a1045318ee311a.src","preCode":"    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        ParamChecks.nullNotPermitted(data, \"data\");\n        ParamChecks.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        Iterator iterator = data.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n","realPath":"src/main/java/org/jfree/data/json/JSONUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public static void writeKeyedValues2D(KeyedValues2D data, Writer writer) \n            throws IOException {\n        ParamChecks.nullNotPermitted(data, \"data\");\n        ParamChecks.nullNotPermitted(writer, \"writer\");\n        List<Comparable<?>> columnKeys = data.getColumnKeys();\n        List<Comparable<?>> rowKeys = data.getRowKeys();\n        writer.write(\"{\");\n        if (!columnKeys.isEmpty()) {\n            writer.write(\"\\\"columnKeys\\\": [\");\n            boolean first = true;\n            for (Comparable<?> columnKey : columnKeys) {\n                if (!first) {\n                    writer.write(\", \");\n                } else {\n                    first = false;\n                }\n                writer.write(JSONValue.toJSONString(columnKey.toString()));\n            }\n            writer.write(\"]\");\n        }\n        if (!rowKeys.isEmpty()) {\n            writer.write(\", \\\"rows\\\": [\");\n            boolean firstRow = true;\n            for (Comparable<?> rowKey : rowKeys) {   \n                if (!firstRow) {\n                    writer.write(\", [\");\n                } else {\n                    writer.write(\"[\");\n                    firstRow = false;\n                }\n                \r\n                writer.write(JSONValue.toJSONString(rowKey.toString()));\n                writer.write(\", [\");\n                boolean first = true;\n                for (Comparable<?> columnKey : columnKeys) {\n                    if (!first) {\n                        writer.write(\", \");\n                    } else {\n                        first = false;\n                    }\n                    writer.write(JSONValue.toJSONString(data.getValue(rowKey, \n                            columnKey)));\n                }\n                writer.write(\"]]\");\n            }\n            writer.write(\"]\");\n        }\n        writer.write(\"}\");    \n    }\n","date":"2016-02-19 16:24:22","endLine":199,"groupId":"798","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeKeyedValues2D","params":"(KeyedValues2Ddata@Writerwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/3e/9dd1ffa121e3e968fe8ff374a1045318ee311a.src","preCode":"    public static void writeKeyedValues2D(KeyedValues2D data, Writer writer) \n            throws IOException {\n        ParamChecks.nullNotPermitted(data, \"data\");\n        ParamChecks.nullNotPermitted(writer, \"writer\");\n        List<Comparable<?>> columnKeys = data.getColumnKeys();\n        List<Comparable<?>> rowKeys = data.getRowKeys();\n        writer.write(\"{\");\n        if (!columnKeys.isEmpty()) {\n            writer.write(\"\\\"columnKeys\\\": [\");\n            boolean first = true;\n            for (Comparable<?> columnKey : columnKeys) {\n                if (!first) {\n                    writer.write(\", \");\n                } else {\n                    first = false;\n                }\n                writer.write(JSONValue.toJSONString(columnKey.toString()));\n            }\n            writer.write(\"]\");\n        }\n        if (!rowKeys.isEmpty()) {\n            writer.write(\", \\\"rows\\\": [\");\n            boolean firstRow = true;\n            for (Comparable<?> rowKey : rowKeys) {   \n                if (!firstRow) {\n                    writer.write(\", [\");\n                } else {\n                    writer.write(\"[\");\n                    firstRow = false;\n                }\n                \r\n                writer.write(JSONValue.toJSONString(rowKey.toString()));\n                writer.write(\", [\");\n                boolean first = true;\n                for (Comparable<?> columnKey : columnKeys) {\n                    if (!first) {\n                        writer.write(\", \");\n                    } else {\n                        first = false;\n                    }\n                    writer.write(JSONValue.toJSONString(data.getValue(rowKey, \n                            columnKey)));\n                }\n                writer.write(\"]]\");\n            }\n            writer.write(\"]\");\n        }\n        writer.write(\"}\");    \n    }\n","realPath":"src/main/java/org/jfree/data/json/JSONUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        Iterator iterator = data.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n","date":"2017-05-12 05:28:15","endLine":117,"groupId":"1118","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeKeyedValues","params":"(KeyedValuesdata@Writerwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6b/552ffe446a8a9975f282100a3b724910a03192.src","preCode":"    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        ParamChecks.nullNotPermitted(data, \"data\");\n        ParamChecks.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        Iterator iterator = data.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n","realPath":"src/main/java/org/jfree/data/json/JSONUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public static void writeKeyedValues2D(KeyedValues2D data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        List<Comparable<?>> columnKeys = data.getColumnKeys();\n        List<Comparable<?>> rowKeys = data.getRowKeys();\n        writer.write(\"{\");\n        if (!columnKeys.isEmpty()) {\n            writer.write(\"\\\"columnKeys\\\": [\");\n            boolean first = true;\n            for (Comparable<?> columnKey : columnKeys) {\n                if (!first) {\n                    writer.write(\", \");\n                } else {\n                    first = false;\n                }\n                writer.write(JSONValue.toJSONString(columnKey.toString()));\n            }\n            writer.write(\"]\");\n        }\n        if (!rowKeys.isEmpty()) {\n            writer.write(\", \\\"rows\\\": [\");\n            boolean firstRow = true;\n            for (Comparable<?> rowKey : rowKeys) {   \n                if (!firstRow) {\n                    writer.write(\", [\");\n                } else {\n                    writer.write(\"[\");\n                    firstRow = false;\n                }\n                \r\n                writer.write(JSONValue.toJSONString(rowKey.toString()));\n                writer.write(\", [\");\n                boolean first = true;\n                for (Comparable<?> columnKey : columnKeys) {\n                    if (!first) {\n                        writer.write(\", \");\n                    } else {\n                        first = false;\n                    }\n                    writer.write(JSONValue.toJSONString(data.getValue(rowKey, \n                            columnKey)));\n                }\n                writer.write(\"]]\");\n            }\n            writer.write(\"]\");\n        }\n        writer.write(\"}\");    \n    }\n","date":"2017-05-12 05:28:15","endLine":199,"groupId":"798","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeKeyedValues2D","params":"(KeyedValues2Ddata@Writerwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6b/552ffe446a8a9975f282100a3b724910a03192.src","preCode":"    public static void writeKeyedValues2D(KeyedValues2D data, Writer writer) \n            throws IOException {\n        ParamChecks.nullNotPermitted(data, \"data\");\n        ParamChecks.nullNotPermitted(writer, \"writer\");\n        List<Comparable<?>> columnKeys = data.getColumnKeys();\n        List<Comparable<?>> rowKeys = data.getRowKeys();\n        writer.write(\"{\");\n        if (!columnKeys.isEmpty()) {\n            writer.write(\"\\\"columnKeys\\\": [\");\n            boolean first = true;\n            for (Comparable<?> columnKey : columnKeys) {\n                if (!first) {\n                    writer.write(\", \");\n                } else {\n                    first = false;\n                }\n                writer.write(JSONValue.toJSONString(columnKey.toString()));\n            }\n            writer.write(\"]\");\n        }\n        if (!rowKeys.isEmpty()) {\n            writer.write(\", \\\"rows\\\": [\");\n            boolean firstRow = true;\n            for (Comparable<?> rowKey : rowKeys) {   \n                if (!firstRow) {\n                    writer.write(\", [\");\n                } else {\n                    writer.write(\"[\");\n                    firstRow = false;\n                }\n                \r\n                writer.write(JSONValue.toJSONString(rowKey.toString()));\n                writer.write(\", [\");\n                boolean first = true;\n                for (Comparable<?> columnKey : columnKeys) {\n                    if (!first) {\n                        writer.write(\", \");\n                    } else {\n                        first = false;\n                    }\n                    writer.write(JSONValue.toJSONString(data.getValue(rowKey, \n                            columnKey)));\n                }\n                writer.write(\"]]\");\n            }\n            writer.write(\"]\");\n        }\n        writer.write(\"}\");    \n    }\n","realPath":"src/main/java/org/jfree/data/json/JSONUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"22701c9ec4cd5bd88f8a7f17ae11c18099dd1ec7","commitMessage":"@@@Rename ParamChecks --> Args.","date":"2017-05-12 05:28:15","modifiedFileCount":"216","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2020-10-17 13:05:27","commitOrder":3,"curCode":"    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        for (Object o : data.getKeys()) {\n            Comparable key = (Comparable) o;\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n","date":"2020-10-17 13:05:27","endLine":116,"groupId":"102009","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeKeyedValues","params":"(KeyedValuesdata@Writerwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/02/65da3c6e6f85b3213fae802f64040d4893a234.src","preCode":"    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        Iterator iterator = data.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n","realPath":"src/main/java/org/jfree/data/json/JSONUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2017-05-12 05:28:15","commitOrder":3,"curCode":"    public static void writeKeyedValues2D(KeyedValues2D data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        List<Comparable<?>> columnKeys = data.getColumnKeys();\n        List<Comparable<?>> rowKeys = data.getRowKeys();\n        writer.write(\"{\");\n        if (!columnKeys.isEmpty()) {\n            writer.write(\"\\\"columnKeys\\\": [\");\n            boolean first = true;\n            for (Comparable<?> columnKey : columnKeys) {\n                if (!first) {\n                    writer.write(\", \");\n                } else {\n                    first = false;\n                }\n                writer.write(JSONValue.toJSONString(columnKey.toString()));\n            }\n            writer.write(\"]\");\n        }\n        if (!rowKeys.isEmpty()) {\n            writer.write(\", \\\"rows\\\": [\");\n            boolean firstRow = true;\n            for (Comparable<?> rowKey : rowKeys) {   \n                if (!firstRow) {\n                    writer.write(\", [\");\n                } else {\n                    writer.write(\"[\");\n                    firstRow = false;\n                }\n                \r\n                writer.write(JSONValue.toJSONString(rowKey.toString()));\n                writer.write(\", [\");\n                boolean first = true;\n                for (Comparable<?> columnKey : columnKeys) {\n                    if (!first) {\n                        writer.write(\", \");\n                    } else {\n                        first = false;\n                    }\n                    writer.write(JSONValue.toJSONString(data.getValue(rowKey, \n                            columnKey)));\n                }\n                writer.write(\"]]\");\n            }\n            writer.write(\"]\");\n        }\n        writer.write(\"}\");    \n    }\n","date":"2017-05-12 05:28:15","endLine":199,"groupId":"102009","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeKeyedValues2D","params":"(KeyedValues2Ddata@Writerwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6b/552ffe446a8a9975f282100a3b724910a03192.src","preCode":"    public static void writeKeyedValues2D(KeyedValues2D data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        List<Comparable<?>> columnKeys = data.getColumnKeys();\n        List<Comparable<?>> rowKeys = data.getRowKeys();\n        writer.write(\"{\");\n        if (!columnKeys.isEmpty()) {\n            writer.write(\"\\\"columnKeys\\\": [\");\n            boolean first = true;\n            for (Comparable<?> columnKey : columnKeys) {\n                if (!first) {\n                    writer.write(\", \");\n                } else {\n                    first = false;\n                }\n                writer.write(JSONValue.toJSONString(columnKey.toString()));\n            }\n            writer.write(\"]\");\n        }\n        if (!rowKeys.isEmpty()) {\n            writer.write(\", \\\"rows\\\": [\");\n            boolean firstRow = true;\n            for (Comparable<?> rowKey : rowKeys) {   \n                if (!firstRow) {\n                    writer.write(\", [\");\n                } else {\n                    writer.write(\"[\");\n                    firstRow = false;\n                }\n                \r\n                writer.write(JSONValue.toJSONString(rowKey.toString()));\n                writer.write(\", [\");\n                boolean first = true;\n                for (Comparable<?> columnKey : columnKeys) {\n                    if (!first) {\n                        writer.write(\", \");\n                    } else {\n                        first = false;\n                    }\n                    writer.write(JSONValue.toJSONString(data.getValue(rowKey, \n                            columnKey)));\n                }\n                writer.write(\"]]\");\n            }\n            writer.write(\"]\");\n        }\n        writer.write(\"}\");    \n    }\n","realPath":"src/main/java/org/jfree/data/json/JSONUtils.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"N"}],"commitId":"61f3b48e99ddd733daf435eee2ea1c643c4f6a21","commitMessage":"@@@Merge pull request #178 from simon04/for-loop\n\nReplace while loop with enhanced for loop","date":"2020-10-17 13:05:27","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"}]
