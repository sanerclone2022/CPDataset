[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ArrayList markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (ArrayList) this.foregroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (ArrayList) this.backgroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2016-02-19 16:24:22","endLine":2623,"groupId":"786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeDomainMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ArrayList markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (ArrayList) this.foregroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (ArrayList) this.backgroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2604,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ParamChecks.nullNotPermitted(marker, \"marker\");\n        ParamChecks.nullNotPermitted(layer, \"layer\");\n        List markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (List) this.foregroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (List) this.backgroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2016-02-19 16:24:22","endLine":2857,"groupId":"786","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRangeMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ParamChecks.nullNotPermitted(marker, \"marker\");\n        ParamChecks.nullNotPermitted(layer, \"layer\");\n        List markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (List) this.foregroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (List) this.backgroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2836,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-12 05:28:15","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ArrayList markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (ArrayList) this.foregroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (ArrayList) this.backgroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2016-02-19 16:24:22","endLine":2623,"groupId":"786","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeDomainMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/14/7173f0ce47020b4b333c914a4add2ab5802f07.src","preCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ArrayList markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (ArrayList) this.foregroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (ArrayList) this.backgroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2604,"status":"N"},{"authorDate":"2017-05-12 05:28:15","commitOrder":2,"curCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        Args.nullNotPermitted(marker, \"marker\");\n        Args.nullNotPermitted(layer, \"layer\");\n        List markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (List) this.foregroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (List) this.backgroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2017-05-12 05:28:15","endLine":2857,"groupId":"786","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRangeMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/02/80cca6817e2a2da536516bd9905cd648f5dc46.src","preCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ParamChecks.nullNotPermitted(marker, \"marker\");\n        ParamChecks.nullNotPermitted(layer, \"layer\");\n        List markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (List) this.foregroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (List) this.backgroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2836,"status":"M"}],"commitId":"22701c9ec4cd5bd88f8a7f17ae11c18099dd1ec7","commitMessage":"@@@Rename ParamChecks --> Args.","date":"2017-05-12 05:28:15","modifiedFileCount":"216","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-01-09 05:47:42","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":3,"curCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        List<Marker> markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = this.foregroundDomainMarkers.get(index);\n        } else {\n            markers = this.backgroundDomainMarkers.get(index);\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2020-01-09 05:47:42","endLine":2415,"groupId":"1488","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"removeDomainMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        ArrayList markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (ArrayList) this.foregroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (ArrayList) this.backgroundDomainMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2399,"status":"M"},{"authorDate":"2020-01-09 05:47:42","commitOrder":3,"curCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        Objects.requireNonNull(marker, \"marker\");\n        Objects.requireNonNull(layer, \"layer\");\n        List<Marker> markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = this.foregroundRangeMarkers.get(index);\n        } else {\n            markers = this.backgroundRangeMarkers.get(index);\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2020-01-09 05:47:42","endLine":2637,"groupId":"1488","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRangeMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        Args.nullNotPermitted(marker, \"marker\");\n        Args.nullNotPermitted(layer, \"layer\");\n        List markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (List) this.foregroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        else {\n            markers = (List) this.backgroundRangeMarkers.get(\n                    new Integer(index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2619,"status":"M"}],"commitId":"3b75f318b1df03ef72738ae8c2e35fc779720691","commitMessage":"@@@Fix compiler warnings.\n","date":"2020-01-09 05:47:42","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"},{"authorTime":"2021-01-21 13:26:15","codes":[{"authorDate":"2020-01-09 05:47:42","commitOrder":4,"curCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        List<Marker> markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = this.foregroundDomainMarkers.get(index);\n        } else {\n            markers = this.backgroundDomainMarkers.get(index);\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2020-01-09 05:47:42","endLine":2415,"groupId":"101425","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"removeDomainMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/26/43b783724d2f8b5edfe6ba033c11a7733319d0.src","preCode":"    public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        List<Marker> markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = this.foregroundDomainMarkers.get(index);\n        } else {\n            markers = this.backgroundDomainMarkers.get(index);\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2399,"status":"N"},{"authorDate":"2021-01-21 13:26:15","commitOrder":4,"curCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        Args.nullNotPermitted(marker, \"marker\");\n        Args.nullNotPermitted(layer, \"layer\");\n        List<Marker> markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = this.foregroundRangeMarkers.get(index);\n        } else {\n            markers = this.backgroundRangeMarkers.get(index);\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","date":"2021-01-21 13:26:15","endLine":2641,"groupId":"101425","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRangeMarker","params":"(intindex@Markermarker@Layerlayer@booleannotify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a7/d291f46dff8dc6918c31d662e8e465c74fc5b3.src","preCode":"    public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify) {\n        Objects.requireNonNull(marker, \"marker\");\n        Objects.requireNonNull(layer, \"layer\");\n        List<Marker> markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = this.foregroundRangeMarkers.get(index);\n        } else {\n            markers = this.backgroundRangeMarkers.get(index);\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }\n","realPath":"src/main/java/org/jfree/chart/plot/XYPlot.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":2623,"status":"M"}],"commitId":"ae40fd74fc4e24ca26fa337089500dd9b7be6879","commitMessage":"@@@Fix bug #205 (throw IllegalArgumentException rather than NullPointerException).","date":"2021-01-21 13:26:15","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"}]
