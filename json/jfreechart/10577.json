[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testPreviousStandardDateMillisecondA() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnit.MILLISECOND, 1);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","date":"2016-02-19 15:40:32","endLine":1085,"groupId":"524","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPreviousStandardDateMillisecondA","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/bb/0a628a4231f12872077a411e2dff1cb3225918.src","preCode":"    public void testPreviousStandardDateMillisecondA() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnit.MILLISECOND, 1);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/DateAxisTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1048,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testPreviousStandardDateMillisecondB() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnit.MILLISECOND, 10);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","date":"2016-02-19 15:40:32","endLine":1129,"groupId":"524","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPreviousStandardDateMillisecondB","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/bb/0a628a4231f12872077a411e2dff1cb3225918.src","preCode":"    public void testPreviousStandardDateMillisecondB() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnit.MILLISECOND, 10);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/DateAxisTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1092,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-03-10 23:59:03","codes":[{"authorDate":"2017-03-10 23:59:03","commitOrder":2,"curCode":"    public void testPreviousStandardDateMillisecondA() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnitType.MILLISECOND, 1);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd, TimeZone.getDefault());\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd, TimeZone.getDefault());\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd, TimeZone.getDefault());\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","date":"2017-03-10 23:59:03","endLine":1087,"groupId":"10577","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPreviousStandardDateMillisecondA","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/66/4cca460c0130cd4935f3a82f092b8debbab658.src","preCode":"    public void testPreviousStandardDateMillisecondA() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnit.MILLISECOND, 1);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/DateAxisTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"M"},{"authorDate":"2017-03-10 23:59:03","commitOrder":2,"curCode":"    public void testPreviousStandardDateMillisecondB() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnitType.MILLISECOND, 10);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd, TimeZone.getDefault());\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd, TimeZone.getDefault());\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd, TimeZone.getDefault());\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","date":"2017-03-10 23:59:03","endLine":1131,"groupId":"10577","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPreviousStandardDateMillisecondB","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/66/4cca460c0130cd4935f3a82f092b8debbab658.src","preCode":"    public void testPreviousStandardDateMillisecondB() {\n        MyDateAxis axis = new MyDateAxis(\"Millisecond\");\n        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);\n        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);\n\n        Date d0 = new Date(m0.getFirstMillisecond());\n        Date end = new Date(m1.getLastMillisecond());\n\n        DateTickUnit unit = new DateTickUnit(DateTickUnit.MILLISECOND, 10);\n        axis.setTickUnit(unit);\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.START);\n\n        axis.setRange(d0, end);\n        Date psd = axis.previousStandardDate(d0, unit);\n        Date nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n\n        \r\n        axis.setTickMarkPosition(DateTickMarkPosition.END);\n\n        axis.setRange(d0, end);\n        psd = axis.previousStandardDate(d0, unit);\n        nsd = unit.addToDate(psd);\n        assertTrue(psd.getTime() < d0.getTime());\n        assertTrue(nsd.getTime() >= d0.getTime());\n    }\n","realPath":"src/test/java/org/jfree/chart/axis/DateAxisTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1094,"status":"M"}],"commitId":"61220d6f207fdee783a87ad7428baa0d61c7ad79","commitMessage":"@@@Remove deprecated code","date":"2017-03-10 23:59:03","modifiedFileCount":"18","status":"M","submitter":"David Gilbert"}]
