[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List values = new ArrayList();\n        values.add(new Integer(1));\n        values.add(new Integer(2));\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(new Double(1.5), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2016-02-19 15:40:32","endLine":89,"groupId":"4011","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/257d52861945820fc44b125553a1fc98952cd4.src","preCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List values = new ArrayList();\n        values.add(new Integer(1));\n        values.add(new Integer(2));\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(new Double(1.5), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        assertEquals(new Double(1.0), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2016-02-19 15:40:32","endLine":86,"groupId":"4011","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/8cf4c7ababf219973d8f272b5631ce91b213f8.src","preCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        assertEquals(new Double(1.0), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-02-25 11:46:26","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List values = new ArrayList();\n        values.add(new Integer(1));\n        values.add(new Integer(2));\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(new Double(1.5), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2016-02-19 15:40:32","endLine":89,"groupId":"4011","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/2d/257d52861945820fc44b125553a1fc98952cd4.src","preCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List values = new ArrayList();\n        values.add(new Integer(1));\n        values.add(new Integer(2));\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(new Double(1.5), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"},{"authorDate":"2020-02-25 11:46:26","commitOrder":2,"curCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-25 11:46:26","endLine":76,"groupId":"4011","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/da/b6aa9df7addf515f29a75f6a909cf88398946d.src","preCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(new Double(1.0), \"R1\", \"C1\");\n        assertEquals(new Double(1.0), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"fc43f0bd633d91b12f72d4638f74fe9db9f1ec0a","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 11:46:26","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-02-25 11:46:26","codes":[{"authorDate":"2020-02-25 12:33:13","commitOrder":3,"curCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List<Number> values = new ArrayList<>();\n        values.add(1);\n        values.add(2);\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(1.5, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-25 12:33:13","endLine":85,"groupId":"4011","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b1/d9af315f2d0a194d1b38e863a73f095559100a.src","preCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List values = new ArrayList();\n        values.add(new Integer(1));\n        values.add(new Integer(2));\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(new Double(1.5), d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-02-25 11:46:26","commitOrder":3,"curCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-25 11:46:26","endLine":76,"groupId":"4011","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/da/b6aa9df7addf515f29a75f6a909cf88398946d.src","preCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"829ac15627cb3462b26a88921e68f6647842625d","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 12:33:13","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2020-02-25 12:33:13","commitOrder":4,"curCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List<Number> values = new ArrayList<>();\n        values.add(1);\n        values.add(2);\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(1.5, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-02-25 12:33:13","endLine":85,"groupId":"4011","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b1/d9af315f2d0a194d1b38e863a73f095559100a.src","preCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List<Number> values = new ArrayList<>();\n        values.add(1);\n        values.add(2);\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(1.5, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2020-03-09 01:06:45","commitOrder":4,"curCode":"    public void testGetValue() {\n        DefaultKeyedValues2D<String, String> d = new DefaultKeyedValues2D<>();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-03-09 01:06:45","endLine":76,"groupId":"4011","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/27/0bf8d91c72a8bf844377639f2931c792ebb88d.src","preCode":"    public void testGetValue() {\n        DefaultKeyedValues2D d = new DefaultKeyedValues2D();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":5,"curCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset<String, String> d\n                = new DefaultMultiValueCategoryDataset<>();\n        List<Integer> values = new ArrayList<>();\n        values.add(1);\n        values.add(2);\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(1.5, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-03-09 11:01:25","endLine":85,"groupId":"10664","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/72/c2d32703255220204d3d2588c709caa17e6510.src","preCode":"    public void testGetValue() {\n        DefaultMultiValueCategoryDataset d\n                = new DefaultMultiValueCategoryDataset();\n        List<Number> values = new ArrayList<>();\n        values.add(1);\n        values.add(2);\n        d.add(values, \"R1\", \"C1\");\n        assertEquals(1.5, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-03-09 01:06:45","commitOrder":5,"curCode":"    public void testGetValue() {\n        DefaultKeyedValues2D<String, String> d = new DefaultKeyedValues2D<>();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","date":"2020-03-09 01:06:45","endLine":76,"groupId":"10664","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/27/0bf8d91c72a8bf844377639f2931c792ebb88d.src","preCode":"    public void testGetValue() {\n        DefaultKeyedValues2D<String, String> d = new DefaultKeyedValues2D<>();\n        d.addValue(1.0, \"R1\", \"C1\");\n        assertEquals(1.0, d.getValue(\"R1\", \"C1\"));\n        boolean pass = false;\n        try {\n            d.getValue(\"XX\", \"C1\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            d.getValue(\"R1\", \"XX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"156d2f017215afd500475c72ac2d95595994282c","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-09 11:01:25","modifiedFileCount":"20","status":"M","submitter":"David Gilbert"}]
