[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertTrue(item1.equals(item2));\n    }\n","date":"2016-02-19 15:40:32","endLine":112,"groupId":"1937","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/21/efc101e2bc8bfc7a8cc8231ab1b83717add980.src","preCode":"    public void testEquals() {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = (OHLCItem) item1.clone();\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","date":"2016-02-19 15:40:32","endLine":124,"groupId":"1940","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/21/efc101e2bc8bfc7a8cc8231ab1b83717add980.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = (OHLCItem) item1.clone();\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-21 13:53:14","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertTrue(item1.equals(item2));\n    }\n","date":"2016-02-19 15:40:32","endLine":112,"groupId":"101008","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/21/efc101e2bc8bfc7a8cc8231ab1b83717add980.src","preCode":"    public void testEquals() {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n        assertTrue(item2.equals(item1));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.0, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.0, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.0, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.0);\n        assertTrue(item1.equals(item2));\n\n        \r\n        item1 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertFalse(item1.equals(item2));\n        item2 = new OHLCItem(new Year(2007), 2.2, 4.4, 1.1, 3.3);\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"},{"authorDate":"2020-03-21 13:53:14","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = CloneUtils.clone(item1);\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","date":"2020-03-21 13:53:14","endLine":120,"groupId":"101008","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f9/ce3a9f74fb9183342eebd3648eba080f531a0e.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        OHLCItem item1 = new OHLCItem(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCItem item2 = (OHLCItem) item1.clone();\n        assertTrue(item1 != item2);\n        assertTrue(item1.getClass() == item2.getClass());\n        assertTrue(item1.equals(item2));\n    }\n","realPath":"src/test/java/org/jfree/data/time/ohlc/OHLCItemTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"ffd1e8f7d00013d5ed88e7454f80c4c55277bb61","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 13:53:14","modifiedFileCount":"13","status":"M","submitter":"David Gilbert"}]
