[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        kv2D1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtilities.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2016-02-19 15:40:32","endLine":121,"groupId":"1943","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/9c/8cf4c7ababf219973d8f272b5631ce91b213f8.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        kv2D1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtilities.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtilities.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2016-02-19 15:40:32","endLine":82,"groupId":"4165","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/df/b77ccd5fbfb3f1a56cad84adbe10a750e2b8db.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtilities.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        kv2D1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2017-05-06 16:41:21","endLine":121,"groupId":"1943","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ec/f04a5fc72d0cf032b52116eebdba0a2653d8cd.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        kv2D1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtilities.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2017-05-06 16:41:21","endLine":82,"groupId":"4165","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5b/44cab954e8c0d7675a408ed22b678e030575bb.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtilities.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2020-02-25 11:46:26","commitOrder":3,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2020-02-25 11:46:26","endLine":112,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/da/b6aa9df7addf515f29a75f6a909cf88398946d.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        kv2D1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":3,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2017-05-06 16:41:21","endLine":82,"groupId":"4165","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5b/44cab954e8c0d7675a408ed22b678e030575bb.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"}],"commitId":"fc43f0bd633d91b12f72d4638f74fe9db9f1ec0a","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 11:46:26","modifiedFileCount":"6","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2020-03-09 01:06:45","commitOrder":4,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = (DefaultKeyedValues2D) \n                TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2020-03-09 01:06:45","endLine":112,"groupId":"2623","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/27/0bf8d91c72a8bf844377639f2931c792ebb88d.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D kv2D1 = new DefaultKeyedValues2D();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D kv2D2 = (DefaultKeyedValues2D) \n                TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":4,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2017-05-06 16:41:21","endLine":82,"groupId":"4165","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5b/44cab954e8c0d7675a408ed22b678e030575bb.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2020-03-21 22:57:48","commitOrder":5,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2020-03-21 22:57:48","endLine":112,"groupId":"2623","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/95/918b5fac75b5d26b39bec28723c3508ec0a801.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = (DefaultKeyedValues2D) \n                TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":5,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2017-05-06 16:41:21","endLine":82,"groupId":"4165","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5b/44cab954e8c0d7675a408ed22b678e030575bb.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"}],"commitId":"8b7b0fe7073c12ea76f13aa33784d9c192036f15","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-21 22:57:48","modifiedFileCount":"11","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-28 17:12:15","codes":[{"authorDate":"2020-03-21 22:57:48","commitOrder":6,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2020-03-21 22:57:48","endLine":112,"groupId":"2623","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/95/918b5fac75b5d26b39bec28723c3508ec0a801.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2020-03-28 17:12:15","commitOrder":6,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(234.2, \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(345.9, \"Row2\", \"Col1\");\n        d1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2020-03-28 17:12:15","endLine":78,"groupId":"3013","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/abf965fb2522d37b5277ae61a64e7b7546948d.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(new Double(234.2), \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(new Double(345.9), \"Row2\", \"Col1\");\n        d1.addValue(new Double(452.7), \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = (DefaultKeyedValues2DDataset) \n                TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"906d58925f98a0e5d6e2f2470a3a64f693fd8d7c","commitMessage":"@@@Fix Netbeans warnings.","date":"2020-03-28 17:12:15","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-09-26 16:34:54","codes":[{"authorDate":"2020-03-21 22:57:48","commitOrder":7,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","date":"2020-03-21 22:57:48","endLine":112,"groupId":"101065","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/95/918b5fac75b5d26b39bec28723c3508ec0a801.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2D<String, String> kv2D1 = new DefaultKeyedValues2D<>();\n        kv2D1.addValue(234.2, \"Row1\", \"Col1\");\n        kv2D1.addValue(null, \"Row1\", \"Col2\");\n        kv2D1.addValue(345.9, \"Row2\", \"Col1\");\n        kv2D1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2D<String, String> kv2D2 = TestUtils.serialised(kv2D1);\n        assertEquals(kv2D1, kv2D2);\n    }\n","realPath":"src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2020-09-26 16:34:54","commitOrder":7,"curCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset<String, String> d1 = new DefaultKeyedValues2DDataset<>();\n        d1.addValue(234.2, \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(345.9, \"Row2\", \"Col1\");\n        d1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset<String, String> d2 = TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","date":"2020-09-26 16:34:54","endLine":80,"groupId":"101065","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/16e431ee004e6819f70ee18f9e1b9d60b6334a.src","preCode":"    public void testSerialization() {\n        DefaultKeyedValues2DDataset d1 = new DefaultKeyedValues2DDataset();\n        d1.addValue(234.2, \"Row1\", \"Col1\");\n        d1.addValue(null, \"Row1\", \"Col2\");\n        d1.addValue(345.9, \"Row2\", \"Col1\");\n        d1.addValue(452.7, \"Row2\", \"Col2\");\n\n        DefaultKeyedValues2DDataset d2 = TestUtils.serialised(d1);\n        assertEquals(d1, d2);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DefaultKeyedValues2DDatasetTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"fe97617876eb2c80f28173766ede2e4c6c18b6fd","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-09-26 16:34:54","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"}]
