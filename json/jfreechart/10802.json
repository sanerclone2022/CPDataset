[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetRangeLowerBound() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeLowerBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":425,"groupId":"4111","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRangeLowerBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/86/18416dc4d09dabff62741f5a22ecfb3fc53592.src","preCode":"    public void testGetRangeLowerBound() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeLowerBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetRangeUpperBound() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(5.0, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(5.0, dataset.getRangeUpperBound(true), EPSILON);\n    }\n","date":"2016-02-19 15:40:32","endLine":464,"groupId":"2421","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRangeUpperBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/86/18416dc4d09dabff62741f5a22ecfb3fc53592.src","preCode":"    public void testGetRangeUpperBound() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(5.0, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(5.0, dataset.getRangeUpperBound(true), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetRangeLowerBound() {\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        \r\n        XYSeries<String> series = new XYSeries<>(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeLowerBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        XYSeries<String> s2 = new XYSeries<>(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":413,"groupId":"10802","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRangeLowerBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/34/14ccc9db42524c146e12758afe91d86cb0c805.src","preCode":"    public void testGetRangeLowerBound() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeLowerBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(-1.1, dataset.getRangeLowerBound(false), EPSILON);\n        assertEquals(-1.1, dataset.getRangeLowerBound(true), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetRangeUpperBound() {\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        \r\n        XYSeries<String> series = new XYSeries<>(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        XYSeries<String> s2 = new XYSeries<>(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(5.0, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(5.0, dataset.getRangeUpperBound(true), EPSILON);\n    }\n","date":"2020-03-22 19:36:23","endLine":452,"groupId":"10802","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRangeUpperBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/34/14ccc9db42524c146e12758afe91d86cb0c805.src","preCode":"    public void testGetRangeUpperBound() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)));\n        assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n\n        series.add(-1.0, -1.1);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        series.add(0.0, null);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(1.1, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(1.1, dataset.getRangeUpperBound(true), EPSILON);\n        \n        s2.add(2.0, 5.0);\n        assertEquals(5.0, dataset.getRangeUpperBound(false), EPSILON);\n        assertEquals(5.0, dataset.getRangeUpperBound(true), EPSILON);\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
