[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractCategoryItemLabelGenerator that\n            = (AbstractCategoryItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.dateFormat, that.dateFormat)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.numberFormat, that.numberFormat)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2016-02-19 16:24:22","endLine":287,"groupId":"518","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/8e/39ed8581dd9fe094638c296527a0dc1401538e.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractCategoryItemLabelGenerator that\n            = (AbstractCategoryItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.dateFormat, that.dateFormat)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.numberFormat, that.numberFormat)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractPieItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractPieItemLabelGenerator that\n                = (AbstractPieItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!this.numberFormat.equals(that.numberFormat)) {\n            return false;\n        }\n        if (!this.percentFormat.equals(that.percentFormat)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":206,"groupId":"3398","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/0a7208398ac9952f549301b97cf0c89b60dde2.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractPieItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractPieItemLabelGenerator that\n                = (AbstractPieItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!this.numberFormat.equals(that.numberFormat)) {\n            return false;\n        }\n        if (!this.percentFormat.equals(that.percentFormat)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractCategoryItemLabelGenerator that\n            = (AbstractCategoryItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.dateFormat, that.dateFormat)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.numberFormat, that.numberFormat)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2017-03-08 01:39:11","endLine":287,"groupId":"2345","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/92/4ec417f4e79af071609410bb23504ab4efbfb0.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractCategoryItemLabelGenerator that\n            = (AbstractCategoryItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.dateFormat, that.dateFormat)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.numberFormat, that.numberFormat)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractPieItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractPieItemLabelGenerator that\n                = (AbstractPieItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!this.numberFormat.equals(that.numberFormat)) {\n            return false;\n        }\n        if (!this.percentFormat.equals(that.percentFormat)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":206,"groupId":"3398","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/0a7208398ac9952f549301b97cf0c89b60dde2.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractPieItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractPieItemLabelGenerator that\n                = (AbstractPieItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!this.numberFormat.equals(that.numberFormat)) {\n            return false;\n        }\n        if (!this.percentFormat.equals(that.percentFormat)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"N"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2020-07-01 12:16:46","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractCategoryItemLabelGenerator that\n            = (AbstractCategoryItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!Objects.equals(this.dateFormat, that.dateFormat)) {\n            return false;\n        }\n        if (!Objects.equals(this.numberFormat, that.numberFormat)) {\n            return false;\n        }\n        return true;\n    }\n","date":"2020-07-01 12:16:46","endLine":277,"groupId":"101301","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/aa/4029413d5a73bce2412573294913043fef4997.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractCategoryItemLabelGenerator that\n            = (AbstractCategoryItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.dateFormat, that.dateFormat)) {\n            return false;\n        }\n        if (!ObjectUtils.equal(this.numberFormat, that.numberFormat)) {\n            return false;\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractPieItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractPieItemLabelGenerator that\n                = (AbstractPieItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!this.numberFormat.equals(that.numberFormat)) {\n            return false;\n        }\n        if (!this.percentFormat.equals(that.percentFormat)) {\n            return false;\n        }\n        return true;\n\n    }\n","date":"2016-02-19 16:24:22","endLine":206,"groupId":"101301","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/7b/0a7208398ac9952f549301b97cf0c89b60dde2.src","preCode":"    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractPieItemLabelGenerator)) {\n            return false;\n        }\n\n        AbstractPieItemLabelGenerator that\n                = (AbstractPieItemLabelGenerator) obj;\n        if (!this.labelFormat.equals(that.labelFormat)) {\n            return false;\n        }\n        if (!this.numberFormat.equals(that.numberFormat)) {\n            return false;\n        }\n        if (!this.percentFormat.equals(that.percentFormat)) {\n            return false;\n        }\n        return true;\n\n    }\n","realPath":"src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"N"}],"commitId":"1955cc38345a5ea52879eb186f09cf2e930bd9e6","commitMessage":"@@@Merge pull request #163 from simon04/use-Objects\n\nUse Objects.hashCode.  Objects.equals.  CloneUtils.clone.  CloneUtils.cloneList.  remove ObjectUtils","date":"2020-07-01 12:16:46","modifiedFileCount":"130","status":"M","submitter":"David Gilbert"}]
