[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetRangeBounds() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true));\n\n        series.add(-1.0, -1.1);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        series.add(0.0, null);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        s2.add(2.0, 5.0);\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true));\n    }\n","date":"2016-02-19 15:40:32","endLine":386,"groupId":"2419","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/86/18416dc4d09dabff62741f5a22ecfb3fc53592.src","preCode":"    public void testGetRangeBounds() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true));\n\n        series.add(-1.0, -1.1);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        series.add(0.0, null);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        s2.add(2.0, 5.0);\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testGetRangeBounds() {\n        TimeSeriesCollection dataset = new TimeSeriesCollection();\n        \n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        dataset.addSeries(s1);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        s1.add(new Year(2012), 1.0);\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2013), -1.0);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2014), null);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        \r\n        TimeSeries s2 = new TimeSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 5.0);\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true));\n        \n        dataset.removeAllSeries();\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s1 = new TimeSeries(\"s1\");\n        s2 = new TimeSeries(\"s2\");\n        dataset.addSeries(s1);\n        dataset.addSeries(s2);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 100.0);\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true));\n    }\n","date":"2016-02-19 15:40:32","endLine":450,"groupId":"87","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ba/8ff3fa504763e787e5110a87e475ca9802fe95.src","preCode":"    public void testGetRangeBounds() {\n        TimeSeriesCollection dataset = new TimeSeriesCollection();\n        \n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        dataset.addSeries(s1);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        s1.add(new Year(2012), 1.0);\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2013), -1.0);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2014), null);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        \r\n        TimeSeries s2 = new TimeSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 5.0);\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true));\n        \n        dataset.removeAllSeries();\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s1 = new TimeSeries(\"s1\");\n        s2 = new TimeSeries(\"s2\");\n        dataset.addSeries(s1);\n        dataset.addSeries(s2);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 100.0);\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void testGetRangeBounds() {\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        \n        \r\n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        XYSeries<String> series = new XYSeries<String>(\"S1\");\n        dataset.addSeries(series);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true));\n\n        series.add(-1.0, -1.1);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        series.add(0.0, null);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        XYSeries<String> s2 = new XYSeries<String>(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        s2.add(2.0, 5.0);\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true));\n    }\n","date":"2020-03-22 19:36:23","endLine":374,"groupId":"2419","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/34/14ccc9db42524c146e12758afe91d86cb0c805.src","preCode":"    public void testGetRangeBounds() {\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        \n        \r\n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        XYSeries series = new XYSeries(\"S1\");\n        dataset.addSeries(series);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true));\n\n        series.add(-1.0, -1.1);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        series.add(0.0, null);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        XYSeries s2 = new XYSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        s2.add(2.0, 5.0);\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testGetRangeBounds() {\n        TimeSeriesCollection dataset = new TimeSeriesCollection();\n        \n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        dataset.addSeries(s1);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        s1.add(new Year(2012), 1.0);\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2013), -1.0);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2014), null);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        \r\n        TimeSeries s2 = new TimeSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 5.0);\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true));\n        \n        dataset.removeAllSeries();\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s1 = new TimeSeries(\"s1\");\n        s2 = new TimeSeries(\"s2\");\n        dataset.addSeries(s1);\n        dataset.addSeries(s2);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 100.0);\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true));\n    }\n","date":"2016-02-19 15:40:32","endLine":450,"groupId":"87","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ba/8ff3fa504763e787e5110a87e475ca9802fe95.src","preCode":"    public void testGetRangeBounds() {\n        TimeSeriesCollection dataset = new TimeSeriesCollection();\n        \n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        dataset.addSeries(s1);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        s1.add(new Year(2012), 1.0);\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2013), -1.0);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2014), null);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        \r\n        TimeSeries s2 = new TimeSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 5.0);\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true));\n        \n        dataset.removeAllSeries();\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s1 = new TimeSeries(\"s1\");\n        s2 = new TimeSeries(\"s2\");\n        dataset.addSeries(s1);\n        dataset.addSeries(s2);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 100.0);\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"N"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 23:07:02","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":3,"curCode":"    public void testGetRangeBounds() {\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        \n        \r\n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        XYSeries<String> series = new XYSeries<String>(\"S1\");\n        dataset.addSeries(series);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true));\n\n        series.add(-1.0, -1.1);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        series.add(0.0, null);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        XYSeries<String> s2 = new XYSeries<String>(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        s2.add(2.0, 5.0);\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true));\n    }\n","date":"2020-03-22 19:36:23","endLine":374,"groupId":"10801","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/34/14ccc9db42524c146e12758afe91d86cb0c805.src","preCode":"    public void testGetRangeBounds() {\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        \n        \r\n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        XYSeries<String> series = new XYSeries<String>(\"S1\");\n        dataset.addSeries(series);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        series.add(1.0, 1.1);\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true));\n\n        series.add(-1.0, -1.1);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        series.add(0.0, null);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        XYSeries<String> s2 = new XYSeries<String>(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true));\n        \n        s2.add(2.0, 5.0);\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"N"},{"authorDate":"2020-03-22 23:07:02","commitOrder":3,"curCode":"    public void testGetRangeBounds() {\n        TimeSeriesCollection<String> dataset = new TimeSeriesCollection<>();\n        \n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        TimeSeries<String> s1 = new TimeSeries<>(\"S1\");\n        dataset.addSeries(s1);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        s1.add(new Year(2012), 1.0);\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2013), -1.0);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2014), null);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        \r\n        TimeSeries<String> s2 = new TimeSeries<>(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 5.0);\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true));\n        \n        dataset.removeAllSeries();\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s1 = new TimeSeries<>(\"s1\");\n        s2 = new TimeSeries<>(\"s2\");\n        dataset.addSeries(s1);\n        dataset.addSeries(s2);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 100.0);\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true));\n    }\n","date":"2020-03-22 23:07:02","endLine":441,"groupId":"10801","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRangeBounds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/bc/13f64ca61b53eb282f5c158754fb1d2e085b67.src","preCode":"    public void testGetRangeBounds() {\n        TimeSeriesCollection dataset = new TimeSeriesCollection();\n        \n        \r\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        \r\n        TimeSeries s1 = new TimeSeries(\"S1\");\n        dataset.addSeries(s1);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n\n        \r\n        s1.add(new Year(2012), 1.0);\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2013), -1.0);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        s1.add(new Year(2014), null);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        \r\n        TimeSeries s2 = new TimeSeries(\"S2\");\n        dataset.addSeries(s2);\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 5.0);\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true));\n        \n        dataset.removeAllSeries();\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s1 = new TimeSeries(\"s1\");\n        s2 = new TimeSeries(\"s2\");\n        dataset.addSeries(s1);\n        dataset.addSeries(s2);\n        assertNull(dataset.getRangeBounds(false));\n        assertNull(dataset.getRangeBounds(true));\n        \n        s2.add(new Year(2014), 100.0);\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false));\n        assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true));\n    }\n","realPath":"src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"65e1b052b3694b30d707b5b7ed88e1f73c68b003","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 23:07:02","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"}]
