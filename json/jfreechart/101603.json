[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void paintBar(Graphics2D g2, BarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.BLUE;\n            c1 = Color.BLUE.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxY(), Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()\n            ) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","date":"2016-02-19 16:24:22","endLine":193,"groupId":"2371","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"paintBar","params":"(Graphics2Dg2@BarRendererrenderer@introw@intcolumn@RectangularShapebar@RectangleEdgebase)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/03/d2a563ae352756594bcac47c6fb193e5197308.src","preCode":"    public void paintBar(Graphics2D g2, BarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.BLUE;\n            c1 = Color.BLUE.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxY(), Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()\n            ) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void paintBar(Graphics2D g2, XYBarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.blue;\n            c1 = Color.blue.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.white);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.white, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxX(), Color.white);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.white, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","date":"2016-02-19 16:24:22","endLine":191,"groupId":"2371","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"paintBar","params":"(Graphics2Dg2@XYBarRendererrenderer@introw@intcolumn@RectangularShapebar@RectangleEdgebase)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/06/e867f544aaf32c899ac21f39b1fd1a5c88955b.src","preCode":"    public void paintBar(Graphics2D g2, XYBarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.blue;\n            c1 = Color.blue.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.white);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.white, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxX(), Color.white);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.white, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 02:13:36","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public void paintBar(Graphics2D g2, BarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.BLUE;\n            c1 = Color.BLUE.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxY(), Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()\n            ) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","date":"2016-02-19 16:24:22","endLine":193,"groupId":"101603","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"paintBar","params":"(Graphics2Dg2@BarRendererrenderer@introw@intcolumn@RectangularShapebar@RectangleEdgebase)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/03/d2a563ae352756594bcac47c6fb193e5197308.src","preCode":"    public void paintBar(Graphics2D g2, BarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.BLUE;\n            c1 = Color.BLUE.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxY(), Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()\n            ) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"N"},{"authorDate":"2017-05-06 02:13:36","commitOrder":2,"curCode":"    public void paintBar(Graphics2D g2, XYBarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.BLUE;\n            c1 = Color.BLUE.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxX(), Color.WHITE);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","date":"2017-05-06 02:13:36","endLine":191,"groupId":"101603","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"paintBar","params":"(Graphics2Dg2@XYBarRendererrenderer@introw@intcolumn@RectangularShapebar@RectangleEdgebase)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/aa/6d30bd4c84ac69bff1bb4357ea6ad5584b1326.src","preCode":"    public void paintBar(Graphics2D g2, XYBarRenderer renderer, int row,\n            int column, RectangularShape bar, RectangleEdge base) {\n\n        Paint itemPaint = renderer.getItemPaint(row, column);\n\n        Color c0, c1;\n        if (itemPaint instanceof Color) {\n            c0 = (Color) itemPaint;\n            c1 = c0.brighter();\n        }\n        else if (itemPaint instanceof GradientPaint) {\n            GradientPaint gp = (GradientPaint) itemPaint;\n            c0 = gp.getColor1();\n            c1 = gp.getColor2();\n        }\n        else {\n            c0 = Color.blue;\n            c1 = Color.blue.brighter();\n        }\n\n        \r\n        \r\n        if (c0.getAlpha() == 0) {\n            return;\n        }\n\n        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {\n            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),\n                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.white);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,\n                    Color.white, (float) regions[1].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,\n                    (float) regions[2].getMaxX(), 0.0f, c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,\n                     (float) regions[3].getMaxX(), 0.0f, c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n        }\n        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {\n            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,\n                    this.g3);\n            GradientPaint gp = new GradientPaint(0.0f,\n                    (float) regions[0].getMinY(), c0, 0.0f,\n                    (float) regions[0].getMaxX(), Color.white);\n            g2.setPaint(gp);\n            g2.fill(regions[0]);\n\n            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),\n                    Color.white, 0.0f, (float) regions[1].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[1]);\n\n            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,\n                    0.0f, (float) regions[2].getMaxY(), c1);\n            g2.setPaint(gp);\n            g2.fill(regions[2]);\n\n            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,\n                     0.0f, (float) regions[3].getMaxY(), c0);\n            g2.setPaint(gp);\n            g2.fill(regions[3]);\n\n        }\n\n        \r\n        if (renderer.isDrawBarOutline()) {\n            Stroke stroke = renderer.getItemOutlineStroke(row, column);\n            Paint paint = renderer.getItemOutlinePaint(row, column);\n            if (stroke != null && paint != null) {\n                g2.setStroke(stroke);\n                g2.setPaint(paint);\n                g2.draw(bar);\n            }\n        }\n\n    }\n","realPath":"src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"b1a63081acba857158027eb01f208a20dea3b92f","commitMessage":"@@@Update constants.","date":"2017-05-06 02:13:36","modifiedFileCount":"3","status":"M","submitter":"David Gilbert"}]
