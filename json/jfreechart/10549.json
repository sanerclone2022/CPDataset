[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.red);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.red);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImage(JFreeChart.INFO.getLogo());\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImage(JFreeChart.INFO.getLogo());\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","date":"2016-02-19 15:40:32","endLine":197,"groupId":"3254","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/24/24c7c2ed822aaf3e764fbf4c40cfa7fd8ccfa2.src","preCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.red);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.red);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImage(JFreeChart.INFO.getLogo());\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImage(JFreeChart.INFO.getLogo());\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","date":"2016-02-19 15:40:32","endLine":211,"groupId":"3254","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/24/24c7c2ed822aaf3e764fbf4c40cfa7fd8ccfa2.src","preCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-03-08 01:39:11","commitOrder":2,"curCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.red);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.red);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertEquals(chart1, chart2);\n\n\r\n\r\n\r\n\r\n\r\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","date":"2017-03-08 01:39:11","endLine":197,"groupId":"3254","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/68/9cc40f4ece4e3342a31314a088c0c2396e9ff6.src","preCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.red);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.red);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImage(JFreeChart.INFO.getLogo());\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImage(JFreeChart.INFO.getLogo());\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","date":"2016-02-19 15:40:32","endLine":211,"groupId":"3254","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/24/24c7c2ed822aaf3e764fbf4c40cfa7fd8ccfa2.src","preCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"}],"commitId":"949365da759b3ea009185090fb4b27e75d768793","commitMessage":"@@@Incorporate required JCommon classes directly.","date":"2017-03-08 01:39:11","modifiedFileCount":"462","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2017-05-06 13:49:04","commitOrder":3,"curCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.RED);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.RED);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.BLUE));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.BLUE));\n        assertEquals(chart1, chart2);\n\n\r\n\r\n\r\n\r\n\r\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","date":"2017-05-06 13:49:04","endLine":197,"groupId":"3254","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/71/22cb7fe30342c2f77b364173002e813441ee16.src","preCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.red);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.red);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertEquals(chart1, chart2);\n\n\r\n\r\n\r\n\r\n\r\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":3,"curCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","date":"2016-02-19 15:40:32","endLine":211,"groupId":"3254","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/24/24c7c2ed822aaf3e764fbf4c40cfa7fd8ccfa2.src","preCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"}],"commitId":"20617d5b4ff1e14897eeb8d1cbcea11bb4656ab1","commitMessage":"@@@Update constants.","date":"2017-05-06 13:49:04","modifiedFileCount":"73","status":"M","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2021-02-28 00:11:48","commitOrder":4,"curCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.RED);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.RED);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.BLUE));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.BLUE));\n        assertEquals(chart1, chart2);\n\n\r\n\r\n\r\n\r\n\r\n\n        \r\n        chart1.setBackgroundImageAlignment(RectangleAlignment.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(RectangleAlignment.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","date":"2021-02-28 00:11:48","endLine":187,"groupId":"10549","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/0c/30e13dfc1f72453018f5ccd878802d3bf7a310.src","preCode":"    public void testEquals() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        assertEquals(chart1, chart2);\n        assertEquals(chart2, chart1);\n\n        \r\n        chart1.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertFalse(chart1.equals(chart2));\n        chart2.setRenderingHints(new RenderingHints(\n                RenderingHints.KEY_TEXT_ANTIALIASING,\n                RenderingHints.VALUE_TEXT_ANTIALIAS_ON));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderVisible(true);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderVisible(true);\n        assertEquals(chart1, chart2);\n\n        \r\n        BasicStroke s = new BasicStroke(2.0f);\n        chart1.setBorderStroke(s);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderStroke(s);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBorderPaint(Color.RED);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBorderPaint(Color.RED);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertFalse(chart1.equals(chart2));\n        chart2.setPadding(new RectangleInsets(1, 2, 3, 4));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setTitle(\"XYZ\");\n        assertFalse(chart1.equals(chart2));\n        chart2.setTitle(\"XYZ\");\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertFalse(chart1.equals(chart2));\n        chart2.addSubtitle(new TextTitle(\"Subtitle\"));\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new RingPlot(), false);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.BLUE));\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,\n                3.0f, 4.0f, Color.BLUE));\n        assertEquals(chart1, chart2);\n\n\r\n\r\n\r\n\r\n\r\n\n        \r\n        chart1.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlignment(Align.BOTTOM_LEFT);\n        assertEquals(chart1, chart2);\n\n        \r\n        chart1.setBackgroundImageAlpha(0.1f);\n        assertFalse(chart1.equals(chart2));\n        chart2.setBackgroundImageAlpha(0.1f);\n        assertEquals(chart1, chart2);\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":4,"curCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","date":"2016-02-19 15:40:32","endLine":211,"groupId":"10549","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/24/24c7c2ed822aaf3e764fbf4c40cfa7fd8ccfa2.src","preCode":"    public void testEquals2() {\n        JFreeChart chart1 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), true);\n        JFreeChart chart2 = new JFreeChart(\"Title\",\n                new Font(\"SansSerif\", Font.PLAIN, 12), new PiePlot(), false);\n        assertFalse(chart1.equals(chart2));\n        assertFalse(chart2.equals(chart1));\n    }\n","realPath":"src/test/java/org/jfree/chart/JFreeChartTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"}],"commitId":"8e1cbdf1ab13892f6a1a9af83223ddf062319f87","commitMessage":"@@@Replace Align class with RectangleAlignment enum.","date":"2021-02-28 00:11:48","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"}]
