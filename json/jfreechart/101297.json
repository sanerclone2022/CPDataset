[{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testFindYValue() {\n        XYSeries series = new XYSeries(\"S1\");\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(6.25, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(7.5, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","date":"2017-05-06 16:37:24","endLine":1430,"groupId":"3163","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindYValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testFindYValue() {\n        XYSeries series = new XYSeries(\"S1\");\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(6.25, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(7.5, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1413,"status":"B"},{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testFindYValueWithDuplicates() {\n        XYSeries series = new XYSeries(\"S1\", true, true);\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(1.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","date":"2017-05-06 16:37:24","endLine":1484,"groupId":"3163","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindYValueWithDuplicates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testFindYValueWithDuplicates() {\n        XYSeries series = new XYSeries(\"S1\", true, true);\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(1.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1462,"status":"B"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-22 23:07:02","codes":[{"authorDate":"2020-03-22 23:07:02","commitOrder":2,"curCode":"    public void testFindYValue() {\n        XYSeries<String> series = new XYSeries<>(\"S1\");\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(6.25, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(7.5, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","date":"2020-03-22 23:07:02","endLine":1418,"groupId":"101297","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindYValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/e2d9321cd120a5249d47fee098bc7804298dc0.src","preCode":"    public void testFindYValue() {\n        XYSeries series = new XYSeries(\"S1\");\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(6.25, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(7.5, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1401,"status":"M"},{"authorDate":"2020-03-22 23:07:02","commitOrder":2,"curCode":"    public void testFindYValueWithDuplicates() {\n        XYSeries<String> series = new XYSeries<>(\"S1\", true, true);\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(1.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","date":"2020-03-22 23:07:02","endLine":1472,"groupId":"101297","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindYValueWithDuplicates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/22/e2d9321cd120a5249d47fee098bc7804298dc0.src","preCode":"    public void testFindYValueWithDuplicates() {\n        XYSeries series = new XYSeries(\"S1\", true, true);\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));\n        \n        series.add(1.0, 5.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(1.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));\n        \n        series.add(2.0, 10.0);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));\n        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);\n        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);\n        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":1450,"status":"M"}],"commitId":"65e1b052b3694b30d707b5b7ed88e1f73c68b003","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 23:07:02","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"}]
