[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":100,"groupId":"1523","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/04/a60a0cae0f956850d02acc55468e67a2d348a2.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization() {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2016-02-19 15:40:32","endLine":115,"groupId":"1523","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/04/a60a0cae0f956850d02acc55468e67a2d348a2.src","preCode":"    public void testSerialization() {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","date":"2016-02-19 15:40:32","endLine":100,"groupId":"1523","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/04/a60a0cae0f956850d02acc55468e67a2d348a2.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization() {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2017-05-06 16:41:21","endLine":115,"groupId":"1523","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/57/9fd06a3d41bd4b5156f9887b82434abfbe18ef.src","preCode":"    public void testSerialization() {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtilities.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 13:13:37","codes":[{"authorDate":"2020-03-20 13:13:37","commitOrder":3,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity<String> e1 = new PieSectionEntity<>(\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \n                new DefaultPieDataset<String>(), 0, 1, \"Key\", \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","date":"2020-03-20 13:13:37","endLine":97,"groupId":"1523","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/94/393d14abc3d9d31bac9d513e672f45edafa8e4.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-03-20 13:13:37","commitOrder":3,"curCode":"    public void testSerialization() {\n        PieSectionEntity<String> e1 = new PieSectionEntity<>(\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \n                new DefaultPieDataset<String>(), 0, 1, \"Key\", \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-03-20 13:13:37","endLine":112,"groupId":"1523","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/94/393d14abc3d9d31bac9d513e672f45edafa8e4.src","preCode":"    public void testSerialization() {\n        PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,\n                2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, \"Key\",\n                \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"291359cafd030333462b647743fa0e7925adfd2a","commitMessage":"@@@Fix NetBeans warnings.","date":"2020-03-20 13:13:37","modifiedFileCount":"5","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 14:42:21","codes":[{"authorDate":"2020-03-22 14:42:21","commitOrder":4,"curCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity<String> e1 = new PieSectionEntity<>(\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \n                new DefaultPieDataset<String>(), 0, 1, \"Key\", \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = CloneUtils.clone(c1);\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","date":"2020-03-22 14:42:21","endLine":98,"groupId":"10654","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f7/5b9b8c2f8613f2a1306bd37d67f89c8830b666.src","preCode":"    public void testCloning() throws CloneNotSupportedException {\n        PieSectionEntity<String> e1 = new PieSectionEntity<>(\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \n                new DefaultPieDataset<String>(), 0, 1, \"Key\", \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) c1.clone();\n        assertTrue(c1 != c2);\n        assertTrue(c1.getClass() == c2.getClass());\n        assertTrue(c1.equals(c2));\n\n        \r\n        c1.clear();\n        assertFalse(c1.equals(c2));\n        c2.clear();\n        assertTrue(c1.equals(c2));\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2020-03-22 14:42:21","commitOrder":4,"curCode":"    public void testSerialization() {\n        PieSectionEntity<String> e1 = new PieSectionEntity<>(\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \n                new DefaultPieDataset<String>(), 0, 1, \"Key\", \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","date":"2020-03-22 14:42:21","endLine":112,"groupId":"10654","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f7/5b9b8c2f8613f2a1306bd37d67f89c8830b666.src","preCode":"    public void testSerialization() {\n        PieSectionEntity<String> e1 = new PieSectionEntity<>(\n                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), \n                new DefaultPieDataset<String>(), 0, 1, \"Key\", \"ToolTip\", \"URL\");\n        StandardEntityCollection c1 = new StandardEntityCollection();\n        c1.add(e1);\n        StandardEntityCollection c2 = (StandardEntityCollection) \n                TestUtils.serialised(c1);\n        assertEquals(c1, c2);\n    }\n","realPath":"src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"68e337a483dbe397321c0c6e41ccdfbfbf6cfa7e","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-22 14:42:21","modifiedFileCount":"9","status":"M","submitter":"David Gilbert"}]
