[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":758,"groupId":"410","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"vetoableChange","params":"(PropertyChangeEvente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/6c/fd88f5c892fc3584259d19e4da9ad1fb9b982e.src","preCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/xy/XYSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":739,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":776,"groupId":"410","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"vetoableChange","params":"(PropertyChangeEvente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c6/314c80161891f6ec15a5c582b3aa9bf7277482.src","preCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimeSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":2,"curCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series<S> s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        S key = (S) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","date":"2020-03-22 19:36:23","endLine":760,"groupId":"101990","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"vetoableChange","params":"(PropertyChangeEvente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c5/763c3a9735b287c1ae21e4b24fef7f0a740671.src","preCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/xy/XYSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":741,"status":"M"},{"authorDate":"2016-02-19 16:24:22","commitOrder":2,"curCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":776,"groupId":"101990","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"vetoableChange","params":"(PropertyChangeEvente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c6/314c80161891f6ec15a5c582b3aa9bf7277482.src","preCode":"    public void vetoableChange(PropertyChangeEvent e)\n            throws PropertyVetoException {\n        \r\n        if (!\"Key\".equals(e.getPropertyName())) {\n            return;\n        }\n        \n        \r\n        \r\n        Series s = (Series) e.getSource();\n        if (getSeriesIndex(s.getKey()) == -1) {\n            throw new IllegalStateException(\"Receiving events from a series \" +\n                    \"that does not belong to this collection.\");\n        }\n        \r\n        Comparable key = (Comparable) e.getNewValue();\n        if (getSeriesIndex(key) >= 0) {\n            throw new PropertyVetoException(\"Duplicate key2\", e);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/time/TimeSeriesCollection.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"N"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
