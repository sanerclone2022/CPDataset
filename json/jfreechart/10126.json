[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtilities.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2016-02-19 15:40:32","endLine":770,"groupId":"885","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/5d/ba2660ab247df159bcf24708fa0164bfc636ae.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtilities.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtilities.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2016-02-19 15:40:32","endLine":776,"groupId":"3943","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/70/cba9d9a58f027f9c66ccb715d416e7e51d4048.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtilities.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2017-05-06 16:41:21","codes":[{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2017-05-06 16:41:21","endLine":761,"groupId":"885","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/21/424cff9a56b8dc1852a8490086de5493756838.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtilities.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":748,"status":"M"},{"authorDate":"2017-05-06 16:41:21","commitOrder":2,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2017-05-06 16:41:21","endLine":776,"groupId":"3943","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/96/7fdb344449698e131ce5c79c7e97c2f97c5bee.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtilities.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"M"}],"commitId":"ff45162a076ded1389cb9a704ddeb2607d1dcf22","commitMessage":"@@@Rename TestUtilities --> TestUtils.","date":"2017-05-06 16:41:21","modifiedFileCount":"296","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-09 01:06:45","codes":[{"authorDate":"2017-05-06 16:41:21","commitOrder":3,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2017-05-06 16:41:21","endLine":761,"groupId":"885","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/21/424cff9a56b8dc1852a8490086de5493756838.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":748,"status":"N"},{"authorDate":"2020-03-09 01:06:45","commitOrder":3,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-09 01:06:45","endLine":762,"groupId":"3943","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ba/eedab3447272b9eb8999d57e67b923cab759b5.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":744,"status":"M"}],"commitId":"c7921a8d2369a1c7a8c42a4b840c31ea6c5d01b0","commitMessage":"@@@Add generics.","date":"2020-03-09 01:06:45","modifiedFileCount":"37","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 14:25:17","codes":[{"authorDate":"2017-05-06 16:41:21","commitOrder":4,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2017-05-06 16:41:21","endLine":761,"groupId":"885","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/21/424cff9a56b8dc1852a8490086de5493756838.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":748,"status":"N"},{"authorDate":"2020-03-20 14:25:17","commitOrder":4,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-20 14:25:17","endLine":762,"groupId":"3943","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ff/df2c5ba704022dee8a165659c55ee2d5e9d905.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":744,"status":"M"}],"commitId":"11bdc56a30d4b58c3bf20632dac6627380019b4b","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 14:25:17","modifiedFileCount":"11","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 14:25:17","codes":[{"authorDate":"2020-03-20 19:42:25","commitOrder":5,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-20 19:42:25","endLine":755,"groupId":"885","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f1/57b6eb537a5da7f196d2b62712ed76c4b67ea3.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = (JFreeChart) TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":742,"status":"M"},{"authorDate":"2020-03-20 14:25:17","commitOrder":5,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-20 14:25:17","endLine":762,"groupId":"3943","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ff/df2c5ba704022dee8a165659c55ee2d5e9d905.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":744,"status":"N"}],"commitId":"0cfd8706aa5e721374d2073ab640ece8b9773c0a","commitMessage":"@@@Fix compiler warnings.","date":"2020-03-20 19:42:25","modifiedFileCount":"13","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-20 14:25:17","codes":[{"authorDate":"2020-03-22 21:16:11","commitOrder":6,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-22 21:16:11","endLine":755,"groupId":"885","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1a/d700173689b73df002b0250b25e7650f750521.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":742,"status":"M"},{"authorDate":"2020-03-20 14:25:17","commitOrder":6,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-20 14:25:17","endLine":762,"groupId":"3943","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ff/df2c5ba704022dee8a165659c55ee2d5e9d905.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":744,"status":"N"}],"commitId":"cb65254c83ba27848719a0d4765348ca3f2bbd5c","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 21:16:11","modifiedFileCount":"10","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-29 18:04:41","codes":[{"authorDate":"2020-03-22 21:16:11","commitOrder":7,"curCode":"    public void testSerialization3() {\n\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-22 21:16:11","endLine":755,"groupId":"10126","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialization3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/1a/d700173689b73df002b0250b25e7650f750521.src","preCode":"    public void testSerialization3() {\n\n        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();\n        JFreeChart chart = ChartFactory.createXYLineChart(\"Test Chart\",\n                \"Domain Axis\", \"Range Axis\", dataset);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/XYPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":742,"status":"N"},{"authorDate":"2020-03-29 18:04:41","commitOrder":7,"curCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        @SuppressWarnings(\"unchecked\")\n        CategoryPlot<String, String> plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","date":"2020-03-29 18:04:41","endLine":765,"groupId":"10126","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialization4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ba/8529e409c89353734b00991461a30b6d9a0254.src","preCode":"    public void testSerialization4() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        JFreeChart chart = ChartFactory.createBarChart(\n                \"Test Chart\", \"Category Axis\", \"Value Axis\",\n                dataset, PlotOrientation.VERTICAL, true, true, false);\n        CategoryPlot plot = (CategoryPlot) chart.getPlot();\n        plot.addRangeMarker(new ValueMarker(1.1), Layer.FOREGROUND);\n        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);\n        JFreeChart chart2 = TestUtils.serialised(chart);\n        assertEquals(chart, chart2);\n\n        \r\n        try {\n            chart2.createBufferedImage(300, 200);\n        }\n        catch (Exception e) {\n            fail(\"No exception should be thrown.\");\n        }\n    }\n","realPath":"src/test/java/org/jfree/chart/plot/CategoryPlotTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":746,"status":"M"}],"commitId":"e23eafd99eb9c5627dd100f927caa3ba7bbb036e","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-29 18:04:41","modifiedFileCount":"4","status":"M","submitter":"David Gilbert"}]
