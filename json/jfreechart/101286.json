[{"authorTime":"2017-05-06 16:37:24","codes":[{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void testMinMaxRange() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number min = DatasetUtils.findMinimumRangeValue(dataset);\n        assertTrue(min.doubleValue() < 100.1);\n        Number max = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(max.doubleValue() > 101.0);\n    }\n","date":"2017-05-06 16:37:24","endLine":569,"groupId":"447","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinMaxRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void testMinMaxRange() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number min = DatasetUtils.findMinimumRangeValue(dataset);\n        assertTrue(min.doubleValue() < 100.1);\n        Number max = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(max.doubleValue() > 101.0);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":561,"status":"B"},{"authorDate":"2017-05-06 16:37:24","commitOrder":1,"curCode":"    public void test803660() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number n = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(n.doubleValue() > 101.0);\n    }\n","date":"2017-05-06 16:37:24","endLine":581,"groupId":"3025","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test803660","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/b4/9a4c927d13fac132c4abb71492c916c5875ffb.src","preCode":"    public void test803660() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number n = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(n.doubleValue() > 101.0);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"B"}],"commitId":"434bac1e228cbbbebe7653d55064fb67e8c62962","commitMessage":"@@@Rename DatasetUtilities --> DatasetUtils.","date":"2017-05-06 16:37:24","modifiedFileCount":"31","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-09 11:01:25","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":2,"curCode":"    public void testMinMaxRange() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number min = DatasetUtils.findMinimumRangeValue(dataset);\n        assertTrue(min.doubleValue() < 100.1);\n        Number max = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(max.doubleValue() > 101.0);\n    }\n","date":"2020-03-09 11:01:25","endLine":554,"groupId":"101286","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinMaxRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f8/d711e8fc55b20664f8b8d0bc17e794ba0a3d8d.src","preCode":"    public void testMinMaxRange() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number min = DatasetUtils.findMinimumRangeValue(dataset);\n        assertTrue(min.doubleValue() < 100.1);\n        Number max = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(max.doubleValue() > 101.0);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"M"},{"authorDate":"2020-03-09 11:01:25","commitOrder":2,"curCode":"    public void test803660() {\n        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number n = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(n.doubleValue() > 101.0);\n    }\n","date":"2020-03-09 11:01:25","endLine":566,"groupId":"101286","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test803660","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/f8/d711e8fc55b20664f8b8d0bc17e794ba0a3d8d.src","preCode":"    public void test803660() {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        dataset.addValue(100.0, \"Series 1\", \"Type 1\");\n        dataset.addValue(101.1, \"Series 1\", \"Type 2\");\n        Number n = DatasetUtils.findMaximumRangeValue(dataset);\n        assertTrue(n.doubleValue() > 101.0);\n    }\n","realPath":"src/test/java/org/jfree/data/general/DatasetUtilsTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":560,"status":"M"}],"commitId":"156d2f017215afd500475c72ac2d95595994282c","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-09 11:01:25","modifiedFileCount":"20","status":"M","submitter":"David Gilbert"}]
