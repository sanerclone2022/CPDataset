[{"authorTime":"2016-02-19 16:24:22","codes":[{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n        if (columnIndex < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        \r\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        \r\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }\n","date":"2016-02-19 16:24:22","endLine":346,"groupId":"1085","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeObject","params":"(ComparablerowKey@ComparablecolumnKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/cf/97d3dfa754afaf5654ec17bb30ccdd287378d7.src","preCode":"    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n        if (columnIndex < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        \r\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        \r\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/KeyedObjects2D.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"B"},{"authorDate":"2016-02-19 16:24:22","commitOrder":1,"curCode":"    public void removeColumn(Comparable columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        Iterator iterator = this.rows.iterator();\n        while (iterator.hasNext()) {\n            KeyedObjects rowData = (KeyedObjects) iterator.next();\n            int i = rowData.getIndex(columnKey);\n            if (i >= 0) {\n                rowData.removeValue(i);\n            }\n        }\n        this.columnKeys.remove(columnKey);\n    }\n","date":"2016-02-19 16:24:22","endLine":414,"groupId":"3703","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeColumn","params":"(ComparablecolumnKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/cf/97d3dfa754afaf5654ec17bb30ccdd287378d7.src","preCode":"    public void removeColumn(Comparable columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        Iterator iterator = this.rows.iterator();\n        while (iterator.hasNext()) {\n            KeyedObjects rowData = (KeyedObjects) iterator.next();\n            int i = rowData.getIndex(columnKey);\n            if (i >= 0) {\n                rowData.removeValue(i);\n            }\n        }\n        this.columnKeys.remove(columnKey);\n    }\n","realPath":"src/main/java/org/jfree/data/KeyedObjects2D.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"B"}],"commitId":"2228e7e92f418078706f2134d2ecce11888b1cb7","commitMessage":"@@@Move source files to standard Maven location.","date":"2016-02-19 16:24:22","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2020-03-09 11:01:25","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":2,"curCode":"    public void removeObject(R rowKey, C columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n        if (columnIndex < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        \r\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        \r\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }\n","date":"2020-03-09 11:01:25","endLine":346,"groupId":"1085","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeObject","params":"(RrowKey@CcolumnKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/eb/4529575fbe2fcd76ffd71257918d7f56da51ae.src","preCode":"    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n        if (columnIndex < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        \r\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        \r\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/KeyedObjects2D.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"},{"authorDate":"2020-03-09 11:01:25","commitOrder":2,"curCode":"    public void removeColumn(C columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        Iterator iterator = this.rows.iterator();\n        while (iterator.hasNext()) {\n            KeyedObjects rowData = (KeyedObjects) iterator.next();\n            int i = rowData.getIndex(columnKey);\n            if (i >= 0) {\n                rowData.removeValue(i);\n            }\n        }\n        this.columnKeys.remove(columnKey);\n    }\n","date":"2020-03-09 11:01:25","endLine":414,"groupId":"3703","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeColumn","params":"(CcolumnKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/eb/4529575fbe2fcd76ffd71257918d7f56da51ae.src","preCode":"    public void removeColumn(Comparable columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        Iterator iterator = this.rows.iterator();\n        while (iterator.hasNext()) {\n            KeyedObjects rowData = (KeyedObjects) iterator.next();\n            int i = rowData.getIndex(columnKey);\n            if (i >= 0) {\n                rowData.removeValue(i);\n            }\n        }\n        this.columnKeys.remove(columnKey);\n    }\n","realPath":"src/main/java/org/jfree/data/KeyedObjects2D.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"M"}],"commitId":"156d2f017215afd500475c72ac2d95595994282c","commitMessage":"@@@Generics / warning fixes.","date":"2020-03-09 11:01:25","modifiedFileCount":"20","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-10-17 13:05:27","codes":[{"authorDate":"2020-03-09 11:01:25","commitOrder":3,"curCode":"    public void removeObject(R rowKey, C columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n        if (columnIndex < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        \r\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        \r\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }\n","date":"2020-03-09 11:01:25","endLine":346,"groupId":"101968","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"removeObject","params":"(RrowKey@CcolumnKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/eb/4529575fbe2fcd76ffd71257918d7f56da51ae.src","preCode":"    public void removeObject(R rowKey, C columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n        if (columnIndex < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        \r\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        \r\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }\n","realPath":"src/main/java/org/jfree/data/KeyedObjects2D.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"N"},{"authorDate":"2020-10-17 13:05:27","commitOrder":3,"curCode":"    public void removeColumn(C columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        for (KeyedObjects rowData : this.rows) {\n            int i = rowData.getIndex(columnKey);\n            if (i >= 0) {\n                rowData.removeValue(i);\n            }\n        }\n        this.columnKeys.remove(columnKey);\n    }\n","date":"2020-10-17 13:05:27","endLine":412,"groupId":"101968","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeColumn","params":"(CcolumnKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/06/aca931cec8bbef1379416d3de1a7da813d43e9.src","preCode":"    public void removeColumn(C columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        Iterator iterator = this.rows.iterator();\n        while (iterator.hasNext()) {\n            KeyedObjects rowData = (KeyedObjects) iterator.next();\n            int i = rowData.getIndex(columnKey);\n            if (i >= 0) {\n                rowData.removeValue(i);\n            }\n        }\n        this.columnKeys.remove(columnKey);\n    }\n","realPath":"src/main/java/org/jfree/data/KeyedObjects2D.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"M"}],"commitId":"61f3b48e99ddd733daf435eee2ea1c643c4f6a21","commitMessage":"@@@Merge pull request #178 from simon04/for-loop\n\nReplace while loop with enhanced for loop","date":"2020-10-17 13:05:27","modifiedFileCount":"32","status":"M","submitter":"David Gilbert"}]
