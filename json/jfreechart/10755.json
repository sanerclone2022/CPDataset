[{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","date":"2016-02-19 15:40:32","endLine":117,"groupId":"2572","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/ad/3026078f4301c2b75766407e39ff244f0ef7fd.src","preCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2016-02-19 15:40:32","commitOrder":1,"curCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","date":"2016-02-19 15:40:32","endLine":117,"groupId":"31","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/60/1d6bdcaa7c91a73f1cdea2553ef9aae56b5d46.src","preCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"1b18adfb8102c34c9287ece406b9dde5751b90b5","commitMessage":"@@@Move test files to standard Maven location.","date":"2016-02-19 15:40:32","modifiedFileCount":"0","status":"B","submitter":"David Gilbert"},{"authorTime":"2016-02-19 15:40:32","codes":[{"authorDate":"2020-01-06 08:29:49","commitOrder":2,"curCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","date":"2020-01-06 08:29:49","endLine":113,"groupId":"2572","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a0/fae3a7028d068a52597c488851612280aa3ba8.src","preCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2016-02-19 15:40:32","commitOrder":2,"curCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","date":"2016-02-19 15:40:32","endLine":117,"groupId":"31","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/60/1d6bdcaa7c91a73f1cdea2553ef9aae56b5d46.src","preCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"5da94a14d497cf0741937b27365882515a12528e","commitMessage":"@@@Merge branch 'master' of https://github.com/jfree/jfreechart\n","date":"2020-01-06 08:29:49","modifiedFileCount":"12","status":"M","submitter":"Tracy Hiltbrand"},{"authorTime":"2020-02-25 13:16:00","codes":[{"authorDate":"2020-01-06 08:29:49","commitOrder":3,"curCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","date":"2020-01-06 08:29:49","endLine":113,"groupId":"2572","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/a0/fae3a7028d068a52597c488851612280aa3ba8.src","preCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"},{"authorDate":"2020-02-25 13:16:00","commitOrder":3,"curCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","date":"2020-02-25 13:16:00","endLine":118,"groupId":"31","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/17/be08729a5c8dd1a807133efb8bb97e41afa680.src","preCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(new Double(1.0));\n        assertFalse(s1.equals(s2));\n        s2.remove(new Double(1.0));\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"ac35d446add4fd4035c6fcc651df9d1d4e57e24a","commitMessage":"@@@Fix deprecations and compiler warnings.","date":"2020-02-25 13:16:00","modifiedFileCount":"12","status":"M","submitter":"David Gilbert"},{"authorTime":"2020-03-22 19:36:23","codes":[{"authorDate":"2020-03-22 19:36:23","commitOrder":4,"curCode":"    public void testEquals() {\n\n        YIntervalSeries<String> s1 = new YIntervalSeries<>(\"s1\");\n        YIntervalSeries<String> s2 = new YIntervalSeries<>(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries<>(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries<>(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries<>(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries<>(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries<>(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries<>(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","date":"2020-03-22 19:36:23","endLine":114,"groupId":"10755","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/33/8b7f9fb273929d693f07b496f63b97794ff308.src","preCode":"    public void testEquals() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        YIntervalSeries s2 = new YIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new YIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new YIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2020-03-22 19:36:23","commitOrder":4,"curCode":"    public void testEquals() {\n        XYIntervalSeries<String> s1 = new XYIntervalSeries<>(\"s1\");\n        XYIntervalSeries<String> s2 = new XYIntervalSeries<>(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries<>(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries<>(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries<>(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries<>(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries<>(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries<>(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","date":"2020-03-22 19:36:23","endLine":113,"groupId":"10755","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jfreechart-10-0.7/blobInfo/CC_OUT/blobs/c3/a730a4a929635dee111b4cada9432a6766dcb1.src","preCode":"    public void testEquals() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"s1\");\n        XYIntervalSeries s2 = new XYIntervalSeries(\"s1\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\");\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\");\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, true);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, true);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1 = new XYIntervalSeries(\"s2\", false, false);\n        assertFalse(s1.equals(s2));\n        s2 = new XYIntervalSeries(\"s2\", false, false);\n        assertTrue(s1.equals(s2));\n\n        \r\n        s1.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(1.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertFalse(s1.equals(s2));\n        s2.add(2.0, 0.5, 1.5, 2.0, 1.9, 2.1);\n        assertTrue(s2.equals(s1));\n\n        \r\n        s1.remove(1.0);\n        assertFalse(s1.equals(s2));\n        s2.remove(1.0);\n        assertTrue(s2.equals(s1));\n    }\n","realPath":"src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java","repoName":"jfreechart","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"f7ded380c87f815662e1c023e0aa68a1a27496c4","commitMessage":"@@@Add generics and fix compiler warnings.","date":"2020-03-22 19:36:23","modifiedFileCount":"45","status":"M","submitter":"David Gilbert"}]
