[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testUon() throws Exception {\n\t\tUonSerializer s = UonSerializer.create().swaps(ParsedReaderSwap.Uon.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = new StringReader(\"(foo=bar,baz=quz)\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"(X=(foo=bar,baz=quz))\", s.serialize(m));\n\t}\n","date":"2021-02-06 03:17:15","endLine":110,"groupId":"3579","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUon","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/fe/441bade4c10676c5d4c35428cfac73448ab07d.src","preCode":"\tpublic void testUon() throws Exception {\n\t\tUonSerializer s = UonSerializer.create().swaps(ParsedReaderSwap.Uon.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = new StringReader(\"(foo=bar,baz=quz)\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"(X=(foo=bar,baz=quz))\", s.serialize(m));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/transforms/ReaderFilterTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testUrlEncoding() throws Exception {\n\t\tUrlEncodingSerializer s = UrlEncodingSerializer.create().swaps(ParsedReaderSwap.PlainText.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = new StringReader(\"foo=bar&baz=quz\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"X='foo=bar%26baz=quz'\", s.serialize(m));\n\t}\n","date":"2021-02-06 03:17:15","endLine":126,"groupId":"3580","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUrlEncoding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/fe/441bade4c10676c5d4c35428cfac73448ab07d.src","preCode":"\tpublic void testUrlEncoding() throws Exception {\n\t\tUrlEncodingSerializer s = UrlEncodingSerializer.create().swaps(ParsedReaderSwap.PlainText.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = new StringReader(\"foo=bar&baz=quz\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"X='foo=bar%26baz=quz'\", s.serialize(m));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/transforms/ReaderFilterTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-07-23 23:49:36","codes":[{"authorDate":"2021-07-23 23:49:36","commitOrder":2,"curCode":"\tpublic void testUon() throws Exception {\n\t\tUonSerializer s = UonSerializer.create().swaps(ParsedReaderSwap.Uon.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = reader(\"(foo=bar,baz=quz)\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"(X=(foo=bar,baz=quz))\", s.serialize(m));\n\t}\n","date":"2021-07-23 23:49:36","endLine":111,"groupId":"101186","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testUon","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/26/559d04c66684db8ef3b82eb7f04f5371529095.src","preCode":"\tpublic void testUon() throws Exception {\n\t\tUonSerializer s = UonSerializer.create().swaps(ParsedReaderSwap.Uon.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = new StringReader(\"(foo=bar,baz=quz)\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"(X=(foo=bar,baz=quz))\", s.serialize(m));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/transforms/ReaderFilterTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-07-23 23:49:36","commitOrder":2,"curCode":"\tpublic void testUrlEncoding() throws Exception {\n\t\tUrlEncodingSerializer s = UrlEncodingSerializer.create().swaps(ParsedReaderSwap.PlainText.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = reader(\"foo=bar&baz=quz\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"X='foo=bar%26baz=quz'\", s.serialize(m));\n\t}\n","date":"2021-07-23 23:49:36","endLine":127,"groupId":"101186","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testUrlEncoding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/26/559d04c66684db8ef3b82eb7f04f5371529095.src","preCode":"\tpublic void testUrlEncoding() throws Exception {\n\t\tUrlEncodingSerializer s = UrlEncodingSerializer.create().swaps(ParsedReaderSwap.PlainText.class).build();\n\n\t\tReader r;\n\t\tMap<String,Object> m;\n\n\t\tr = new StringReader(\"foo=bar&baz=quz\");\n\t\tm = new HashMap<>();\n\t\tm.put(\"X\", r);\n\t\tassertEquals(\"X='foo=bar%26baz=quz'\", s.serialize(m));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/transforms/ReaderFilterTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"2284c5fc7c2b952899810997ef3797acb027f40d","commitMessage":"@@@Unit tests.","date":"2021-07-23 23:49:36","modifiedFileCount":"95","status":"M","submitter":"JamesBognar"}]
