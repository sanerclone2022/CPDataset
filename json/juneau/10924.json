[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void c01_returnTypes_json() throws Exception {\n\t\tC1 x = MockRestClient.buildJson(C.class).getRemote(C1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX3(\"foo\")));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX12(\"foo\").get()));\n\t}\n","date":"2021-02-06 03:17:15","endLine":208,"groupId":"9352","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"c01_returnTypes_json","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4e/008077cb02c8b92b0623009a4579fc9acc8ce1.src","preCode":"\tpublic void c01_returnTypes_json() throws Exception {\n\t\tC1 x = MockRestClient.buildJson(C.class).getRemote(C1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX3(\"foo\")));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX12(\"foo\").get()));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/remote/Remote_RemoteOpAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void d01_returnTypes_partSerialization() throws Exception {\n\t\tD1 x = MockRestClient.create(D.class).openApi().build().getRemote(D1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX3(\"foo\")));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX12(\"foo\").get()));\n\t}\n","date":"2021-02-06 03:17:15","endLine":253,"groupId":"9352","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"d01_returnTypes_partSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4e/008077cb02c8b92b0623009a4579fc9acc8ce1.src","preCode":"\tpublic void d01_returnTypes_partSerialization() throws Exception {\n\t\tD1 x = MockRestClient.create(D.class).openApi().build().getRemote(D1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX3(\"foo\")));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX12(\"foo\").get()));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/remote/Remote_RemoteOpAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-03-06 02:45:28","codes":[{"authorDate":"2021-03-06 02:45:28","commitOrder":2,"curCode":"\tpublic void c01_returnTypes_json() throws Exception {\n\t\tC1 x = MockRestClient.buildJson(C.class).getRemote(C1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"'foo'\",read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",read(x.postX3(\"foo\")));\n\t\tassertEquals(\"'foo'\",read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"'foo'\",read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"'foo'\",read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",read(x.postX12(\"foo\").get()));\n\t}\n","date":"2021-03-06 02:45:28","endLine":208,"groupId":"10924","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"c01_returnTypes_json","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/94/104ba83d9e635351ec8daca4e119ebf369b1df.src","preCode":"\tpublic void c01_returnTypes_json() throws Exception {\n\t\tC1 x = MockRestClient.buildJson(C.class).getRemote(C1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX3(\"foo\")));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"'foo'\",IOUtils.read(x.postX12(\"foo\").get()));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/remote/Remote_RemoteOpAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2021-03-06 02:45:28","commitOrder":2,"curCode":"\tpublic void d01_returnTypes_partSerialization() throws Exception {\n\t\tD1 x = MockRestClient.create(D.class).openApi().build().getRemote(D1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"foo\",read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"foo\",read(x.postX3(\"foo\")));\n\t\tassertEquals(\"foo\",read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"foo\",read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"foo\",read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"foo\",read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"foo\",read(x.postX12(\"foo\").get()));\n\t}\n","date":"2021-03-06 02:45:28","endLine":253,"groupId":"10924","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"d01_returnTypes_partSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/94/104ba83d9e635351ec8daca4e119ebf369b1df.src","preCode":"\tpublic void d01_returnTypes_partSerialization() throws Exception {\n\t\tD1 x = MockRestClient.create(D.class).openApi().build().getRemote(D1.class);\n\t\tassertEquals(\"foo\",x.postX1(\"foo\"));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX2(\"foo\").getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX3(\"foo\")));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX4(\"foo\")));\n\t\tassertEquals(\"foo\",x.postX5(\"foo\").get());\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX6(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX7(\"foo\").get()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX8(\"foo\").get()));\n\t\tassertEquals(\"foo\",x.postX9(\"foo\").get());\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX10(\"foo\").get().getEntity().getContent()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX11(\"foo\").get()));\n\t\tassertEquals(\"foo\",IOUtils.read(x.postX12(\"foo\").get()));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/remote/Remote_RemoteOpAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"}],"commitId":"acf59946f90ebf9c4b0bfa45258b9f6277a948c1","commitMessage":"@@@REST refactoring.","date":"2021-03-06 02:45:28","modifiedFileCount":"48","status":"M","submitter":"JamesBognar"}]
