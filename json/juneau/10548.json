[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.builder().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","date":"2021-02-06 03:17:15","endLine":135,"groupId":"7141","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/08/8338866cdcc6482ba43a07214ea8b53a98d647.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.builder().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboRoundTripTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.builder().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","date":"2021-02-06 03:17:15","endLine":114,"groupId":"6346","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/60/29295ff7e4485cfd129ee676c5a00ca55b9131.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.builder().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboSerializeTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-03-09 01:55:14","codes":[{"authorDate":"2021-03-09 01:55:14","commitOrder":2,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","date":"2021-03-09 01:55:14","endLine":135,"groupId":"7141","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ac/46362d94b8eb4b0d14e880836a5133e8e24f5a.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.builder().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboRoundTripTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-03-09 01:55:14","commitOrder":2,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","date":"2021-03-09 01:55:14","endLine":114,"groupId":"6346","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ba/f857e726955aaabf58ca3d09a4c25c91eb8e9a.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.builder().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboSerializeTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"f92adc791d652f4d4c14d544762dc3f940b53b07","commitMessage":"@@@Standardize builder-based copy constructors.","date":"2021-03-09 01:55:14","modifiedFileCount":"231","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-03-09 03:15:45","codes":[{"authorDate":"2021-03-09 03:15:45","commitOrder":3,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t}\n\t}\n","date":"2021-03-09 03:15:45","endLine":133,"groupId":"7141","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d2/0092cc3b45acdfba1b88413765fc9744d1da50.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboRoundTripTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-03-09 03:15:45","commitOrder":3,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t}\n\t}\n","date":"2021-03-09 03:15:45","endLine":113,"groupId":"6346","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/be/d081a18c96203d49ef300afb8a86d7a13dad7e.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertExceptionContainsMessage(e, comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboSerializeTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"7087776ca66fbca1cb574228737f229a9b7c15d5","commitMessage":"@@@Remove duplicate methods in ThrowableUtils.","date":"2021-03-09 03:15:45","modifiedFileCount":"13","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-07-13 21:53:16","codes":[{"authorDate":"2021-07-13 21:53:16","commitOrder":4,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","date":"2021-07-13 21:53:16","endLine":134,"groupId":"7141","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d3/b663b1ecea2e7d1baa7b582e211d62b762e2b3.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboRoundTripTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2021-07-13 21:53:16","commitOrder":4,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","date":"2021-07-13 21:53:16","endLine":114,"groupId":"6346","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c6/8feae30e621495a80d2eca18198692e06ccc36.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).contains(comboInput.exceptionMsg);\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboSerializeTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"e15ae5d9c2f83be7db3f0a08928702d637ae9fdb","commitMessage":"@@@Assertions API improvements and tests.","date":"2021-07-13 21:53:16","modifiedFileCount":"139","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-07-21 07:13:26","codes":[{"authorDate":"2021-07-21 07:13:26","commitOrder":5,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","date":"2021-07-21 07:13:26","endLine":134,"groupId":"7141","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1d/31302f9201905f0043efd6b9283d4e2d2c5233.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboRoundTripTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2021-07-21 07:13:26","commitOrder":5,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","date":"2021-07-21 07:13:26","endLine":114,"groupId":"6346","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/36/f2d2f73532c0c15e9721cf0fa8c2db71da720a.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboSerializeTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"a165b9d0243f7d9f8ca160fced6fbebe08af33b7","commitMessage":"@@@Unit tests.","date":"2021-07-21 07:13:26","modifiedFileCount":"62","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-07-21 07:13:26","codes":[{"authorDate":"2021-08-22 00:17:39","commitOrder":6,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed.\\n{msg}\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed.\\n{msg}\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","date":"2021-08-22 00:17:39","endLine":134,"groupId":"10548","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b4/63a8f7dd966f7cf42cc6870ecf13283cea0c03.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(getClass().getName() + \": \" + comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboRoundTripTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2021-07-21 07:13:26","commitOrder":6,"curCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","date":"2021-07-21 07:13:26","endLine":114,"groupId":"10548","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"testSerialize","params":"(StringtestName@Serializers@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/36/f2d2f73532c0c15e9721cf0fa8c2db71da720a.src","preCode":"\tprivate void testSerialize(String testName, Serializer s, String expected) throws Exception {\n\t\ttry {\n\t\t\tif (isSkipped(testName, expected))\n\t\t\t\treturn;\n\n\t\t\ts = getSerializer(s);\n\n\t\t\tOMap properties = comboInput.properties;\n\t\t\tif (properties != null) {\n\t\t\t\ts = s.copy().add(properties).build();\n\t\t\t}\n\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(comboInput.in.get());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(comboInput.label + \"/\" + testName + \"=\\n\" + r.replaceAll(\"\\n\", \"\\\\\\\\n\").replaceAll(\"\\t\", \"\\\\\\\\t\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t\tif (s instanceof MsgPackSerializer) {\n\t\t\t\t\tSystem.out.println(\"decoded=[\"+new String(StringUtils.fromHex(r))+\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { comboInput.label, testName };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed: <<<MSG>>>\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} parse-normal failed: <<<MSG>>>\", comboInput.label, testName).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tif (comboInput.exceptionMsg == null)\n\t\t\t\tthrow e;\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t} catch (Exception e) {\n\t\t\tif (comboInput.exceptionMsg == null) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new AssertionError(comboInput.label + \"/\" + testName + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t\t}\n\t\t\tassertThrowable(e).messages().any(contains(comboInput.exceptionMsg));\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/ComboSerializeTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"264f7d6ab489f248e8eb0865bfffe2e7c32339a1","commitMessage":"@@@Context API refactoring.","date":"2021-08-22 00:17:39","modifiedFileCount":"115","status":"M","submitter":"JamesBognar"}]
