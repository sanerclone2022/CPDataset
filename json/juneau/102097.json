[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tprivate void testSerialize(Serializer s, String expected, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(label + \"/\" + s.getClass().getSimpleName() + \"=\\n\" + r.replaceAll(\"\\t\", \"\\\\\\\\t\").replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\\\\\"\", \"\\\\\\\\\\\\\\\"\").replaceAll(\"\\n\", \"\\\\\\\\n\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { label, s.getClass().getSimpleName() };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", label, s.getClass().getSimpleName()).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","date":"2021-02-06 03:17:15","endLine":579,"groupId":"24","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerialize","params":"(Serializers@Stringexpected@ObjecttestBean)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f0/ab92b507d77920b421057a60db92ae724a9e20.src","preCode":"\tprivate void testSerialize(Serializer s, String expected, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(label + \"/\" + s.getClass().getSimpleName() + \"=\\n\" + r.replaceAll(\"\\t\", \"\\\\\\\\t\").replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\\\\\"\", \"\\\\\\\\\\\\\\\"\").replaceAll(\"\\n\", \"\\\\\\\\n\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { label, s.getClass().getSimpleName() };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", label, s.getClass().getSimpleName()).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/serializer/UriResolutionTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":548,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tprivate void testParse(Serializer s, Parser p, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\tTreeMap<String,String> m = p.parse(r, TreeMap.class, String.class, String.class);\n\n\t\t\tString r2 = SimpleJsonSerializer.DEFAULT.toString(m);\n\t\t\tassertString(results.json).msg(\"{0}/{1} parse failed\", label, s.getClass().getSimpleName()).is(r2);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","date":"2021-02-06 03:17:15","endLine":596,"groupId":"3024","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParse","params":"(Serializers@Parserp@ObjecttestBean)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f0/ab92b507d77920b421057a60db92ae724a9e20.src","preCode":"\tprivate void testParse(Serializer s, Parser p, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\tTreeMap<String,String> m = p.parse(r, TreeMap.class, String.class, String.class);\n\n\t\t\tString r2 = SimpleJsonSerializer.DEFAULT.toString(m);\n\t\t\tassertString(results.json).msg(\"{0}/{1} parse failed\", label, s.getClass().getSimpleName()).is(r2);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/serializer/UriResolutionTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-07-21 07:13:26","commitOrder":2,"curCode":"\tprivate void testSerialize(Serializer s, String expected, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(label + \"/\" + s.getClass().getSimpleName() + \"=\\n\" + r.replaceAll(\"\\t\", \"\\\\\\\\t\").replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\\\\\"\", \"\\\\\\\\\\\\\\\"\").replaceAll(\"\\n\", \"\\\\\\\\n\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { label, s.getClass().getSimpleName() };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", args).isSortedLines(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", label, s.getClass().getSimpleName()).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","date":"2021-07-21 07:13:26","endLine":579,"groupId":"102097","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSerialize","params":"(Serializers@Stringexpected@ObjecttestBean)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/97/493d75f45aa6dd898a7dc0b0fe97b62bd1badd.src","preCode":"\tprivate void testSerialize(Serializer s, String expected, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tboolean isRdf = s instanceof RdfSerializer;\n\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (isRdf)\n\t\t\t\tr = r.replaceAll(\"<rdf:RDF[^>]*>\", \"<rdf:RDF>\").replace('\"', '\\'');\n\n\t\t\t\r\n\t\t\tif (expected.equals(\"xxx\")) {\n\t\t\t\tSystem.out.println(label + \"/\" + s.getClass().getSimpleName() + \"=\\n\" + r.replaceAll(\"\\t\", \"\\\\\\\\t\").replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\\\\\"\", \"\\\\\\\\\\\\\\\"\").replaceAll(\"\\n\", \"\\\\\\\\n\")); \r\n\t\t\t\tSystem.out.println(r);\n\t\t\t}\n\n\t\t\tif (isRdf) {\n\t\t\t\tObject[] args = { label, s.getClass().getSimpleName() };\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", args).isEqualSortedLinesTo(expected);\n\t\t\t} else\n\t\t\t\tassertString(r).msg(\"{0}/{1} serialize-normal failed\", label, s.getClass().getSimpleName()).is(expected);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/serializer/UriResolutionTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":548,"status":"M"},{"authorDate":"2021-02-06 03:17:15","commitOrder":2,"curCode":"\tprivate void testParse(Serializer s, Parser p, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\tTreeMap<String,String> m = p.parse(r, TreeMap.class, String.class, String.class);\n\n\t\t\tString r2 = SimpleJsonSerializer.DEFAULT.toString(m);\n\t\t\tassertString(results.json).msg(\"{0}/{1} parse failed\", label, s.getClass().getSimpleName()).is(r2);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","date":"2021-02-06 03:17:15","endLine":596,"groupId":"102097","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParse","params":"(Serializers@Parserp@ObjecttestBean)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f0/ab92b507d77920b421057a60db92ae724a9e20.src","preCode":"\tprivate void testParse(Serializer s, Parser p, Object testBean) throws Exception {\n\t\ttry {\n\t\t\tString r = s.serializeToString(testBean);\n\n\t\t\tTreeMap<String,String> m = p.parse(r, TreeMap.class, String.class, String.class);\n\n\t\t\tString r2 = SimpleJsonSerializer.DEFAULT.toString(m);\n\t\t\tassertString(results.json).msg(\"{0}/{1} parse failed\", label, s.getClass().getSimpleName()).is(r2);\n\n\t\t} catch (AssertionError e) {\n\t\t\tthrow e;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new AssertionError(label + \"/\" + s.getClass().getSimpleName() + \" failed.  exception=\" + e.getLocalizedMessage());\n\t\t}\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/serializer/UriResolutionTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"N"}],"commitId":"a165b9d0243f7d9f8ca160fced6fbebe08af33b7","commitMessage":"@@@Unit tests.","date":"2021-07-21 07:13:26","modifiedFileCount":"62","status":"M","submitter":"JamesBognar"}]
