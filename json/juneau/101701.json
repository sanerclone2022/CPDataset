[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void noValuesInputStreamParser() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tMsgPackParserSession x = MsgPackParser.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","date":"2021-02-06 03:17:15","endLine":132,"groupId":"2773","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"noValuesInputStreamParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/79/14e6cadc90cf66f958356813628f46b9d1b36f.src","preCode":"\tpublic void noValuesInputStreamParser() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tMsgPackParserSession x = MsgPackParser.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/parser/ParserConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void noAnnotationInputStreamParser() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tMsgPackParserSession x = MsgPackParser.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","date":"2021-02-06 03:17:15","endLine":166,"groupId":"2773","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"noAnnotationInputStreamParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/79/14e6cadc90cf66f958356813628f46b9d1b36f.src","preCode":"\tpublic void noAnnotationInputStreamParser() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tMsgPackParserSession x = MsgPackParser.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/parser/ParserConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-09-08 08:27:39","codes":[{"authorDate":"2021-09-08 08:27:39","commitOrder":2,"curCode":"\tpublic void noValuesInputStreamParser() throws Exception {\n\t\tList<AnnotationWork> al = b.getAnnotationList().getWork(sr);\n\t\tMsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","date":"2021-09-08 08:27:39","endLine":133,"groupId":"2773","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"noValuesInputStreamParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f1/18d8db99fc8bdbf774f53bfb2d7d4784d53f33.src","preCode":"\tpublic void noValuesInputStreamParser() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tMsgPackParserSession x = MsgPackParser.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/parser/ParserConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2021-09-08 08:27:39","commitOrder":2,"curCode":"\tpublic void noAnnotationInputStreamParser() throws Exception {\n\t\tList<AnnotationWork> al = c.getAnnotationList().getWork(sr);\n\t\tMsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","date":"2021-09-08 08:27:39","endLine":167,"groupId":"2773","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"noAnnotationInputStreamParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f1/18d8db99fc8bdbf774f53bfb2d7d4784d53f33.src","preCode":"\tpublic void noAnnotationInputStreamParser() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tMsgPackParserSession x = MsgPackParser.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/parser/ParserConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"c8e012691a8e754b44d7c1baa04401d2aa5ff16e","commitMessage":"@@@Context API refactoring.","date":"2021-09-08 08:27:39","modifiedFileCount":"95","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-11 07:12:19","codes":[{"authorDate":"2021-09-11 07:12:19","commitOrder":3,"curCode":"\tpublic void noValuesInputStreamParser() throws Exception {\n\t\tAnnotationWorkList al = b.getAnnotationList().getWork(sr);\n\t\tMsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","date":"2021-09-11 07:12:19","endLine":132,"groupId":"101701","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"noValuesInputStreamParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/18/19c1d262751752fb4e0e884fb4a1ae6174265a.src","preCode":"\tpublic void noValuesInputStreamParser() throws Exception {\n\t\tList<AnnotationWork> al = b.getAnnotationList().getWork(sr);\n\t\tMsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/parser/ParserConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2021-09-11 07:12:19","commitOrder":3,"curCode":"\tpublic void noAnnotationInputStreamParser() throws Exception {\n\t\tAnnotationWorkList al = c.getAnnotationList().getWork(sr);\n\t\tMsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","date":"2021-09-11 07:12:19","endLine":166,"groupId":"101701","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"noAnnotationInputStreamParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/18/19c1d262751752fb4e0e884fb4a1ae6174265a.src","preCode":"\tpublic void noAnnotationInputStreamParser() throws Exception {\n\t\tList<AnnotationWork> al = c.getAnnotationList().getWork(sr);\n\t\tMsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession();\n\t\tcheck(\"false\", x.isAutoCloseStreams());\n\t\tcheck(\"HEX\", x.getBinaryFormat());\n\t\tcheck(\"5\", x.getDebugOutputLines());\n\t\tcheck(null, x.getListener());\n\t\tcheck(\"false\", x.isStrict());\n\t\tcheck(\"false\", x.isTrimStrings());\n\t\tcheck(\"false\", x.isUnbuffered());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/parser/ParserConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"b51bd1c05ef67c31a242a4f75644418327b39726","commitMessage":"@@@Context API refactoring.","date":"2021-09-11 07:12:19","modifiedFileCount":"85","status":"M","submitter":"JamesBognar"}]
