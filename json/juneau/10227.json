[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tHtmlSerializerBuilder s = HtmlSerializer.create().sq().addKeyValueTableHeaders().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] <noname>:org.apache.juneau.html.Common_Test$R1\", \"->[1] r2:org.apache.juneau.html.Common_Test$R2\", \"->[2] r3:org.apache.juneau.html.Common_Test$R3\", \"->[3] r1:org.apache.juneau.html.Common_Test$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\n\t\t\t\"<table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>foo</td></tr><tr><td>r2</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>bar</td></tr><tr><td>r3</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>baz</td></tr></table></td></tr></table></td></tr></table>\",\n\t\t\ts.build().serialize(r1)\n\t\t);\n\n\t\t\r\n\t\ts.build().getSchemaSerializer().serialize(r1);\n\t}\n","date":"2021-02-06 03:17:15","endLine":373,"groupId":"4019","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e1/0592a78273735b4b4b5e7a9ede6b45a49f83b4.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tHtmlSerializerBuilder s = HtmlSerializer.create().sq().addKeyValueTableHeaders().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] <noname>:org.apache.juneau.html.Common_Test$R1\", \"->[1] r2:org.apache.juneau.html.Common_Test$R2\", \"->[2] r3:org.apache.juneau.html.Common_Test$R3\", \"->[3] r1:org.apache.juneau.html.Common_Test$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\n\t\t\t\"<table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>foo</td></tr><tr><td>r2</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>bar</td></tr><tr><td>r3</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>baz</td></tr></table></td></tr></table></td></tr></table>\",\n\t\t\ts.build().serialize(r1)\n\t\t);\n\n\t\t\r\n\t\ts.build().getSchemaSerializer().serialize(r1);\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/html/Common_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tUonSerializerBuilder s = UonSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"$R1\", \"$R2\", \"$R3\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"(name=foo,r2=(name=bar,r3=(name=baz)))\", s.build().serialize(r1));\n\t}\n","date":"2021-02-06 03:17:15","endLine":251,"groupId":"4019","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ae/7f7319372ade53b51f9c6589f9ba5edcebb12b.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tUonSerializerBuilder s = UonSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"$R1\", \"$R2\", \"$R3\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"(name=foo,r2=(name=bar,r3=(name=baz)))\", s.build().serialize(r1));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/uon/Common_UonTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-07-13 21:53:16","codes":[{"authorDate":"2021-07-13 21:53:16","commitOrder":2,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tHtmlSerializerBuilder s = HtmlSerializer.create().sq().addKeyValueTableHeaders().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"[0] <noname>:org.apache.juneau.html.Common_Test$R1\", \"->[1] r2:org.apache.juneau.html.Common_Test$R2\", \"->[2] r3:org.apache.juneau.html.Common_Test$R3\", \"->[3] r1:org.apache.juneau.html.Common_Test$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\n\t\t\t\"<table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>foo</td></tr><tr><td>r2</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>bar</td></tr><tr><td>r3</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>baz</td></tr></table></td></tr></table></td></tr></table>\",\n\t\t\ts.build().serialize(r1)\n\t\t);\n\n\t\t\r\n\t\ts.build().getSchemaSerializer().serialize(r1);\n\t}\n","date":"2021-07-13 21:53:16","endLine":373,"groupId":"10227","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/69/464930fe66c831030ad555af428fa841c8b656.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tHtmlSerializerBuilder s = HtmlSerializer.create().sq().addKeyValueTableHeaders().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] <noname>:org.apache.juneau.html.Common_Test$R1\", \"->[1] r2:org.apache.juneau.html.Common_Test$R2\", \"->[2] r3:org.apache.juneau.html.Common_Test$R3\", \"->[3] r1:org.apache.juneau.html.Common_Test$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\n\t\t\t\"<table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>foo</td></tr><tr><td>r2</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>bar</td></tr><tr><td>r3</td><td><table><tr><th>key</th><th>value</th></tr><tr><td>name</td><td>baz</td></tr></table></td></tr></table></td></tr></table>\",\n\t\t\ts.build().serialize(r1)\n\t\t);\n\n\t\t\r\n\t\ts.build().getSchemaSerializer().serialize(r1);\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/html/Common_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"},{"authorDate":"2021-07-13 21:53:16","commitOrder":2,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tUonSerializerBuilder s = UonSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"$R1\", \"$R2\", \"$R3\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"(name=foo,r2=(name=bar,r3=(name=baz)))\", s.build().serialize(r1));\n\t}\n","date":"2021-07-13 21:53:16","endLine":251,"groupId":"10227","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a4/9db97fa3a18b4adb14471891996f2ee9adf0e3.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tUonSerializerBuilder s = UonSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"$R1\", \"$R2\", \"$R3\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"(name=foo,r2=(name=bar,r3=(name=baz)))\", s.build().serialize(r1));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/uon/Common_UonTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"e15ae5d9c2f83be7db3f0a08928702d637ae9fdb","commitMessage":"@@@Assertions API improvements and tests.","date":"2021-07-13 21:53:16","modifiedFileCount":"139","status":"M","submitter":"JamesBognar"}]
