[{"authorTime":"2021-03-04 22:24:17","codes":[{"authorDate":"2021-03-04 08:37:47","commitOrder":3,"curCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedHeader x1 = serializedHeader(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedHeader x2 = serializedHeader(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedHeader x3 = serializedHeader(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","date":"2021-03-04 08:37:47","endLine":72,"groupId":"6638","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"a04_skipIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/16/f24d2c61ee63b300f7b3731769228c183bc960.src","preCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedHeader x1 = serializedHeader(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedHeader x2 = serializedHeader(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedHeader x3 = serializedHeader(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/SerializedHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"NB"},{"authorDate":"2021-03-04 22:24:17","commitOrder":3,"curCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedPart x1 = of(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedPart x2 = of(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedPart x3 = of(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","date":"2021-03-04 22:24:17","endLine":73,"groupId":"6638","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"a04_skipIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/80/521d22e1ee38e85f57122e88807a3e405e6c91.src","preCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedPart x1 = of(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedPart x2 = of(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedPart x3 = of(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/SerializedPart_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"d2c8cb2a497649dedaf35080c36fa23f93ccd756","commitMessage":"@@@REST refactoring.","date":"2021-03-04 22:24:17","modifiedFileCount":"40","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-03-05 00:00:50","codes":[{"authorDate":"2021-03-04 08:37:47","commitOrder":4,"curCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedHeader x1 = serializedHeader(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedHeader x2 = serializedHeader(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedHeader x3 = serializedHeader(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","date":"2021-03-04 08:37:47","endLine":72,"groupId":"6638","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"a04_skipIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/16/f24d2c61ee63b300f7b3731769228c183bc960.src","preCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedHeader x1 = serializedHeader(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedHeader x2 = serializedHeader(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedHeader x3 = serializedHeader(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/SerializedHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2021-03-05 00:00:50","commitOrder":4,"curCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedPart x1 = serializedPart(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedPart x2 = serializedPart(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedPart x3 = serializedPart(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","date":"2021-03-05 00:00:50","endLine":73,"groupId":"6638","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"a04_skipIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/56/972d7d14ab20850ce7b8d8c531be1db818290e.src","preCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedPart x1 = of(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedPart x2 = of(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedPart x3 = of(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/SerializedPart_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"49752d53ef2b43e2921f95b22350eec6b51919a2","commitMessage":"@@@REST refactoring.","date":"2021-03-05 00:00:50","modifiedFileCount":"38","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-07-13 21:53:16","codes":[{"authorDate":"2021-07-13 21:53:16","commitOrder":5,"curCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedHeader x1 = serializedHeader(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedHeader x2 = serializedHeader(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedHeader x3 = serializedHeader(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).messages().contains(\"Empty value not allowed.\");\n\t}\n","date":"2021-07-13 21:53:16","endLine":72,"groupId":"10860","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"a04_skipIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2f/4f96ab2f8207faba06919d02a9d8d1156d3fd4.src","preCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedHeader x1 = serializedHeader(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedHeader x2 = serializedHeader(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedHeader x3 = serializedHeader(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/SerializedHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2021-07-13 21:53:16","commitOrder":5,"curCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedPart x1 = serializedPart(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedPart x2 = serializedPart(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedPart x3 = serializedPart(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).messages().contains(\"Empty value not allowed.\");\n\t}\n","date":"2021-07-13 21:53:16","endLine":73,"groupId":"10860","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"a04_skipIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/79/dfdfc8d07ed8918a905267233667d1e1654a2b.src","preCode":"\tpublic void a04_skipIfEmpty() throws Exception {\n\t\tSerializedPart x1 = serializedPart(\"Foo\",null).skipIfEmpty();\n\t\tassertString(x1.getValue()).isNull();\n\t\tSerializedPart x2 = serializedPart(\"Foo\",\"\").skipIfEmpty();\n\t\tassertString(x2.getValue()).isNull();\n\t\tSerializedPart x3 = serializedPart(\"Foo\",\"\").schema(schema(STRING)._default(\"bar\").build()).serializer(OAPI_SERIALIZER).skipIfEmpty();\n\t\tassertThrown(()->x3.getValue()).contains(\"Empty value not allowed.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/SerializedPart_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"e15ae5d9c2f83be7db3f0a08928702d637ae9fdb","commitMessage":"@@@Assertions API improvements and tests.","date":"2021-07-13 21:53:16","modifiedFileCount":"139","status":"M","submitter":"JamesBognar"}]
