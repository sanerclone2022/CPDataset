[{"authorTime":"2019-06-28 05:50:55","codes":[{"authorDate":"2019-06-28 05:50:55","commitOrder":1,"curCode":"\tpublic String enumHeaders(\n\t\t\t@Header(\"a\") TestEnum a,\n\t\t\t@Header(\"an\") TestEnum an,\n\t\t\t@Header(\"b\") TestEnum[][][] b,\n\t\t\t@Header(\"c\") List<TestEnum> c,\n\t\t\t@Header(\"d\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(\"e\") List<TestEnum[][][]> e,\n\t\t\t@Header(\"f\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(\"g\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(\"h\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","date":"2019-06-28 05:50:55","endLine":303,"groupId":"8859","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"enumHeaders","params":"(@Header(\"a\")TestEnuma@@Header(\"an\")TestEnuman@@Header(\"b\")TestEnum[][][]b@@Header(\"c\")List<TestEnum>c@@Header(\"d\")List<List<List<TestEnum>>>d@@Header(\"e\")List<TestEnum[][][]>e@@Header(\"f\")Map<TestEnum@TestEnum>f@@Header(\"g\")Map<TestEnum@TestEnum[][][]>g@@Header(\"h\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/95/54371f9ccd62dab725ee277856659204dfb94e.src","preCode":"\tpublic String enumHeaders(\n\t\t\t@Header(\"a\") TestEnum a,\n\t\t\t@Header(\"an\") TestEnum an,\n\t\t\t@Header(\"b\") TestEnum[][][] b,\n\t\t\t@Header(\"c\") List<TestEnum> c,\n\t\t\t@Header(\"d\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(\"e\") List<TestEnum[][][]> e,\n\t\t\t@Header(\"f\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(\"g\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(\"h\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"B"},{"authorDate":"2019-06-28 05:50:55","commitOrder":1,"curCode":"\tpublic String enumQueries(\n\t\t\t@Query(\"a\") TestEnum a,\n\t\t\t@Query(\"an\") TestEnum an,\n\t\t\t@Query(\"b\") TestEnum[][][] b,\n\t\t\t@Query(\"c\") List<TestEnum> c,\n\t\t\t@Query(\"d\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(\"e\") List<TestEnum[][][]> e,\n\t\t\t@Query(\"f\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(\"g\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(\"h\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","date":"2019-06-28 05:50:55","endLine":615,"groupId":"8859","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"enumQueries","params":"(@Query(\"a\")TestEnuma@@Query(\"an\")TestEnuman@@Query(\"b\")TestEnum[][][]b@@Query(\"c\")List<TestEnum>c@@Query(\"d\")List<List<List<TestEnum>>>d@@Query(\"e\")List<TestEnum[][][]>e@@Query(\"f\")Map<TestEnum@TestEnum>f@@Query(\"g\")Map<TestEnum@TestEnum[][][]>g@@Query(\"h\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/95/54371f9ccd62dab725ee277856659204dfb94e.src","preCode":"\tpublic String enumQueries(\n\t\t\t@Query(\"a\") TestEnum a,\n\t\t\t@Query(\"an\") TestEnum an,\n\t\t\t@Query(\"b\") TestEnum[][][] b,\n\t\t\t@Query(\"c\") List<TestEnum> c,\n\t\t\t@Query(\"d\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(\"e\") List<TestEnum[][][]> e,\n\t\t\t@Query(\"f\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(\"g\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(\"h\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":582,"status":"B"}],"commitId":"3be120d53722fc621e2d8cfab0b7bd8072a5b34d","commitMessage":"@@@Organize test projects.","date":"2019-06-28 05:50:55","modifiedFileCount":"3","status":"B","submitter":"JamesBognar"},{"authorTime":"2020-05-11 23:49:52","codes":[{"authorDate":"2020-05-11 23:49:52","commitOrder":2,"curCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-05-11 23:49:52","endLine":306,"groupId":"8859","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"enumHeaders","params":"(@Header(n=\"a\"@cf=\"uon\")TestEnuma@@Header(n=\"an\"@cf=\"uon\")TestEnuman@@Header(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Header(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Header(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Header(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Header(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Header(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Header(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/77/39ff4a3759e2d3492937b2a242d96abb0250b8.src","preCode":"\tpublic String enumHeaders(\n\t\t\t@Header(\"a\") TestEnum a,\n\t\t\t@Header(\"an\") TestEnum an,\n\t\t\t@Header(\"b\") TestEnum[][][] b,\n\t\t\t@Header(\"c\") List<TestEnum> c,\n\t\t\t@Header(\"d\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(\"e\") List<TestEnum[][][]> e,\n\t\t\t@Header(\"f\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(\"g\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(\"h\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2020-05-11 23:49:52","commitOrder":2,"curCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-05-11 23:49:52","endLine":618,"groupId":"8859","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"enumQueries","params":"(@Query(n=\"a\"@cf=\"uon\")TestEnuma@@Query(n=\"an\"@cf=\"uon\")TestEnuman@@Query(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Query(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Query(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Query(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Query(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Query(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Query(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/77/39ff4a3759e2d3492937b2a242d96abb0250b8.src","preCode":"\tpublic String enumQueries(\n\t\t\t@Query(\"a\") TestEnum a,\n\t\t\t@Query(\"an\") TestEnum an,\n\t\t\t@Query(\"b\") TestEnum[][][] b,\n\t\t\t@Query(\"c\") List<TestEnum> c,\n\t\t\t@Query(\"d\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(\"e\") List<TestEnum[][][]> e,\n\t\t\t@Query(\"f\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(\"g\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(\"h\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":585,"status":"M"}],"commitId":"e8254982d71a0a72033a3f47c57660e2b258810b","commitMessage":"@@@JUNEAU-226\n\ncollection-format should apply to beans/maps in OpenAPI serializer and\nparser.","date":"2020-05-11 23:49:52","modifiedFileCount":"63","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-06-26 02:47:04","codes":[{"authorDate":"2020-06-26 02:47:04","commitOrder":3,"curCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-06-26 02:47:04","endLine":307,"groupId":"5088","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"enumHeaders","params":"(@Header(n=\"a\"@cf=\"uon\")TestEnuma@@Header(n=\"an\"@cf=\"uon\")TestEnuman@@Header(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Header(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Header(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Header(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Header(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Header(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Header(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e6/c11e126e8f61591ddb1f60d64b5d8d74ab7a3c.src","preCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"},{"authorDate":"2020-06-26 02:47:04","commitOrder":3,"curCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-06-26 02:47:04","endLine":619,"groupId":"5088","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"enumQueries","params":"(@Query(n=\"a\"@cf=\"uon\")TestEnuma@@Query(n=\"an\"@cf=\"uon\")TestEnuman@@Query(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Query(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Query(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Query(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Query(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Query(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Query(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e6/c11e126e8f61591ddb1f60d64b5d8d74ab7a3c.src","preCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertClass(TestEnum.class, c.get(0));\n\t\tassertClass(TestEnum.class, d.get(0).get(0).get(0));\n\t\tassertClass(TestEnum[][][].class, e.get(0));\n\t\tassertClass(TestEnum.class, f.keySet().iterator().next());\n\t\tassertClass(TestEnum.class, f.values().iterator().next());\n\t\tassertClass(TestEnum.class, g.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, g.values().iterator().next());\n\t\tassertClass(TestEnum.class, h.keySet().iterator().next());\n\t\tassertClass(TestEnum[][][].class, h.values().iterator().next().get(0));\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":586,"status":"M"}],"commitId":"e694e7dfd0d324e6482a24888b1134522f7d2eda","commitMessage":"@@@Tests.","date":"2020-06-26 02:47:04","modifiedFileCount":"21","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-06-26 03:42:38","codes":[{"authorDate":"2020-06-26 03:42:38","commitOrder":4,"curCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-06-26 03:42:38","endLine":305,"groupId":"5088","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"enumHeaders","params":"(@Header(n=\"a\"@cf=\"uon\")TestEnuma@@Header(n=\"an\"@cf=\"uon\")TestEnuman@@Header(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Header(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Header(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Header(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Header(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Header(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Header(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/00/086ad5dea0509a0023cc2b1d42946a41aeb2ec.src","preCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2020-06-26 03:42:38","commitOrder":4,"curCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-06-26 03:42:38","endLine":617,"groupId":"5088","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"enumQueries","params":"(@Query(n=\"a\"@cf=\"uon\")TestEnuma@@Query(n=\"an\"@cf=\"uon\")TestEnuman@@Query(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Query(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Query(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Query(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Query(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Query(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Query(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/00/086ad5dea0509a0023cc2b1d42946a41aeb2ec.src","preCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", b);\n\t\tassertObjectEquals(\"['TWO',null]\", c);\n\t\tassertObjectEquals(\"[[['TWO',null],null],null]\", d);\n\t\tassertObjectEquals(\"[[[['TWO',null],null],null],null]\", e);\n\t\tassertObjectEquals(\"{ONE:'TWO'}\", f);\n\t\tassertObjectEquals(\"{ONE:[[['TWO',null],null],null]}\", g);\n\t\tassertObjectEquals(\"{ONE:[[[['TWO',null],null],null],null]}\", h);\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"}],"commitId":"6d89f8213319ec4ed6d587636d900fce8695280f","commitMessage":"@@@Tests.","date":"2020-06-26 03:42:38","modifiedFileCount":"121","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-06-26 04:04:53","codes":[{"authorDate":"2020-06-26 04:04:53","commitOrder":5,"curCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).isType(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).isType(TestEnum.class);\n\t\tassertObject(e.get(0)).isType(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).isType(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).isType(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-06-26 04:04:53","endLine":305,"groupId":"7073","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"enumHeaders","params":"(@Header(n=\"a\"@cf=\"uon\")TestEnuma@@Header(n=\"an\"@cf=\"uon\")TestEnuman@@Header(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Header(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Header(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Header(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Header(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Header(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Header(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5a/d70a32718e3875551389c9ac8e88d8f5b16e19.src","preCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2020-06-26 04:04:53","commitOrder":5,"curCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).isType(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).isType(TestEnum.class);\n\t\tassertObject(e.get(0)).isType(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).isType(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).isType(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2020-06-26 04:04:53","endLine":617,"groupId":"7073","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"enumQueries","params":"(@Query(n=\"a\"@cf=\"uon\")TestEnuma@@Query(n=\"an\"@cf=\"uon\")TestEnuman@@Query(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Query(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Query(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Query(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Query(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Query(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Query(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5a/d70a32718e3875551389c9ac8e88d8f5b16e19.src","preCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).instanceOf(TestEnum.class);\n\t\tassertObject(e.get(0)).instanceOf(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).instanceOf(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).instanceOf(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).instanceOf(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"}],"commitId":"3a0f9477efdc796412097fbccf0cba64d2a4d40e","commitMessage":"@@@Tests.","date":"2020-06-26 04:04:53","modifiedFileCount":"27","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-06 02:38:20","codes":[{"authorDate":"2021-02-06 02:38:20","commitOrder":6,"curCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).asJson().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).asJson().is(\"['TWO',null]\");\n\t\tassertObject(d).asJson().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).asJson().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).asJson().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).asJson().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).asJson().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).isType(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).isType(TestEnum.class);\n\t\tassertObject(e.get(0)).isType(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).isType(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).isType(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2021-02-06 02:38:20","endLine":305,"groupId":"1035","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"enumHeaders","params":"(@Header(n=\"a\"@cf=\"uon\")TestEnuma@@Header(n=\"an\"@cf=\"uon\")TestEnuman@@Header(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Header(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Header(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Header(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Header(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Header(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Header(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4f/437d3c7ad6be39c8183b4b9f6dc5e870445fc6.src","preCode":"\tpublic String enumHeaders(\n\t\t\t@Header(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Header(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Header(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Header(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Header(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Header(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Header(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Header(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Header(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).isType(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).isType(TestEnum.class);\n\t\tassertObject(e.get(0)).isType(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).isType(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).isType(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2021-02-06 02:38:20","commitOrder":6,"curCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).asJson().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).asJson().is(\"['TWO',null]\");\n\t\tassertObject(d).asJson().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).asJson().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).asJson().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).asJson().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).asJson().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).isType(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).isType(TestEnum.class);\n\t\tassertObject(e.get(0)).isType(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).isType(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).isType(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","date":"2021-02-06 02:38:20","endLine":617,"groupId":"1035","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"enumQueries","params":"(@Query(n=\"a\"@cf=\"uon\")TestEnuma@@Query(n=\"an\"@cf=\"uon\")TestEnuman@@Query(n=\"b\"@cf=\"uon\")TestEnum[][][]b@@Query(n=\"c\"@cf=\"uon\")List<TestEnum>c@@Query(n=\"d\"@cf=\"uon\")List<List<List<TestEnum>>>d@@Query(n=\"e\"@cf=\"uon\")List<TestEnum[][][]>e@@Query(n=\"f\"@cf=\"uon\")Map<TestEnum@TestEnum>f@@Query(n=\"g\"@cf=\"uon\")Map<TestEnum@TestEnum[][][]>g@@Query(n=\"h\"@cf=\"uon\")Map<TestEnum@List<TestEnum[][][]>>h)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4f/437d3c7ad6be39c8183b4b9f6dc5e870445fc6.src","preCode":"\tpublic String enumQueries(\n\t\t\t@Query(n=\"a\",cf=\"uon\") TestEnum a,\n\t\t\t@Query(n=\"an\",cf=\"uon\") TestEnum an,\n\t\t\t@Query(n=\"b\",cf=\"uon\") TestEnum[][][] b,\n\t\t\t@Query(n=\"c\",cf=\"uon\") List<TestEnum> c,\n\t\t\t@Query(n=\"d\",cf=\"uon\") List<List<List<TestEnum>>> d,\n\t\t\t@Query(n=\"e\",cf=\"uon\") List<TestEnum[][][]> e,\n\t\t\t@Query(n=\"f\",cf=\"uon\") Map<TestEnum,TestEnum> f,\n\t\t\t@Query(n=\"g\",cf=\"uon\") Map<TestEnum,TestEnum[][][]> g,\n\t\t\t@Query(n=\"h\",cf=\"uon\") Map<TestEnum,List<TestEnum[][][]>> h\n\t\t) throws Exception {\n\n\t\tassertEquals(TestEnum.TWO, a);\n\t\tassertNull(an);\n\t\tassertObject(b).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(c).json().is(\"['TWO',null]\");\n\t\tassertObject(d).json().is(\"[[['TWO',null],null],null]\");\n\t\tassertObject(e).json().is(\"[[[['TWO',null],null],null],null]\");\n\t\tassertObject(f).json().is(\"{ONE:'TWO'}\");\n\t\tassertObject(g).json().is(\"{ONE:[[['TWO',null],null],null]}\");\n\t\tassertObject(h).json().is(\"{ONE:[[[['TWO',null],null],null],null]}\");\n\n\t\tassertObject(c.get(0)).isType(TestEnum.class);\n\t\tassertObject(d.get(0).get(0).get(0)).isType(TestEnum.class);\n\t\tassertObject(e.get(0)).isType(TestEnum[][][].class);\n\t\tassertObject(f.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(f.values().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(g.values().iterator().next()).isType(TestEnum[][][].class);\n\t\tassertObject(h.keySet().iterator().next()).isType(TestEnum.class);\n\t\tassertObject(h.values().iterator().next().get(0)).isType(TestEnum[][][].class);\n\n\t\treturn \"OK\";\n\t}\n","realPath":"juneau-microservice/juneau-microservice-ftest/src/test/java/org/apache/juneau/rest/test/client/ThirdPartyProxyResource.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"}],"commitId":"454e307bffe88cac7efd5088800760273437ec8f","commitMessage":"@@@Tests (mostly).","date":"2021-02-06 02:38:20","modifiedFileCount":"213","status":"M","submitter":"JamesBognar"}]
