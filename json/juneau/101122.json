[{"authorTime":"2021-03-04 08:37:47","codes":[{"authorDate":"2021-04-03 04:31:25","commitOrder":4,"curCode":"\tpublic void a11_contains() {\n\t\tHeaderList x = HeaderList.of(FOO_1, FOO_2, X_x);\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.contains(\"Foo\")).isTrue();\n\t\tassertBoolean(x.contains(\"FOO\")).isTrue();\n\t\tassertBoolean(x.contains(\"Bar\")).isFalse();\n\t}\n","date":"2021-04-03 04:31:25","endLine":214,"groupId":"7308","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"a11_contains","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/bc/64ad084fec9a4683624a9d1bbda2eb90f70c48.src","preCode":"\tpublic void a11_contains() {\n\t\tHeaderList x = HeaderList.of(FOO_1, FOO_2, X_x);\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.contains(\"Foo\")).isTrue();\n\t\tassertBoolean(x.contains(\"FOO\")).isTrue();\n\t\tassertBoolean(x.contains(\"Bar\")).isFalse();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/header/HeaderList_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"},{"authorDate":"2021-03-04 08:37:47","commitOrder":4,"curCode":"\tpublic void a02_contains() throws Exception {\n\t\tBasicCsvArrayHeader x = new BasicCsvArrayHeader(\"Foo\", new String[]{null,\"bar\",\"baz\"});\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x.contains(\"bar\")).isTrue();\n\t\tassertBoolean(x.containsIgnoreCase(\"bar\")).isTrue();\n\t\tassertBoolean(x.contains(\"qux\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"qux\")).isFalse();\n\t\tassertBoolean(x.contains(\"BAR\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"BAR\")).isTrue();\n\n\t\tBasicCsvArrayHeader x2 = csvArrayHeader(\"Foo\",()->null);\n\t\tassertBoolean(x2.contains(null)).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x2.contains(\"bar\")).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(\"bar\")).isFalse();\n\t}\n","date":"2021-03-04 08:37:47","endLine":96,"groupId":"9077","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"a02_contains","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/8d/1e066ae54b1bcdf3f26de4f7d0cdeff8025557.src","preCode":"\tpublic void a02_contains() throws Exception {\n\t\tBasicCsvArrayHeader x = new BasicCsvArrayHeader(\"Foo\", new String[]{null,\"bar\",\"baz\"});\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x.contains(\"bar\")).isTrue();\n\t\tassertBoolean(x.containsIgnoreCase(\"bar\")).isTrue();\n\t\tassertBoolean(x.contains(\"qux\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"qux\")).isFalse();\n\t\tassertBoolean(x.contains(\"BAR\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"BAR\")).isTrue();\n\n\t\tBasicCsvArrayHeader x2 = csvArrayHeader(\"Foo\",()->null);\n\t\tassertBoolean(x2.contains(null)).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x2.contains(\"bar\")).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(\"bar\")).isFalse();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/header/BasicCsvArrayHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"NB"}],"commitId":"32fb8a6fabc36948a7469e0b48f5d38314775664","commitMessage":"@@@HeaderList API improvements.","date":"2021-04-03 04:31:25","modifiedFileCount":"31","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-04-22 00:23:10","codes":[{"authorDate":"2021-04-03 04:31:25","commitOrder":5,"curCode":"\tpublic void a11_contains() {\n\t\tHeaderList x = HeaderList.of(FOO_1, FOO_2, X_x);\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.contains(\"Foo\")).isTrue();\n\t\tassertBoolean(x.contains(\"FOO\")).isTrue();\n\t\tassertBoolean(x.contains(\"Bar\")).isFalse();\n\t}\n","date":"2021-04-03 04:31:25","endLine":214,"groupId":"101122","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"a11_contains","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/bc/64ad084fec9a4683624a9d1bbda2eb90f70c48.src","preCode":"\tpublic void a11_contains() {\n\t\tHeaderList x = HeaderList.of(FOO_1, FOO_2, X_x);\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.contains(\"Foo\")).isTrue();\n\t\tassertBoolean(x.contains(\"FOO\")).isTrue();\n\t\tassertBoolean(x.contains(\"Bar\")).isFalse();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/header/HeaderList_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"N"},{"authorDate":"2021-04-22 00:23:10","commitOrder":5,"curCode":"\tpublic void a02_contains() throws Exception {\n\t\tBasicCsvArrayHeader x = new BasicCsvArrayHeader(\"Foo\", AList.of(null,\"bar\",\"baz\"));\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x.contains(\"bar\")).isTrue();\n\t\tassertBoolean(x.containsIgnoreCase(\"bar\")).isTrue();\n\t\tassertBoolean(x.contains(\"qux\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"qux\")).isFalse();\n\t\tassertBoolean(x.contains(\"BAR\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"BAR\")).isTrue();\n\n\t\tBasicCsvArrayHeader x2 = csvArrayHeader(\"Foo\",()->null);\n\t\tassertBoolean(x2.contains(null)).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x2.contains(\"bar\")).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(\"bar\")).isFalse();\n\t}\n","date":"2021-04-22 00:23:10","endLine":89,"groupId":"101122","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"a02_contains","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b4/1c9f708beb472fe01b732caf35e27dc1f512e8.src","preCode":"\tpublic void a02_contains() throws Exception {\n\t\tBasicCsvArrayHeader x = new BasicCsvArrayHeader(\"Foo\", new String[]{null,\"bar\",\"baz\"});\n\t\tassertBoolean(x.contains(null)).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x.contains(\"bar\")).isTrue();\n\t\tassertBoolean(x.containsIgnoreCase(\"bar\")).isTrue();\n\t\tassertBoolean(x.contains(\"qux\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"qux\")).isFalse();\n\t\tassertBoolean(x.contains(\"BAR\")).isFalse();\n\t\tassertBoolean(x.containsIgnoreCase(\"BAR\")).isTrue();\n\n\t\tBasicCsvArrayHeader x2 = csvArrayHeader(\"Foo\",()->null);\n\t\tassertBoolean(x2.contains(null)).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(null)).isFalse();\n\t\tassertBoolean(x2.contains(\"bar\")).isFalse();\n\t\tassertBoolean(x2.containsIgnoreCase(\"bar\")).isFalse();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/http/header/BasicCsvArrayHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"a88b5f59873a615095b5415dc4d819f89eb9b825","commitMessage":"@@@Improvements to Header subclasses.","date":"2021-04-22 00:23:10","modifiedFileCount":"181","status":"M","submitter":"JamesBognar"}]
