[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testHex() throws Exception {\n\t\tConfig cf = init().builder().binaryFormat(BinaryFormat.HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"626172\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":1195,"groupId":"5271","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/06/b9205cae1d2862942c2de1af7bc2d1ccd4f62c.src","preCode":"\tpublic void testHex() throws Exception {\n\t\tConfig cf = init().builder().binaryFormat(BinaryFormat.HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"626172\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/config/ConfigTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1189,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testSpacedHex() throws Exception {\n\t\tConfig cf = init().builder().binaryFormat(BinaryFormat.SPACED_HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"62 61 72\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":1207,"groupId":"5271","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSpacedHex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/06/b9205cae1d2862942c2de1af7bc2d1ccd4f62c.src","preCode":"\tpublic void testSpacedHex() throws Exception {\n\t\tConfig cf = init().builder().binaryFormat(BinaryFormat.SPACED_HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"62 61 72\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/config/ConfigTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-03-09 01:55:14","codes":[{"authorDate":"2021-03-09 01:55:14","commitOrder":2,"curCode":"\tpublic void testHex() throws Exception {\n\t\tConfig cf = init().copy().binaryFormat(BinaryFormat.HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"626172\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","date":"2021-03-09 01:55:14","endLine":1195,"groupId":"102069","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/78/6a4bf3a94a9f82e403c0aff0002b55a6dfc2f7.src","preCode":"\tpublic void testHex() throws Exception {\n\t\tConfig cf = init().builder().binaryFormat(BinaryFormat.HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"626172\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/config/ConfigTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1189,"status":"M"},{"authorDate":"2021-03-09 01:55:14","commitOrder":2,"curCode":"\tpublic void testSpacedHex() throws Exception {\n\t\tConfig cf = init().copy().binaryFormat(BinaryFormat.SPACED_HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"62 61 72\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","date":"2021-03-09 01:55:14","endLine":1207,"groupId":"102069","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSpacedHex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/78/6a4bf3a94a9f82e403c0aff0002b55a6dfc2f7.src","preCode":"\tpublic void testSpacedHex() throws Exception {\n\t\tConfig cf = init().builder().binaryFormat(BinaryFormat.SPACED_HEX).build();\n\n\t\tcf.set(\"foo\", \"bar\".getBytes(\"UTF-8\"));\n\t\tassertEquals(\"62 61 72\", cf.get(\"foo\"));\n\t\tassertObject(cf.getBytes(\"foo\")).asJson().is(\"[98,97,114]\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/config/ConfigTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"M"}],"commitId":"f92adc791d652f4d4c14d544762dc3f940b53b07","commitMessage":"@@@Standardize builder-based copy constructors.","date":"2021-03-09 01:55:14","modifiedFileCount":"231","status":"M","submitter":"JamesBognar"}]
