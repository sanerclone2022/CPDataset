[{"authorTime":"2017-09-02 22:10:11","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tpublic ParserGroup(PropertyStore propertyStore, Parser[] parsers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<Parser>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<MediaType>();\n\t\tList<Parser> l = new ArrayList<Parser>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2017-09-02 22:10:11","endLine":110,"groupId":"3818","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStorepropertyStore@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d9/ee830fa4a4b2aa3a06cdd46bc399acb745391d.src","preCode":"\tpublic ParserGroup(PropertyStore propertyStore, Parser[] parsers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<Parser>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<MediaType>();\n\t\tList<Parser> l = new ArrayList<Parser>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"},{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tpublic SerializerGroup(PropertyStore propertyStore, Serializer[] serializers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.beanContext = propertyStore.getBeanContext();\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<Serializer>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<MediaType>();\n\t\tList<Serializer> l = new ArrayList<Serializer>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2017-09-02 22:10:11","endLine":107,"groupId":"8021","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStorepropertyStore@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1f/d700c8ab9985460c014f0e72bdd64312ea9cb5.src","preCode":"\tpublic SerializerGroup(PropertyStore propertyStore, Serializer[] serializers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.beanContext = propertyStore.getBeanContext();\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<Serializer>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<MediaType>();\n\t\tList<Serializer> l = new ArrayList<Serializer>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"}],"commitId":"75b0d8ee69277699acb78aff1fb69d041899c6ae","commitMessage":"@@@Add project hierarchies.  part 1","date":"2017-09-02 22:10:11","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2017-10-27 07:21:47","codes":[{"authorDate":"2017-10-27 07:21:47","commitOrder":2,"curCode":"\tpublic ParserGroup(PropertyStore propertyStore, Parser[] parsers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2017-10-27 07:21:47","endLine":110,"groupId":"8843","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStorepropertyStore@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/77/5dbbeb19e86bb61aa34f10656c1e9bf95040a8.src","preCode":"\tpublic ParserGroup(PropertyStore propertyStore, Parser[] parsers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<Parser>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<MediaType>();\n\t\tList<Parser> l = new ArrayList<Parser>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2017-10-27 07:21:47","commitOrder":2,"curCode":"\tpublic SerializerGroup(PropertyStore propertyStore, Serializer[] serializers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.beanContext = propertyStore.getBeanContext();\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2017-10-27 07:21:47","endLine":104,"groupId":"4002","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStorepropertyStore@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c8/146bc1afa24e864ec40eece3df249d730c8220.src","preCode":"\tpublic SerializerGroup(PropertyStore propertyStore, Serializer[] serializers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.beanContext = propertyStore.getBeanContext();\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<Serializer>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<MediaType>();\n\t\tList<Serializer> l = new ArrayList<Serializer>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"d1258753a5a851d762938aad18e87b2d969db094","commitMessage":"@@@Update code to reflect changes in Java 7.","date":"2017-10-27 07:21:47","modifiedFileCount":"171","status":"M","submitter":"JamesBognar"},{"authorTime":"2017-12-24 00:50:26","codes":[{"authorDate":"2017-12-24 00:50:26","commitOrder":3,"curCode":"\tpublic ParserGroup(PropertyStore2 ps, Parser[] parsers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2017-12-24 00:50:26","endLine":131,"groupId":"8843","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStore2ps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/da/1a2ad7a509ba3cf7e0a4155ebaffefd4e4b224.src","preCode":"\tpublic ParserGroup(PropertyStore propertyStore, Parser[] parsers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2017-12-24 00:50:26","commitOrder":3,"curCode":"\tpublic SerializerGroup(PropertyStore2 ps, Serializer[] serializers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2017-12-24 00:50:26","endLine":123,"groupId":"4002","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStore2ps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/da/475d957dfe0bd769cdd290a20e93620b1d8d5a.src","preCode":"\tpublic SerializerGroup(PropertyStore propertyStore, Serializer[] serializers) {\n\t\tthis.propertyStore = propertyStore.copy();\n\t\tthis.beanContext = propertyStore.getBeanContext();\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"227719b2dc52d70577728232daf5d0b9e950fb54","commitMessage":"@@@JUNEAU-76 Improvements to Context/Builder APIs","date":"2017-12-24 00:50:26","modifiedFileCount":"177","status":"M","submitter":"JamesBognar"},{"authorTime":"2017-12-24 01:10:15","codes":[{"authorDate":"2017-12-24 01:10:15","commitOrder":4,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2017-12-24 01:10:15","endLine":131,"groupId":"8843","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/da/7bb70a5c88cc608ec0c2191732aa8bd72b9f41.src","preCode":"\tpublic ParserGroup(PropertyStore2 ps, Parser[] parsers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2017-12-24 01:10:15","commitOrder":4,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2017-12-24 01:10:15","endLine":123,"groupId":"4002","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f1/239e01d6ff28adf21efffff87530a982fc7bbd.src","preCode":"\tpublic SerializerGroup(PropertyStore2 ps, Serializer[] serializers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"b49b91926406ea9f2bd59253efa3768b083ad260","commitMessage":"@@@(JUNEAU-76) Improvements to Context/Builder APIs\n\nRename PropertyStore2 to PropertyStore.","date":"2017-12-24 01:10:15","modifiedFileCount":"85","status":"M","submitter":"JamesBognar"},{"authorTime":"2018-01-07 12:05:44","codes":[{"authorDate":"2018-01-07 12:05:44","commitOrder":5,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2018-01-07 12:05:44","endLine":131,"groupId":"8843","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/aa/8229df86afe57a053e5bb7ef7dadee57a5540d.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2018-01-07 12:05:44","commitOrder":5,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2018-01-07 12:05:44","endLine":123,"groupId":"4002","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/6d/6f9503a6ac412bb353b9b93ffed0aae346d9c4.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tthis.propertyStore = ps;\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"94fa434bfbb493b614110d5bb4c6c6dfbd3e7a7e","commitMessage":"@@@Serializer/ParserGroup classes should extend BeanContext.","date":"2018-01-07 12:05:44","modifiedFileCount":"4","status":"M","submitter":"JamesBognar"},{"authorTime":"2018-02-20 03:06:27","codes":[{"authorDate":"2018-02-20 03:06:27","commitOrder":6,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = immutableList(parsers);\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2018-02-20 03:06:27","endLine":133,"groupId":"4158","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b4/4e535460805794ea9f22361fc870aa23ab18f4.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(parsers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2018-02-20 03:06:27","commitOrder":6,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = immutableList(serializers);\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2018-02-20 03:06:27","endLine":125,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/98/fb82b6797ad68dd6219480290fc7905bc9e43a.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(serializers)));\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = Collections.unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"39d0e818e5db497ff7dfa3a27e0dc0c90c7b02aa","commitMessage":"@@@Config API refactoring.","date":"2018-02-20 03:06:27","modifiedFileCount":"59","status":"M","submitter":"JamesBognar"},{"authorTime":"2018-05-11 02:45:28","codes":[{"authorDate":"2018-02-20 03:06:27","commitOrder":7,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = immutableList(parsers);\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","date":"2018-02-20 03:06:27","endLine":133,"groupId":"4158","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b4/4e535460805794ea9f22361fc870aa23ab18f4.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = immutableList(parsers);\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"N"},{"authorDate":"2018-05-11 02:45:28","commitOrder":7,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = immutableList(serializers);\n\n\t\tList<MediaTypeRange> lmtr = new ArrayList<>();\n\t\tLinkedHashSet<MediaType> lmt = new LinkedHashSet<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.toArray(new MediaTypeRange[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(new ArrayList<>(lmt));\n\t\tthis.mediaTypeRangeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","date":"2018-05-11 02:45:28","endLine":129,"groupId":"6644","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/07/3fbe89c1f661314caa11e76db39ae3b38c8da9.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = immutableList(serializers);\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaType m: s.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(lmt);\n\t\tthis.mediaTypeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"699c7d6dad40129e3e1352827295c17160086e40","commitMessage":"@@@Add support for q-values for matching against multiple serializers.","date":"2018-05-11 02:45:28","modifiedFileCount":"38","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-03-22 06:25:35","codes":[{"authorDate":"2020-03-22 06:25:35","commitOrder":8,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.createUnmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","date":"2020-03-22 06:25:35","endLine":139,"groupId":"2126","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/cb/48888c250d1439b6801e8fcf73ed46af975ba8.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = immutableList(parsers);\n\n\t\tList<MediaType> lmt = new ArrayList<>();\n\t\tList<Parser> l = new ArrayList<>();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.toArray(new MediaType[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(lmt);\n\t\tthis.mediaTypeParsers = l.toArray(new Parser[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2020-03-22 06:25:35","commitOrder":8,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.createUnmodifiable(serializers);\n\n\t\tAList<MediaTypeRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.create();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.asArrayOf(MediaTypeRange.class);\n\t\tthis.mediaTypesList = AList.<MediaType>create().appendAll(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","date":"2020-03-22 06:25:35","endLine":135,"groupId":"0","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5f/fda65926d8ee550c559795def9b7b8e229d25d.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = immutableList(serializers);\n\n\t\tList<MediaTypeRange> lmtr = new ArrayList<>();\n\t\tLinkedHashSet<MediaType> lmt = new LinkedHashSet<>();\n\t\tList<Serializer> l = new ArrayList<>();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.toArray(new MediaTypeRange[lmt.size()]);\n\t\tthis.mediaTypesList = unmodifiableList(new ArrayList<>(lmt));\n\t\tthis.mediaTypeRangeSerializers = l.toArray(new Serializer[l.size()]);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"f91dbc77c7e087010b1df8dc147af1bd7daf8945","commitMessage":"@@@JUNEAU-193\n\nRestClient should support all languages by default.","date":"2020-03-22 06:25:35","modifiedFileCount":"62","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-03-22 08:44:41","codes":[{"authorDate":"2020-03-22 08:44:41","commitOrder":9,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","date":"2020-03-22 08:44:41","endLine":139,"groupId":"1612","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d0/2038f5dfc84ce9844279c5fc5ca23de3bc9f8e.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.createUnmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2020-03-22 08:44:41","commitOrder":9,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaTypeRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.asArrayOf(MediaTypeRange.class);\n\t\tthis.mediaTypesList = AList.<MediaType>of().appendAll(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","date":"2020-03-22 08:44:41","endLine":135,"groupId":"9325","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d3/3579b39a222111e63d64fb539331ba03b75869.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.createUnmodifiable(serializers);\n\n\t\tAList<MediaTypeRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.create();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.asArrayOf(MediaTypeRange.class);\n\t\tthis.mediaTypesList = AList.<MediaType>create().appendAll(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"24fbeb37727f8b2b26bbf720dca17575e9eeb445","commitMessage":"@@@JUNEAU-193\n\nRestClient should support all languages by default.","date":"2020-03-22 08:44:41","modifiedFileCount":"101","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-03-22 08:50:51","codes":[{"authorDate":"2020-03-22 08:44:41","commitOrder":10,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","date":"2020-03-22 08:44:41","endLine":139,"groupId":"1612","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d0/2038f5dfc84ce9844279c5fc5ca23de3bc9f8e.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2020-03-22 08:50:51","commitOrder":10,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaTypeRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.asArrayOf(MediaTypeRange.class);\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","date":"2020-03-22 08:50:51","endLine":135,"groupId":"9325","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/7e/3853ac613b8f8defd262dcbeb1f0fa038d7741.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaTypeRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.asArrayOf(MediaTypeRange.class);\n\t\tthis.mediaTypesList = AList.<MediaType>of().appendAll(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"4188a84654e487467df0c53aed11e9d082498e93","commitMessage":"@@@JUNEAU-193\n\nRestClient should support all languages by default.","date":"2020-03-22 08:50:51","modifiedFileCount":"5","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-07-14 23:49:03","codes":[{"authorDate":"2020-03-22 08:44:41","commitOrder":11,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","date":"2020-03-22 08:44:41","endLine":139,"groupId":"1612","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d0/2038f5dfc84ce9844279c5fc5ca23de3bc9f8e.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2020-07-14 23:49:03","commitOrder":11,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","date":"2020-07-14 23:49:03","endLine":136,"groupId":"1565","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f5/f7b68bbcab8aa6535714402337aa21c410146c.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaTypeRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaTypeRange m: s.getMediaTypeRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.asArrayOf(MediaTypeRange.class);\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"47292551a79094f11f7949b47ae4eee53fb64950","commitMessage":"@@@org.apache.juneau.http improvements.","date":"2020-07-14 23:49:03","modifiedFileCount":"11","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-07-16 07:58:48","codes":[{"authorDate":"2020-07-16 07:58:48","commitOrder":12,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2020-07-16 07:58:48","endLine":138,"groupId":"1612","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3e/27d2f79b4ce90c4bf2693f845ed08d9fd2a03f.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.asArrayOf(MediaType.class);\n\t\tthis.mediaTypesList = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.asArrayOf(Parser.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2020-07-16 07:58:48","commitOrder":12,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2020-07-16 07:58:48","endLine":136,"groupId":"1565","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/02/bf907cfb886355d9434c9630cff43055aa1eb1.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaTypeRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.asArrayOf(Serializer.class);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"69ceb51c0a3eb4138e8e10685a0ba14c130c8ba3","commitMessage":"@@@org.apache.juneau.http.header tests.","date":"2020-07-16 07:58:48","modifiedFileCount":"6","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-01-20 07:14:11","codes":[{"authorDate":"2021-01-20 07:14:11","commitOrder":13,"curCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-01-20 07:14:11","endLine":138,"groupId":"2126","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(PropertyStoreps@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4e/8bd2f471b9135489c4f941730b75a68745109f.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.of();\n\t\tAList<Parser> l = AList.of();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2021-01-20 07:14:11","commitOrder":13,"curCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-01-20 07:14:11","endLine":136,"groupId":"1565","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(PropertyStoreps@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c4/1d87c17ff2b640d560faa88dac501b37eb75ae.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.of();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.of();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"c74a05be2a94fc14cc69db6594d44470be4565d9","commitMessage":"@@@REST refactoring.","date":"2021-01-20 07:14:11","modifiedFileCount":"117","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-09 06:20:05","codes":[{"authorDate":"2021-02-09 06:20:05","commitOrder":14,"curCode":"\tpublic ParserGroup(ContextProperties cp, Parser[] parsers) {\n\t\tsuper(cp);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-02-09 06:20:05","endLine":138,"groupId":"2126","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(ContextPropertiescp@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e0/b750056b17f7dadc0e05e123ef55f2bfb71bf0.src","preCode":"\tpublic ParserGroup(PropertyStore ps, Parser[] parsers) {\n\t\tsuper(ps);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2021-02-09 06:20:05","commitOrder":14,"curCode":"\tpublic SerializerGroup(ContextProperties cp, Serializer[] serializers) {\n\t\tsuper(cp);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-02-09 06:20:05","endLine":136,"groupId":"1565","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(ContextPropertiescp@Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d7/3e0bced01238fbe90308a70a90d489790fcb01.src","preCode":"\tpublic SerializerGroup(PropertyStore ps, Serializer[] serializers) {\n\t\tsuper(ps);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"24a9853f080397ea7a06db7cfcae23d6c11a3758","commitMessage":"@@@Rename PropertyStore to ContextProperties.","date":"2021-02-09 06:20:05","modifiedFileCount":"205","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-22 00:17:39","codes":[{"authorDate":"2021-02-09 06:20:05","commitOrder":15,"curCode":"\tpublic ParserGroup(ContextProperties cp, Parser[] parsers) {\n\t\tsuper(cp);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-02-09 06:20:05","endLine":138,"groupId":"2126","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(ContextPropertiescp@Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e0/b750056b17f7dadc0e05e123ef55f2bfb71bf0.src","preCode":"\tpublic ParserGroup(ContextProperties cp, Parser[] parsers) {\n\t\tsuper(cp);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2021-08-22 00:17:39","commitOrder":15,"curCode":"\tpublic SerializerGroup(Serializer[] serializers) {\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-08-22 00:17:39","endLine":122,"groupId":"1565","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/52/d44b7586913c921c0cbf8f27c2cdc12c18fc35.src","preCode":"\tpublic SerializerGroup(ContextProperties cp, Serializer[] serializers) {\n\t\tsuper(cp);\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"264f7d6ab489f248e8eb0865bfffe2e7c32339a1","commitMessage":"@@@Context API refactoring.","date":"2021-08-22 00:17:39","modifiedFileCount":"115","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-22 00:17:39","codes":[{"authorDate":"2021-08-22 05:29:24","commitOrder":16,"curCode":"\tpublic ParserGroup(Parser[] parsers) {\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-08-22 05:29:24","endLine":124,"groupId":"2126","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(Parser[]parsers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/13/2836293d0a8c20127ffa51abb2f0062a6539b9.src","preCode":"\tpublic ParserGroup(ContextProperties cp, Parser[] parsers) {\n\t\tsuper(cp);\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2021-08-22 00:17:39","commitOrder":16,"curCode":"\tpublic SerializerGroup(Serializer[] serializers) {\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-08-22 00:17:39","endLine":122,"groupId":"1565","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(Serializer[]serializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/52/d44b7586913c921c0cbf8f27c2cdc12c18fc35.src","preCode":"\tpublic SerializerGroup(Serializer[] serializers) {\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"N"}],"commitId":"1b8a0b60117484ce77ae08da447233eb06f0f478","commitMessage":"@@@Context API refactoring.","date":"2021-08-22 05:29:24","modifiedFileCount":"70","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-22 23:12:05","codes":[{"authorDate":"2021-08-22 23:12:05","commitOrder":17,"curCode":"\tpublic ParserGroup(ParserGroupBuilder builder) {\n\t\tList<Parser> x = new ArrayList<>();\n\t\tfor (Object p : builder.parsers) {\n\t\t\tif (p instanceof ParserBuilder) {\n\t\t\t\tx.add(((ParserBuilder)p).build());\n\t\t\t} else {\n\t\t\t\tx.add((Parser)p);\n\t\t\t}\n\t\t}\n\n\t\tthis.parsers = ArrayUtils.toReverseArray(Parser.class, x);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-08-22 23:12:05","endLine":135,"groupId":"2126","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(ParserGroupBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1b/b2b28a5dbbe67f6e5dbece13200c487e6924b4.src","preCode":"\tpublic ParserGroup(Parser[] parsers) {\n\t\tthis.parsers = AList.unmodifiable(parsers);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2021-08-22 23:12:05","commitOrder":17,"curCode":"\tprotected SerializerGroup(SerializerGroupBuilder builder) {\n\n\t\tList<Serializer> x = new ArrayList<>();\n\t\tfor (Object s : builder.serializers) {\n\t\t\tif (s instanceof SerializerBuilder) {\n\t\t\t\tx.add(((SerializerBuilder)s).build());\n\t\t\t} else {\n\t\t\t\tx.add((Serializer)s);\n\t\t\t}\n\t\t}\n\t\tthis.serializers = ArrayUtils.toReverseArray(Serializer.class, x);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-08-22 23:12:05","endLine":131,"groupId":"1565","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(SerializerGroupBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/34/56f204578826d7a6c773dd9792d8c35badffd2.src","preCode":"\tpublic SerializerGroup(Serializer[] serializers) {\n\t\tthis.serializers = AList.unmodifiable(serializers);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"893125ac3933462af26ef1d09c487e5ebea83fb7","commitMessage":"@@@Context API refactoring.","date":"2021-08-22 23:12:05","modifiedFileCount":"4","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-08 08:27:39","codes":[{"authorDate":"2021-08-22 23:12:05","commitOrder":18,"curCode":"\tpublic ParserGroup(ParserGroupBuilder builder) {\n\t\tList<Parser> x = new ArrayList<>();\n\t\tfor (Object p : builder.parsers) {\n\t\t\tif (p instanceof ParserBuilder) {\n\t\t\t\tx.add(((ParserBuilder)p).build());\n\t\t\t} else {\n\t\t\t\tx.add((Parser)p);\n\t\t\t}\n\t\t}\n\n\t\tthis.parsers = ArrayUtils.toReverseArray(Parser.class, x);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-08-22 23:12:05","endLine":135,"groupId":"2126","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(ParserGroupBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1b/b2b28a5dbbe67f6e5dbece13200c487e6924b4.src","preCode":"\tpublic ParserGroup(ParserGroupBuilder builder) {\n\t\tList<Parser> x = new ArrayList<>();\n\t\tfor (Object p : builder.parsers) {\n\t\t\tif (p instanceof ParserBuilder) {\n\t\t\t\tx.add(((ParserBuilder)p).build());\n\t\t\t} else {\n\t\t\t\tx.add((Parser)p);\n\t\t\t}\n\t\t}\n\n\t\tthis.parsers = ArrayUtils.toReverseArray(Parser.class, x);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"N"},{"authorDate":"2021-09-08 08:27:39","commitOrder":18,"curCode":"\tprotected SerializerGroup(Builder builder) {\n\n\t\tthis.serializers = builder.serializers.stream().map(x -> build(x)).toArray(Serializer[]::new);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-09-08 08:27:39","endLine":139,"groupId":"1565","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(Builderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2e/115c3af157e35fc45d860af74d9a26e9db583f.src","preCode":"\tprotected SerializerGroup(SerializerGroupBuilder builder) {\n\n\t\tList<Serializer> x = new ArrayList<>();\n\t\tfor (Object s : builder.serializers) {\n\t\t\tif (s instanceof SerializerBuilder) {\n\t\t\t\tx.add(((SerializerBuilder)s).build());\n\t\t\t} else {\n\t\t\t\tx.add((Serializer)s);\n\t\t\t}\n\t\t}\n\t\tthis.serializers = ArrayUtils.toReverseArray(Serializer.class, x);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"c8e012691a8e754b44d7c1baa04401d2aa5ff16e","commitMessage":"@@@Context API refactoring.","date":"2021-09-08 08:27:39","modifiedFileCount":"95","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-09 21:20:47","codes":[{"authorDate":"2021-09-09 21:20:47","commitOrder":19,"curCode":"\tpublic ParserGroup(Builder builder) {\n\n\t\tthis.entries = builder.entries.stream().map(x -> build(x)).toArray(Parser[]::new);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser e : entries) {\n\t\t\tfor (MediaType m: e.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(e);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","date":"2021-09-09 21:20:47","endLine":146,"groupId":"10396","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"ParserGroup","params":"(Builderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/43/13590904171b028b65a6f07870e86366e08ef1.src","preCode":"\tpublic ParserGroup(ParserGroupBuilder builder) {\n\t\tList<Parser> x = new ArrayList<>();\n\t\tfor (Object p : builder.parsers) {\n\t\t\tif (p instanceof ParserBuilder) {\n\t\t\t\tx.add(((ParserBuilder)p).build());\n\t\t\t} else {\n\t\t\t\tx.add((Parser)p);\n\t\t\t}\n\t\t}\n\n\t\tthis.parsers = ArrayUtils.toReverseArray(Parser.class, x);\n\n\t\tAList<MediaType> lmt = AList.create();\n\t\tAList<Parser> l = AList.create();\n\t\tfor (Parser p : parsers) {\n\t\t\tfor (MediaType m: p.getMediaTypes()) {\n\t\t\t\tlmt.add(m);\n\t\t\t\tl.add(p);\n\t\t\t}\n\t\t}\n\n\t\tthis.mediaTypes = lmt.unmodifiable();\n\t\tthis.mediaTypeParsers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2021-09-09 21:20:47","commitOrder":19,"curCode":"\tprotected SerializerGroup(Builder builder) {\n\n\t\tthis.entries = builder.entries.stream().map(x -> build(x)).toArray(Serializer[]::new);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer e : entries) {\n\t\t\tfor (MediaRange m: e.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(e);\n\t\t\t}\n\t\t\tfor (MediaType mt : e.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","date":"2021-09-09 21:20:47","endLine":143,"groupId":"10396","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"SerializerGroup","params":"(Builderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e1/75b2c675da361cca3b990bd8901cd6aa4a2e6b.src","preCode":"\tprotected SerializerGroup(Builder builder) {\n\n\t\tthis.serializers = builder.serializers.stream().map(x -> build(x)).toArray(Serializer[]::new);\n\n\t\tAList<MediaRange> lmtr = AList.create();\n\t\tASet<MediaType> lmt = ASet.of();\n\t\tAList<Serializer> l = AList.create();\n\t\tfor (Serializer s : serializers) {\n\t\t\tfor (MediaRange m: s.getMediaTypeRanges().getRanges()) {\n\t\t\t\tlmtr.add(m);\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor (MediaType mt : s.getAcceptMediaTypes())\n\t\t\t\tlmt.add(mt);\n\t\t}\n\n\t\tthis.mediaRanges = lmtr.unmodifiable();\n\t\tthis.mediaTypesList = AList.of(lmt).unmodifiable();\n\t\tthis.mediaTypeRangeSerializers = l.unmodifiable();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"bb624d386490c0cced1a4fdaae9fb8186b05b197","commitMessage":"@@@Context API refactoring.","date":"2021-09-09 21:20:47","modifiedFileCount":"30","status":"M","submitter":"JamesBognar"}]
