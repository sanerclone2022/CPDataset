[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":156,"groupId":"3840","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"c01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/03/22a43be8b11b79bd6988af68ea9a138eab4a28.src","preCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t}\n","date":"2021-02-06 03:17:15","endLine":177,"groupId":"3840","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"d01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/03/22a43be8b11b79bd6988af68ea9a138eab4a28.src","preCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-02-19 00:35:09","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":2,"curCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","date":"2021-02-19 00:35:09","endLine":156,"groupId":"3840","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"c01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f3/9e750c642ac1d998f51e20c23dde44e291662b.src","preCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2021-02-19 00:35:09","commitOrder":2,"curCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","date":"2021-02-19 00:35:09","endLine":177,"groupId":"3840","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"d01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f3/9e750c642ac1d998f51e20c23dde44e291662b.src","preCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as(Bean.class).check();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"89e56ee663f747fdf7d34e5a3b5c188971a8409d","commitMessage":"@@@REST refactoring.","date":"2021-02-19 00:35:09","modifiedFileCount":"22","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-06-15 22:29:09","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":3,"curCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","date":"2021-02-19 00:35:09","endLine":156,"groupId":"3840","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"c01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f3/9e750c642ac1d998f51e20c23dde44e291662b.src","preCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"},{"authorDate":"2021-06-15 22:29:09","commitOrder":3,"curCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().defaultHeaders(Accept.APPLICATION_JSON, ContentType.APPLICATION_JSON).build();\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","date":"2021-06-15 22:29:09","endLine":179,"groupId":"3840","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"d01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/eb/33ad9bc1499b4a24995416db448c066e7b0262.src","preCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"37108c9a30f2f8def3b32e2304c94ed8bfcc61a7","commitMessage":"@@@RestClient API improvements.","date":"2021-06-15 22:29:09","modifiedFileCount":"30","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-06-15 22:29:09","codes":[{"authorDate":"2021-07-13 21:53:16","commitOrder":4,"curCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).message().is(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","date":"2021-07-13 21:53:16","endLine":157,"groupId":"3840","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"c01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/09/a0b453dd27f4e958d0be854761406c570e3ba0.src","preCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).contains(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-06-15 22:29:09","commitOrder":4,"curCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().defaultHeaders(Accept.APPLICATION_JSON, ContentType.APPLICATION_JSON).build();\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","date":"2021-06-15 22:29:09","endLine":179,"groupId":"3840","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"d01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/eb/33ad9bc1499b4a24995416db448c066e7b0262.src","preCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().defaultHeaders(Accept.APPLICATION_JSON, ContentType.APPLICATION_JSON).build();\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"}],"commitId":"e15ae5d9c2f83be7db3f0a08928702d637ae9fdb","commitMessage":"@@@Assertions API improvements and tests.","date":"2021-07-13 21:53:16","modifiedFileCount":"139","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-24 04:01:28","codes":[{"authorDate":"2021-07-13 21:53:16","commitOrder":5,"curCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).message().is(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","date":"2021-07-13 21:53:16","endLine":157,"groupId":"101779","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"c01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/09/a0b453dd27f4e958d0be854761406c570e3ba0.src","preCode":"\tpublic void c01_universal() throws Exception {\n\t\tRestClient x = client().universal().build();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\tassertThrown(()->x.post(\"/a01\",bean).run()).message().is(\"Content-Type not specified on request.  Cannot match correct serializer.  Use contentType(String) or mediaType(String) to specify transport language.\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"N"},{"authorDate":"2021-09-24 04:01:28","commitOrder":5,"curCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().headersDefault(Accept.APPLICATION_JSON, ContentType.APPLICATION_JSON).build();\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","date":"2021-09-24 04:01:28","endLine":179,"groupId":"101779","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"d01_universal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/36/10d2e2433a2e6a2498c61bfb46465c06d5ec11.src","preCode":"\tpublic void d01_universal() throws Exception {\n\t\tRestClient x = client().universal().defaultHeaders(Accept.APPLICATION_JSON, ContentType.APPLICATION_JSON).build();\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t\tx.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\n\t\t\r\n\t\tx.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType(Bean.class).check();\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/client/RestClient_Marshalls_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"5eec89d4b833b5218da4f16a522f558f5dcddf8b","commitMessage":"@@@Context API refactoring.","date":"2021-09-24 04:01:28","modifiedFileCount":"6","status":"M","submitter":"JamesBognar"}]
