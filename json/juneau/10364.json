[{"authorTime":"2017-09-02 22:10:11","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","date":"2017-09-02 22:10:11","endLine":57,"groupId":"6288","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"UonReader","params":"(ParserPipepipe@booleandecodeChars)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/30/37ad323e5685f306061347e470ba69b2e36ee3.src","preCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/uon/UonReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.pipe = pipe;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","date":"2017-09-02 22:10:11","endLine":67,"groupId":"7444","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ParserReader","params":"(ParserPipepipe)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3c/75e36d97f3d6a28503b9b92ac01e79e196b9c5.src","preCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.pipe = pipe;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"75b0d8ee69277699acb78aff1fb69d041899c6ae","commitMessage":"@@@Add project hierarchies.  part 1","date":"2017-09-02 22:10:11","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2018-01-26 09:32:56","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":2,"curCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","date":"2017-09-02 22:10:11","endLine":57,"groupId":"6288","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"UonReader","params":"(ParserPipepipe@booleandecodeChars)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/30/37ad323e5685f306061347e470ba69b2e36ee3.src","preCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/uon/UonReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2018-01-26 09:32:56","commitOrder":2,"curCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.pipe = pipe;\n\t\tthis.unbuffered = pipe.unbuffered;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","date":"2018-01-26 09:32:56","endLine":69,"groupId":"7444","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ParserReader","params":"(ParserPipepipe)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e5/36076c58f896d23848d7be1a07e6bcd5cd796e.src","preCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.pipe = pipe;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"1687de48602c3fde1c8fdcd8aa8f77b0c26a670e","commitMessage":"@@@Add support for parsing continuous streams.","date":"2018-01-26 09:32:56","modifiedFileCount":"24","status":"M","submitter":"JamesBognar"},{"authorTime":"2018-03-29 23:25:40","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":3,"curCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","date":"2017-09-02 22:10:11","endLine":57,"groupId":"6288","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"UonReader","params":"(ParserPipepipe@booleandecodeChars)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/30/37ad323e5685f306061347e470ba69b2e36ee3.src","preCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/uon/UonReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2018-03-29 23:25:40","commitOrder":3,"curCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.unbuffered = pipe.unbuffered;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t\tpipe.setPositionable(this);\n\t}\n","date":"2018-03-29 23:25:40","endLine":67,"groupId":"7444","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ParserReader","params":"(ParserPipepipe)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/37/fb8c6f6073500a5dac3deb76d4391a7a34104b.src","preCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.pipe = pipe;\n\t\tthis.unbuffered = pipe.unbuffered;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"cd1069260d3498e8df051c54a1f17c656ff2f041","commitMessage":"@@@Swagger improvements.","date":"2018-03-29 23:25:40","modifiedFileCount":"68","status":"M","submitter":"JamesBognar"},{"authorTime":"2018-03-29 23:25:40","codes":[{"authorDate":"2019-07-06 02:52:55","commitOrder":4,"curCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws IOException {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","date":"2019-07-06 02:52:55","endLine":57,"groupId":"10364","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"UonReader","params":"(ParserPipepipe@booleandecodeChars)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/cf/080fc2967a7b340ff740b1247ed7d28b0fb130.src","preCode":"\tpublic UonReader(ParserPipe pipe, boolean decodeChars) throws Exception {\n\t\tsuper(pipe);\n\t\tthis.decodeChars = decodeChars;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/uon/UonReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2018-03-29 23:25:40","commitOrder":4,"curCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.unbuffered = pipe.unbuffered;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t\tpipe.setPositionable(this);\n\t}\n","date":"2018-03-29 23:25:40","endLine":67,"groupId":"10364","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"ParserReader","params":"(ParserPipepipe)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/37/fb8c6f6073500a5dac3deb76d4391a7a34104b.src","preCode":"\tpublic ParserReader(ParserPipe pipe) throws IOException {\n\t\tthis.unbuffered = pipe.unbuffered;\n\t\tif (pipe.isString()) {\n\t\t\tString in = pipe.getInputAsString();\n\t\t\tthis.r = new CharSequenceReader(in);\n\t\t\tthis.buff = new char[in.length() < 1024 ? in.length() : 1024];\n\t\t} else {\n\t\t\tReader _r = pipe.getReader();\n\t\t\tif (_r instanceof ParserReader)\n\t\t\t\tthis.r = ((ParserReader)_r).r;\n\t\t\telse\n\t\t\t\tthis.r = _r;\n\t\t\tthis.buff = new char[1024];\n\t\t}\n\t\tpipe.setPositionable(this);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserReader.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"3746a7917cd6c303dd3c9374bba0995d7bed5932","commitMessage":"@@@Javadoc and thrown-exception cleanup.","date":"2019-07-06 02:52:55","modifiedFileCount":"203","status":"M","submitter":"JamesBognar"}]
