[{"authorTime":"2020-04-03 07:05:04","codes":[{"authorDate":"2020-10-13 23:59:08","commitOrder":6,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2020-10-13 23:59:08","endLine":635,"groupId":"5619","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d8/2e88b8b9701dc8646657476159bbbcdd17b99c.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":613,"status":"B"},{"authorDate":"2020-04-03 07:05:04","commitOrder":6,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParser());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2020-04-03 07:05:04","endLine":1686,"groupId":"8666","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/18/e5574160f46b786943dceb3fdbd0421360bcc8.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParser());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1651,"status":"NB"}],"commitId":"0d4a70b8bb5cc4844bc050f4762ee33b6be9acd2","commitMessage":"@@@Remove deprecated code.","date":"2020-10-13 23:59:08","modifiedFileCount":"158","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-10 00:58:15","codes":[{"authorDate":"2020-10-13 23:59:08","commitOrder":7,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2020-10-13 23:59:08","endLine":635,"groupId":"5619","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d8/2e88b8b9701dc8646657476159bbbcdd17b99c.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":613,"status":"N"},{"authorDate":"2021-02-10 00:58:15","commitOrder":7,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-10 00:58:15","endLine":1234,"groupId":"7008","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d5/d35a81934a6f6f72228ce1d81cc4f69fe71ecb.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParser());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1199,"status":"M"}],"commitId":"2e5e343ec79de3252bf0f50122a3ba7998a8c008","commitMessage":"@@@REST refactoring.","date":"2021-02-10 00:58:15","modifiedFileCount":"18","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-10 00:58:15","codes":[{"authorDate":"2021-02-11 01:42:14","commitOrder":8,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-11 01:42:14","endLine":635,"groupId":"5619","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/47/841e50ce8fe9c7bf5bd36cbf516eee36fc5096.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":613,"status":"M"},{"authorDate":"2021-02-10 00:58:15","commitOrder":8,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-10 00:58:15","endLine":1234,"groupId":"7008","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d5/d35a81934a6f6f72228ce1d81cc4f69fe71ecb.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1199,"status":"N"}],"commitId":"6a15bfc9b37a336b9155680d7f6f5d335e5ac5b9","commitMessage":"@@@REST refactoring.","date":"2021-02-11 01:42:14","modifiedFileCount":"13","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-12 06:01:13","codes":[{"authorDate":"2021-02-12 06:01:13","commitOrder":9,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).as(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-12 06:01:13","endLine":627,"groupId":"5619","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/82/305b0b0fc10687d98e1ed4e267372384b87bab.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":605,"status":"M"},{"authorDate":"2021-02-12 06:01:13","commitOrder":9,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getRequestHeaders().getLast(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-12 06:01:13","endLine":1508,"groupId":"7008","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/7f/2516865376f1b2a33f652758cef0c9b51b4560.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeaders().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1473,"status":"M"}],"commitId":"253f95be2dbf91002cd6e88c10023eda944a552f","commitMessage":"@@@REST refactoring.","date":"2021-02-12 06:01:13","modifiedFileCount":"52","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-16 02:24:42","codes":[{"authorDate":"2021-02-12 06:01:13","commitOrder":10,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).as(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-12 06:01:13","endLine":627,"groupId":"5619","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/82/305b0b0fc10687d98e1ed4e267372384b87bab.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).as(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":605,"status":"N"},{"authorDate":"2021-02-16 02:24:42","commitOrder":10,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getRequestHeaders().getLast(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-16 02:24:42","endLine":1321,"groupId":"7008","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c2/114b17abdac06f9973e250660e78256e430f7b.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQuery().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getRequestHeaders().getLast(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1286,"status":"M"}],"commitId":"6e2982a64ed1cb42d6f620826d94a623f079e36e","commitMessage":"@@@REST refactoring.","date":"2021-02-16 02:24:42","modifiedFileCount":"27","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-19 00:35:09","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":11,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-19 00:35:09","endLine":459,"groupId":"5619","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/0f/418fc67c5f6c4e720337bbb2ecc941492071d4.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).as(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).as(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2021-02-19 00:35:09","commitOrder":11,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getRequestHeaders().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-19 00:35:09","endLine":1337,"groupId":"2135","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/45/eb25c7326df8d374b8ccaf69fce5c0c21dcbb9.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getRequestHeaders().getLast(name).parser(pp).schema(schema).as(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1302,"status":"M"}],"commitId":"89e56ee663f747fdf7d34e5a3b5c188971a8409d","commitMessage":"@@@REST refactoring.","date":"2021-02-19 00:35:09","modifiedFileCount":"22","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-20 23:52:32","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":12,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-19 00:35:09","endLine":459,"groupId":"5619","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/0f/418fc67c5f6c4e720337bbb2ecc941492071d4.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"},{"authorDate":"2021-02-20 23:52:32","commitOrder":12,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getLastHeader(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-20 23:52:32","endLine":1554,"groupId":"2135","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c7/674bcd425a07b507db128e24b2ea2430c27f9e.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getRequestHeaders().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1519,"status":"M"}],"commitId":"ef82a51b928963745c56e374e721fe946f4ce993","commitMessage":"@@@REST refactoring.","date":"2021-02-20 23:52:32","modifiedFileCount":"30","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-21 02:06:18","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":13,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-19 00:35:09","endLine":459,"groupId":"5619","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/0f/418fc67c5f6c4e720337bbb2ecc941492071d4.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"},{"authorDate":"2021-02-21 02:06:18","commitOrder":13,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-21 02:06:18","endLine":1448,"groupId":"2135","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2a/af8d15e40f2955e410ec345b867552f1413b92.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getLastHeader(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1413,"status":"M"}],"commitId":"7fbc62027619a2825bca94342d8049d93a2b1bcd","commitMessage":"@@@REST refactoring.","date":"2021-02-21 02:06:18","modifiedFileCount":"29","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-21 05:13:19","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":14,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-19 00:35:09","endLine":459,"groupId":"5619","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/0f/418fc67c5f6c4e720337bbb2ecc941492071d4.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"},{"authorDate":"2021-02-21 05:13:19","commitOrder":14,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParams().get(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParams().get(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-21 05:13:19","endLine":1977,"groupId":"3538","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4a/2251b689e526f023b32882b4fee6289af4a805.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormData().get(pp, schema, name, type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1942,"status":"M"}],"commitId":"48604113c56a5f2d05d245b233ff528d397257ad","commitMessage":"@@@REST refactoring.","date":"2021-02-21 05:13:19","modifiedFileCount":"44","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-22 00:51:39","codes":[{"authorDate":"2021-02-19 00:35:09","commitOrder":15,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-19 00:35:09","endLine":459,"groupId":"5619","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/0f/418fc67c5f6c4e720337bbb2ecc941492071d4.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"},{"authorDate":"2021-02-22 00:51:39","commitOrder":15,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-22 00:51:39","endLine":1966,"groupId":"8265","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f5/859797856e338a319010f870aa4294eea33836.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParams().get(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParams().get(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathMatch().get(pp, schema, name, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1931,"status":"M"}],"commitId":"bd06ea39d2dd2f1731c2200d655ed6be9b3bc136","commitMessage":"@@@REST refactoring.","date":"2021-02-22 00:51:39","modifiedFileCount":"12","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-22 00:51:39","codes":[{"authorDate":"2021-02-28 23:40:42","commitOrder":16,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParserSession().orElse(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-02-28 23:40:42","endLine":459,"groupId":"1091","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/68/d7f57a39f4901019056cd401f1e8d34c505a44.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParser(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2021-02-22 00:51:39","commitOrder":16,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-22 00:51:39","endLine":1966,"groupId":"8265","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f5/859797856e338a319010f870aa4294eea33836.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1931,"status":"N"}],"commitId":"4ad5a6d61ea828e83e6fea37c4cb1c866dccc4aa","commitMessage":"@@@Predefined response beans should extend from apache HttpResponse.","date":"2021-02-28 23:40:42","modifiedFileCount":"135","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-22 00:51:39","codes":[{"authorDate":"2021-03-10 00:26:23","commitOrder":17,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParserSession().orElse(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-03-10 00:26:23","endLine":445,"groupId":"1091","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3b/2328a7e254d7a007afadebbad3848411cbab72.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParserSession().orElse(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"M"},{"authorDate":"2021-02-22 00:51:39","commitOrder":17,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","date":"2021-02-22 00:51:39","endLine":1966,"groupId":"8265","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f5/859797856e338a319010f870aa4294eea33836.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1931,"status":"N"}],"commitId":"9b049e47091a099c0b1581d2ca97e1ea0f3eb027","commitMessage":"@@@New Thrown header bean.","date":"2021-03-10 00:26:23","modifiedFileCount":"14","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-04-22 04:24:58","codes":[{"authorDate":"2021-03-10 00:26:23","commitOrder":18,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParserSession().orElse(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-03-10 00:26:23","endLine":445,"groupId":"1091","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3b/2328a7e254d7a007afadebbad3848411cbab72.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParserSession().orElse(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"N"},{"authorDate":"2021-04-22 04:24:58","commitOrder":18,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","date":"2021-04-22 04:24:58","endLine":1966,"groupId":"8265","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5e/786f6c6757d3536f158c7fa3fd38b80723f194.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1931,"status":"M"}],"commitId":"96836d88abc05fb9691eb066e37ec9347b47cc0a","commitMessage":"@@@Clean up ExceptionUtils usage.","date":"2021-04-22 04:24:58","modifiedFileCount":"139","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-04-22 04:24:58","codes":[{"authorDate":"2021-06-07 04:01:21","commitOrder":19,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = getPartParserSession(pm.getParser().orElse(rc.getPartParser()));\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-06-07 04:01:21","endLine":448,"groupId":"1195","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ee/91d68292886e9bfe1f02d7fd165b0c657ab5de.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = pm.getParserSession().orElse(partParser);\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":426,"status":"M"},{"authorDate":"2021-04-22 04:24:58","commitOrder":19,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","date":"2021-04-22 04:24:58","endLine":1966,"groupId":"8265","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5e/786f6c6757d3536f158c7fa3fd38b80723f194.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1931,"status":"N"}],"commitId":"e59c7e8e190c95e237c5f0cbc17bd70943886e21","commitMessage":"@@@Code cleanup.","date":"2021-06-07 04:01:21","modifiedFileCount":"9","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-04-22 04:24:58","codes":[{"authorDate":"2021-08-22 00:17:39","commitOrder":20,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = getPartParserSession(pm.getParser().orElse(rc.getPartParser()));\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getBeanContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-08-22 00:17:39","endLine":448,"groupId":"1195","id":29,"instanceNumber":1,"isCurCommit":1,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4f/c055cec203250f1cf79067acc60fd50dae5c59.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = getPartParserSession(pm.getParser().orElse(rc.getPartParser()));\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":426,"status":"M"},{"authorDate":"2021-04-22 04:24:58","commitOrder":20,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","date":"2021-04-22 04:24:58","endLine":1966,"groupId":"8265","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5e/786f6c6757d3536f158c7fa3fd38b80723f194.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1931,"status":"N"}],"commitId":"264f7d6ab489f248e8eb0865bfffe2e7c32339a1","commitMessage":"@@@Context API refactoring.","date":"2021-08-22 00:17:39","modifiedFileCount":"115","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-11 07:53:08","codes":[{"authorDate":"2021-08-22 00:17:39","commitOrder":21,"curCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = getPartParserSession(pm.getParser().orElse(rc.getPartParser()));\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getBeanContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","date":"2021-08-22 00:17:39","endLine":448,"groupId":"102139","id":31,"instanceNumber":1,"isCurCommit":1,"methodName":"as","params":"(ResponseBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4f/c055cec203250f1cf79067acc60fd50dae5c59.src","preCode":"\t<T> T as(ResponseBeanMeta rbm) {\n\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\tfinal RestClient rc = this.client;\n\t\treturn (T)Proxy.newProxyInstance(\n\t\t\tc.getClassLoader(),\n\t\t\tnew Class[] { c },\n\t\t\tnew InvocationHandler() {\n\t\t\t\t@Override \n\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\tResponseBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\tHttpPartParserSession pp = getPartParserSession(pm.getParser().orElse(rc.getPartParser()));\n\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\tString name = pm.getPartName().orElse(null);\n\t\t\t\t\tClassMeta<?> type = rc.getBeanContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\tif (pt == RESPONSE_HEADER)\n\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\tif (pt == RESPONSE_STATUS)\n\t\t\t\t\t\treturn getStatusCode();\n\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t}\n\t\t});\n\t}\n","realPath":"juneau-rest/juneau-rest-client/src/main/java/org/apache/juneau/rest/client/RestResponse.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":426,"status":"N"},{"authorDate":"2021-09-11 07:53:08","commitOrder":21,"curCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanSession bs = getBeanSession();\n\t\t\tfinal BeanMeta<T> bm = bs.getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = bs.getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","date":"2021-09-11 07:53:08","endLine":1949,"groupId":"102139","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"getRequest","params":"(finalRequestBeanMetarbm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ed/3238a1a9b3d8784adf0d22d70ff40cd00d3614.src","preCode":"\tpublic <T> T getRequest(final RequestBeanMeta rbm) {\n\t\ttry {\n\t\t\tClass<T> c = (Class<T>)rbm.getClassMeta().getInnerClass();\n\t\t\tfinal BeanMeta<T> bm = getBeanSession().getBeanMeta(c);\n\t\t\treturn (T)Proxy.newProxyInstance(\n\t\t\t\tc.getClassLoader(),\n\t\t\t\tnew Class[] { c },\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override \n\t\t\t\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tRequestBeanPropertyMeta pm = rbm.getProperty(method.getName());\n\t\t\t\t\t\tif (pm != null) {\n\t\t\t\t\t\t\tHttpPartParserSession pp = pm.getParser(getPartParserSession());\n\t\t\t\t\t\t\tHttpPartSchema schema = pm.getSchema();\n\t\t\t\t\t\t\tString name = pm.getPartName();\n\t\t\t\t\t\t\tClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType());\n\t\t\t\t\t\t\tHttpPartType pt = pm.getPartType();\n\t\t\t\t\t\t\tif (pt == HttpPartType.BODY)\n\t\t\t\t\t\t\t\treturn getBody().schema(schema).asType(type);\n\t\t\t\t\t\t\tif (pt == QUERY)\n\t\t\t\t\t\t\t\treturn getQueryParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == FORMDATA)\n\t\t\t\t\t\t\t\treturn getFormParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == HEADER)\n\t\t\t\t\t\t\t\treturn getHeader(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t\tif (pt == PATH)\n\t\t\t\t\t\t\t\treturn getPathParam(name).parser(pp).schema(schema).asType(type).orElse(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t});\n\t\t} catch (Exception e) {\n\t\t\tthrow runtimeException(e);\n\t\t}\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RestRequest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":1913,"status":"M"}],"commitId":"d276596cb8cadbfe7b5944421d27604d4f7704cf","commitMessage":"@@@Context API refactoring.","date":"2021-09-11 07:53:08","modifiedFileCount":"4","status":"M","submitter":"JamesBognar"}]
