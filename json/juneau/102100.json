[{"authorTime":"2018-12-21 21:47:21","codes":[{"authorDate":"2018-12-14 02:00:46","commitOrder":3,"curCode":"    public static void main(String[] args) throws Exception{\n        \r\n        \r\n        \r\n        \r\n        HtmlSerializer htmlSerializer = HtmlSerializer.DEFAULT;\n        \r\n        HtmlParser htmlParser = HtmlParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = htmlSerializer.serialize(pojo);\n\n        \r\n        System.out.println(flat);\n\n        Pojo parse = htmlParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n\r\n\r\n\r\n\n        String docSerialized = HtmlDocSerializer.DEFAULT.serialize(pojo);\n        System.out.println(docSerialized);\n\n        \r\n        \r\n    }\n","date":"2018-12-14 02:00:46","endLine":62,"groupId":"3066","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f7/db499cb1edec9f739c96ff40043d77778a09c3.src","preCode":"    public static void main(String[] args) throws Exception{\n        \r\n        \r\n        \r\n        \r\n        HtmlSerializer htmlSerializer = HtmlSerializer.DEFAULT;\n        \r\n        HtmlParser htmlParser = HtmlParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = htmlSerializer.serialize(pojo);\n\n        \r\n        System.out.println(flat);\n\n        Pojo parse = htmlParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n\r\n\r\n\r\n\n        String docSerialized = HtmlDocSerializer.DEFAULT.serialize(pojo);\n        System.out.println(docSerialized);\n\n        \r\n        \r\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/html/HtmlSimpleExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"NB"},{"authorDate":"2018-12-21 21:47:21","commitOrder":3,"curCode":"    public static void main(String[] args) throws Exception{\n\n        OpenApiSerializer oapiSerializer = OpenApiSerializer.DEFAULT;\n\n        OpenApiParser oapiParser = OpenApiParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = oapiSerializer.serialize(pojo);\n        \r\n\n        Pojo parse = oapiParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n        HttpPartSchema schema = HttpPartSchema\n                .create(\"array\")\n                .collectionFormat(\"pipes\")\n                .items(\n                        HttpPartSchema\n                                .create(\"array\")\n                                .collectionFormat(\"csv\")\n                                .items(\n                                        HttpPartSchema.create(\"integer\",\"int64\")\n                                )\n                )\n                .build();\n        Object value = new long[][]{{1,2,3},{4,5,6},{7,8,9}};\n        String output = OpenApiSerializer.DEFAULT.serialize(HttpPartType.HEADER, schema, value);\n\n        HttpPartSchema schemab = HttpPartSchema.create().type(\"string\").build();\n        \r\n        HttpPartSerializer s = OpenApiSerializer.DEFAULT;\n        String httpPart = s.serialize(schemab, pojo);\n        System.out.println(httpPart);\n\n        \r\n        HttpPartParser p = OpenApiParser.DEFAULT;\n        pojo = p.parse(schemab, httpPart, Pojo.class);\n\n        \r\n        \r\n    }\n","date":"2018-12-21 21:47:21","endLine":87,"groupId":"3066","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/98/d0cf8976f81bd8b8068e60803cceae80bfc875.src","preCode":"    public static void main(String[] args) throws Exception{\n\n        OpenApiSerializer oapiSerializer = OpenApiSerializer.DEFAULT;\n\n        OpenApiParser oapiParser = OpenApiParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = oapiSerializer.serialize(pojo);\n        \r\n\n        Pojo parse = oapiParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n        HttpPartSchema schema = HttpPartSchema\n                .create(\"array\")\n                .collectionFormat(\"pipes\")\n                .items(\n                        HttpPartSchema\n                                .create(\"array\")\n                                .collectionFormat(\"csv\")\n                                .items(\n                                        HttpPartSchema.create(\"integer\",\"int64\")\n                                )\n                )\n                .build();\n        Object value = new long[][]{{1,2,3},{4,5,6},{7,8,9}};\n        String output = OpenApiSerializer.DEFAULT.serialize(HttpPartType.HEADER, schema, value);\n\n        HttpPartSchema schemab = HttpPartSchema.create().type(\"string\").build();\n        \r\n        HttpPartSerializer s = OpenApiSerializer.DEFAULT;\n        String httpPart = s.serialize(schemab, pojo);\n        System.out.println(httpPart);\n\n        \r\n        HttpPartParser p = OpenApiParser.DEFAULT;\n        pojo = p.parse(schemab, httpPart, Pojo.class);\n\n        \r\n        \r\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/oapi/OapiExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"}],"commitId":"e9ef75779aedb9c5df16eede846c8c57e6a22f0d","commitMessage":"@@@Merge pull request #42 from Akayeshmantha/JUNEAU-97\n\nadding oapi samples","date":"2018-12-21 21:47:21","modifiedFileCount":"0","status":"M","submitter":"James Bognar"},{"authorTime":"2020-04-03 05:44:27","codes":[{"authorDate":"2018-12-14 02:00:46","commitOrder":4,"curCode":"    public static void main(String[] args) throws Exception{\n        \r\n        \r\n        \r\n        \r\n        HtmlSerializer htmlSerializer = HtmlSerializer.DEFAULT;\n        \r\n        HtmlParser htmlParser = HtmlParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = htmlSerializer.serialize(pojo);\n\n        \r\n        System.out.println(flat);\n\n        Pojo parse = htmlParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n\r\n\r\n\r\n\n        String docSerialized = HtmlDocSerializer.DEFAULT.serialize(pojo);\n        System.out.println(docSerialized);\n\n        \r\n        \r\n    }\n","date":"2018-12-14 02:00:46","endLine":62,"groupId":"3066","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f7/db499cb1edec9f739c96ff40043d77778a09c3.src","preCode":"    public static void main(String[] args) throws Exception{\n        \r\n        \r\n        \r\n        \r\n        HtmlSerializer htmlSerializer = HtmlSerializer.DEFAULT;\n        \r\n        HtmlParser htmlParser = HtmlParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = htmlSerializer.serialize(pojo);\n\n        \r\n        System.out.println(flat);\n\n        Pojo parse = htmlParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n\r\n\r\n\r\n\n        String docSerialized = HtmlDocSerializer.DEFAULT.serialize(pojo);\n        System.out.println(docSerialized);\n\n        \r\n        \r\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/html/HtmlSimpleExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"N"},{"authorDate":"2020-04-03 05:44:27","commitOrder":4,"curCode":"\tpublic static void main(String[] args) throws Exception{\n\n\t\tOpenApiSerializer oapiSerializer = OpenApiSerializer.DEFAULT;\n\n\t\tOpenApiParser oapiParser = OpenApiParser.DEFAULT;\n\n\t\tPojo pojo = new Pojo(\"id\",\"name\");\n\n\t\tString flat = oapiSerializer.serialize(pojo);\n\t\t\r\n\n\t\tPojo parse = oapiParser.parse(flat, Pojo.class);\n\n\t\tassert parse.getId().equals(pojo.getId());\n\t\tassert parse.getName().equals(pojo.getName());\n\n\t\t\r\n\t\tHttpPartSchema schema = HttpPartSchema\n\t\t\t.create(\"array\")\n\t\t\t.collectionFormat(\"pipes\")\n\t\t\t.items(\n\t\t\t\tHttpPartSchema\n\t\t\t\t.create(\"array\")\n\t\t\t\t.collectionFormat(\"csv\")\n\t\t\t\t.items(\n\t\t\t\t\tHttpPartSchema.create(\"integer\",\"int64\")\n\t\t\t\t)\n\t\t\t)\n\t\t\t.build();\n\t\tObject value = new long[][]{{1,2,3},{4,5,6},{7,8,9}};\n\t\tString output = OpenApiSerializer.DEFAULT.serialize(HEADER, schema, value);\n\n\t\tHttpPartSchema schemab = HttpPartSchema.create().type(\"string\").build();\n\t\t\r\n\t\tHttpPartSerializer s = OpenApiSerializer.DEFAULT;\n\t\tString httpPart = s.createPartSession(null).serialize(HEADER, schemab, pojo);\n\t\tSystem.out.println(httpPart);\n\n\t\t\r\n\t\tHttpPartParser p = OpenApiParser.DEFAULT;\n\t\tpojo = p.createPartSession(null).parse(HEADER, schemab, httpPart, Pojo.class);\n\n\t\t\r\n\t\t\r\n\t}\n","date":"2020-04-03 05:44:27","endLine":82,"groupId":"3066","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/44/29f97f5abf31051edcb7509d4536101d05bdef.src","preCode":"\tpublic static void main(String[] args) throws Exception{\n\n\t\tOpenApiSerializer oapiSerializer = OpenApiSerializer.DEFAULT;\n\n\t\tOpenApiParser oapiParser = OpenApiParser.DEFAULT;\n\n\t\tPojo pojo = new Pojo(\"id\",\"name\");\n\n\t\tString flat = oapiSerializer.serialize(pojo);\n\t\t\r\n\n\t\tPojo parse = oapiParser.parse(flat, Pojo.class);\n\n\t\tassert parse.getId().equals(pojo.getId());\n\t\tassert parse.getName().equals(pojo.getName());\n\n\t\t\r\n\t\tHttpPartSchema schema = HttpPartSchema\n\t\t\t.create(\"array\")\n\t\t\t.collectionFormat(\"pipes\")\n\t\t\t.items(\n\t\t\t\tHttpPartSchema\n\t\t\t\t.create(\"array\")\n\t\t\t\t.collectionFormat(\"csv\")\n\t\t\t\t.items(\n\t\t\t\t\tHttpPartSchema.create(\"integer\",\"int64\")\n\t\t\t\t)\n\t\t\t)\n\t\t\t.build();\n\t\tObject value = new long[][]{{1,2,3},{4,5,6},{7,8,9}};\n\t\tString output = OpenApiSerializer.DEFAULT.serialize(HttpPartType.HEADER, schema, value);\n\n\t\tHttpPartSchema schemab = HttpPartSchema.create().type(\"string\").build();\n\t\t\r\n\t\tHttpPartSerializer s = OpenApiSerializer.DEFAULT;\n\t\tString httpPart = s.serialize(schemab, pojo);\n\t\tSystem.out.println(httpPart);\n\n\t\t\r\n\t\tHttpPartParser p = OpenApiParser.DEFAULT;\n\t\tpojo = p.parse(schemab, httpPart, Pojo.class);\n\n\t\t\r\n\t\t\r\n\t}\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/oapi/OapiExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"80903a22aa5890357fa57ecb40d803d649f34eb7","commitMessage":"@@@RestClient tests.","date":"2020-04-03 05:44:27","modifiedFileCount":"34","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-10 01:49:55","codes":[{"authorDate":"2018-12-14 02:00:46","commitOrder":5,"curCode":"    public static void main(String[] args) throws Exception{\n        \r\n        \r\n        \r\n        \r\n        HtmlSerializer htmlSerializer = HtmlSerializer.DEFAULT;\n        \r\n        HtmlParser htmlParser = HtmlParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = htmlSerializer.serialize(pojo);\n\n        \r\n        System.out.println(flat);\n\n        Pojo parse = htmlParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n\r\n\r\n\r\n\n        String docSerialized = HtmlDocSerializer.DEFAULT.serialize(pojo);\n        System.out.println(docSerialized);\n\n        \r\n        \r\n    }\n","date":"2018-12-14 02:00:46","endLine":62,"groupId":"102100","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f7/db499cb1edec9f739c96ff40043d77778a09c3.src","preCode":"    public static void main(String[] args) throws Exception{\n        \r\n        \r\n        \r\n        \r\n        HtmlSerializer htmlSerializer = HtmlSerializer.DEFAULT;\n        \r\n        HtmlParser htmlParser = HtmlParser.DEFAULT;\n\n        Pojo pojo = new Pojo(\"id\",\"name\");\n\n        String flat = htmlSerializer.serialize(pojo);\n\n        \r\n        System.out.println(flat);\n\n        Pojo parse = htmlParser.parse(flat, Pojo.class);\n\n        assert parse.getId().equals(pojo.getId());\n        assert parse.getName().equals(pojo.getName());\n\n        \r\n\r\n\r\n\r\n\n        String docSerialized = HtmlDocSerializer.DEFAULT.serialize(pojo);\n        System.out.println(docSerialized);\n\n        \r\n        \r\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/html/HtmlSimpleExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"N"},{"authorDate":"2021-09-10 01:49:55","commitOrder":5,"curCode":"\tpublic static void main(String[] args) throws Exception{\n\n\t\tOpenApiSerializer oapiSerializer = OpenApiSerializer.DEFAULT;\n\n\t\tOpenApiParser oapiParser = OpenApiParser.DEFAULT;\n\n\t\tPojo pojo = new Pojo(\"id\",\"name\");\n\n\t\tString flat = oapiSerializer.serialize(pojo);\n\t\t\r\n\n\t\tPojo parse = oapiParser.parse(flat, Pojo.class);\n\n\t\tassert parse.getId().equals(pojo.getId());\n\t\tassert parse.getName().equals(pojo.getName());\n\n\t\t\r\n\t\tHttpPartSchema schema = HttpPartSchema\n\t\t\t.create(\"array\")\n\t\t\t.collectionFormat(\"pipes\")\n\t\t\t.items(\n\t\t\t\tHttpPartSchema\n\t\t\t\t.create(\"array\")\n\t\t\t\t.collectionFormat(\"csv\")\n\t\t\t\t.items(\n\t\t\t\t\tHttpPartSchema.create(\"integer\",\"int64\")\n\t\t\t\t)\n\t\t\t)\n\t\t\t.build();\n\t\tObject value = new long[][]{{1,2,3},{4,5,6},{7,8,9}};\n\t\tString output = OpenApiSerializer.DEFAULT.serialize(HEADER, schema, value);\n\n\t\tHttpPartSchema schemab = HttpPartSchema.create().type(\"string\").build();\n\t\t\r\n\t\tHttpPartSerializer s = OpenApiSerializer.DEFAULT;\n\t\tString httpPart = s.createPartSession(null).serialize(HEADER, schemab, pojo);\n\t\tSystem.out.println(httpPart);\n\n\t\t\r\n\t\tHttpPartParser p = OpenApiParser.DEFAULT;\n\t\tpojo = p.createPartSession(null).parse(HEADER, schemab, httpPart, oapiParser.getClassMeta(Pojo.class));\n\n\t\t\r\n\t\t\r\n\t}\n","date":"2021-09-10 01:49:55","endLine":82,"groupId":"102100","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5b/611d3bd103e47b268351ae6f114ed4a013c919.src","preCode":"\tpublic static void main(String[] args) throws Exception{\n\n\t\tOpenApiSerializer oapiSerializer = OpenApiSerializer.DEFAULT;\n\n\t\tOpenApiParser oapiParser = OpenApiParser.DEFAULT;\n\n\t\tPojo pojo = new Pojo(\"id\",\"name\");\n\n\t\tString flat = oapiSerializer.serialize(pojo);\n\t\t\r\n\n\t\tPojo parse = oapiParser.parse(flat, Pojo.class);\n\n\t\tassert parse.getId().equals(pojo.getId());\n\t\tassert parse.getName().equals(pojo.getName());\n\n\t\t\r\n\t\tHttpPartSchema schema = HttpPartSchema\n\t\t\t.create(\"array\")\n\t\t\t.collectionFormat(\"pipes\")\n\t\t\t.items(\n\t\t\t\tHttpPartSchema\n\t\t\t\t.create(\"array\")\n\t\t\t\t.collectionFormat(\"csv\")\n\t\t\t\t.items(\n\t\t\t\t\tHttpPartSchema.create(\"integer\",\"int64\")\n\t\t\t\t)\n\t\t\t)\n\t\t\t.build();\n\t\tObject value = new long[][]{{1,2,3},{4,5,6},{7,8,9}};\n\t\tString output = OpenApiSerializer.DEFAULT.serialize(HEADER, schema, value);\n\n\t\tHttpPartSchema schemab = HttpPartSchema.create().type(\"string\").build();\n\t\t\r\n\t\tHttpPartSerializer s = OpenApiSerializer.DEFAULT;\n\t\tString httpPart = s.createPartSession(null).serialize(HEADER, schemab, pojo);\n\t\tSystem.out.println(httpPart);\n\n\t\t\r\n\t\tHttpPartParser p = OpenApiParser.DEFAULT;\n\t\tpojo = p.createPartSession(null).parse(HEADER, schemab, httpPart, Pojo.class);\n\n\t\t\r\n\t\t\r\n\t}\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/oapi/OapiExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"ab4ca16edd7bfe620453a36339efc44490933b3f","commitMessage":"@@@Context API refactoring.","date":"2021-09-10 01:49:55","modifiedFileCount":"9","status":"M","submitter":"JamesBognar"}]
