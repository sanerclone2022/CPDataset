[{"authorTime":"2021-09-12 23:43:00","codes":[{"authorDate":"2021-09-12 23:43:00","commitOrder":1,"curCode":"\tpublic Context(ContextProperties cp, boolean allowReuse) {\n\t\tproperties = cp == null ? ContextProperties.DEFAULT : cp;\n\t\tcp = properties;\n\t\tthis.identityCode = allowReuse ? new HashCode().add(className(this)).add(cp).get() : System.identityHashCode(this);\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(false);\n\n\t\tReflectionMapBuilder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : cp.getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","date":"2021-09-12 23:43:00","endLine":191,"groupId":"6113","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"Context","params":"(ContextPropertiescp@booleanallowReuse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b8/355188778879fc5202c6eaa7c40b784f472fd0.src","preCode":"\tpublic Context(ContextProperties cp, boolean allowReuse) {\n\t\tproperties = cp == null ? ContextProperties.DEFAULT : cp;\n\t\tcp = properties;\n\t\tthis.identityCode = allowReuse ? new HashCode().add(className(this)).add(cp).get() : System.identityHashCode(this);\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(false);\n\n\t\tReflectionMapBuilder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : cp.getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/Context.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"},{"authorDate":"2021-09-12 23:43:00","commitOrder":1,"curCode":"\tprotected Context(ContextBuilder builder) {\n\t\tContextProperties cp = builder.getContextProperties();\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(builder.debug);\n\t\tidentityCode = System.identityHashCode(this);\n\t\tproperties = builder.getContextProperties();\n\n\t\tReflectionMapBuilder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : builder.getContextProperties().getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","date":"2021-09-12 23:43:00","endLine":230,"groupId":"6113","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"Context","params":"(ContextBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b8/355188778879fc5202c6eaa7c40b784f472fd0.src","preCode":"\tprotected Context(ContextBuilder builder) {\n\t\tContextProperties cp = builder.getContextProperties();\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(builder.debug);\n\t\tidentityCode = System.identityHashCode(this);\n\t\tproperties = builder.getContextProperties();\n\n\t\tReflectionMapBuilder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : builder.getContextProperties().getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/Context.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"fe80df5cf9e8fed9a15d10e74f12d574907886ed","commitMessage":"@@@Context API refactoring.","date":"2021-09-12 23:43:00","modifiedFileCount":"48","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-09-14 00:52:15","codes":[{"authorDate":"2021-09-14 00:52:15","commitOrder":2,"curCode":"\tpublic Context(ContextProperties cp, boolean allowReuse) {\n\t\tproperties = cp == null ? ContextProperties.DEFAULT : cp;\n\t\tcp = properties;\n\t\tthis.identityCode = allowReuse ? new HashCode().add(className(this)).add(cp).get() : System.identityHashCode(this);\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(false);\n\n\t\tReflectionMap.Builder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : cp.getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","date":"2021-09-14 00:52:15","endLine":191,"groupId":"1189","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"Context","params":"(ContextPropertiescp@booleanallowReuse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/22/3b1ae0e29a3bda4739ac9fe77e689b77fb41b7.src","preCode":"\tpublic Context(ContextProperties cp, boolean allowReuse) {\n\t\tproperties = cp == null ? ContextProperties.DEFAULT : cp;\n\t\tcp = properties;\n\t\tthis.identityCode = allowReuse ? new HashCode().add(className(this)).add(cp).get() : System.identityHashCode(this);\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(false);\n\n\t\tReflectionMapBuilder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : cp.getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/Context.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2021-09-14 00:52:15","commitOrder":2,"curCode":"\tprotected Context(ContextBuilder builder) {\n\t\tContextProperties cp = builder.getContextProperties();\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(builder.debug);\n\t\tidentityCode = System.identityHashCode(this);\n\t\tproperties = builder.getContextProperties();\n\n\t\tReflectionMap.Builder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : builder.getContextProperties().getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","date":"2021-09-14 00:52:15","endLine":230,"groupId":"1189","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"Context","params":"(ContextBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/22/3b1ae0e29a3bda4739ac9fe77e689b77fb41b7.src","preCode":"\tprotected Context(ContextBuilder builder) {\n\t\tContextProperties cp = builder.getContextProperties();\n\t\tdebug = cp.getBoolean(CONTEXT_debug).orElse(builder.debug);\n\t\tidentityCode = System.identityHashCode(this);\n\t\tproperties = builder.getContextProperties();\n\n\t\tReflectionMapBuilder<Annotation> rmb = ReflectionMap.create(Annotation.class);\n\t\tfor (Annotation a : builder.getContextProperties().getList(CONTEXT_annotations, Annotation.class).orElse(emptyList())) {\n\t\t\ttry {\n\t\t\t\tClassInfo ci = ClassInfo.of(a.getClass());\n\n\t\t\t\tMethodInfo mi = ci.getMethod(\"onClass\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(Class[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an onClass() method that returns a Class array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (Class<?> c : (Class<?>[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(c.getName(), a);\n\t\t\t\t}\n\n\t\t\t\tmi = ci.getMethod(\"on\");\n\t\t\t\tif (mi != null) {\n\t\t\t\t\tif (! mi.getReturnType().is(String[].class))\n\t\t\t\t\t\tthrow new ConfigException(\"Invalid annotation @{0} used in BEAN_annotations property.  Annotation must define an on() method that returns a String array.\", a.getClass().getSimpleName());\n\t\t\t\t\tfor (String s : (String[])mi.accessible().invoke(a))\n\t\t\t\t\t\trmb.append(s, a);\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new ConfigException(e, \"Invalid annotation @{0} used in BEAN_annotations property.\", className(a));\n\t\t\t}\n\t\t}\n\t\tthis.annotations = rmb.build();\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/Context.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"290ad26f424bf8a16e3a8faa3b430dc1c7bf1a90","commitMessage":"@@@Context API refactoring.","date":"2021-09-14 00:52:15","modifiedFileCount":"20","status":"M","submitter":"JamesBognar"}]
