[{"authorTime":"2021-02-22 00:51:39","codes":[{"authorDate":"2021-02-20 23:52:32","commitOrder":4,"curCode":"\tpublic RequestHeaders addDefault(List<Header> pairs) {\n\t\tassertArgNotNull(\"pairs\", pairs);\n\t\tfor (Header p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestHeader> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestHeader x = new RequestHeader(req, name, p.getValue());\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","date":"2021-02-20 23:52:32","endLine":132,"groupId":"7844","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addDefault","params":"(List<Header>pairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d9/39a23c4a9122864db93c1371b577d82ce87775.src","preCode":"\tpublic RequestHeaders addDefault(List<Header> pairs) {\n\t\tassertArgNotNull(\"pairs\", pairs);\n\t\tfor (Header p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestHeader> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestHeader x = new RequestHeader(req, name, p.getValue());\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RequestHeaders.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"NB"},{"authorDate":"2021-02-22 00:51:39","commitOrder":4,"curCode":"\tpublic RequestPathParams addDefault(List<NameValuePair> pairs) {\n\t\tfor (NameValuePair p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestPathParam> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestPathParam x = new RequestPathParam(req, name, p.getValue());\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","date":"2021-02-22 00:51:39","endLine":116,"groupId":"6969","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addDefault","params":"(List<NameValuePair>pairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/98/11e779c1ea64ca61d5c321e4cb43179aa44799.src","preCode":"\tpublic RequestPathParams addDefault(List<NameValuePair> pairs) {\n\t\tfor (NameValuePair p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestPathParam> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestPathParam x = new RequestPathParam(req, name, p.getValue());\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RequestPathParams.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"bd06ea39d2dd2f1731c2200d655ed6be9b3bc136","commitMessage":"@@@REST refactoring.","date":"2021-02-22 00:51:39","modifiedFileCount":"12","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-02-22 06:37:26","codes":[{"authorDate":"2021-02-22 06:37:26","commitOrder":5,"curCode":"\tpublic RequestHeaders addDefault(List<Header> pairs) {\n\t\tassertArgNotNull(\"pairs\", pairs);\n\t\tfor (Header p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestHeader> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestHeader x = new RequestHeader(req, name, vs.resolve(p.getValue()));\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","date":"2021-02-22 06:37:26","endLine":144,"groupId":"122309","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addDefault","params":"(List<Header>pairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a2/899ce342b3caef125763203912a1bc557bf24e.src","preCode":"\tpublic RequestHeaders addDefault(List<Header> pairs) {\n\t\tassertArgNotNull(\"pairs\", pairs);\n\t\tfor (Header p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestHeader> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestHeader x = new RequestHeader(req, name, p.getValue());\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RequestHeaders.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2021-02-22 06:37:26","commitOrder":5,"curCode":"\tpublic RequestPathParams addDefault(List<NameValuePair> pairs) {\n\t\tfor (NameValuePair p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestPathParam> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestPathParam x = new RequestPathParam(req, name, vs.resolve(p.getValue()));\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","date":"2021-02-22 06:37:26","endLine":119,"groupId":"122309","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addDefault","params":"(List<NameValuePair>pairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a2/70aa8df75d3fa1e7b3744789603c862f3ba2a5.src","preCode":"\tpublic RequestPathParams addDefault(List<NameValuePair> pairs) {\n\t\tfor (NameValuePair p : pairs) {\n\t\t\tString name = p.getName();\n\t\t\tString key = key(name);\n\t\t\tList<RequestPathParam> l = map.get(key);\n\t\t\tboolean hasAllBlanks = l != null && l.stream().allMatch(x -> StringUtils.isEmpty(x.getValue()));\n\t\t\tif (l == null || hasAllBlanks) {\n\t\t\t\tif (hasAllBlanks)\n\t\t\t\t\tlist.removeAll(l);\n\t\t\t\tRequestPathParam x = new RequestPathParam(req, name, p.getValue());\n\t\t\t\tlist.add(x);\n\t\t\t\tmap.put(key, AList.of(x));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/RequestPathParams.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"4316a935bf7ed327dd031b3fbc5d8e335b1f9971","commitMessage":"@@@REST refactoring.","date":"2021-02-22 06:37:26","modifiedFileCount":"24","status":"M","submitter":"JamesBognar"}]
