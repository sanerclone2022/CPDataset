[{"authorTime":"2017-09-02 22:10:11","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Xml> xmls, List<XmlSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn NamespaceFactory.get(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.prefix().equals(prefix) && ! xml2.namespace().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, xml2.namespace());\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(prefix, schema.namespace());\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, xmlNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Xml.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.namespace().equals(ns) && ! xml2.prefix().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(xml2.prefix(), ns);\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(schema.prefix(), ns);\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn NamespaceFactory.get(xmlNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","date":"2017-09-02 22:10:11","endLine":545,"groupId":"7625","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findNamespace","params":"(Stringprefix@Stringns@List<Xml>xmls@List<XmlSchema>schemas)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/03/31315822c19685d867a4326e87c9600b68c00a.src","preCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Xml> xmls, List<XmlSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn NamespaceFactory.get(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.prefix().equals(prefix) && ! xml2.namespace().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, xml2.namespace());\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(prefix, schema.namespace());\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, xmlNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Xml.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.namespace().equals(ns) && ! xml2.prefix().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(xml2.prefix(), ns);\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(schema.prefix(), ns);\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn NamespaceFactory.get(xmlNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/xml/XmlUtils.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"B"},{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Rdf> rdfs, List<RdfSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn NamespaceFactory.get(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.prefix().equals(prefix) && ! rdf2.namespace().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, rdf2.namespace());\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(prefix, schema.namespace());\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, rdfNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Rdf.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.namespace().equals(ns) && ! rdf2.prefix().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(rdf2.prefix(), ns);\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(schema.prefix(), ns);\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn NamespaceFactory.get(rdfNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","date":"2017-09-02 22:10:11","endLine":91,"groupId":"6890","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findNamespace","params":"(Stringprefix@Stringns@List<Rdf>rdfs@List<RdfSchema>schemas)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/04/32efb86ff98246dd4da5ffdce6654275320bfc.src","preCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Rdf> rdfs, List<RdfSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn NamespaceFactory.get(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.prefix().equals(prefix) && ! rdf2.namespace().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, rdf2.namespace());\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(prefix, schema.namespace());\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, rdfNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Rdf.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.namespace().equals(ns) && ! rdf2.prefix().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(rdf2.prefix(), ns);\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(schema.prefix(), ns);\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn NamespaceFactory.get(rdfNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","realPath":"juneau-core/juneau-marshall-rdf/src/main/java/org/apache/juneau/jena/RdfUtils.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"75b0d8ee69277699acb78aff1fb69d041899c6ae","commitMessage":"@@@Add project hierarchies.  part 1","date":"2017-09-02 22:10:11","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2017-12-24 00:50:26","codes":[{"authorDate":"2017-12-24 00:50:26","commitOrder":2,"curCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Xml> xmls, List<XmlSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn Namespace.create(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.prefix().equals(prefix) && ! xml2.namespace().isEmpty())\n\t\t\t\t\t\treturn Namespace.create(prefix, xml2.namespace());\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn Namespace.create(prefix, schema.namespace());\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn Namespace.create(prefix, xmlNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Xml.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.namespace().equals(ns) && ! xml2.prefix().isEmpty())\n\t\t\t\t\t\treturn Namespace.create(xml2.prefix(), ns);\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn Namespace.create(schema.prefix(), ns);\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn Namespace.create(xmlNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","date":"2017-12-24 00:50:26","endLine":547,"groupId":"12136","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findNamespace","params":"(Stringprefix@Stringns@List<Xml>xmls@List<XmlSchema>schemas)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/8c/bdccc1280dc87119c1431af04a694250faec8a.src","preCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Xml> xmls, List<XmlSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn NamespaceFactory.get(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.prefix().equals(prefix) && ! xml2.namespace().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, xml2.namespace());\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(prefix, schema.namespace());\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, xmlNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Xml.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (xmls != null)\n\t\t\t\tfor (Xml xml2 : xmls)\n\t\t\t\t\tif (xml2.namespace().equals(ns) && ! xml2.prefix().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(xml2.prefix(), ns);\n\t\t\tfor (XmlSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(schema.prefix(), ns);\n\t\t\t\tfor (XmlNs xmlNs : schema.xmlNs())\n\t\t\t\t\tif (xmlNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn NamespaceFactory.get(xmlNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/xml/XmlUtils.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":509,"status":"M"},{"authorDate":"2017-12-24 00:50:26","commitOrder":2,"curCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Rdf> rdfs, List<RdfSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn Namespace.create(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.prefix().equals(prefix) && ! rdf2.namespace().isEmpty())\n\t\t\t\t\t\treturn Namespace.create(prefix, rdf2.namespace());\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn Namespace.create(prefix, schema.namespace());\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn Namespace.create(prefix, rdfNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Rdf.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.namespace().equals(ns) && ! rdf2.prefix().isEmpty())\n\t\t\t\t\t\treturn Namespace.create(rdf2.prefix(), ns);\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn Namespace.create(schema.prefix(), ns);\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn Namespace.create(rdfNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","date":"2017-12-24 00:50:26","endLine":91,"groupId":"12136","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findNamespace","params":"(Stringprefix@Stringns@List<Rdf>rdfs@List<RdfSchema>schemas)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/73/40c391aab495ba1f3263e3f8053a782fc6f620.src","preCode":"\tprivate static Namespace findNamespace(String prefix, String ns, List<Rdf> rdfs, List<RdfSchema> schemas) {\n\n\t\t\r\n\t\tif (! (prefix.isEmpty() || ns.isEmpty()))\n\t\t\treturn NamespaceFactory.get(prefix, ns);\n\n\t\t\r\n\t\tif (! prefix.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.prefix().equals(prefix) && ! rdf2.namespace().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, rdf2.namespace());\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.prefix().equals(prefix) && ! schema.namespace().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(prefix, schema.namespace());\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.prefix().equals(prefix))\n\t\t\t\t\t\treturn NamespaceFactory.get(prefix, rdfNs.namespaceURI());\n\t\t\t}\n\t\t\tthrow new BeanRuntimeException(\"Found @Rdf.prefix annotation with no matching URI.  prefix='\"+prefix+\"'\");\n\t\t}\n\n\t\t\r\n\t\tif (! ns.isEmpty()) {\n\t\t\tif (rdfs != null)\n\t\t\t\tfor (Rdf rdf2 : rdfs)\n\t\t\t\t\tif (rdf2.namespace().equals(ns) && ! rdf2.prefix().isEmpty())\n\t\t\t\t\t\treturn NamespaceFactory.get(rdf2.prefix(), ns);\n\t\t\tfor (RdfSchema schema : schemas) {\n\t\t\t\tif (schema.namespace().equals(ns) && ! schema.prefix().isEmpty())\n\t\t\t\t\treturn NamespaceFactory.get(schema.prefix(), ns);\n\t\t\t\tfor (RdfNs rdfNs : schema.rdfNs())\n\t\t\t\t\tif (rdfNs.namespaceURI().equals(ns))\n\t\t\t\t\t\treturn NamespaceFactory.get(rdfNs.prefix(), ns);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n","realPath":"juneau-core/juneau-marshall-rdf/src/main/java/org/apache/juneau/jena/RdfUtils.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"227719b2dc52d70577728232daf5d0b9e950fb54","commitMessage":"@@@JUNEAU-76 Improvements to Context/Builder APIs","date":"2017-12-24 00:50:26","modifiedFileCount":"177","status":"M","submitter":"JamesBognar"}]
