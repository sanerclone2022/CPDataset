[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void b01_noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSerializer bc = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", bc.isDebug());\n\t\tcheck(\"false\", bc.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", bc.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", bc.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", bc.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-02-06 03:17:15","endLine":234,"groupId":"1742","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"b01_noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f8/b82effe67a070694ff24a29c1619f19ea3261d.src","preCode":"\tpublic void b01_noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSerializer bc = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", bc.isDebug());\n\t\tcheck(\"false\", bc.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", bc.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", bc.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", bc.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSerializer bc = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", bc.isDebug());\n\t\tcheck(\"false\", bc.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", bc.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", bc.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", bc.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-02-06 03:17:15","endLine":279,"groupId":"1742","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"c01_noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f8/b82effe67a070694ff24a29c1619f19ea3261d.src","preCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSerializer bc = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", bc.isDebug());\n\t\tcheck(\"false\", bc.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", bc.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", bc.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", bc.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-08-22 00:17:39","codes":[{"authorDate":"2021-08-22 00:17:39","commitOrder":2,"curCode":"\tpublic void b01_noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSerializer js = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-08-22 00:17:39","endLine":227,"groupId":"262","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"b01_noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/64/4dd594e5cd58658fb3c57c88cb5d9280784e73.src","preCode":"\tpublic void b01_noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSerializer bc = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", bc.isDebug());\n\t\tcheck(\"false\", bc.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", bc.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", bc.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", bc.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2021-08-22 00:17:39","commitOrder":2,"curCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSerializer js = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-08-22 00:17:39","endLine":273,"groupId":"262","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"c01_noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/64/4dd594e5cd58658fb3c57c88cb5d9280784e73.src","preCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSerializer bc = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", bc.isDebug());\n\t\tcheck(\"false\", bc.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", bc.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", bc.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", bc.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"264f7d6ab489f248e8eb0865bfffe2e7c32339a1","commitMessage":"@@@Context API refactoring.","date":"2021-08-22 00:17:39","modifiedFileCount":"115","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-08 08:27:39","codes":[{"authorDate":"2021-09-08 08:27:39","commitOrder":3,"curCode":"\tpublic void b01_noValues() throws Exception {\n\t\tList<AnnotationWork> al = b.getAnnotationList().getWork(sr);\n\t\tJsonSerializer js = JsonSerializer.create().apply(al).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-09-08 08:27:39","endLine":227,"groupId":"262","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"b01_noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/82/ba8cc981d3a424e8b7827cf5bb0d138c27d72b.src","preCode":"\tpublic void b01_noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSerializer js = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2021-09-08 08:27:39","commitOrder":3,"curCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tList<AnnotationWork> al = c.getAnnotationList().getWork(sr);\n\t\tJsonSerializer js = JsonSerializer.create().apply(al).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-09-08 08:27:39","endLine":273,"groupId":"262","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"c01_noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/82/ba8cc981d3a424e8b7827cf5bb0d138c27d72b.src","preCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSerializer js = JsonSerializer.create().applyAnnotations(al, sr).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"c8e012691a8e754b44d7c1baa04401d2aa5ff16e","commitMessage":"@@@Context API refactoring.","date":"2021-09-08 08:27:39","modifiedFileCount":"95","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-11 07:12:19","codes":[{"authorDate":"2021-09-11 07:12:19","commitOrder":4,"curCode":"\tpublic void b01_noValues() throws Exception {\n\t\tAnnotationWorkList al = b.getAnnotationList().getWork(sr);\n\t\tJsonSerializer js = JsonSerializer.create().apply(al).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-09-11 07:12:19","endLine":227,"groupId":"10854","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"b01_noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e7/e936e24f4dd74b57db13be1a2b6890e7d0b1a2.src","preCode":"\tpublic void b01_noValues() throws Exception {\n\t\tList<AnnotationWork> al = b.getAnnotationList().getWork(sr);\n\t\tJsonSerializer js = JsonSerializer.create().apply(al).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2021-09-11 07:12:19","commitOrder":4,"curCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tAnnotationWorkList al = c.getAnnotationList().getWork(sr);\n\t\tJsonSerializer js = JsonSerializer.create().apply(al).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","date":"2021-09-11 07:12:19","endLine":273,"groupId":"10854","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"c01_noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e7/e936e24f4dd74b57db13be1a2b6890e7d0b1a2.src","preCode":"\tpublic void c01_noAnnotation() throws Exception {\n\t\tList<AnnotationWork> al = c.getAnnotationList().getWork(sr);\n\t\tJsonSerializer js = JsonSerializer.create().apply(al).build();\n\t\tBeanContext bc = js.getBeanContext();\n\t\tcheck(\"PUBLIC\", bc.getBeanClassVisibility());\n\t\tcheck(\"PUBLIC\", bc.getBeanConstructorVisibility());\n\t\tcheck(\"\", bc.getBeanDictionaryClasses());\n\t\tcheck(\"PUBLIC\", bc.getBeanFieldVisibility());\n\t\tcheck(\"false\", bc.isBeanMapPutReturnsOldValue());\n\t\tcheck(\"PUBLIC\", bc.getBeanMethodVisibility());\n\t\tcheck(\"false\", bc.isBeansRequireDefaultConstructor());\n\t\tcheck(\"false\", bc.isBeansRequireSerializable());\n\t\tcheck(\"false\", bc.isBeansRequireSettersForGetters());\n\t\tcheck(\"true\", bc.isBeansRequireSomeProperties());\n\t\tcheck(\"_type\", bc.getBeanTypePropertyName());\n\t\tcheck(\"false\", js.isDebug());\n\t\tcheck(\"false\", js.isDetectRecursions());\n\t\tcheck(\"false\", bc.isFindFluentSetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnGetters());\n\t\tcheck(\"false\", bc.isIgnoreInvocationExceptionsOnSetters());\n\t\tcheck(\"true\", bc.isIgnoreMissingSetters());\n\t\tcheck(\"false\", js.isIgnoreRecursions());\n\t\tcheck(\"false\", bc.isIgnoreUnknownBeanProperties());\n\t\tcheck(\"true\", bc.isIgnoreUnknownNullBeanProperties());\n\t\tcheck(\"0\", js.getInitialDepth());\n\t\tcheck(Locale.getDefault().toString(), bc.getDefaultLocale());\n\t\tcheck(\"100\", js.getMaxDepth());\n\t\tcheck(null, bc.getDefaultMediaType());\n\t\tcheck(\"java.lang,java.lang.annotation,java.lang.ref,java.lang.reflect,java.io,java.net\", bc.getNotBeanPackagesNames());\n\t\tcheck(\"\", bc.getSwaps());\n\t\tcheck(\"BasicPropertyNamer\", bc.getPropertyNamer());\n\t\tcheck(\"false\", bc.isSortProperties());\n\t\tcheck(null, bc.getDefaultTimeZone());\n\t\tcheck(\"false\", bc.isUseEnumNames());\n\t\tcheck(\"true\", bc.isUseInterfaceProxies());\n\t\tcheck(\"false\", bc.isUseJavaBeanIntrospector());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/annotation/BeanConfigAnnotation_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"b51bd1c05ef67c31a242a4f75644418327b39726","commitMessage":"@@@Context API refactoring.","date":"2021-09-11 07:12:19","modifiedFileCount":"85","status":"M","submitter":"JamesBognar"}]
