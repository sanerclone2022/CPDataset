[{"authorTime":"2021-03-04 08:37:47","codes":[{"authorDate":"2021-03-04 08:37:47","commitOrder":2,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicNameValuePair.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-03-04 08:37:47","endLine":476,"groupId":"8447","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/92/5abf012290a6f59bf489b5f7feb4c5abadc400.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicNameValuePair.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"MB"},{"authorDate":"2021-03-04 08:37:47","commitOrder":2,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicNameValuePair.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-03-04 08:37:47","endLine":532,"groupId":"4089","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4b/a3e163d5957970c76f85cde716df03da438757.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicNameValuePair.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"MB"}],"commitId":"4dc6681f86227888fa1e401bf33716135dfb4bc1","commitMessage":"@@@REST refactoring.","date":"2021-03-04 08:37:47","modifiedFileCount":"306","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-03-04 22:24:17","codes":[{"authorDate":"2021-03-04 22:24:17","commitOrder":3,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicPart.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-03-04 22:24:17","endLine":477,"groupId":"8447","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/6d/b86ed841cccebe3215577faa170a3c7f651977.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicNameValuePair.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"},{"authorDate":"2021-03-04 22:24:17","commitOrder":3,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicPart.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-03-04 22:24:17","endLine":533,"groupId":"4089","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ac/9f62fe4c6d40ac6305a2e332a4d623c0221842.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicNameValuePair.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":509,"status":"M"}],"commitId":"d2c8cb2a497649dedaf35080c36fa23f93ccd756","commitMessage":"@@@REST refactoring.","date":"2021-03-04 22:24:17","modifiedFileCount":"40","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-03-05 00:00:50","codes":[{"authorDate":"2021-03-05 00:00:50","commitOrder":4,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-03-05 00:00:50","endLine":477,"groupId":"19","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/7b/dacabe36997f4b6ab309d393bc3b816f6f4793.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicPart.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"},{"authorDate":"2021-03-05 00:00:50","commitOrder":4,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-03-05 00:00:50","endLine":533,"groupId":"7742","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2e/df3b874a38604ccfd7ade1da820aebb59f6234.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> BasicPart.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":509,"status":"M"}],"commitId":"49752d53ef2b43e2921f95b22350eec6b51919a2","commitMessage":"@@@REST refactoring.","date":"2021-03-05 00:00:50","modifiedFileCount":"38","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-04-22 00:23:10","codes":[{"authorDate":"2021-04-22 00:23:10","commitOrder":5,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-04-22 00:23:10","endLine":476,"groupId":"19","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/11/be50771b75d9017bf5574eb9cc9f8b8256c891.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"},{"authorDate":"2021-04-22 00:23:10","commitOrder":5,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-04-22 00:23:10","endLine":532,"groupId":"7742","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@ContextPropertiesBuildercpb@VarResolverSessionvr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/01/8b639c64b9c4c206c70efd4dcc572b4253a46a.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> basicHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"a88b5f59873a615095b5415dc4d819f89eb9b825","commitMessage":"@@@Improvements to Header subclasses.","date":"2021-04-22 00:23:10","modifiedFileCount":"181","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-08 01:14:19","codes":[{"authorDate":"2021-08-08 01:14:19","commitOrder":6,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-08 01:14:19","endLine":476,"groupId":"6808","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@ContextPropertiesBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/6f/184696b49caf24998769c2b8db12fe2b282c99.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"},{"authorDate":"2021-08-08 01:14:19","commitOrder":6,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-08 01:14:19","endLine":532,"groupId":"1483","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@ContextPropertiesBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/90/18ee903a4f25ce2657be10ab618b4a2b7cbea3.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder cpb, VarResolverSession vr) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tcpb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tcpb.set(REST_serializers, merge(ConverterUtils.toType(cpb.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tcpb.set(REST_encoders, merge(ConverterUtils.toType(cpb.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tcpb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tcpb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> cpb.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> cpb.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> cpb.appendTo(RESTOP_defaultQuery, x));\n\t\t\tcpb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tcpb.prependTo(REST_converters, a.converters());\n\t\t\tcpb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tcpb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tcpb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tcpb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> cpb.prependTo(RESTOP_path, x));\n\t\t\tcpb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> cpb.addTo(REST_rolesDeclared, x));\n\t\t\tcpb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tcpb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"097a8ff72ec2b2a9ead21347e3d0a938a3a89341","commitMessage":"@@@Minor code cleanup.","date":"2021-08-08 01:14:19","modifiedFileCount":"61","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-08 21:08:45","codes":[{"authorDate":"2021-08-08 21:08:45","commitOrder":7,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-08 21:08:45","endLine":475,"groupId":"6808","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b6/5315b8d96f43adac926d3efdf343551ddba4a1.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, ContextPropertiesBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-08 21:08:45","commitOrder":7,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-08 21:08:45","endLine":531,"groupId":"1483","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3c/56711d119642805f628c612e935757ad164ad5.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, ContextPropertiesBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"efcc02d24a7adeb60d7e4ec72299ed2a48eacd2a","commitMessage":"@@@Clean up builders.","date":"2021-08-08 21:08:45","modifiedFileCount":"5","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-23 01:42:13","codes":[{"authorDate":"2021-08-23 01:42:13","commitOrder":8,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-23 01:42:13","endLine":475,"groupId":"6808","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f0/2e1fa5fd57103674755353c187b71e573d426d.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-23 01:42:13","commitOrder":8,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-23 01:42:13","endLine":531,"groupId":"1483","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5a/c146315dc0ddd38b9448bca681ddc68580e00e.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.setIfNotEmpty(RESTOP_httpMethod, \"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"bf431b12291a7d64e7e7ac4810ea8fd61b8ac98b","commitMessage":"@@@Context API refactoring.\n","date":"2021-08-23 01:42:13","modifiedFileCount":"13","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-23 01:52:41","codes":[{"authorDate":"2021-08-23 01:52:41","commitOrder":9,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tstring2(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-23 01:52:41","endLine":475,"groupId":"0","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ae/96be4c0caa2002eb1301d9987a323ebab27f22.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-23 01:52:41","commitOrder":9,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tstring2(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-23 01:52:41","endLine":531,"groupId":"1483","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/17/df73f6503db7576ad50f94aca990d2707bc6f2.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tb.setIfNotEmpty(RESTOP_clientVersion, a.clientVersion());\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"a4c58bb4abf69add7b6ac0bcd2ec5e92ba141055","commitMessage":"@@@Context API refactoring.","date":"2021-08-23 01:52:41","modifiedFileCount":"7","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-23 02:03:16","codes":[{"authorDate":"2021-08-23 02:03:16","commitOrder":10,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-23 02:03:16","endLine":475,"groupId":"5130","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/fb/46419c999b136f84ffe08189b3ff4c4dd9a331.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tstring2(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-23 02:03:16","commitOrder":10,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","date":"2021-08-23 02:03:16","endLine":531,"groupId":"8059","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2b/9c136dd5cc9662a60f227bf0860aac5c8745ba.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tb.setIf(a.contextClass() != RestOperationContext.Null.class, RESTOP_contextClass, a.contextClass());\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tstring2(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"bf9224b1c8408d6cf59f5f1c242360fcd23cb0c8","commitMessage":"@@@Context API refactoring.","date":"2021-08-23 02:03:16","modifiedFileCount":"8","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-23 02:33:12","codes":[{"authorDate":"2021-08-23 02:33:12","commitOrder":11,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-23 02:33:12","endLine":475,"groupId":"5130","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/21/c4a39c7077a7bd8e1fb48af397ece3027cb500.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-23 02:33:12","commitOrder":11,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-23 02:33:12","endLine":531,"groupId":"8059","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c2/923274cfad56aa6791e92b19007bfc491a6623.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tb.setIfNotEmpty(RESTOP_debug, string(a.debug()));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"f495e69bb84c2912f755a1c003145bce713d098c","commitMessage":"@@@Context API refactoring.","date":"2021-08-23 02:33:12","modifiedFileCount":"8","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-23 02:47:19","codes":[{"authorDate":"2021-08-23 02:47:19","commitOrder":12,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-23 02:47:19","endLine":475,"groupId":"5130","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/19/840a09fd2ccf0efcabef8c01761483be310de7.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-23 02:47:19","commitOrder":12,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-23 02:47:19","endLine":531,"groupId":"8059","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/13/4919c87a67c5adab3389c6396aa0044b657872.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.prependTo(RESTOP_path, x));\n\t\t\tb.setIfNotEmpty(RESTOP_path, a.value());\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"055423a57cf4db99d69baa45f1416197d3e3cd4f","commitMessage":"@@@Context API refactoring.","date":"2021-08-23 02:47:19","modifiedFileCount":"7","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-28 22:29:00","codes":[{"authorDate":"2021-08-28 22:29:00","commitOrder":13,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-28 22:29:00","endLine":475,"groupId":"6935","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/db/2447f749f0ad7334f919dc8282358a194506c8.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-28 22:29:00","commitOrder":13,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-28 22:29:00","endLine":531,"groupId":"6935","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/60/f2682a508280d07ecefcf4e3148ad00c534dc7.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQuery()).map(x -> basicPart(x)).forEach(x -> b.appendTo(RESTOP_defaultQuery, x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"92b3e50d7699173d16d085d63de694fcbd1687f6","commitMessage":"@@@Context API refactoring.","date":"2021-08-28 22:29:00","modifiedFileCount":"18","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-28 23:48:29","codes":[{"authorDate":"2021-08-28 23:48:29","commitOrder":14,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-28 23:48:29","endLine":475,"groupId":"5130","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/89/b9e4d92edecdc68646c21469b39f7b67af2dd4.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-28 23:48:29","commitOrder":14,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-28 23:48:29","endLine":531,"groupId":"8059","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/74/ba8205c2a8f69d0626a026b107ca2047c33431.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestAttributes, x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"69bb10c31976709f1f31a8a3e3aef84160264e41","commitMessage":"@@@Context API refactoring.","date":"2021-08-28 23:48:29","modifiedFileCount":"9","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-29 00:06:53","codes":[{"authorDate":"2021-08-29 00:06:53","commitOrder":15,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 00:06:53","endLine":475,"groupId":"5130","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/bb/ff5ab0dcff6d85acdb2fa0746124dfab2327b2.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-29 00:06:53","commitOrder":15,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 00:06:53","endLine":531,"groupId":"8059","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/83/b0eb17dc9afcb3368d80c9dcd51ebbbf2364d3.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultRequestHeaders, x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.appendTo(RESTOP_defaultResponseHeaders, x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"4962a4d0572ae979de07fdd377eeb07e9412ce26","commitMessage":"@@@Context API refactoring.","date":"2021-08-29 00:06:53","modifiedFileCount":"7","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-29 00:44:55","codes":[{"authorDate":"2021-08-29 00:44:55","commitOrder":16,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 00:44:55","endLine":474,"groupId":"8766","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/87/c756c297f888bdd1d728dddabc55671476b57f.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"M"},{"authorDate":"2021-08-29 00:44:55","commitOrder":16,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 00:44:55","endLine":530,"groupId":"8059","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOperationContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/04/1e7f4c77b3ea9817f21a72c527746e6f7576b8.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.prependTo(RESTOP_matchers, a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":506,"status":"M"}],"commitId":"3386d85ba0302d1a883a79f0e38564b73cf5ea0e","commitMessage":"@@@Context API refactoring.","date":"2021-08-29 00:44:55","modifiedFileCount":"8","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-29 01:52:50","codes":[{"authorDate":"2021-08-29 01:52:50","commitOrder":17,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 01:52:50","endLine":474,"groupId":"8766","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/49/a0b5133ae453088e3e37ee5e2d3713e45fdc41.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOperationContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"M"},{"authorDate":"2021-08-29 01:52:50","commitOrder":17,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 01:52:50","endLine":530,"groupId":"8059","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/36/128180f06420413d95b87308942f9743f4dab7.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOperationContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOperationContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":506,"status":"M"}],"commitId":"16bc8fad5aafb34417b772507039d0179b266eef","commitMessage":"@@@Context API refactoring.","date":"2021-08-29 01:52:50","modifiedFileCount":"46","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-29 03:13:37","codes":[{"authorDate":"2021-08-29 03:13:37","commitOrder":18,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 03:13:37","endLine":475,"groupId":"8862","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/03/b1cb1dc7fef01152471d086d61108e71ca81d1.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-29 03:13:37","commitOrder":18,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 03:13:37","endLine":531,"groupId":"8059","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d2/572e29306fece1f93bdddfd272f08040f8fb77.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tb.setIfNotEmpty(REST_defaultCharset, string(a.defaultCharset()));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"f221c6586e8f874a73496e5c4d91a4b4c33e0b42","commitMessage":"@@@Context API refactoring.","date":"2021-08-29 03:13:37","modifiedFileCount":"16","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-29 07:15:36","codes":[{"authorDate":"2021-08-29 03:13:37","commitOrder":19,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 03:13:37","endLine":475,"groupId":"8862","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/03/b1cb1dc7fef01152471d086d61108e71ca81d1.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"N"},{"authorDate":"2021-08-29 07:15:36","commitOrder":19,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-29 07:15:36","endLine":532,"groupId":"8059","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/59/3b5d2b78a77d745f8da84ccf5770dbc3c72d31.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tb.setIfNotEmpty(REST_produces, stringList(a.produces()));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"d8ec44c1666fd4ccc86897643df3f4e859e56a29","commitMessage":"@@@Context API refactoring.","date":"2021-08-29 07:15:36","modifiedFileCount":"14","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-30 00:08:55","codes":[{"authorDate":"2021-08-30 00:08:55","commitOrder":20,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 00:08:55","endLine":475,"groupId":"8862","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/93/5632232c20998631828657cef8624dbd8b845c.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-30 00:08:55","commitOrder":20,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 00:08:55","endLine":532,"groupId":"8059","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b0/f64985e113ffbe928238dac634887383a00f6a.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass(), RestOpContext.Null.class).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"371ff50e6e9e029e0c2f48cec9304d82ed146d33","commitMessage":"@@@Context API refactoring.","date":"2021-08-30 00:08:55","modifiedFileCount":"11","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-30 00:56:07","codes":[{"authorDate":"2021-08-30 00:56:07","commitOrder":21,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 00:56:07","endLine":475,"groupId":"8862","id":39,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b0/1d6ee021af1f3733fddaf2a1c92ae029246b72.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-30 00:56:07","commitOrder":21,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 00:56:07","endLine":532,"groupId":"8059","id":40,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/5e/162edc7d1448da0a4df9e23a83fd3822cde947.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.addTo(REST_rolesDeclared, x));\n\t\t\tb.addToIfNotEmpty(REST_roleGuard, string(a.roleGuard()));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"62e23b4f140c2b7c6e8beca95e7af780abb422a7","commitMessage":"@@@Context API refactoring.","date":"2021-08-30 00:56:07","modifiedFileCount":"16","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-30 01:29:08","codes":[{"authorDate":"2021-08-30 01:29:08","commitOrder":22,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 01:29:08","endLine":475,"groupId":"2604","id":41,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/6e/f318f80207fec42a10c5336aca60ec8c49a7d8.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-08-30 01:29:08","commitOrder":22,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 01:29:08","endLine":532,"groupId":"0","id":42,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/8d/b30b51b58e0b2dfa4ea8fdd6d8020cdcc99803.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.prependTo(REST_guards, reverse(a.guards()));\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"7c45992d7f334d91e8971c361a80c64d4650cf7e","commitMessage":"@@@Context API refactoring.","date":"2021-08-30 01:29:08","modifiedFileCount":"18","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-08-30 04:00:50","codes":[{"authorDate":"2021-08-30 01:29:08","commitOrder":23,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 01:29:08","endLine":475,"groupId":"2604","id":43,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/6e/f318f80207fec42a10c5336aca60ec8c49a7d8.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"N"},{"authorDate":"2021-08-30 04:00:50","commitOrder":23,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-08-30 04:00:50","endLine":532,"groupId":"2604","id":44,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b2/d401603a07783b7bd9e50bf7f799c22073667a.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.prependTo(REST_converters, a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"4611d01b29564d2ad9dfc3cd2c2d95a59abeaa54","commitMessage":"@@@Context API refactoring.","date":"2021-08-30 04:00:50","modifiedFileCount":"19","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-04 00:01:24","codes":[{"authorDate":"2021-09-04 00:01:24","commitOrder":24,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tvalue(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-04 00:01:24","endLine":475,"groupId":"0","id":45,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/fc/815fdeb85af73ae6ee90c8d51d1a62753188c9.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-09-04 00:01:24","commitOrder":24,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tvalue(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-04 00:01:24","endLine":532,"groupId":"2604","id":46,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/0b/e1faed0a3077f7c2adff62e5f755cb504e0d0c.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tb.appendToIfNotEmpty(REST_defaultRequestHeaders, accept(string(a.defaultAccept())));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"dea38a30e4edc62345c9788a550b0308e1d8d790","commitMessage":"@@@Context API refactoring.","date":"2021-09-04 00:01:24","modifiedFileCount":"14","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-04 02:03:47","codes":[{"authorDate":"2021-09-04 02:03:47","commitOrder":25,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-04 02:03:47","endLine":475,"groupId":"1619","id":47,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b2/50b8a4580b19f383e51b1bb141d720142ab9d0.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tvalue(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2021-09-04 02:03:47","commitOrder":25,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-04 02:03:47","endLine":532,"groupId":"4712","id":48,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/8b/a3d1ced6753abf9cb931dce6d889729d379f7d.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\tvalue(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstringStream(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstringStream(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstringStream(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstringStream(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstringStream(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tvalue(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tvalue(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tvalue(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstringStream(a.path()).forEach(x -> b.path(x));\n\t\t\tvalue(a.value()).ifPresent(x -> b.path(x));\n\t\t\tcdStream(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tvalue(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tvalue(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"d70e408561a67c7d89185abbb613faf682dcbb8a","commitMessage":"@@@Context API refactoring.","date":"2021-09-04 02:03:47","modifiedFileCount":"21","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-06 22:18:08","codes":[{"authorDate":"2021-09-06 22:18:08","commitOrder":26,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.encoders(a.encoders());\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-06 22:18:08","endLine":473,"groupId":"1619","id":49,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/81/2acdba848f605ff3f25431cdc16660d2fa60b9.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2021-09-06 22:18:08","commitOrder":26,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.encoders(a.encoders());\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-06 22:18:08","endLine":535,"groupId":"4712","id":50,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a1/be0bce84cb176019607666915feb70575b9f57.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.set(REST_encoders, merge(ConverterUtils.toType(b.peek(REST_encoders), Object[].class), a.encoders()));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":511,"status":"M"}],"commitId":"cdea0cdccafd7ad77dac637b3036790c9bce769b","commitMessage":"@@@Context API refactoring.","date":"2021-09-06 22:18:08","modifiedFileCount":"22","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-08 08:27:39","codes":[{"authorDate":"2021-09-08 08:27:39","commitOrder":27,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tnone(a.encoders()).ifPresent(x -> b.getEncoders().clear());\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-08 08:27:39","endLine":474,"groupId":"1619","id":51,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d3/6e8b0a51b9e66609989d5e21281ade528c32a1.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tb.encoders(a.encoders());\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2021-09-08 08:27:39","commitOrder":27,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tnone(a.serializers()).ifPresent(x -> b.getSerializers().clear());\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tnone(a.encoders()).ifPresent(x -> b.getEncoders().clear());\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-08 08:27:39","endLine":535,"groupId":"4712","id":52,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/cc/351e2974cc7c30605915476655612ba2a1dcf5.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tb.set(REST_serializers, merge(ConverterUtils.toType(b.peek(REST_serializers), Object[].class), a.serializers()));\n\t\t\tb.encoders(a.encoders());\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":509,"status":"M"}],"commitId":"c8e012691a8e754b44d7c1baa04401d2aa5ff16e","commitMessage":"@@@Context API refactoring.","date":"2021-09-08 08:27:39","modifiedFileCount":"95","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-09 21:20:47","codes":[{"authorDate":"2021-09-09 21:20:47","commitOrder":28,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-09 21:20:47","endLine":473,"groupId":"1619","id":53,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/35/713515316b439437c71f4ef8d5374a23daba37.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tnone(a.encoders()).ifPresent(x -> b.getEncoders().clear());\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2021-09-09 21:20:47","commitOrder":28,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-09 21:20:47","endLine":533,"groupId":"4712","id":54,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/e1/2b293e11ea614dd7b783938366e9c33bfb0da6.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tnone(a.serializers()).ifPresent(x -> b.getSerializers().clear());\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tnone(a.encoders()).ifPresent(x -> b.getEncoders().clear());\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":509,"status":"M"}],"commitId":"bb624d386490c0cced1a4fdaae9fb8186b05b197","commitMessage":"@@@Context API refactoring.","date":"2021-09-09 21:20:47","modifiedFileCount":"30","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-12 23:43:00","codes":[{"authorDate":"2021-09-12 23:43:00","commitOrder":29,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-12 23:43:00","endLine":473,"groupId":"1619","id":55,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d2/08ffc12128cce5b134c186aad2ac7c904055f8.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2021-09-12 23:43:00","commitOrder":29,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-12 23:43:00","endLine":533,"groupId":"4712","id":56,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/fa/25b52744e85628d822b55ba9534d7f08f9da79.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.contextClass(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":509,"status":"M"}],"commitId":"fe80df5cf9e8fed9a15d10e74f12d574907886ed","commitMessage":"@@@Context API refactoring.","date":"2021-09-12 23:43:00","modifiedFileCount":"48","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-20 00:32:21","codes":[{"authorDate":"2021-09-12 23:43:00","commitOrder":30,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-12 23:43:00","endLine":473,"groupId":"1619","id":57,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d2/08ffc12128cce5b134c186aad2ac7c904055f8.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"N"},{"authorDate":"2021-09-20 00:32:21","commitOrder":30,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 00:32:21","endLine":548,"groupId":"4712","id":58,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/27/0420eb935574e16735ab63b7c66f147e48761a.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"82d0f2ea95cb365762b1e13416cb317c634a1074","commitMessage":"@@@Context API refactoring.","date":"2021-09-20 00:32:21","modifiedFileCount":"16","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-20 04:39:33","codes":[{"authorDate":"2021-09-20 04:39:33","commitOrder":31,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 04:39:33","endLine":488,"groupId":"1619","id":59,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/34/b947ba8b8c6e16f3bf987050539a4ecae11fd6.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"},{"authorDate":"2021-09-20 04:39:33","commitOrder":31,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 04:39:33","endLine":548,"groupId":"4712","id":60,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ed/033ac4afd1e3e13b6ae39757200d6d54bb9674.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.getEncoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"4f36b33a74a3d98a3c17bba5a985ee76bf959f3c","commitMessage":"@@@Context API refactoring.","date":"2021-09-20 04:39:33","modifiedFileCount":"10","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-20 04:52:54","codes":[{"authorDate":"2021-09-20 04:39:33","commitOrder":32,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 04:39:33","endLine":488,"groupId":"1619","id":61,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/34/b947ba8b8c6e16f3bf987050539a4ecae11fd6.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"N"},{"authorDate":"2021-09-20 04:52:54","commitOrder":32,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 04:52:54","endLine":548,"groupId":"4712","id":62,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/56/a8ee1069b684012f02bfc7cbcfb36cf69110f7.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.getSerializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"6a5dfda1aad6dca0ae4fb7005ed678d38cbb8e08","commitMessage":"@@@Context API refactoring.","date":"2021-09-20 04:52:54","modifiedFileCount":"9","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-20 05:54:15","codes":[{"authorDate":"2021-09-20 05:54:15","commitOrder":33,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 05:54:15","endLine":488,"groupId":"1619","id":63,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/b0/dc4ddba566a2afdc42e94763ca76f206cb9886.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"},{"authorDate":"2021-09-20 05:54:15","commitOrder":33,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 05:54:15","endLine":548,"groupId":"0","id":64,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/4b/2365b52bb64f3184577ec374f79fabd8fedc65.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"e469f0ec94e56c05e4586331c4e516afa444ecfc","commitMessage":"@@@Context API refactoring.","date":"2021-09-20 05:54:15","modifiedFileCount":"14","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-20 06:06:23","codes":[{"authorDate":"2021-09-20 06:06:23","commitOrder":34,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers().append(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 06:06:23","endLine":488,"groupId":"0","id":65,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1e/09a3a64985b24009d547faf8a78e68aa568014.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"},{"authorDate":"2021-09-20 06:06:23","commitOrder":34,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers().append(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-20 06:06:23","endLine":548,"groupId":"5729","id":66,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a6/170216931d8ef8ede09d62d6357d165824c1d3.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"3359727077ed88d9dd4cde25fa0ac46c7087550f","commitMessage":"@@@Context API refactoring.","date":"2021-09-20 06:06:23","modifiedFileCount":"7","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-22 22:56:11","codes":[{"authorDate":"2021-09-22 22:56:11","commitOrder":35,"curCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders().setDefault(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders().setDefault(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes().add(x));\n\t\t\tstrings(a.defaultRequestQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultRequestQueryData().setDefault(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders().setDefault(x));\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers().append(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-22 22:56:11","endLine":488,"groupId":"102249","id":67,"instanceNumber":1,"isCurCommit":1,"methodName":"apply","params":"(AnnotationInfo<RestDelete>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/10/86de134540e482630ca1ff1ec89a390b04c5de.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestDelete> ai, RestOpContextBuilder b) {\n\t\t\tRestDelete a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"delete\");\n\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers().append(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestDeleteAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"},{"authorDate":"2021-09-22 22:56:11","commitOrder":35,"curCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders().setDefault(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders().setDefault(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes().add(x));\n\t\t\tstrings(a.defaultRequestQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultRequestQueryData().setDefault(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders().setDefault(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers().append(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","date":"2021-09-22 22:56:11","endLine":548,"groupId":"102249","id":68,"instanceNumber":2,"isCurCommit":1,"methodName":"apply","params":"(AnnotationInfo<RestGet>ai@RestOpContextBuilderb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/76/c9e4bd5c64e852046a307e5911e1e5560997fd.src","preCode":"\t\tpublic void apply(AnnotationInfo<RestGet> ai, RestOpContextBuilder b) {\n\t\t\tRestGet a = ai.getAnnotation();\n\n\t\t\tb.httpMethod(\"get\");\n\n\t\t\tclasses(a.serializers()).ifPresent(x -> b.serializers().set(x));\n\t\t\tclasses(a.encoders()).ifPresent(x -> b.encoders().set(x));\n\t\t\ttype(a.contextClass()).ifPresent(x -> b.type(x));\n\t\t\tstrings(a.produces()).map(MediaType::of).forEach(x -> b.produces(x));\n\t\t\tstrings(a.defaultRequestHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultRequestHeaders(x));\n\t\t\tstrings(a.defaultResponseHeaders()).map(x -> stringHeader(x)).forEach(x -> b.defaultResponseHeaders(x));\n\t\t\tstrings(a.defaultRequestAttributes()).map(x -> BasicNamedAttribute.ofPair(x)).forEach(x -> b.defaultRequestAttributes(x));\n\t\t\tstrings(a.defaultQueryData()).map(x -> basicPart(x)).forEach(x -> b.defaultQueryData(x));\n\t\t\tstring(a.defaultAccept()).map(x -> accept(x)).ifPresent(x -> b.defaultRequestHeaders(x));\n\t\t\tb.converters().append(a.converters());\n\t\t\tb.guards().append(a.guards());\n\t\t\tb.matchers().append(a.matchers());\n\t\t\tstring(a.clientVersion()).ifPresent(x -> b.clientVersion(x));\n\t\t\tstring(a.defaultCharset()).map(Charset::forName).ifPresent(x -> b.defaultCharset(x));\n\t\t\tstrings(a.path()).forEach(x -> b.path(x));\n\t\t\tstring(a.value()).ifPresent(x -> b.path(x));\n\t\t\tstrings_cdl(a.rolesDeclared()).forEach(x -> b.rolesDeclared(x));\n\t\t\tstring(a.roleGuard()).ifPresent(x -> b.roleGuard(x));\n\t\t\tstring(a.debug()).map(Enablement::fromString).ifPresent(x -> b.debug(x));\n\t\t}\n","realPath":"juneau-rest/juneau-rest-server/src/main/java/org/apache/juneau/rest/annotation/RestGetAnnotation.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"182b1eb65943145872e10664ec7a6ed26fcae9ab","commitMessage":"@@@Context API refactoring.","date":"2021-09-22 22:56:11","modifiedFileCount":"24","status":"M","submitter":"JamesBognar"}]
