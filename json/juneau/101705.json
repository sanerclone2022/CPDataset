[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","date":"2021-02-06 03:17:15","endLine":102,"groupId":"560","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2a/e1ccbfee14457c376cae6f3244b1d0eddcd551.src","preCode":"\tpublic void noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jsonschema/JsonSchemaConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","date":"2021-02-06 03:17:15","endLine":122,"groupId":"560","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/2a/e1ccbfee14457c376cae6f3244b1d0eddcd551.src","preCode":"\tpublic void noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jsonschema/JsonSchemaConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-09-08 08:27:39","codes":[{"authorDate":"2021-09-08 08:27:39","commitOrder":2,"curCode":"\tpublic void noValues() throws Exception {\n\t\tList<AnnotationWork> al = b.getAnnotationList().getWork(sr);\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().apply(al).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","date":"2021-09-08 08:27:39","endLine":102,"groupId":"560","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/78/09e3bd84d81e3bb615712db2e35eaf40551a6d.src","preCode":"\tpublic void noValues() throws Exception {\n\t\tAnnotationList al = b.getAnnotationList();\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jsonschema/JsonSchemaConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-09-08 08:27:39","commitOrder":2,"curCode":"\tpublic void noAnnotation() throws Exception {\n\t\tList<AnnotationWork> al = c.getAnnotationList().getWork(sr);\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().apply(al).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","date":"2021-09-08 08:27:39","endLine":122,"groupId":"560","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/78/09e3bd84d81e3bb615712db2e35eaf40551a6d.src","preCode":"\tpublic void noAnnotation() throws Exception {\n\t\tAnnotationList al = c.getAnnotationList();\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().applyAnnotations(al, sr).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jsonschema/JsonSchemaConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"c8e012691a8e754b44d7c1baa04401d2aa5ff16e","commitMessage":"@@@Context API refactoring.","date":"2021-09-08 08:27:39","modifiedFileCount":"95","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-09-11 07:12:19","codes":[{"authorDate":"2021-09-11 07:12:19","commitOrder":3,"curCode":"\tpublic void noValues() throws Exception {\n\t\tAnnotationWorkList al = b.getAnnotationList().getWork(sr);\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().apply(al).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","date":"2021-09-11 07:12:19","endLine":102,"groupId":"101705","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"noValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/44/c31c8d0aab04eadd87e68a3ce2b235200f12de.src","preCode":"\tpublic void noValues() throws Exception {\n\t\tList<AnnotationWork> al = b.getAnnotationList().getWork(sr);\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().apply(al).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jsonschema/JsonSchemaConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-09-11 07:12:19","commitOrder":3,"curCode":"\tpublic void noAnnotation() throws Exception {\n\t\tAnnotationWorkList al = c.getAnnotationList().getWork(sr);\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().apply(al).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","date":"2021-09-11 07:12:19","endLine":122,"groupId":"101705","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"noAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/44/c31c8d0aab04eadd87e68a3ce2b235200f12de.src","preCode":"\tpublic void noAnnotation() throws Exception {\n\t\tList<AnnotationWork> al = c.getAnnotationList().getWork(sr);\n\t\tJsonSchemaGeneratorSession x = JsonSchemaGenerator.create().apply(al).build().createSession();\n\t\tcheck(\"\", x.getAddDescriptionsTo());\n\t\tcheck(\"\", x.getAddExamplesTo());\n\t\tcheck(\"false\", x.isAllowNestedDescriptions());\n\t\tcheck(\"false\", x.isAllowNestedExamples());\n\t\tcheck(\"BasicBeanDefMapper\", x.getBeanDefMapper());\n\t\tcheck(\"\", x.getIgnoreTypes());\n\t\tcheck(\"false\", x.isUseBeanDefs());\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jsonschema/JsonSchemaConfigAnnotationTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"b51bd1c05ef67c31a242a4f75644418327b39726","commitMessage":"@@@Context API refactoring.","date":"2021-09-11 07:12:19","modifiedFileCount":"85","status":"M","submitter":"JamesBognar"}]
