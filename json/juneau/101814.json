[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void a01_methodParameters() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/c\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Bar\").is(\"foo\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":70,"groupId":"1387","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"a01_methodParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/8a/b14fd48ede6e78a1fec8e07b1e40c9ed72c5c0.src","preCode":"\tpublic void a01_methodParameters() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/c\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Bar\").is(\"foo\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/ResponseHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void a01_httpstatusCodes() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(201)\n\t\t\t.assertBody().is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(501);\n\t}\n","date":"2021-02-06 03:17:15","endLine":71,"groupId":"8955","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"a01_httpstatusCodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/39/1472be53cf3fafedf430e1a01388f11e2465b4.src","preCode":"\tpublic void a01_httpstatusCodes() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(201)\n\t\t\t.assertBody().is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(501);\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/Response_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-17 00:17:27","commitOrder":2,"curCode":"\tpublic void a01_methodParameters() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/c\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertHeader(\"Bar\").is(\"foo\");\n\t}\n","date":"2021-02-17 00:17:27","endLine":70,"groupId":"101814","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"a01_methodParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1b/da4746d596a19a08eb896a080415bd8b01268b.src","preCode":"\tpublic void a01_methodParameters() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Foo\").is(\"foo\");\n\t\ta.get(\"/c\")\n\t\t\t.run()\n\t\t\t.assertCode().is(200)\n\t\t\t.assertStringHeader(\"Bar\").is(\"foo\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/ResponseHeader_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2021-02-06 03:17:15","commitOrder":2,"curCode":"\tpublic void a01_httpstatusCodes() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(201)\n\t\t\t.assertBody().is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(501);\n\t}\n","date":"2021-02-06 03:17:15","endLine":71,"groupId":"101814","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"a01_httpstatusCodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/39/1472be53cf3fafedf430e1a01388f11e2465b4.src","preCode":"\tpublic void a01_httpstatusCodes() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a\")\n\t\t\t.run()\n\t\t\t.assertCode().is(201)\n\t\t\t.assertBody().is(\"foo\");\n\t\ta.get(\"/b\")\n\t\t\t.run()\n\t\t\t.assertCode().is(501);\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/Response_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"33ac3bd77e755252784ed6a433b89a8c0549e016","commitMessage":"@@@REST refactoring.","date":"2021-02-17 00:17:27","modifiedFileCount":"69","status":"M","submitter":"JamesBognar"}]
