[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tUrlEncodingSerializerBuilder s = UrlEncodingSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] root:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\", \"->[1] r2:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R2\", \"->[2] r3:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R3\", \"->[3] r1:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"name=foo&r2=(name=bar,r3=(name=baz))\", s.build().serialize(r1));\n\t}\n","date":"2021-02-06 03:17:15","endLine":253,"groupId":"4019","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/99/ecf3358735f7101b586d0e4b5c94e7b7ea5492.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tUrlEncodingSerializerBuilder s = UrlEncodingSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] root:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\", \"->[1] r2:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R2\", \"->[2] r3:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R3\", \"->[3] r1:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"name=foo&r2=(name=bar,r3=(name=baz))\", s.build().serialize(r1));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/urlencoding/Common_UrlEncodingTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tRdfSerializerBuilder s = RdfSerializer.create().xmlabbrev().sq().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] root:org.apache.juneau.jena.CommonTest$R1\", \"->[1] r2:org.apache.juneau.jena.CommonTest$R2\", \"->[2] r3:org.apache.juneau.jena.CommonTest$R3\", \"->[3] r1:org.apache.juneau.jena.CommonTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tString r = s.build().serialize(r1).replace(\"\\r\", \"\");\n\t\t\r\n\t\t\r\n\t\tassertString(r).contains(\n\t\t\t\"<rdf:Description>\\n\"+\n\t\t\t\"<jp:name>foo</jp:name>\\n\"+\n\t\t\t\"<jp:r2 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>bar</jp:name>\\n\"+\n\t\t\t\"<jp:r3 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>baz</jp:name>\\n\"+\n\t\t\t\"</jp:r3>\\n\"+\n\t\t\t\"</jp:r2>\\n\"+\n\t\t\t\"</rdf:Description>\\n\"+\n\t\t\t\"</rdf:RDF>\\n\"\n\t\t);\n\t\tassertString(r).contains(\"xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \"xmlns:j='http://www.apache.org/juneau/\", \"xmlns:jp='http://www.apache.org/juneaubp/\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":311,"groupId":"4019","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c3/324922f652b1e9904e24fa4ba85c58933c83af.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tRdfSerializerBuilder s = RdfSerializer.create().xmlabbrev().sq().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] root:org.apache.juneau.jena.CommonTest$R1\", \"->[1] r2:org.apache.juneau.jena.CommonTest$R2\", \"->[2] r3:org.apache.juneau.jena.CommonTest$R3\", \"->[3] r1:org.apache.juneau.jena.CommonTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tString r = s.build().serialize(r1).replace(\"\\r\", \"\");\n\t\t\r\n\t\t\r\n\t\tassertString(r).contains(\n\t\t\t\"<rdf:Description>\\n\"+\n\t\t\t\"<jp:name>foo</jp:name>\\n\"+\n\t\t\t\"<jp:r2 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>bar</jp:name>\\n\"+\n\t\t\t\"<jp:r3 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>baz</jp:name>\\n\"+\n\t\t\t\"</jp:r3>\\n\"+\n\t\t\t\"</jp:r2>\\n\"+\n\t\t\t\"</rdf:Description>\\n\"+\n\t\t\t\"</rdf:RDF>\\n\"\n\t\t);\n\t\tassertString(r).contains(\"xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \"xmlns:j='http://www.apache.org/juneau/\", \"xmlns:jp='http://www.apache.org/juneaubp/\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jena/CommonTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-07-13 21:53:16","codes":[{"authorDate":"2021-07-13 21:53:16","commitOrder":2,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tUrlEncodingSerializerBuilder s = UrlEncodingSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"[0] root:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\", \"->[1] r2:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R2\", \"->[2] r3:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R3\", \"->[3] r1:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"name=foo&r2=(name=bar,r3=(name=baz))\", s.build().serialize(r1));\n\t}\n","date":"2021-07-13 21:53:16","endLine":253,"groupId":"10219","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a9/73c78d567cb6e5ee1186db816198128bf6b2f9.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tUrlEncodingSerializerBuilder s = UrlEncodingSerializer.create().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] root:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\", \"->[1] r2:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R2\", \"->[2] r3:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R3\", \"->[3] r1:org.apache.juneau.urlencoding.Common_UrlEncodingTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tassertEquals(\"name=foo&r2=(name=bar,r3=(name=baz))\", s.build().serialize(r1));\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/urlencoding/Common_UrlEncodingTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2021-07-13 21:53:16","commitOrder":2,"curCode":"\tpublic void testRecursion() throws Exception {\n\t\tRdfSerializerBuilder s = RdfSerializer.create().xmlabbrev().sq().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).message().contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).messages().asString().contains(\"[0] root:org.apache.juneau.jena.CommonTest$R1\", \"->[1] r2:org.apache.juneau.jena.CommonTest$R2\", \"->[2] r3:org.apache.juneau.jena.CommonTest$R3\", \"->[3] r1:org.apache.juneau.jena.CommonTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tString r = s.build().serialize(r1).replace(\"\\r\", \"\");\n\t\t\r\n\t\t\r\n\t\tassertString(r).contains(\n\t\t\t\"<rdf:Description>\\n\"+\n\t\t\t\"<jp:name>foo</jp:name>\\n\"+\n\t\t\t\"<jp:r2 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>bar</jp:name>\\n\"+\n\t\t\t\"<jp:r3 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>baz</jp:name>\\n\"+\n\t\t\t\"</jp:r3>\\n\"+\n\t\t\t\"</jp:r2>\\n\"+\n\t\t\t\"</rdf:Description>\\n\"+\n\t\t\t\"</rdf:RDF>\\n\"\n\t\t);\n\t\tassertString(r).contains(\"xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \"xmlns:j='http://www.apache.org/juneau/\", \"xmlns:jp='http://www.apache.org/juneaubp/\");\n\t}\n","date":"2021-07-13 21:53:16","endLine":311,"groupId":"10219","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRecursion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f5/097d2a4d23864ce08ec055c40484bbc251a106.src","preCode":"\tpublic void testRecursion() throws Exception {\n\t\tRdfSerializerBuilder s = RdfSerializer.create().xmlabbrev().sq().maxDepth(Integer.MAX_VALUE);\n\n\t\tR1 r1 = new R1();\n\t\tR2 r2 = new R2();\n\t\tR3 r3 = new R3();\n\t\tr1.r2 = r2;\n\t\tr2.r3 = r3;\n\t\tr3.r1 = r1;\n\n\t\t\r\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"It's recommended you use the BeanTraverseContext.BEANTRAVERSE_detectRecursions setting to help locate the loop.\");\n\n\t\t\r\n\t\ts.detectRecursions();\n\t\tassertThrown(()->s.build().serialize(r1)).contains(\"[0] root:org.apache.juneau.jena.CommonTest$R1\", \"->[1] r2:org.apache.juneau.jena.CommonTest$R2\", \"->[2] r3:org.apache.juneau.jena.CommonTest$R3\", \"->[3] r1:org.apache.juneau.jena.CommonTest$R1\");\n\n\t\ts.ignoreRecursions();\n\t\tString r = s.build().serialize(r1).replace(\"\\r\", \"\");\n\t\t\r\n\t\t\r\n\t\tassertString(r).contains(\n\t\t\t\"<rdf:Description>\\n\"+\n\t\t\t\"<jp:name>foo</jp:name>\\n\"+\n\t\t\t\"<jp:r2 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>bar</jp:name>\\n\"+\n\t\t\t\"<jp:r3 rdf:parseType='Resource'>\\n\"+\n\t\t\t\"<jp:name>baz</jp:name>\\n\"+\n\t\t\t\"</jp:r3>\\n\"+\n\t\t\t\"</jp:r2>\\n\"+\n\t\t\t\"</rdf:Description>\\n\"+\n\t\t\t\"</rdf:RDF>\\n\"\n\t\t);\n\t\tassertString(r).contains(\"xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \"xmlns:j='http://www.apache.org/juneau/\", \"xmlns:jp='http://www.apache.org/juneaubp/\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/jena/CommonTest.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"M"}],"commitId":"e15ae5d9c2f83be7db3f0a08928702d637ae9fdb","commitMessage":"@@@Assertions API improvements and tests.","date":"2021-07-13 21:53:16","modifiedFileCount":"139","status":"M","submitter":"JamesBognar"}]
