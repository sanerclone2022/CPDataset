[{"authorTime":"2017-09-02 22:10:11","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2017-09-02 22:10:11","endLine":135,"groupId":"3052","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d9/ee830fa4a4b2aa3a06cdd46bc399acb745391d.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2017-09-02 22:10:11","commitOrder":1,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypes);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypes[match], mediaTypeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2017-09-02 22:10:11","endLine":145,"groupId":"1048","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/1f/d700c8ab9985460c014f0e72bdd64312ea9cb5.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypes);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypes[match], mediaTypeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"}],"commitId":"75b0d8ee69277699acb78aff1fb69d041899c6ae","commitMessage":"@@@Add project hierarchies.  part 1","date":"2017-09-02 22:10:11","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2018-05-11 02:45:28","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":2,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2017-09-02 22:10:11","endLine":135,"groupId":"3052","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d9/ee830fa4a4b2aa3a06cdd46bc399acb745391d.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2018-05-11 02:45:28","commitOrder":2,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges[match].getMediaType(), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2018-05-11 02:45:28","endLine":167,"groupId":"6645","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/07/3fbe89c1f661314caa11e76db39ae3b38c8da9.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypes);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypes[match], mediaTypeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"699c7d6dad40129e3e1352827295c17160086e40","commitMessage":"@@@Add support for q-values for matching against multiple serializers.","date":"2018-05-11 02:45:28","modifiedFileCount":"38","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-03-20 22:40:09","codes":[{"authorDate":"2017-09-02 22:10:11","commitOrder":3,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2017-09-02 22:10:11","endLine":135,"groupId":"3052","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/d9/ee830fa4a4b2aa3a06cdd46bc399acb745391d.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2020-03-20 22:40:09","commitOrder":3,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges[match].getMediaType(), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2020-03-20 22:40:09","endLine":176,"groupId":"6645","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/cc/93801f6ceb6dbdb01a6c75d5852da74e817016.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges[match].getMediaType(), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"4df44235cd5594f0cf34a9b8f5a26a5df5c95919","commitMessage":"@@@JUNEAU-193\n\nRestClient should support all languages by default.\n","date":"2020-03-20 22:40:09","modifiedFileCount":"48","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-04-06 06:48:13","codes":[{"authorDate":"2020-04-06 06:48:13","commitOrder":4,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.of(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2020-04-06 06:48:13","endLine":164,"groupId":"2686","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/81/9808949e35cafb324af288dc6c81b72fae54e2.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.forString(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2020-04-06 06:48:13","commitOrder":4,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.of(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges[match].getMediaType(), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2020-04-06 06:48:13","endLine":175,"groupId":"9328","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/24/769f450ed80373fca1aac50ec81e1862c6b62b.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.forString(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges[match].getMediaType(), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"7d2258dc4718485cbffd9b77874091bda2f668b3","commitMessage":"@@@Header beans should extend from HttpClient Header class.","date":"2020-04-06 06:48:13","modifiedFileCount":"89","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-07-14 23:49:03","codes":[{"authorDate":"2020-04-06 06:48:13","commitOrder":5,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.of(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2020-04-06 06:48:13","endLine":164,"groupId":"2686","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/81/9808949e35cafb324af288dc6c81b72fae54e2.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.of(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"N"},{"authorDate":"2020-07-14 23:49:03","commitOrder":5,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.of(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges.get(match), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2020-07-14 23:49:03","endLine":176,"groupId":"5155","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f5/f7b68bbcab8aa6535714402337aa21c410146c.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.of(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges[match].getMediaType(), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"47292551a79094f11f7949b47ae4eee53fb64950","commitMessage":"@@@org.apache.juneau.http improvements.","date":"2020-07-14 23:49:03","modifiedFileCount":"11","status":"M","submitter":"JamesBognar"},{"authorTime":"2020-07-16 07:58:48","codes":[{"authorDate":"2020-07-16 07:58:48","commitOrder":6,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.of(contentTypeHeader);\n\t\tint match = ct.match(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes.get(match), mediaTypeParsers.get(match));\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2020-07-16 07:58:48","endLine":163,"groupId":"8029","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3e/27d2f79b4ce90c4bf2693f845ed08d9fd2a03f.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.of(contentTypeHeader);\n\t\tint match = ct.findMatch(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes[match], mediaTypeParsers[match]);\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2020-07-16 07:58:48","commitOrder":6,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.of(acceptHeader);\n\t\tint match = a.match(mediaRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaRanges.get(match), mediaTypeRangeSerializers.get(match));\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2020-07-16 07:58:48","endLine":176,"groupId":"5155","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/02/bf907cfb886355d9434c9630cff43055aa1eb1.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.of(acceptHeader);\n\t\tint match = a.findMatch(mediaTypeRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaTypeRanges.get(match), mediaTypeRangeSerializers[match]);\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"69ceb51c0a3eb4138e8e10685a0ba14c130c8ba3","commitMessage":"@@@org.apache.juneau.http.header tests.","date":"2020-07-16 07:58:48","modifiedFileCount":"6","status":"M","submitter":"JamesBognar"},{"authorTime":"2021-03-04 08:37:47","codes":[{"authorDate":"2021-03-04 08:37:47","commitOrder":7,"curCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = contentType(contentTypeHeader);\n\t\tint match = ct.match(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes.get(match), mediaTypeParsers.get(match));\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","date":"2021-03-04 08:37:47","endLine":164,"groupId":"10397","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getParserMatch","params":"(StringcontentTypeHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/c5/7a00845824f59c5c80777c0a8aad348a24660c.src","preCode":"\tpublic ParserMatch getParserMatch(String contentTypeHeader) {\n\t\tParserMatch pm = cache.get(contentTypeHeader);\n\t\tif (pm != null)\n\t\t\treturn pm;\n\n\t\tContentType ct = ContentType.of(contentTypeHeader);\n\t\tint match = ct.match(mediaTypes);\n\n\t\tif (match >= 0) {\n\t\t\tpm = new ParserMatch(mediaTypes.get(match), mediaTypeParsers.get(match));\n\t\t\tcache.putIfAbsent(contentTypeHeader, pm);\n\t\t}\n\n\t\treturn cache.get(contentTypeHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/parser/ParserGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2021-03-04 08:37:47","commitOrder":7,"curCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = accept(acceptHeader);\n\t\tint match = a.match(mediaRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaRanges.get(match), mediaTypeRangeSerializers.get(match));\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","date":"2021-03-04 08:37:47","endLine":177,"groupId":"10397","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerializerMatch","params":"(StringacceptHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a8/0e8414dd88bf8708dae08a9ac8b1726e1cfb78.src","preCode":"\tpublic SerializerMatch getSerializerMatch(String acceptHeader) {\n\t\tif (acceptHeader == null)\n\t\t\treturn null;\n\t\tSerializerMatch sm = cache.get(acceptHeader);\n\t\tif (sm != null)\n\t\t\treturn sm;\n\n\t\tAccept a = Accept.of(acceptHeader);\n\t\tint match = a.match(mediaRanges);\n\t\tif (match >= 0) {\n\t\t\tsm = new SerializerMatch(mediaRanges.get(match), mediaTypeRangeSerializers.get(match));\n\t\t\tcache.putIfAbsent(acceptHeader, sm);\n\t\t}\n\n\t\treturn cache.get(acceptHeader);\n\t}\n","realPath":"juneau-core/juneau-marshall/src/main/java/org/apache/juneau/serializer/SerializerGroup.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"4dc6681f86227888fa1e401bf33716135dfb4bc1","commitMessage":"@@@REST refactoring.","date":"2021-03-04 08:37:47","modifiedFileCount":"306","status":"M","submitter":"JamesBognar"}]
