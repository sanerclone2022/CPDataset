[{"authorTime":"2018-12-09 04:09:52","codes":[{"authorDate":"2018-11-06 22:03:53","commitOrder":2,"curCode":"\tpublic static void main(String[] args) throws SerializeException, ParseException {\n\t\t\n\t\t\r\n\t\tHashMap<String, List<Pojo>> values = new HashMap<>(); \n\t\tArrayList<Pojo> setOne = new ArrayList<>();\n\t\tsetOne.add(new Pojo(\"1.1\", \"name1\"));\n\t\tsetOne.add(new Pojo(\"1.1\", \"name2\"));\n\t\tArrayList<Pojo> setTwo = new ArrayList<>();\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name1\"));\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name2\"));\n\t\tvalues.put(\"setOne\", setOne);\n\t\tvalues.put(\"setTwo\", setTwo);\n\t\tPojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\t\t\n\t\t\r\n\t\tString serial = XmlSerializer.DEFAULT_SQ_READABLE.serialize(pojoc);\n\t\tSystem.out.println(serial);\n\t\t\n\t\t\r\n\t\tPojoComplex obj = XmlParser.DEFAULT.parse(serial, PojoComplex.class);\n\t\n\t\tassert obj.getClass().equals(pojoc.getClass()); \n\t\tassert obj.getInnerPojo().getId().equals(pojoc.getInnerPojo().getId());\n\t\t\n\t\t\r\n\t\t\r\n\n\t}\n","date":"2018-11-06 22:03:53","endLine":61,"groupId":"8802","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ea/58e7489a0a0fb23bb13171159f4d7255cac34f.src","preCode":"\tpublic static void main(String[] args) throws SerializeException, ParseException {\n\t\t\n\t\t\r\n\t\tHashMap<String, List<Pojo>> values = new HashMap<>(); \n\t\tArrayList<Pojo> setOne = new ArrayList<>();\n\t\tsetOne.add(new Pojo(\"1.1\", \"name1\"));\n\t\tsetOne.add(new Pojo(\"1.1\", \"name2\"));\n\t\tArrayList<Pojo> setTwo = new ArrayList<>();\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name1\"));\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name2\"));\n\t\tvalues.put(\"setOne\", setOne);\n\t\tvalues.put(\"setTwo\", setTwo);\n\t\tPojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\t\t\n\t\t\r\n\t\tString serial = XmlSerializer.DEFAULT_SQ_READABLE.serialize(pojoc);\n\t\tSystem.out.println(serial);\n\t\t\n\t\t\r\n\t\tPojoComplex obj = XmlParser.DEFAULT.parse(serial, PojoComplex.class);\n\t\n\t\tassert obj.getClass().equals(pojoc.getClass()); \n\t\tassert obj.getInnerPojo().getId().equals(pojoc.getInnerPojo().getId());\n\t\t\n\t\t\r\n\t\t\r\n\n\t}\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/xml/XmlComplexExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"NB"},{"authorDate":"2018-12-09 04:09:52","commitOrder":2,"curCode":"    public static void main(String[] args) throws Exception {\n\n        \r\n        HashMap<String, List<Pojo>> values = new HashMap<>();\n        ArrayList<Pojo> setOne = new ArrayList<>();\n        setOne.add(new Pojo(\"1.1\", \"name1\"));\n        setOne.add(new Pojo(\"1.1\", \"name2\"));\n        ArrayList<Pojo> setTwo = new ArrayList<>();\n        setTwo.add(new Pojo(\"1.2\", \"name1\"));\n        setTwo.add(new Pojo(\"1.2\", \"name2\"));\n        values.put(\"setOne\", setOne);\n        values.put(\"setTwo\", setTwo);\n        PojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n        \r\n        RdfSerializer rdfSerializer = RdfXmlSerializer.DEFAULT;\n        \r\n        System.out.println(rdfSerializer.serialize(pojoc));\n    }\n","date":"2018-12-09 04:09:52","endLine":38,"groupId":"8802","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/3c/fb0923f20f8270bbe6efdc0b24a81a1a1ac9b1.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        \r\n        HashMap<String, List<Pojo>> values = new HashMap<>();\n        ArrayList<Pojo> setOne = new ArrayList<>();\n        setOne.add(new Pojo(\"1.1\", \"name1\"));\n        setOne.add(new Pojo(\"1.1\", \"name2\"));\n        ArrayList<Pojo> setTwo = new ArrayList<>();\n        setTwo.add(new Pojo(\"1.2\", \"name1\"));\n        setTwo.add(new Pojo(\"1.2\", \"name2\"));\n        values.put(\"setOne\", setOne);\n        values.put(\"setTwo\", setTwo);\n        PojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n        \r\n        RdfSerializer rdfSerializer = RdfXmlSerializer.DEFAULT;\n        \r\n        System.out.println(rdfSerializer.serialize(pojoc));\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/rdf/RdfComplexExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"B"}],"commitId":"f248e6a28b95a18873a930a868d0d773176e46bb","commitMessage":"@@@Merge pull request #28 from Akayeshmantha/JUNEAU-93\n\nAdding more examples on core module","date":"2018-12-09 04:09:52","modifiedFileCount":"0","status":"M","submitter":"James Bognar"},{"authorTime":"2018-12-13 21:21:14","codes":[{"authorDate":"2018-11-06 22:03:53","commitOrder":3,"curCode":"\tpublic static void main(String[] args) throws SerializeException, ParseException {\n\t\t\n\t\t\r\n\t\tHashMap<String, List<Pojo>> values = new HashMap<>(); \n\t\tArrayList<Pojo> setOne = new ArrayList<>();\n\t\tsetOne.add(new Pojo(\"1.1\", \"name1\"));\n\t\tsetOne.add(new Pojo(\"1.1\", \"name2\"));\n\t\tArrayList<Pojo> setTwo = new ArrayList<>();\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name1\"));\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name2\"));\n\t\tvalues.put(\"setOne\", setOne);\n\t\tvalues.put(\"setTwo\", setTwo);\n\t\tPojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\t\t\n\t\t\r\n\t\tString serial = XmlSerializer.DEFAULT_SQ_READABLE.serialize(pojoc);\n\t\tSystem.out.println(serial);\n\t\t\n\t\t\r\n\t\tPojoComplex obj = XmlParser.DEFAULT.parse(serial, PojoComplex.class);\n\t\n\t\tassert obj.getClass().equals(pojoc.getClass()); \n\t\tassert obj.getInnerPojo().getId().equals(pojoc.getInnerPojo().getId());\n\t\t\n\t\t\r\n\t\t\r\n\n\t}\n","date":"2018-11-06 22:03:53","endLine":61,"groupId":"8802","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/ea/58e7489a0a0fb23bb13171159f4d7255cac34f.src","preCode":"\tpublic static void main(String[] args) throws SerializeException, ParseException {\n\t\t\n\t\t\r\n\t\tHashMap<String, List<Pojo>> values = new HashMap<>(); \n\t\tArrayList<Pojo> setOne = new ArrayList<>();\n\t\tsetOne.add(new Pojo(\"1.1\", \"name1\"));\n\t\tsetOne.add(new Pojo(\"1.1\", \"name2\"));\n\t\tArrayList<Pojo> setTwo = new ArrayList<>();\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name1\"));\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name2\"));\n\t\tvalues.put(\"setOne\", setOne);\n\t\tvalues.put(\"setTwo\", setTwo);\n\t\tPojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\t\t\n\t\t\r\n\t\tString serial = XmlSerializer.DEFAULT_SQ_READABLE.serialize(pojoc);\n\t\tSystem.out.println(serial);\n\t\t\n\t\t\r\n\t\tPojoComplex obj = XmlParser.DEFAULT.parse(serial, PojoComplex.class);\n\t\n\t\tassert obj.getClass().equals(pojoc.getClass()); \n\t\tassert obj.getInnerPojo().getId().equals(pojoc.getInnerPojo().getId());\n\t\t\n\t\t\r\n\t\t\r\n\n\t}\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/xml/XmlComplexExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"},{"authorDate":"2018-12-13 21:21:14","commitOrder":3,"curCode":"    public static void main(String[] args) throws Exception {\n\n        \r\n        HashMap<String, List<Pojo>> values = new HashMap<>();\n        ArrayList<Pojo> setOne = new ArrayList<>();\n        setOne.add(new Pojo(\"1.1\", \"name1\"));\n        setOne.add(new Pojo(\"1.1\", \"name2\"));\n        ArrayList<Pojo> setTwo = new ArrayList<>();\n        setTwo.add(new Pojo(\"1.2\", \"name1\"));\n        setTwo.add(new Pojo(\"1.2\", \"name2\"));\n        values.put(\"setOne\", setOne);\n        values.put(\"setTwo\", setTwo);\n        PojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n        \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        RdfSerializer rdfSerializer = RdfXmlSerializer.DEFAULT;\n        \r\n        System.out.println(rdfSerializer.serialize(pojoc));\n\n        \r\n        String rdfXml = RdfXmlAbbrevSerializer.DEFAULT.serialize(pojoc);\n        System.out.println(rdfXml);\n    }\n","date":"2018-12-13 21:21:14","endLine":103,"groupId":"8802","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/55/1520039e8f9cea81332351b235cf66e463f6ca.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        \r\n        HashMap<String, List<Pojo>> values = new HashMap<>();\n        ArrayList<Pojo> setOne = new ArrayList<>();\n        setOne.add(new Pojo(\"1.1\", \"name1\"));\n        setOne.add(new Pojo(\"1.1\", \"name2\"));\n        ArrayList<Pojo> setTwo = new ArrayList<>();\n        setTwo.add(new Pojo(\"1.2\", \"name1\"));\n        setTwo.add(new Pojo(\"1.2\", \"name2\"));\n        values.put(\"setOne\", setOne);\n        values.put(\"setTwo\", setTwo);\n        PojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n        \r\n        RdfSerializer rdfSerializer = RdfXmlSerializer.DEFAULT;\n        \r\n        System.out.println(rdfSerializer.serialize(pojoc));\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/rdf/RdfComplexExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"77def24d72e62a083db2d1e83cc30e85c28c86ad","commitMessage":"@@@Merge pull request #34 from Akayeshmantha/JUNEAU-94\n\nAdding more samples on rdf serializer and adding clear comments","date":"2018-12-13 21:21:14","modifiedFileCount":"2","status":"M","submitter":"James Bognar"},{"authorTime":"2018-12-13 21:21:14","codes":[{"authorDate":"2019-07-06 02:52:55","commitOrder":4,"curCode":"\tpublic static void main(String[] args) throws Exception {\n\n\t\t\r\n\t\tHashMap<String, List<Pojo>> values = new HashMap<>();\n\t\tArrayList<Pojo> setOne = new ArrayList<>();\n\t\tsetOne.add(new Pojo(\"1.1\", \"name1\"));\n\t\tsetOne.add(new Pojo(\"1.1\", \"name2\"));\n\t\tArrayList<Pojo> setTwo = new ArrayList<>();\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name1\"));\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name2\"));\n\t\tvalues.put(\"setOne\", setOne);\n\t\tvalues.put(\"setTwo\", setTwo);\n\t\tPojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n\t\t\r\n\t\tString serial = XmlSerializer.DEFAULT_SQ_READABLE.serialize(pojoc);\n\t\tSystem.out.println(serial);\n\n\t\t\r\n\t\tPojoComplex obj = XmlParser.DEFAULT.parse(serial, PojoComplex.class);\n\n\t\tassert obj.getClass().equals(pojoc.getClass());\n\t\tassert obj.getInnerPojo().getId().equals(pojoc.getInnerPojo().getId());\n\n\t\t\r\n\t\t\r\n\n\t}\n","date":"2019-07-06 02:52:55","endLine":64,"groupId":"102108","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/f4/5cdf283ad3dc3cef67d04e0a1ddad0b7f8d99e.src","preCode":"\tpublic static void main(String[] args) throws SerializeException, ParseException {\n\n\t\t\r\n\t\tHashMap<String, List<Pojo>> values = new HashMap<>();\n\t\tArrayList<Pojo> setOne = new ArrayList<>();\n\t\tsetOne.add(new Pojo(\"1.1\", \"name1\"));\n\t\tsetOne.add(new Pojo(\"1.1\", \"name2\"));\n\t\tArrayList<Pojo> setTwo = new ArrayList<>();\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name1\"));\n\t\tsetTwo.add(new Pojo(\"1.2\", \"name2\"));\n\t\tvalues.put(\"setOne\", setOne);\n\t\tvalues.put(\"setTwo\", setTwo);\n\t\tPojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n\t\t\r\n\t\tString serial = XmlSerializer.DEFAULT_SQ_READABLE.serialize(pojoc);\n\t\tSystem.out.println(serial);\n\n\t\t\r\n\t\tPojoComplex obj = XmlParser.DEFAULT.parse(serial, PojoComplex.class);\n\n\t\tassert obj.getClass().equals(pojoc.getClass());\n\t\tassert obj.getInnerPojo().getId().equals(pojoc.getInnerPojo().getId());\n\n\t\t\r\n\t\t\r\n\n\t}\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/xml/XmlComplexExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2018-12-13 21:21:14","commitOrder":4,"curCode":"    public static void main(String[] args) throws Exception {\n\n        \r\n        HashMap<String, List<Pojo>> values = new HashMap<>();\n        ArrayList<Pojo> setOne = new ArrayList<>();\n        setOne.add(new Pojo(\"1.1\", \"name1\"));\n        setOne.add(new Pojo(\"1.1\", \"name2\"));\n        ArrayList<Pojo> setTwo = new ArrayList<>();\n        setTwo.add(new Pojo(\"1.2\", \"name1\"));\n        setTwo.add(new Pojo(\"1.2\", \"name2\"));\n        values.put(\"setOne\", setOne);\n        values.put(\"setTwo\", setTwo);\n        PojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n        \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        RdfSerializer rdfSerializer = RdfXmlSerializer.DEFAULT;\n        \r\n        System.out.println(rdfSerializer.serialize(pojoc));\n\n        \r\n        String rdfXml = RdfXmlAbbrevSerializer.DEFAULT.serialize(pojoc);\n        System.out.println(rdfXml);\n    }\n","date":"2018-12-13 21:21:14","endLine":103,"groupId":"102108","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/55/1520039e8f9cea81332351b235cf66e463f6ca.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        \r\n        HashMap<String, List<Pojo>> values = new HashMap<>();\n        ArrayList<Pojo> setOne = new ArrayList<>();\n        setOne.add(new Pojo(\"1.1\", \"name1\"));\n        setOne.add(new Pojo(\"1.1\", \"name2\"));\n        ArrayList<Pojo> setTwo = new ArrayList<>();\n        setTwo.add(new Pojo(\"1.2\", \"name1\"));\n        setTwo.add(new Pojo(\"1.2\", \"name2\"));\n        values.put(\"setOne\", setOne);\n        values.put(\"setTwo\", setTwo);\n        PojoComplex pojoc = new PojoComplex(\"pojo\", new Pojo(\"1.0\", \"name0\"), values);\n\n        \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        RdfSerializer rdfSerializer = RdfXmlSerializer.DEFAULT;\n        \r\n        System.out.println(rdfSerializer.serialize(pojoc));\n\n        \r\n        String rdfXml = RdfXmlAbbrevSerializer.DEFAULT.serialize(pojoc);\n        System.out.println(rdfXml);\n    }\n","realPath":"juneau-examples/juneau-examples-core/src/main/java/org/apache/juneau/examples/core/rdf/RdfComplexExample.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"3746a7917cd6c303dd3c9374bba0995d7bed5932","commitMessage":"@@@Javadoc and thrown-exception cleanup.","date":"2019-07-06 02:52:55","modifiedFileCount":"203","status":"M","submitter":"JamesBognar"}]
