[{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void a01_basic() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK1\");\n\t\ta.get(\"/a?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK2\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":79,"groupId":"2970","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"a01_basic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/16/9d098bcff29d58825619301ecc921bce3fe22c.src","preCode":"\tpublic void a01_basic() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK1\");\n\t\ta.get(\"/a?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK2\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/RestOp_Guards_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2021-02-06 03:17:15","commitOrder":1,"curCode":"\tpublic void a01_nestedChildren() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\t\r\n\t\t\r\n\t\ta.get(\"/\").run().assertBody().is(\"A-p0\");\n\t\ta.get(\"/p1\").run().assertBody().is(\"A01-p0/p1\");\n\t\ta.get(\"/p1/p2\").run().assertBody().is(\"A02a-p0/p1/p2\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":60,"groupId":"6729","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"a01_nestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a6/54ec306a0d0765bf087c5cc533c606a06a7976.src","preCode":"\tpublic void a01_nestedChildren() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\t\r\n\t\t\r\n\t\ta.get(\"/\").run().assertBody().is(\"A-p0\");\n\t\ta.get(\"/p1\").run().assertBody().is(\"A01-p0/p1\");\n\t\ta.get(\"/p1/p2\").run().assertBody().is(\"A02a-p0/p1/p2\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/Restx_Path_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"be23bff717ddb90a892c743156f56c11bd5bceee","commitMessage":"@@@Move unit tests into a single top-level project.","date":"2021-02-06 03:17:15","modifiedFileCount":"0","status":"B","submitter":"JamesBognar"},{"authorTime":"2021-02-06 03:17:15","codes":[{"authorDate":"2021-02-14 07:38:26","commitOrder":2,"curCode":"\tpublic void a01_basic() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\n\t\ta.get(\"/a1?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-a1\");\n\t\ta.get(\"/a1?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/a2?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/a2?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/a2?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/a2?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-a2\");\n\n\t\ta.get(\"/b1?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-b1\");\n\t\ta.get(\"/b1?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b2?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b2?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b2?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b2?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-b2\");\n\n\t\ta.put(\"/c1?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-c1\");\n\t\ta.put(\"/c1?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.put(\"/c2?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.put(\"/c2?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.put(\"/c2?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.put(\"/c2?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-c2\");\n\n\t\ta.post(\"/d1?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-d1\");\n\t\ta.post(\"/d1?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.post(\"/d2?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.post(\"/d2?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.post(\"/d2?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.post(\"/d2?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-d2\");\n\n\t\ta.delete(\"/e1?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-e1\");\n\t\ta.delete(\"/e1?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.delete(\"/e2?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.delete(\"/e2?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.delete(\"/e2?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.delete(\"/e2?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK-e2\");\n\t}\n","date":"2021-02-14 07:38:26","endLine":204,"groupId":"101816","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"a01_basic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a0/024c05d1316f9da3a6559c26aee455cb61170a.src","preCode":"\tpublic void a01_basic() throws Exception {\n\t\tRestClient a = MockRestClient.buildLax(A.class);\n\t\ta.get(\"/a?t1=1\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK1\");\n\t\ta.get(\"/a?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true&t1=1\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?noTrace=true&t2=2\")\n\t\t\t.run()\n\t\t\t.assertCode().is(403)\n\t\t\t.assertBody().contains(\"Access denied by guard\");\n\t\ta.get(\"/b?t1=1&t2=2\")\n\t\t\t.run()\n\t\t\t.assertBody().is(\"OK2\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/RestOp_Guards_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-02-06 03:17:15","commitOrder":2,"curCode":"\tpublic void a01_nestedChildren() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\t\r\n\t\t\r\n\t\ta.get(\"/\").run().assertBody().is(\"A-p0\");\n\t\ta.get(\"/p1\").run().assertBody().is(\"A01-p0/p1\");\n\t\ta.get(\"/p1/p2\").run().assertBody().is(\"A02a-p0/p1/p2\");\n\t}\n","date":"2021-02-06 03:17:15","endLine":60,"groupId":"101816","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"a01_nestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-juneau-10-0.7/blobInfo/CC_OUT/blobs/a6/54ec306a0d0765bf087c5cc533c606a06a7976.src","preCode":"\tpublic void a01_nestedChildren() throws Exception {\n\t\tRestClient a = MockRestClient.build(A.class);\n\t\t\r\n\t\t\r\n\t\ta.get(\"/\").run().assertBody().is(\"A-p0\");\n\t\ta.get(\"/p1\").run().assertBody().is(\"A01-p0/p1\");\n\t\ta.get(\"/p1/p2\").run().assertBody().is(\"A02a-p0/p1/p2\");\n\t}\n","realPath":"juneau-utest/src/test/java/org/apache/juneau/rest/annotation/Restx_Path_Test.java","repoName":"juneau","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"ea768d374d7babc93fb8c26f50f5ecf259956017","commitMessage":"@@@New RestGet/RestPut/RestPost/RestDelete annotations.","date":"2021-02-14 07:38:26","modifiedFileCount":"202","status":"M","submitter":"JamesBognar"}]
