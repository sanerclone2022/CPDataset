[{"authorTime":"2008-04-20 03:48:44","codes":[{"authorDate":"2008-04-20 03:48:44","commitOrder":1,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        FigEdge figEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            figEdge = new FigTransition(edge, lay);\n        } else if (edge instanceof CommentEdge) {\n            figEdge = new FigEdgeNote(edge, lay);\n        } else {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n        \n        lay.add(figEdge);\n        return figEdge;\n    }\n","date":"2008-04-20 03:48:44","endLine":160,"groupId":"4709","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/96/5eb72c0450b2d13721c83d44cd632716b055fb.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        FigEdge figEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            figEdge = new FigTransition(edge, lay);\n        } else if (edge instanceof CommentEdge) {\n            figEdge = new FigEdgeNote(edge, lay);\n        } else {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n        \n        lay.add(figEdge);\n        return figEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"B"},{"authorDate":"2008-04-20 03:48:44","commitOrder":1,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, lay);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object asc =  edge;\n            newEdge = new FigAssociation(asc, lay);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, lay);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            Object lnk =  edge;\n            FigLink lnkFig = new FigLink(lnk);\n            Collection linkEnds = Model.getFacade().getConnections(lnk);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            Object dep =  edge;\n            FigDependency depFig = new FigDependency(dep);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(dep).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(dep).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            Object gen =  edge;\n            newEdge = new FigGeneralization(gen, lay);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2008-04-20 03:48:44","endLine":196,"groupId":"15500","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/3a/a99c7265a07f4c7136f4bc6e4e16df8353e4fa.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, lay);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object asc =  edge;\n            newEdge = new FigAssociation(asc, lay);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, lay);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            Object lnk =  edge;\n            FigLink lnkFig = new FigLink(lnk);\n            Collection linkEnds = Model.getFacade().getConnections(lnk);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            Object dep =  edge;\n            FigDependency depFig = new FigDependency(dep);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(dep).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(dep).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            Object gen =  edge;\n            newEdge = new FigGeneralization(gen, lay);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"}],"commitId":"4d0b0eba87adbbd2972649e03af67052c3b09f23","commitMessage":"@@@Issue 4625: Renamed directories to new structure.\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@14404 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2008-04-20 03:48:44","modifiedFileCount":"0","status":"B","submitter":"Dave Thompson"},{"authorTime":"2008-04-20 03:48:44","codes":[{"authorDate":"2008-12-28 01:45:59","commitOrder":2,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2008-12-28 01:45:59","endLine":131,"groupId":"14694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/f5/4e51c0f997f5da8d605fcd63fdc84b3111b721.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        FigEdge figEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            figEdge = new FigTransition(edge, lay);\n        } else if (edge instanceof CommentEdge) {\n            figEdge = new FigEdgeNote(edge, lay);\n        } else {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n        \n        lay.add(figEdge);\n        return figEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2008-04-20 03:48:44","commitOrder":2,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, lay);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object asc =  edge;\n            newEdge = new FigAssociation(asc, lay);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, lay);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            Object lnk =  edge;\n            FigLink lnkFig = new FigLink(lnk);\n            Collection linkEnds = Model.getFacade().getConnections(lnk);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            Object dep =  edge;\n            FigDependency depFig = new FigDependency(dep);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(dep).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(dep).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            Object gen =  edge;\n            newEdge = new FigGeneralization(gen, lay);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2008-04-20 03:48:44","endLine":196,"groupId":"15500","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/3a/a99c7265a07f4c7136f4bc6e4e16df8353e4fa.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, lay);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object asc =  edge;\n            newEdge = new FigAssociation(asc, lay);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, lay);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            Object lnk =  edge;\n            FigLink lnkFig = new FigLink(lnk);\n            Collection linkEnds = Model.getFacade().getConnections(lnk);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            Object dep =  edge;\n            FigDependency depFig = new FigDependency(dep);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(dep).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(dep).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            Object gen =  edge;\n            newEdge = new FigGeneralization(gen, lay);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"}],"commitId":"aa2280833063ef5812039896776d5b3d87c020c5","commitMessage":"@@@Made the state diagram renderer use the new Fig constructors.\nMade more conform Class diagrams.\nStill to do: Comment Edge.  other classes that construct Figs.\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@16443 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2008-12-28 01:45:59","modifiedFileCount":"2","status":"M","submitter":"Michiel van der Wulp"},{"authorTime":"2009-01-03 02:40:49","codes":[{"authorDate":"2008-12-28 01:45:59","commitOrder":3,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2008-12-28 01:45:59","endLine":131,"groupId":"14694","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/f5/4e51c0f997f5da8d605fcd63fdc84b3111b721.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"},{"authorDate":"2009-01-03 02:40:49","commitOrder":3,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, settings);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            newEdge = new FigAssociation(edge, settings);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-01-03 02:40:49","endLine":184,"groupId":"970","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/1c/a64efb2f76fa6e6a96be408e3372c253dd8cef.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, lay);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object asc =  edge;\n            newEdge = new FigAssociation(asc, lay);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, lay);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            Object lnk =  edge;\n            FigLink lnkFig = new FigLink(lnk);\n            Collection linkEnds = Model.getFacade().getConnections(lnk);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            Object dep =  edge;\n            FigDependency depFig = new FigDependency(dep);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(dep).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(dep).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            Object gen =  edge;\n            newEdge = new FigGeneralization(gen, lay);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"d4b1bc1f5cea580e0e2c7877eee6d9f69b89d292","commitMessage":"@@@Issue 5500: Remainging figs for State & Activity diagrams\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@16483 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-01-03 02:40:49","modifiedFileCount":"29","status":"M","submitter":"Tom Morris"},{"authorTime":"2009-01-17 02:43:24","codes":[{"authorDate":"2008-12-28 01:45:59","commitOrder":4,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2008-12-28 01:45:59","endLine":131,"groupId":"14694","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/f5/4e51c0f997f5da8d605fcd63fdc84b3111b721.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"},{"authorDate":"2009-01-17 02:43:24","commitOrder":4,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, settings);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            newEdge = new FigAssociation(edge, settings);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-01-17 02:43:24","endLine":184,"groupId":"970","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/35/fb66ace5d3cca35d6fb760e3d51a0e903af897.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, settings);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            newEdge = new FigAssociation(edge, settings);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"79ee8146b9ef293e53f53d45d62f7b89d7b9ba0c","commitMessage":"@@@Issue 5500: Update FigLink to new constructor\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@16634 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-01-17 02:43:24","modifiedFileCount":"3","status":"M","submitter":"Tom Morris"},{"authorTime":"2009-01-18 06:06:52","codes":[{"authorDate":"2009-01-18 06:06:52","commitOrder":5,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-01-18 06:06:52","endLine":129,"groupId":"14694","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/9a/c682a6fa2fe66bd8c63b669af1487076a52a13.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2009-01-18 06:06:52","commitOrder":5,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, settings);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            newEdge = new FigAssociation(edge, settings);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-01-18 06:06:52","endLine":184,"groupId":"970","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/09/50b25701480c35be5cbe3eaaa8ee30c0bf1ddd.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, settings);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            newEdge = new FigAssociation(edge, settings);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, lay);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"6e1480ac0327e78d59d4dd688d5d36fd4565f03f","commitMessage":"@@@Issue 5500: Update FigEdgeNote to new constructor.  No longer a subclass of FigEdgeModelElement since it has a non model element owner (CommentEdge)\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@16640 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-01-18 06:06:52","modifiedFileCount":"11","status":"M","submitter":"Tom Morris"},{"authorTime":"2009-09-01 05:42:02","codes":[{"authorDate":"2009-01-18 06:06:52","commitOrder":6,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-01-18 06:06:52","endLine":129,"groupId":"14694","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/9a/c682a6fa2fe66bd8c63b669af1487076a52a13.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"N"},{"authorDate":"2009-09-01 05:42:02","commitOrder":6,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramAssociationSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramAssociationSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-09-01 05:42:02","endLine":215,"groupId":"970","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/a5/fbc17c842c38d94876b3b8c9b379fdd8b7bc71.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            newEdge = new FigAssociationClass(edge, settings);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            newEdge = new FigAssociation(edge, settings);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"477320c33dbfa19e1f64c9ebbd049af26864b258","commitMessage":"@@@Set association ends in the constructor of FigAssociation\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@17304 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-09-01 05:42:02","modifiedFileCount":"10","status":"M","submitter":"Bob Tarling"},{"authorTime":"2009-09-15 19:45:37","codes":[{"authorDate":"2009-01-18 06:06:52","commitOrder":7,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-01-18 06:06:52","endLine":129,"groupId":"14694","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/9a/c682a6fa2fe66bd8c63b669af1487076a52a13.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"N"},{"authorDate":"2009-09-15 19:45:37","commitOrder":7,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramEdgeSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramEdgeSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-09-15 19:45:37","endLine":215,"groupId":"970","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/f0/6aa3b625cadccb9960a4ae23ee69b42949a278.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramAssociationSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramAssociationSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"e8ef7a79b907849c540923c9612dd8943bc25303","commitMessage":"@@@Make the association settings name more generic so we can use it for other edge types\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@17328 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-09-15 19:45:37","modifiedFileCount":"5","status":"M","submitter":"Bob Tarling"},{"authorTime":"2009-09-15 19:45:37","codes":[{"authorDate":"2009-12-04 20:17:34","commitOrder":8,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n\n\r\n\r\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-12-04 20:17:34","endLine":147,"groupId":"14694","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/3c/19fa50809bdb2be7ee38c71364cf527849bd9a.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            LOG.debug(\"TODO: StateDiagramRenderer getFigEdgeFor\");\n            return null;\n        }\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2009-09-15 19:45:37","commitOrder":8,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramEdgeSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramEdgeSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","date":"2009-09-15 19:45:37","endLine":215,"groupId":"970","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/f0/6aa3b625cadccb9960a4ae23ee69b42949a278.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramEdgeSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramEdgeSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"c4e91307de705c4f4f1ee4336b9d0e5f05fcb5f7","commitMessage":"@@@Make consistent with other renderers - this fixes problem with comment edges - issue 5759\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@17596 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-12-04 20:17:34","modifiedFileCount":"1","status":"M","submitter":"Bob Tarling"},{"authorTime":"2009-12-04 20:45:12","codes":[{"authorDate":"2009-12-04 20:45:12","commitOrder":9,"curCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        addEdge(lay, newEdge, edge);\n        return newEdge;\n    }\n","date":"2009-12-04 20:45:12","endLine":124,"groupId":"10492","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/37/caa3aa557d5f2b2baa5529829faf4bd7305e55.src","preCode":"    public FigEdge getFigEdgeFor(GraphModel gm, Layer lay, Object edge,\n            Map styleAttributes) {\n        assert edge != null;\n        assert lay instanceof LayerPerspective;\n\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        FigEdge newEdge = null;\n\n        if (Model.getFacade().isATransition(edge)) {\n            newEdge = new FigTransition(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings); \r\n        } \n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n\n\r\n\r\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n\n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/state/ui/StateDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2009-12-04 20:45:12","commitOrder":9,"curCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramEdgeSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramEdgeSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        addEdge(lay, newEdge, edge);\n        return newEdge;\n    }\n","date":"2009-12-04 20:45:12","endLine":197,"groupId":"10492","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getFigEdgeFor","params":"(GraphModelgm@Layerlay@Objectedge@MapstyleAttributes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-argouml-10-0.7/blobInfo/CC_OUT/blobs/46/8694d6e301877b9836741b7b86dbea3e7ea9df.src","preCode":"    public FigEdge getFigEdgeFor(\n            GraphModel gm,\n            Layer lay,\n            Object edge,\n            Map styleAttributes) {\n        \n        assert lay instanceof LayerPerspective;\n        ArgoDiagram diag = (ArgoDiagram) ((LayerPerspective) lay).getDiagram();\n        DiagramSettings settings = diag.getDiagramSettings();\n        \n        FigEdge newEdge = null;\n        if (Model.getFacade().isAAssociationClass(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociationClass(\n                    new DiagramEdgeSettings(\n                            edge, \n                            associationEnds[0], \n                            associationEnds[1]), \n                            settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociation(edge)) {\n            Object[] associationEnds = \n                Model.getFacade().getConnections(edge).toArray();\n            newEdge = new FigAssociation(\n                    new DiagramEdgeSettings(\n                        edge, \n                        associationEnds[0], \n                        associationEnds[1]), \n                        settings);\n            FigNode sourceFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[0]);\n            FigNode destFig =\n                getFigNodeForAssociationEnd(diag, associationEnds[1]);\n            newEdge.setSourceFigNode(sourceFig);\n            newEdge.setSourcePortFig(sourceFig);\n            newEdge.setDestFigNode(destFig);\n            newEdge.setDestPortFig(destFig);\n        } else if (Model.getFacade().isAAssociationEnd(edge)) {\n            FigAssociationEnd asend = new FigAssociationEnd(edge, settings);\n            Model.getFacade().getAssociation(edge);\n            FigNode associationFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getAssociation(edge));\n            FigNode classifierFN =\n                    (FigNode) lay.presentationFor(Model\n                            .getFacade().getType(edge));\n\n            asend.setSourcePortFig(associationFN);\n            asend.setSourceFigNode(associationFN);\n            asend.setDestPortFig(classifierFN);\n            asend.setDestFigNode(classifierFN);\n            newEdge = asend;\n        } else if (Model.getFacade().isALink(edge)) {\n            FigLink lnkFig = new FigLink(edge, settings);\n            Collection linkEnds = Model.getFacade().getConnections(edge);\n            Object[] leArray = linkEnds.toArray();\n            Object fromEnd = leArray[0];\n            Object fromInst = Model.getFacade().getInstance(fromEnd);\n            Object toEnd = leArray[1];\n            Object toInst = Model.getFacade().getInstance(toEnd);\n            FigNode fromFN = (FigNode) lay.presentationFor(fromInst);\n            FigNode toFN = (FigNode) lay.presentationFor(toInst);\n            lnkFig.setSourcePortFig(fromFN);\n            lnkFig.setSourceFigNode(fromFN);\n            lnkFig.setDestPortFig(toFN);\n            lnkFig.setDestFigNode(toFN);\n            newEdge = lnkFig;\n        } else if (Model.getFacade().isADependency(edge)) {\n            FigDependency depFig = new FigDependency(edge, settings);\n\n            Object supplier =\n                ((Model.getFacade().getSuppliers(edge).toArray())[0]);\n            Object client =\n                ((Model.getFacade().getClients(edge).toArray())[0]);\n\n            FigNode supFN = (FigNode) lay.presentationFor(supplier);\n            FigNode cliFN = (FigNode) lay.presentationFor(client);\n\n            depFig.setSourcePortFig(cliFN);\n            depFig.setSourceFigNode(cliFN);\n            depFig.setDestPortFig(supFN);\n            depFig.setDestFigNode(supFN);\n            depFig.getFig().setDashed(true);\n            newEdge = depFig;\n        } else if (Model.getFacade().isAGeneralization(edge)) {\n            newEdge = new FigGeneralization(edge, settings);\n        } else if (edge instanceof CommentEdge) {\n            newEdge = new FigEdgeNote(edge, settings);\n        }\n        if (newEdge == null) {\n            throw new IllegalArgumentException(\n                    \"Don't know how to create FigEdge for model type \"\n                    + edge.getClass().getName());\n        }\n        \n        setPorts(lay, newEdge);\n\n        assert newEdge != null : \"There has been no FigEdge created\";\n        assert (newEdge.getDestFigNode() != null) \n            : \"The FigEdge has no dest node\";\n        assert (newEdge.getDestPortFig() != null) \n            : \"The FigEdge has no dest port\";\n        assert (newEdge.getSourceFigNode() != null) \n            : \"The FigEdge has no source node\";\n        assert (newEdge.getSourcePortFig() != null) \n            : \"The FigEdge has no source port\";\n        \n        lay.add(newEdge);\n        return newEdge;\n    }\n","realPath":"src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/DeploymentDiagramRenderer.java","repoName":"argouml","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"7d6b251ad9231fadd7086aaf5c8713d1dd52a698","commitMessage":"@@@Move common code to base class\n\ngit-svn-id: http://argouml.tigris.org/svn/argouml/trunk@17602 a161b567-7d1e-0410-9ef9-912c70fedb3f\n","date":"2009-12-04 20:45:12","modifiedFileCount":"10","status":"M","submitter":"Bob Tarling"}]
