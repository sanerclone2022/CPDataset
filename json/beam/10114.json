[{"authorTime":"2020-08-23 00:59:05","codes":[{"authorDate":"2020-08-23 00:59:05","commitOrder":4,"curCode":"  public void sdkErrorsSurfaceOnClose() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    doThrow(new Exception()).when(remoteBundle).close();\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n  }\n","date":"2020-08-23 00:59:05","endLine":110,"groupId":"15416","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sdkErrorsSurfaceOnClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/39/e28be08cde76bf8a4c4e344a608392ae793a18.src","preCode":"  public void sdkErrorsSurfaceOnClose() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    doThrow(new Exception()).when(remoteBundle).close();\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/translation/SparkExecutableStageFunctionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2020-08-23 00:59:05","commitOrder":4,"curCode":"  public void testStageBundleClosed() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n    verify(stageBundleFactory).getBundle(any(), any(), any(), any());\n    verify(stageBundleFactory).getProcessBundleDescriptor();\n    verify(stageBundleFactory).close();\n    verifyNoMoreInteractions(stageBundleFactory);\n  }\n","date":"2020-08-23 00:59:05","endLine":234,"groupId":"1563","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStageBundleClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/39/e28be08cde76bf8a4c4e344a608392ae793a18.src","preCode":"  public void testStageBundleClosed() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n    verify(stageBundleFactory).getBundle(any(), any(), any(), any());\n    verify(stageBundleFactory).getProcessBundleDescriptor();\n    verify(stageBundleFactory).close();\n    verifyNoMoreInteractions(stageBundleFactory);\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/translation/SparkExecutableStageFunctionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"MB"}],"commitId":"10361a3e138532cffd086c98016235c4cd2abcf8","commitMessage":"@@@[BEAM-7587] Spark portable streaming (#12157)\n\n[BEAM-7587] Implement Spark portable streaming.","date":"2020-08-23 00:59:05","modifiedFileCount":"11","status":"M","submitter":"annaqin418"},{"authorTime":"2020-10-13 05:54:22","codes":[{"authorDate":"2020-08-23 00:59:05","commitOrder":5,"curCode":"  public void sdkErrorsSurfaceOnClose() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    doThrow(new Exception()).when(remoteBundle).close();\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n  }\n","date":"2020-08-23 00:59:05","endLine":110,"groupId":"10114","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sdkErrorsSurfaceOnClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/39/e28be08cde76bf8a4c4e344a608392ae793a18.src","preCode":"  public void sdkErrorsSurfaceOnClose() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    doThrow(new Exception()).when(remoteBundle).close();\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/translation/SparkExecutableStageFunctionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"N"},{"authorDate":"2020-10-13 05:54:22","commitOrder":5,"curCode":"  public void testStageBundleClosed() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n    verify(stageBundleFactory).getBundle(any(), any(), any(), any(BundleProgressHandler.class));\n    verify(stageBundleFactory).getProcessBundleDescriptor();\n    verify(stageBundleFactory).close();\n    verifyNoMoreInteractions(stageBundleFactory);\n  }\n","date":"2020-10-13 05:54:22","endLine":244,"groupId":"10114","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStageBundleClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/ca/23d3d2b9dc5c4b85da003d313bac342c185385.src","preCode":"  public void testStageBundleClosed() throws Exception {\n    SparkExecutableStageFunction<Integer, ?> function = getFunction(Collections.emptyMap());\n    List<WindowedValue<Integer>> inputs = new ArrayList<>();\n    inputs.add(WindowedValue.valueInGlobalWindow(0));\n    function.call(inputs.iterator());\n    verify(stageBundleFactory).getBundle(any(), any(), any(), any());\n    verify(stageBundleFactory).getProcessBundleDescriptor();\n    verify(stageBundleFactory).close();\n    verifyNoMoreInteractions(stageBundleFactory);\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/translation/SparkExecutableStageFunctionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"}],"commitId":"c0755cd5cf338115f9bc5a06ef6359772a9cb816","commitMessage":"@@@Merge pull request #13054 from [BEAM-11021] Add unsupported BundleFinalizationHandler to portable batch Flink.\n\n[BEAM-11021] Add unsupported BundleFinalizationHandler to portable batch Flink.","date":"2020-10-13 05:54:22","modifiedFileCount":"5","status":"M","submitter":"Boyuan Zhang"}]
