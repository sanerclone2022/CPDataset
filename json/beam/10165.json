[{"authorTime":"2019-02-28 17:16:06","codes":[{"authorDate":"2019-11-20 22:28:02","commitOrder":4,"curCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","date":"2019-11-20 22:28:02","endLine":88,"groupId":"1832","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"renderName","params":"(MetricResult<?>metricResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/de/146c60f97df046fc778d889a40d9cfd1e46f6d.src","preCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","realPath":"runners/spark/src/main/java/org/apache/beam/runners/spark/structuredstreaming/metrics/SparkBeamMetric.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2019-02-28 17:16:06","commitOrder":4,"curCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","date":"2019-02-28 17:16:06","endLine":88,"groupId":"1832","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"renderName","params":"(MetricResult<?>metricResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/11/b4e043e99d46c95c63d95866297dea45fb85f4.src","preCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","realPath":"runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/SparkBeamMetric.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"NB"}],"commitId":"18059eecad850b6e30bc7e376e70937915dd11fb","commitMessage":"@@@Merge pull request #9866: [BEAM-8470] Create a new Spark runner based on Spark Structured streaming framework\n\n","date":"2019-11-20 22:28:02","modifiedFileCount":"3","status":"M","submitter":"Alexey Romanenko"},{"authorTime":"2021-02-04 07:18:26","codes":[{"authorDate":"2019-11-20 22:28:02","commitOrder":5,"curCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","date":"2019-11-20 22:28:02","endLine":88,"groupId":"10165","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"renderName","params":"(MetricResult<?>metricResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/de/146c60f97df046fc778d889a40d9cfd1e46f6d.src","preCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","realPath":"runners/spark/src/main/java/org/apache/beam/runners/spark/structuredstreaming/metrics/SparkBeamMetric.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2021-02-04 07:18:26","commitOrder":5,"curCode":"  static String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","date":"2021-02-04 07:18:26","endLine":102,"groupId":"10165","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"renderName","params":"(MetricResult<?>metricResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/02/745c927c7ed18f5586b6835e3132767b8a2b0d.src","preCode":"  String renderName(MetricResult<?> metricResult) {\n    MetricKey key = metricResult.getKey();\n    MetricName name = key.metricName();\n    String step = key.stepName();\n\n    ArrayList<String> pieces = new ArrayList<>();\n\n    if (step != null) {\n      step = step.replaceAll(ILLEGAL_CHARACTERS, \"_\");\n      if (step.endsWith(\"_\")) {\n        step = step.substring(0, step.length() - 1);\n      }\n      pieces.add(step);\n    }\n\n    pieces.addAll(\n        ImmutableList.of(name.getNamespace(), name.getName()).stream()\n            .map(str -> str.replaceAll(ILLEGAL_CHARACTERS, \"_\"))\n            .collect(toList()));\n\n    return String.join(\".\", pieces);\n  }\n","realPath":"runners/spark/src/main/java/org/apache/beam/runners/spark/metrics/SparkBeamMetric.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"654ad2bd47a34c71c6e0d1c0c4ce0a9cda32ac87","commitMessage":"@@@Merge pull request #13743 from tszerszen/sparkmetrics\n\n[BEAM-11213] Display Beam Metrics in Spark History Server","date":"2021-02-04 07:18:26","modifiedFileCount":"4","status":"M","submitter":"Kyle Weaver"}]
