[{"authorTime":"2018-10-16 23:50:53","codes":[{"authorDate":"2018-10-16 23:50:53","commitOrder":1,"curCode":"  public void testUnion_threeDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public Dataset<Integer> getOutput(Pipeline pipeline) {\n            final Dataset<Integer> first = createDataset(pipeline, 1, 2, 3, 4, 5, 6);\n            final Dataset<Integer> second = createDataset(pipeline, 7, 8, 9, 10, 11, 12);\n            final Dataset<Integer> third = createDataset(pipeline, 13, 14, 15, 16, 17, 18);\n            return Union.of(first, second, third).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n          }\n        });\n  }\n","date":"2018-10-16 23:50:53","endLine":77,"groupId":"19261","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnion_threeDataSets","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/d4/7c6e42e7ed1dbf104ce291d30d067c1aeeb90b.src","preCode":"  public void testUnion_threeDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public Dataset<Integer> getOutput(Pipeline pipeline) {\n            final Dataset<Integer> first = createDataset(pipeline, 1, 2, 3, 4, 5, 6);\n            final Dataset<Integer> second = createDataset(pipeline, 7, 8, 9, 10, 11, 12);\n            final Dataset<Integer> third = createDataset(pipeline, 13, 14, 15, 16, 17, 18);\n            return Union.of(first, second, third).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n          }\n        });\n  }\n","realPath":"sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/UnionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2018-10-16 23:50:53","commitOrder":1,"curCode":"  public void testUnion_fiveDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public Dataset<Integer> getOutput(Pipeline pipeline) {\n            final Dataset<Integer> first = createDataset(pipeline, 1, 2, 3);\n            final Dataset<Integer> second = createDataset(pipeline, 4, 5, 6);\n            final Dataset<Integer> third = createDataset(pipeline, 7, 8, 9);\n            final Dataset<Integer> fourth = createDataset(pipeline, 10, 11, 12);\n            final Dataset<Integer> fifth = createDataset(pipeline, 13, 14, 15);\n            return Union.of(first, second, third, fourth, fifth).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n          }\n        });\n  }\n","date":"2018-10-16 23:50:53","endLine":99,"groupId":"6575","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnion_fiveDataSets","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/d4/7c6e42e7ed1dbf104ce291d30d067c1aeeb90b.src","preCode":"  public void testUnion_fiveDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public Dataset<Integer> getOutput(Pipeline pipeline) {\n            final Dataset<Integer> first = createDataset(pipeline, 1, 2, 3);\n            final Dataset<Integer> second = createDataset(pipeline, 4, 5, 6);\n            final Dataset<Integer> third = createDataset(pipeline, 7, 8, 9);\n            final Dataset<Integer> fourth = createDataset(pipeline, 10, 11, 12);\n            final Dataset<Integer> fifth = createDataset(pipeline, 13, 14, 15);\n            return Union.of(first, second, third, fourth, fifth).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n          }\n        });\n  }\n","realPath":"sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/UnionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"7071fa4637c9a6b046188df9b1fa29f9ef24d272","commitMessage":"@@@Merge pull request #6601: [BEAM-3900] Euphoria API\n\n","date":"2018-10-16 23:50:53","modifiedFileCount":"0","status":"B","submitter":"Kenn Knowles"},{"authorTime":"2018-11-10 01:29:46","codes":[{"authorDate":"2018-11-10 01:29:46","commitOrder":2,"curCode":"  public void testUnion_threeDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public PCollection<Integer> getOutput(Pipeline pipeline) {\n            final PCollection<Integer> first = createDataset(pipeline, 1, 2, 3, 4, 5, 6);\n            final PCollection<Integer> second = createDataset(pipeline, 7, 8, 9, 10, 11, 12);\n            final PCollection<Integer> third = createDataset(pipeline, 13, 14, 15, 16, 17, 18);\n            return Union.of(first, second, third).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n          }\n        });\n  }\n","date":"2018-11-10 01:29:46","endLine":76,"groupId":"1098","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnion_threeDataSets","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/46/189da176292305f73ff37f25230967887f1adc.src","preCode":"  public void testUnion_threeDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public Dataset<Integer> getOutput(Pipeline pipeline) {\n            final Dataset<Integer> first = createDataset(pipeline, 1, 2, 3, 4, 5, 6);\n            final Dataset<Integer> second = createDataset(pipeline, 7, 8, 9, 10, 11, 12);\n            final Dataset<Integer> third = createDataset(pipeline, 13, 14, 15, 16, 17, 18);\n            return Union.of(first, second, third).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n          }\n        });\n  }\n","realPath":"sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/UnionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2018-11-10 01:29:46","commitOrder":2,"curCode":"  public void testUnion_fiveDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public PCollection<Integer> getOutput(Pipeline pipeline) {\n            final PCollection<Integer> first = createDataset(pipeline, 1, 2, 3);\n            final PCollection<Integer> second = createDataset(pipeline, 4, 5, 6);\n            final PCollection<Integer> third = createDataset(pipeline, 7, 8, 9);\n            final PCollection<Integer> fourth = createDataset(pipeline, 10, 11, 12);\n            final PCollection<Integer> fifth = createDataset(pipeline, 13, 14, 15);\n            return Union.of(first, second, third, fourth, fifth).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n          }\n        });\n  }\n","date":"2018-11-10 01:29:46","endLine":98,"groupId":"1098","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnion_fiveDataSets","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/46/189da176292305f73ff37f25230967887f1adc.src","preCode":"  public void testUnion_fiveDataSets() {\n    execute(\n        new TestCase<Integer>() {\n\n          @Override\n          public Dataset<Integer> getOutput(Pipeline pipeline) {\n            final Dataset<Integer> first = createDataset(pipeline, 1, 2, 3);\n            final Dataset<Integer> second = createDataset(pipeline, 4, 5, 6);\n            final Dataset<Integer> third = createDataset(pipeline, 7, 8, 9);\n            final Dataset<Integer> fourth = createDataset(pipeline, 10, 11, 12);\n            final Dataset<Integer> fifth = createDataset(pipeline, 13, 14, 15);\n            return Union.of(first, second, third, fourth, fifth).output();\n          }\n\n          @Override\n          public List<Integer> getUnorderedOutput() {\n            return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n          }\n        });\n  }\n","realPath":"sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/UnionTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"f911be4337b5fd66cd78e1871f186c095b015ddd","commitMessage":"@@@Merge pull request #6750: [BEAM-5790] Euphoria: Remove Dataset abstraction.\n\n","date":"2018-11-10 01:29:46","modifiedFileCount":"52","status":"M","submitter":"David Moravek"}]
