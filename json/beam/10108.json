[{"authorTime":"2019-02-28 17:16:06","codes":[{"authorDate":"2019-11-20 22:28:02","commitOrder":5,"curCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","date":"2019-11-20 22:28:02","endLine":46,"groupId":"16749","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRenderName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/45/de622e82cd14cd216dde89af044458d33a1aed.src","preCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/structuredstreaming/metrics/BeamMetricTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2019-02-28 17:16:06","commitOrder":5,"curCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","date":"2019-02-28 17:16:06","endLine":43,"groupId":"16749","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRenderName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/a1/d6fe83870f44fa81e0ad2c878637d079520c41.src","preCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/metrics/SparkBeamMetricTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"NB"}],"commitId":"18059eecad850b6e30bc7e376e70937915dd11fb","commitMessage":"@@@Merge pull request #9866: [BEAM-8470] Create a new Spark runner based on Spark Structured streaming framework\n\n","date":"2019-11-20 22:28:02","modifiedFileCount":"3","status":"M","submitter":"Alexey Romanenko"},{"authorTime":"2021-02-04 07:18:26","codes":[{"authorDate":"2019-11-20 22:28:02","commitOrder":6,"curCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","date":"2019-11-20 22:28:02","endLine":46,"groupId":"10108","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRenderName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/45/de622e82cd14cd216dde89af044458d33a1aed.src","preCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/structuredstreaming/metrics/BeamMetricTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"},{"authorDate":"2021-02-04 07:18:26","commitOrder":6,"curCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = SparkBeamMetric.renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","date":"2021-02-04 07:18:26","endLine":43,"groupId":"10108","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRenderName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/18/51e1db13054c52b68f870585465bfbfd4ee07b.src","preCode":"  public void testRenderName() {\n    MetricResult<Object> metricResult =\n        MetricResult.create(\n            MetricKey.create(\n                \"myStep.one.two(three)\", MetricName.named(\"myNameSpace//\", \"myName()\")),\n            123,\n            456);\n    String renderedName = new SparkBeamMetric().renderName(metricResult);\n    assertThat(\n        \"Metric name was not rendered correctly\",\n        renderedName,\n        equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"));\n  }\n","realPath":"runners/spark/src/test/java/org/apache/beam/runners/spark/metrics/SparkBeamMetricTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"}],"commitId":"654ad2bd47a34c71c6e0d1c0c4ce0a9cda32ac87","commitMessage":"@@@Merge pull request #13743 from tszerszen/sparkmetrics\n\n[BEAM-11213] Display Beam Metrics in Spark History Server","date":"2021-02-04 07:18:26","modifiedFileCount":"4","status":"M","submitter":"Kyle Weaver"}]
