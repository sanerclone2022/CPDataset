[{"authorTime":"2017-11-18 09:23:41","codes":[{"authorDate":"2017-11-18 09:23:41","commitOrder":1,"curCode":"  public void objectsNotEqualEncodingsEqualEquals() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {1, 4, 9, 127, -22}, ByteArrayCoder.of());\n    Assert.assertThat(key, Matchers.equalTo(otherKey));\n  }\n","date":"2017-11-18 09:23:41","endLine":77,"groupId":"15883","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"objectsNotEqualEncodingsEqualEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/b0/b61120bacac5f2ba5c08b77459a3aa9c74ca24.src","preCode":"  public void objectsNotEqualEncodingsEqualEquals() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {1, 4, 9, 127, -22}, ByteArrayCoder.of());\n    Assert.assertThat(key, Matchers.equalTo(otherKey));\n  }\n","realPath":"runners/local-java/src/test/java/org/apache/beam/runners/local/StructuralKeyTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2017-11-18 09:23:41","commitOrder":1,"curCode":"  public void notEqualEncodingsEqual() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {9, -128, 22}, ByteArrayCoder.of());\n    Assert.assertThat(key, Matchers.not(Matchers.equalTo(otherKey)));\n  }\n","date":"2017-11-18 09:23:41","endLine":87,"groupId":"14348","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"notEqualEncodingsEqual","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/b0/b61120bacac5f2ba5c08b77459a3aa9c74ca24.src","preCode":"  public void notEqualEncodingsEqual() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {9, -128, 22}, ByteArrayCoder.of());\n    Assert.assertThat(key, Matchers.not(Matchers.equalTo(otherKey)));\n  }\n","realPath":"runners/local-java/src/test/java/org/apache/beam/runners/local/StructuralKeyTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"e3c1fe4b157375f12b2d774af2928eedcd7dfba4","commitMessage":"@@@This closes #4133\n","date":"2017-11-18 09:23:41","modifiedFileCount":"33","status":"B","submitter":"Thomas Groh"},{"authorTime":"2021-01-07 02:36:15","codes":[{"authorDate":"2021-01-07 02:36:15","commitOrder":2,"curCode":"  public void objectsNotEqualEncodingsEqualEquals() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {1, 4, 9, 127, -22}, ByteArrayCoder.of());\n    assertThat(key, Matchers.equalTo(otherKey));\n  }\n","date":"2021-01-07 02:36:15","endLine":74,"groupId":"1080","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"objectsNotEqualEncodingsEqualEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/96/934fd142543ab68d6c81bc5ff9fd48103506e5.src","preCode":"  public void objectsNotEqualEncodingsEqualEquals() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {1, 4, 9, 127, -22}, ByteArrayCoder.of());\n    Assert.assertThat(key, Matchers.equalTo(otherKey));\n  }\n","realPath":"runners/local-java/src/test/java/org/apache/beam/runners/local/StructuralKeyTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2021-01-07 02:36:15","commitOrder":2,"curCode":"  public void notEqualEncodingsEqual() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {9, -128, 22}, ByteArrayCoder.of());\n    assertThat(key, Matchers.not(Matchers.equalTo(otherKey)));\n  }\n","date":"2021-01-07 02:36:15","endLine":84,"groupId":"1080","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"notEqualEncodingsEqual","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-beam-10-0.7/blobInfo/CC_OUT/blobs/96/934fd142543ab68d6c81bc5ff9fd48103506e5.src","preCode":"  public void notEqualEncodingsEqual() {\n    byte[] original = new byte[] {1, 4, 9, 127, -22};\n    StructuralKey<byte[]> key = StructuralKey.of(original, ByteArrayCoder.of());\n\n    StructuralKey<byte[]> otherKey =\n        StructuralKey.of(new byte[] {9, -128, 22}, ByteArrayCoder.of());\n    Assert.assertThat(key, Matchers.not(Matchers.equalTo(otherKey)));\n  }\n","realPath":"runners/local-java/src/test/java/org/apache/beam/runners/local/StructuralKeyTest.java","repoName":"beam","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"60834aecaad52bee1408bdca9e5ddbe039c44f71","commitMessage":"@@@Merge pull request #13673 from anantdamle/beam_11572_fix_assertThat\n\n[BEAM-11572] Replace Assert.asserThat with MatcherAssert.assertThat across entire codebase","date":"2021-01-07 02:36:15","modifiedFileCount":"467","status":"M","submitter":"Kyle Weaver"}]
