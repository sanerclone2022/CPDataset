[{"authorTime":"2014-02-05 19:03:26","codes":[{"authorDate":"2014-02-05 19:03:26","commitOrder":1,"curCode":"  public void testReaderResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      Reader in = new InputStreamReader(is, \"UTF-8\");\n      NamedList<Object> response = parser.processResponse(in);\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n\n  }\n","date":"2014-02-05 19:03:26","endLine":113,"groupId":"29043","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReaderResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/28d6fddb60ec48c28e054a6d7e01964ce937fe.src","preCode":"  public void testReaderResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      Reader in = new InputStreamReader(is, \"UTF-8\");\n      NamedList<Object> response = parser.processResponse(in);\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2014-02-05 19:03:26","commitOrder":1,"curCode":"  public void testInputStreamResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      NamedList<Object> response = parser.processResponse(is, \"UTF-8\");\n\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n  }\n","date":"2014-02-05 19:03:26","endLine":130,"groupId":"29043","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInputStreamResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/28d6fddb60ec48c28e054a6d7e01964ce937fe.src","preCode":"  public void testInputStreamResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      NamedList<Object> response = parser.processResponse(is, \"UTF-8\");\n\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"B"}],"commitId":"e262c75e81485dc2c1aea8893c10677c714aa021","commitMessage":"@@@SOLR-5530: Added a NoOpResponseParser for SolrJ which puts the entire raw response into an entry in the NamedList\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1564709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-05 19:03:26","modifiedFileCount":"0","status":"B","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-02-05 19:03:26","codes":[{"authorDate":"2014-04-01 04:35:16","commitOrder":2,"curCode":"  public void testReaderResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      Reader in = new InputStreamReader(is, StandardCharsets.UTF_8);\n      NamedList<Object> response = parser.processResponse(in);\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n\n  }\n","date":"2014-04-01 04:35:16","endLine":113,"groupId":"10557","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReaderResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/44/8d295358aafdc5cf8fd83029969ebfeee89c78.src","preCode":"  public void testReaderResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      Reader in = new InputStreamReader(is, \"UTF-8\");\n      NamedList<Object> response = parser.processResponse(in);\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2014-02-05 19:03:26","commitOrder":2,"curCode":"  public void testInputStreamResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      NamedList<Object> response = parser.processResponse(is, \"UTF-8\");\n\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n  }\n","date":"2014-02-05 19:03:26","endLine":130,"groupId":"10557","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInputStreamResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/28d6fddb60ec48c28e054a6d7e01964ce937fe.src","preCode":"  public void testInputStreamResponse() throws Exception {\n    NoOpResponseParser parser = new NoOpResponseParser();\n    try (final InputStream is = getResponse()) {\n      assertNotNull(is);\n      NamedList<Object> response = parser.processResponse(is, \"UTF-8\");\n\n      assertNotNull(response.get(\"response\"));\n      String expectedResponse = IOUtils.toString(getResponse(), \"UTF-8\");\n      assertEquals(expectedResponse, response.get(\"response\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"N"}],"commitId":"6750845f9b04bcc7ba4b93ec576c657f95f94b1e","commitMessage":"@@@LUCENE-5560: Followup: Cleanup charset handling for Java 7\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1583449 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-01 04:35:16","modifiedFileCount":"60","status":"M","submitter":"Uwe Schindler"}]
