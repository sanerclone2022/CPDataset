[{"authorTime":"2014-09-05 23:33:51","codes":[{"authorDate":"2015-06-20 03:44:50","commitOrder":2,"curCode":"  protected static Element transformSimilarity(Document doc, Map<String,?> json, String jsonFieldName) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n\n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n          jsonFieldName+\" not a \"+jsonField.getClass().getName());\n\n    Element similarity = doc.createElement(\"similarity\");\n    appendAttrs(similarity, (Map<String,?>)jsonField);\n    return similarity;\n  }\n","date":"2015-06-20 03:44:50","endLine":89,"groupId":"11300","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"transformSimilarity","params":"(Documentdoc@Map<String@?>json@StringjsonFieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8a/b7561089b9a69c7fa7f2d70cc25c7fe1cd36d3.src","preCode":"  protected static Element transformSimilarity(Document doc, Map<String,?> json, String jsonFieldName) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n\n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n          jsonFieldName+\" not a \"+jsonField.getClass().getName());\n\n    Element similarity = doc.createElement(\"similarity\");\n    appendAttrs(similarity, (Map<String,?>)jsonField);\n    return similarity;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeXmlAdapter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2014-09-05 23:33:51","commitOrder":2,"curCode":"  protected static Element transformAnalyzer(Document doc, Map<String,?> json, String jsonFieldName, String analyzerType) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n    \n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n         jsonFieldName+\" not a \"+jsonField.getClass().getName());\n    \n    return createAnalyzerElement(doc, analyzerType, (Map<String,?>)jsonField);    \n  }\n","date":"2014-09-05 23:33:51","endLine":83,"groupId":"11300","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAnalyzer","params":"(Documentdoc@Map<String@?>json@StringjsonFieldName@StringanalyzerType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8f/73fc4f095e7240e81e5126b9c2cf39b204bf35.src","preCode":"  protected static Element transformAnalyzer(Document doc, Map<String,?> json, String jsonFieldName, String analyzerType) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n    \n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n         jsonFieldName+\" not a \"+jsonField.getClass().getName());\n    \n    return createAnalyzerElement(doc, analyzerType, (Map<String,?>)jsonField);    \n  }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeXmlAdapter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"}],"commitId":"b68d571781698a4a7cd5604881ed464094155212","commitMessage":"@@@SOLR-7679: Schema API doesn't take similarity attribute into account when adding field types\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1686491 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-06-20 03:44:50","modifiedFileCount":"3","status":"M","submitter":"Steven Rowe"},{"authorTime":"2014-09-05 23:33:51","codes":[{"authorDate":"2017-03-18 12:00:59","commitOrder":3,"curCode":"  protected static Element transformSimilarity(Document doc, Map<String,?> json, String jsonFieldName) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n\n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n          jsonFieldName+\" not a \"+jsonField.getClass().getName());\n\n    Element similarity = doc.createElement(\"similarity\");\n    Map<String,?> config = (Map<String,?>)jsonField;\n    similarity.setAttribute(SimilarityFactory.CLASS_NAME, (String)config.remove(SimilarityFactory.CLASS_NAME));\n    for (Map.Entry<String,?> entry : config.entrySet()) {\n      Object val = entry.getValue();\n      if (val != null) {\n        Element child = doc.createElement(classToXmlTag(val.getClass()));\n        child.setAttribute(CommonParams.NAME, entry.getKey());\n        child.setTextContent(entry.getValue().toString());\n        similarity.appendChild(child);\n      }\n    }\n    return similarity;\n  }\n","date":"2017-03-18 12:00:59","endLine":100,"groupId":"102597","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"transformSimilarity","params":"(Documentdoc@Map<String@?>json@StringjsonFieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/5ab89c93e1c4d450fa489d97d66cede707c698.src","preCode":"  protected static Element transformSimilarity(Document doc, Map<String,?> json, String jsonFieldName) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n\n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n          jsonFieldName+\" not a \"+jsonField.getClass().getName());\n\n    Element similarity = doc.createElement(\"similarity\");\n    appendAttrs(similarity, (Map<String,?>)jsonField);\n    return similarity;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeXmlAdapter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2014-09-05 23:33:51","commitOrder":3,"curCode":"  protected static Element transformAnalyzer(Document doc, Map<String,?> json, String jsonFieldName, String analyzerType) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n    \n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n         jsonFieldName+\" not a \"+jsonField.getClass().getName());\n    \n    return createAnalyzerElement(doc, analyzerType, (Map<String,?>)jsonField);    \n  }\n","date":"2014-09-05 23:33:51","endLine":83,"groupId":"102597","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAnalyzer","params":"(Documentdoc@Map<String@?>json@StringjsonFieldName@StringanalyzerType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8f/73fc4f095e7240e81e5126b9c2cf39b204bf35.src","preCode":"  protected static Element transformAnalyzer(Document doc, Map<String,?> json, String jsonFieldName, String analyzerType) {\n    Object jsonField = json.get(jsonFieldName);\n    if (jsonField == null)\n      return null; \r\n    \n    if (!(jsonField instanceof Map))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid fieldType definition! Expected JSON object for \"+\n         jsonFieldName+\" not a \"+jsonField.getClass().getName());\n    \n    return createAnalyzerElement(doc, analyzerType, (Map<String,?>)jsonField);    \n  }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeXmlAdapter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"}],"commitId":"9b57545df01fd0f20fd473e80d4fba621a51abf9","commitMessage":"@@@SOLR-10218: The Schema API commands add-field-type and replace-field-type improperly specify SimilarityFactory params\n","date":"2017-03-18 12:00:59","modifiedFileCount":"2","status":"M","submitter":"Steve Rowe"}]
