[{"authorTime":"2013-03-25 10:34:42","codes":[{"authorDate":"2013-03-25 10:34:42","commitOrder":3,"curCode":"  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","date":"2013-03-25 10:34:42","endLine":153,"groupId":"44743","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doneWithDirectory","params":"(Directorydirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/94e5f8c2e98cbf69caf3aace43e7025a00b5fa.src","preCode":"  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"MB"},{"authorDate":"2013-03-25 10:34:42","commitOrder":3,"curCode":"  public void release(Directory directory) throws IOException {\n    if (directory == null) {\n      throw new NullPointerException();\n    }\n    synchronized (this) {\n      \r\n      \r\n      \n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      log.debug(\"Releasing directory: \" + cacheValue.path + \" \" + (cacheValue.refCnt - 1) + \" \" + cacheValue.doneWithDir);\n\n      cacheValue.refCnt--;\n      \n      assert cacheValue.refCnt >= 0 : cacheValue.refCnt;\n\n      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","date":"2013-03-25 10:34:42","endLine":445,"groupId":"8953","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"release","params":"(Directorydirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/94e5f8c2e98cbf69caf3aace43e7025a00b5fa.src","preCode":"  public void release(Directory directory) throws IOException {\n    if (directory == null) {\n      throw new NullPointerException();\n    }\n    synchronized (this) {\n      \r\n      \r\n      \n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      log.debug(\"Releasing directory: \" + cacheValue.path + \" \" + (cacheValue.refCnt - 1) + \" \" + cacheValue.doneWithDir);\n\n      cacheValue.refCnt--;\n      \n      assert cacheValue.refCnt >= 0 : cacheValue.refCnt;\n\n      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":419,"status":"B"}],"commitId":"a7a799c4036aa5b7a49beb78a93515ae2874685f","commitMessage":"@@@SOLR-4640: CachingDirectoryFactory can fail to close directories in some race conditions.\nSOLR-4637: Replication can sometimes wait until shutdown or core unload until removing some tmp directories.\nSOLR-4638: DefaultSolrCoreState#getIndexWriter(null) is a way to avoid creating the IndexWriter earlier than necessary.  but it's not implemented quite right.\nSOLR-4597: fixes.  improvements\nSOLR-4629: Stronger testing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1460510 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-25 10:34:42","modifiedFileCount":"11","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-03-25 10:34:42","codes":[{"authorDate":"2013-04-14 11:35:43","commitOrder":4,"curCode":"  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      log.debug(\"Done with dir: {}\", cacheValue);\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","date":"2013-04-14 11:35:43","endLine":154,"groupId":"8953","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doneWithDirectory","params":"(Directorydirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/59/4d8f95bc83aab93c5297079eae0a2390def016.src","preCode":"  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2013-03-25 10:34:42","commitOrder":4,"curCode":"  public void release(Directory directory) throws IOException {\n    if (directory == null) {\n      throw new NullPointerException();\n    }\n    synchronized (this) {\n      \r\n      \r\n      \n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      log.debug(\"Releasing directory: \" + cacheValue.path + \" \" + (cacheValue.refCnt - 1) + \" \" + cacheValue.doneWithDir);\n\n      cacheValue.refCnt--;\n      \n      assert cacheValue.refCnt >= 0 : cacheValue.refCnt;\n\n      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","date":"2013-03-25 10:34:42","endLine":445,"groupId":"8953","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"release","params":"(Directorydirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/94e5f8c2e98cbf69caf3aace43e7025a00b5fa.src","preCode":"  public void release(Directory directory) throws IOException {\n    if (directory == null) {\n      throw new NullPointerException();\n    }\n    synchronized (this) {\n      \r\n      \r\n      \n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      log.debug(\"Releasing directory: \" + cacheValue.path + \" \" + (cacheValue.refCnt - 1) + \" \" + cacheValue.doneWithDir);\n\n      cacheValue.refCnt--;\n      \n      assert cacheValue.refCnt >= 0 : cacheValue.refCnt;\n\n      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":419,"status":"N"}],"commitId":"8dd71d2dbece1c38d86c2a544801371952f082fa","commitMessage":"@@@SOLR-4629: TestReplicationHandler improvements\n - new testEmptyCommits\n - numFound assertion refactoring\n - reduce excessive test sleeping in rQuery\n - new \"wait\" option to make fetchindex block\n - refactor core reload test to wait for the startAt time to change\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1467723 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-14 11:35:43","modifiedFileCount":"5","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2020-04-18 08:40:32","codes":[{"authorDate":"2013-04-14 11:35:43","commitOrder":5,"curCode":"  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      log.debug(\"Done with dir: {}\", cacheValue);\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","date":"2013-04-14 11:35:43","endLine":154,"groupId":"102617","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doneWithDirectory","params":"(Directorydirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/59/4d8f95bc83aab93c5297079eae0a2390def016.src","preCode":"  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      log.debug(\"Done with dir: {}\", cacheValue);\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"N"},{"authorDate":"2020-04-18 08:40:32","commitOrder":5,"curCode":"  public void release(Directory directory) throws IOException {\n    if (directory == null) {\n      throw new NullPointerException();\n    }\n    synchronized (this) {\n      \r\n      \r\n\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      if (log.isDebugEnabled()) {\n        log.debug(\"Releasing directory: {} {} {}\", cacheValue.path, (cacheValue.refCnt - 1), cacheValue.doneWithDir);\n      }\n\n      cacheValue.refCnt--;\n\n      assert cacheValue.refCnt >= 0 : cacheValue.refCnt;\n\n      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","date":"2020-04-18 08:40:32","endLine":451,"groupId":"102617","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"release","params":"(Directorydirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/113253943ca955faf9d86d4e9c5c24aa747464.src","preCode":"  public void release(Directory directory) throws IOException {\n    if (directory == null) {\n      throw new NullPointerException();\n    }\n    synchronized (this) {\n      \r\n      \r\n\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      log.debug(\"Releasing directory: \" + cacheValue.path + \" \" + (cacheValue.refCnt - 1) + \" \" + cacheValue.doneWithDir);\n\n      cacheValue.refCnt--;\n\n      assert cacheValue.refCnt >= 0 : cacheValue.refCnt;\n\n      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"M"}],"commitId":"3af165b32ac8028a6c01ac9c9a6d2c808efa0e85","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-18 08:40:32","modifiedFileCount":"37","status":"M","submitter":"Erick Erickson"}]
