[{"authorTime":"2018-12-11 19:42:01","codes":[{"authorDate":"2018-12-11 19:42:01","commitOrder":9,"curCode":"  public static void stop(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new DefaultSolrThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"error stopping jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","date":"2018-12-11 19:45:34","endLine":609,"groupId":"54000","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(List<JettySolrRunner>jettys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/883e0d18f31276706053324fed2b51027e29a9.src","preCode":"  public static void stop(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new DefaultSolrThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"error stopping jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"B"},{"authorDate":"2018-12-11 19:42:01","commitOrder":9,"curCode":"  public static void start(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new DefaultSolrThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.start();\n        } catch (Exception e) {\n          log.error(\"error starting jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","date":"2018-12-11 19:45:34","endLine":630,"groupId":"53998","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"(List<JettySolrRunner>jettys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/883e0d18f31276706053324fed2b51027e29a9.src","preCode":"  public static void start(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new DefaultSolrThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.start();\n        } catch (Exception e) {\n          log.error(\"error starting jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":611,"status":"MB"}],"commitId":"ab891fa4728e53c0ee308b670659ac47ddc49a7c","commitMessage":"@@@SOLR-12801: Harden TestCloudRecovery.\n","date":"2018-12-11 19:45:34","modifiedFileCount":"2","status":"M","submitter":"markrmiller"},{"authorTime":"2020-04-13 10:46:35","codes":[{"authorDate":"2020-04-13 10:46:35","commitOrder":10,"curCode":"  public static void stop(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new SolrNamedThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"error stopping jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","date":"2020-04-13 10:46:35","endLine":608,"groupId":"101890","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"stop","params":"(List<JettySolrRunner>jettys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ee/489d04141183b9ef2e4dfff3a2adf7d52691e9.src","preCode":"  public static void stop(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new DefaultSolrThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"error stopping jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":589,"status":"M"},{"authorDate":"2020-04-13 10:46:35","commitOrder":10,"curCode":"  public static void start(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new SolrNamedThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.start();\n        } catch (Exception e) {\n          log.error(\"error starting jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","date":"2020-04-13 10:46:35","endLine":629,"groupId":"101890","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"(List<JettySolrRunner>jettys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ee/489d04141183b9ef2e4dfff3a2adf7d52691e9.src","preCode":"  public static void start(List<JettySolrRunner> jettys) throws Exception {\n    ExecutorService executor = new ExecutorUtil.MDCAwareThreadPoolExecutor(\n        0,\n        Integer.MAX_VALUE,\n        15, TimeUnit.SECONDS,\n        new SynchronousQueue<>(),\n        new DefaultSolrThreadFactory(\"ChaosMonkey\"),\n        false);\n    for (JettySolrRunner jetty : jettys) {\n      executor.submit(() -> {\n        try {\n          jetty.start();\n        } catch (Exception e) {\n          log.error(\"error starting jetty\", e);\n          throw new RuntimeException(e);\n        }\n      });\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(executor);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":610,"status":"M"}],"commitId":"13f19f65559290a860df84fa1b5ac2db903b27ec","commitMessage":"@@@SOLR-9906: SolrjNamedThreadFactory is deprecated in favor of SolrNamedThreadFactory. DefaultSolrThreadFactory is removed from solr-core in favor of SolrNamedThreadFactory in solrj package and all solr-core classes now use SolrNamedThreadFactory\n","date":"2020-04-13 10:46:35","modifiedFileCount":"83","status":"M","submitter":"Shalin Shekhar Mangar"}]
