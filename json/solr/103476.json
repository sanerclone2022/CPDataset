[{"authorTime":"2017-04-25 03:17:46","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":6,"curCode":"  public static Map getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","date":"2014-12-31 22:05:48","endLine":210,"groupId":"40875","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAsMap","params":"(Stringuri@CloudSolrClientcloudClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/23/e2f4090632a5bba4e4e6e27447cbe87b27ea0e.src","preCode":"  public static Map getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"NB"},{"authorDate":"2017-04-25 03:17:46","commitOrder":6,"curCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","date":"2017-04-25 03:22:11","endLine":278,"groupId":"6033","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAsMap","params":"(CloudSolrClientcloudClient@Stringuri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/49f6b8ca4b967731d5e2296d308025fba34dde.src","preCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"B"}],"commitId":"e17b987734cae654e01d58876e3fc05eea1bb605","commitMessage":"@@@SOLR-10493: Investigate SolrCloudExampleTest failures.\n\n(cherry picked from commit 0247acd)\n","date":"2017-04-25 03:22:11","modifiedFileCount":"8","status":"M","submitter":"Erick Erickson"},{"authorTime":"2017-04-25 03:17:46","codes":[{"authorDate":"2018-10-05 06:32:00","commitOrder":7,"curCode":"  public static LinkedHashMapWriter getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(new JSONParser(new StringReader(response))).getVal();\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","date":"2018-10-05 06:32:00","endLine":197,"groupId":"31907","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAsMap","params":"(Stringuri@CloudSolrClientcloudClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/a4e1f2b6e96aae572857ce79fbae8ab6be4083.src","preCode":"  public static Map getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2017-04-25 03:17:46","commitOrder":7,"curCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","date":"2017-04-25 03:22:11","endLine":278,"groupId":"6033","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getAsMap","params":"(CloudSolrClientcloudClient@Stringuri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/49f6b8ca4b967731d5e2296d308025fba34dde.src","preCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"N"}],"commitId":"14e6eb2c2488a5983c4449da32757d1f3bf17ce0","commitMessage":"@@@use MapWriter._get()\n","date":"2018-10-05 06:32:00","modifiedFileCount":"10","status":"M","submitter":"Noble Paul"},{"authorTime":"2019-05-03 05:20:05","codes":[{"authorDate":"2018-10-05 06:32:00","commitOrder":8,"curCode":"  public static LinkedHashMapWriter getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(new JSONParser(new StringReader(response))).getVal();\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","date":"2018-10-05 06:32:00","endLine":197,"groupId":"31907","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getAsMap","params":"(Stringuri@CloudSolrClientcloudClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/a4e1f2b6e96aae572857ce79fbae8ab6be4083.src","preCode":"  public static LinkedHashMapWriter getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(new JSONParser(new StringReader(response))).getVal();\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"},{"authorDate":"2019-05-03 05:20:05","commitOrder":8,"curCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) fromJSONString(response);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","date":"2019-05-03 05:20:05","endLine":284,"groupId":"6033","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getAsMap","params":"(CloudSolrClientcloudClient@Stringuri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/14/625a1957a9c8e311d994a13ca9ca4be5387130.src","preCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"}],"commitId":"8908205b428f2ae68bcef0f22a944a62cfcd93d5","commitMessage":"@@@SOLR-13441: Refactor code to minimize direct use of noggit\n","date":"2019-05-03 05:20:05","modifiedFileCount":"58","status":"M","submitter":"noble"},{"authorTime":"2021-07-08 04:15:36","codes":[{"authorDate":"2018-10-05 06:32:00","commitOrder":9,"curCode":"  public static LinkedHashMapWriter getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(new JSONParser(new StringReader(response))).getVal();\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","date":"2018-10-05 06:32:00","endLine":197,"groupId":"103476","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getAsMap","params":"(Stringuri@CloudSolrClientcloudClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/a4e1f2b6e96aae572857ce79fbae8ab6be4083.src","preCode":"  public static LinkedHashMapWriter getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(new JSONParser(new StringReader(response))).getVal();\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"},{"authorDate":"2021-07-08 04:15:36","commitOrder":9,"curCode":"  private Map<?, ?> getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map<?, ?>) fromJSONString(response);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","date":"2021-07-08 04:15:36","endLine":289,"groupId":"103476","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"getAsMap","params":"(CloudSolrClientcloudClient@Stringuri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/6eb191315350edda9270098a44fe788e01a036.src","preCode":"  private Map getAsMap(CloudSolrClient cloudClient, String uri) throws Exception {\n    HttpGet get = new HttpGet(uri);\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) fromJSONString(response);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"}],"commitId":"201d56b350fa1b4e5f8361618f898a2155240c72","commitMessage":"@@@SOLR-15385 RawTypes Part V (#196)\n\n","date":"2021-07-08 04:15:36","modifiedFileCount":"88","status":"M","submitter":"Mike Drob"}]
