[{"authorTime":"2016-08-20 19:36:01","codes":[{"authorDate":"2015-07-10 09:44:47","commitOrder":2,"curCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","date":"2015-07-10 09:44:47","endLine":185,"groupId":"22071","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createAccs","params":"(intdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/14/983e737e13d62c53d69dfdefc4e7438c87d5c8.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"NB"},{"authorDate":"2016-08-20 19:36:01","commitOrder":2,"curCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","date":"2016-08-20 19:36:01","endLine":99,"groupId":"4785","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createAccs","params":"(intdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a7/3732135e86df22d4e4acb5e85280470be53645.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"e325973119eae1fe8b7a81d505680952ec08964f","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-08-20 19:36:01","modifiedFileCount":"105","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-03-13 09:56:02","codes":[{"authorDate":"2015-07-10 09:44:47","commitOrder":3,"curCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","date":"2015-07-10 09:44:47","endLine":185,"groupId":"22071","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createAccs","params":"(intdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/14/983e737e13d62c53d69dfdefc4e7438c87d5c8.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"N"},{"authorDate":"2018-03-13 09:56:02","commitOrder":3,"curCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new SlotAcc.Resizer() {\n          @Override\n          public int getNewSize() {\n            return slotCount;\n          }\n\n          @Override\n          public int getNewSlot(int oldSlot) {\n            return 0;\n          }\n        });\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","date":"2018-03-13 09:56:02","endLine":122,"groupId":"4785","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createAccs","params":"(intdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/47d66d62a91f64cb6e425f1280a47a62f94c8f.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"68d8eb45046e01b511b45efbdc72323670956fbd","commitMessage":"@@@ SOLR-12064: resize reused accs to fix bugs with limit:-1 and missing:true\n","date":"2018-03-13 09:56:02","modifiedFileCount":"2","status":"M","submitter":"yonik"},{"authorTime":"2018-12-01 06:49:06","codes":[{"authorDate":"2015-07-10 09:44:47","commitOrder":4,"curCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","date":"2015-07-10 09:44:47","endLine":185,"groupId":"22071","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createAccs","params":"(intdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/14/983e737e13d62c53d69dfdefc4e7438c87d5c8.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"N"},{"authorDate":"2018-12-01 06:49:06","commitOrder":4,"curCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","date":"2018-12-01 06:49:06","endLine":148,"groupId":"4785","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createAccs","params":"(intdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/40/eb7854bfa84d82e545ff7702cc0ea53e6496e5.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new SlotAcc.Resizer() {\n          @Override\n          public int getNewSize() {\n            return slotCount;\n          }\n\n          @Override\n          public int getNewSlot(int oldSlot) {\n            return 0;\n          }\n        });\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"5dc988f5eeff78464d852f54ce7f06a801dcbfee","commitMessage":"@@@SOLR-12839: JSON 'terms' Faceting now supports a 'prelim_sort' option to use when initially selecting the top ranking buckets.  prior to the final 'sort' option used after refinement.\n","date":"2018-12-01 06:49:06","modifiedFileCount":"10","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2020-04-10 21:46:54","codes":[{"authorDate":"2020-04-10 21:46:54","commitOrder":5,"curCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","date":"2020-04-10 22:00:20","endLine":325,"groupId":"22071","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createAccs","params":"(longdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b8/271f5961accd1489f641c64d5076391f7a8a22.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"},{"authorDate":"2020-04-10 21:46:54","commitOrder":5,"curCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","date":"2020-04-10 22:00:20","endLine":149,"groupId":"4785","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createAccs","params":"(longdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fe/418f1b385c5cea0736fe1b1b5bc67569fd5bf8.src","preCode":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"36b280bd0a21952ea54c7567f037eb48dc93205a","commitMessage":"@@@SOLR-11775: return long val for facet count in json facet\n\n* Long value is returned for any count related to json facets\n  irrespective of number of shards\n","date":"2020-04-10 22:00:20","modifiedFileCount":"33","status":"M","submitter":"Munendra S N"},{"authorTime":"2020-05-21 20:59:32","codes":[{"authorDate":"2020-05-21 20:59:32","commitOrder":6,"curCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new SlotAcc.CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","date":"2020-05-21 20:59:32","endLine":327,"groupId":"22071","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createAccs","params":"(longdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/d84eb2e3d39e863abb7764600dd87609b97a83.src","preCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"},{"authorDate":"2020-05-21 20:59:32","commitOrder":6,"curCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new SlotAcc.CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","date":"2020-05-21 20:59:32","endLine":149,"groupId":"4785","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createAccs","params":"(longdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7a/261b5e1225dc99564a45f67f47393c1b3095d0.src","preCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"9c066f60f1804c26db8be226429a0be046c5a4db","commitMessage":"@@@SOLR-14482: Fix or suppress warnings in solr/search/facet\n","date":"2020-05-21 20:59:32","modifiedFileCount":"57","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-07-10 09:42:37","codes":[{"authorDate":"2020-07-10 09:42:37","commitOrder":7,"curCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new SlotAcc.CountSlotArrAcc(fcontext, slotCount);\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","date":"2020-07-10 09:42:37","endLine":326,"groupId":"102149","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createAccs","params":"(longdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/70e2488f5cc511392076846c247778f446b0cd.src","preCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    \r\n    if (countAcc == null) {\n      countAcc = new SlotAcc.CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"},{"authorDate":"2020-07-10 09:42:37","commitOrder":7,"curCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new SlotAcc.CountSlotArrAcc(fcontext, slotCount);\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","date":"2020-07-10 09:42:37","endLine":151,"groupId":"102149","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createAccs","params":"(longdocCount@intslotCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c7/b31e165405ae62d2511829987e4c389c5a496a.src","preCode":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    if (accMap == null) {\n      accMap = new LinkedHashMap<>();\n    }\n\n    \r\n    if (countAcc == null) {\n      countAcc = new SlotAcc.CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    if (accs != null) {\n      \r\n      for (SlotAcc acc : accs) {\n        acc.reset();\n        acc.resize(new FlatteningResizer(slotCount));\n      }\n      return;\n    } else {\n      accs = new SlotAcc[ freq.getFacetStats().size() ];\n    }\n\n    int accIdx = 0;\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = null;\n      if (slotCount == 1) {\n        acc = accMap.get(entry.getKey());\n        if (acc != null) {\n          acc.reset();\n        }\n      }\n      if (acc == null) {\n        acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n        acc.key = entry.getKey();\n        accMap.put(acc.key, acc);\n      }\n      accs[accIdx++] = acc;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"40e2122b5a5b89f446e51692ef0d72e48c7b71e5","commitMessage":"@@@SOLR-13132: JSON Facet perf improvements to support \"sweeping\" collection of \"relatedness()\"\n\nThis adds a lot of \"under the covers\" improvements to how JSON Faceting FacetField processors work.  to enable\n\"sweeping\" support when the SlotAcc used for sorting support it (currently just \"relatedness()\")\n\nThis is a squash commit of all changes on https://github.com/magibney/lucene-solr/tree/SOLR-13132\nUp to and including ca7a8e0b39840d00af9022c048346a7d84bf280d.\n\nCo-authored-by: Chris Hostetter <hossman@apache.org>\nCo-authored-by: Michael Gibney <michael@michaelgibney.net>\n","date":"2020-07-10 09:42:37","modifiedFileCount":"9","status":"M","submitter":"Michael Gibney"}]
