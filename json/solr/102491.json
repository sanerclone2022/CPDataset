[{"authorTime":"2015-08-05 00:32:12","codes":[{"authorDate":"2019-11-14 20:51:35","commitOrder":3,"curCode":"  private String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    String systemInfoUrl = solrUrl+\"/admin/info/system\";\n    CloseableHttpClient httpClient = SolrCLI.getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = SolrCLI.getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl+\"/\", systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","date":"2019-11-14 20:51:35","endLine":291,"groupId":"6648","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getZkHost","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/64ec14597ee59506d6fe052431f3785a9f435c.src","preCode":"  private String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    String systemInfoUrl = solrUrl+\"/admin/info/system\";\n    CloseableHttpClient httpClient = SolrCLI.getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = SolrCLI.getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl+\"/\", systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/PackageTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"B"},{"authorDate":"2015-08-05 00:32:12","commitOrder":3,"curCode":"  public static String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    \r\n    String solrUrl = cli.getOptionValue(\"solrUrl\");\n    if (solrUrl == null)\n      throw new IllegalStateException(\n          \"Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!\");\n\n    if (!solrUrl.endsWith(\"/\"))\n      solrUrl += \"/\";\n\n    String systemInfoUrl = solrUrl+\"admin/info/system\";\n    CloseableHttpClient httpClient = getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl, systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","date":"2015-08-05 00:32:12","endLine":1286,"groupId":"58350","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getZkHost","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"  public static String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    \r\n    String solrUrl = cli.getOptionValue(\"solrUrl\");\n    if (solrUrl == null)\n      throw new IllegalStateException(\n          \"Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!\");\n\n    if (!solrUrl.endsWith(\"/\"))\n      solrUrl += \"/\";\n\n    String systemInfoUrl = solrUrl+\"admin/info/system\";\n    CloseableHttpClient httpClient = getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl, systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1250,"status":"NB"}],"commitId":"d9f41f8a5a31e7dd8f4ccee729d479ce07175c1a","commitMessage":"@@@SOLR-13662: Package manager (CLI)\n","date":"2019-11-14 20:51:35","modifiedFileCount":"3","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2020-05-14 07:30:57","codes":[{"authorDate":"2019-11-14 20:51:35","commitOrder":4,"curCode":"  private String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    String systemInfoUrl = solrUrl+\"/admin/info/system\";\n    CloseableHttpClient httpClient = SolrCLI.getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = SolrCLI.getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl+\"/\", systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","date":"2019-11-14 20:51:35","endLine":291,"groupId":"6648","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getZkHost","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/64ec14597ee59506d6fe052431f3785a9f435c.src","preCode":"  private String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    String systemInfoUrl = solrUrl+\"/admin/info/system\";\n    CloseableHttpClient httpClient = SolrCLI.getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = SolrCLI.getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl+\"/\", systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/PackageTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"N"},{"authorDate":"2020-05-14 07:30:57","commitOrder":4,"curCode":"  public static String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    \r\n    String solrUrl = cli.getOptionValue(\"solrUrl\");\n    if (solrUrl == null)\n      throw new IllegalStateException(\n          \"Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!\");\n\n    if (!solrUrl.endsWith(\"/\"))\n      solrUrl += \"/\";\n\n    String systemInfoUrl = solrUrl+\"admin/info/system\";\n    CloseableHttpClient httpClient = getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl, systemInfo, httpClient);\n      @SuppressWarnings(\"unchecked\")\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","date":"2020-05-14 07:30:57","endLine":1826,"groupId":"16605","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getZkHost","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/a53fc0168226725e68e1c5086aed3bbf3e957c.src","preCode":"  public static String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    \r\n    String solrUrl = cli.getOptionValue(\"solrUrl\");\n    if (solrUrl == null)\n      throw new IllegalStateException(\n          \"Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!\");\n\n    if (!solrUrl.endsWith(\"/\"))\n      solrUrl += \"/\";\n\n    String systemInfoUrl = solrUrl+\"admin/info/system\";\n    CloseableHttpClient httpClient = getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl, systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1789,"status":"M"}],"commitId":"687dd42f5745589f10949bc4534c260a2e87b47c","commitMessage":"@@@SOLR-14475: Fix deprecation warnings resulting from upgrading commons cli to 1.4\n","date":"2020-05-14 07:30:57","modifiedFileCount":"2","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-05-14 07:30:57","codes":[{"authorDate":"2020-06-12 06:01:03","commitOrder":5,"curCode":"  private String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    String systemInfoUrl = solrUrl+\"/admin/info/system\";\n    CloseableHttpClient httpClient = SolrCLI.getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = SolrCLI.getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl+\"/\", systemInfo, httpClient);\n      @SuppressWarnings({\"unchecked\"})\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","date":"2020-06-12 06:01:29","endLine":300,"groupId":"102491","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getZkHost","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/96/d84ad7b1255c770b35132d81b33b4728930d4d.src","preCode":"  private String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    String systemInfoUrl = solrUrl+\"/admin/info/system\";\n    CloseableHttpClient httpClient = SolrCLI.getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = SolrCLI.getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl+\"/\", systemInfo, httpClient);\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/PackageTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2020-05-14 07:30:57","commitOrder":5,"curCode":"  public static String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    \r\n    String solrUrl = cli.getOptionValue(\"solrUrl\");\n    if (solrUrl == null)\n      throw new IllegalStateException(\n          \"Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!\");\n\n    if (!solrUrl.endsWith(\"/\"))\n      solrUrl += \"/\";\n\n    String systemInfoUrl = solrUrl+\"admin/info/system\";\n    CloseableHttpClient httpClient = getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl, systemInfo, httpClient);\n      @SuppressWarnings(\"unchecked\")\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","date":"2020-05-14 07:30:57","endLine":1826,"groupId":"102491","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getZkHost","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/a53fc0168226725e68e1c5086aed3bbf3e957c.src","preCode":"  public static String getZkHost(CommandLine cli) throws Exception {\n    String zkHost = cli.getOptionValue(\"zkHost\");\n    if (zkHost != null)\n      return zkHost;\n\n    \r\n    String solrUrl = cli.getOptionValue(\"solrUrl\");\n    if (solrUrl == null)\n      throw new IllegalStateException(\n          \"Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!\");\n\n    if (!solrUrl.endsWith(\"/\"))\n      solrUrl += \"/\";\n\n    String systemInfoUrl = solrUrl+\"admin/info/system\";\n    CloseableHttpClient httpClient = getHttpClient();\n    try {\n      \r\n      Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n\n      \r\n      StatusTool statusTool = new StatusTool();\n      Map<String,Object> status = statusTool.reportStatus(solrUrl, systemInfo, httpClient);\n      @SuppressWarnings(\"unchecked\")\n      Map<String,Object> cloud = (Map<String, Object>)status.get(\"cloud\");\n      if (cloud != null) {\n        String zookeeper = (String) cloud.get(\"ZooKeeper\");\n        if (zookeeper.endsWith(\"(embedded)\")) {\n          zookeeper = zookeeper.substring(0, zookeeper.length() - \"(embedded)\".length());\n        }\n        zkHost = zookeeper;\n      }\n    } finally {\n      HttpClientUtil.close(httpClient);\n    }\n\n    return zkHost;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1789,"status":"N"}],"commitId":"ff391448d1648c4027133c58248bf7f1aabe5d96","commitMessage":"@@@SOLR-14559: Fix or suppress warnings in solr/core/src/java/org/apache/solr/util.  response.  cloud.  security.  schema.  api\n","date":"2020-06-12 06:01:29","modifiedFileCount":"90","status":"M","submitter":"Erick Erickson"}]
