[{"authorTime":"2018-04-05 23:21:49","codes":[{"authorDate":"2018-04-05 23:21:49","commitOrder":1,"curCode":"  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n","date":"2018-04-06 02:00:07","endLine":1260,"groupId":"31156","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1238,"status":"B"},{"authorDate":"2018-04-05 23:21:49","commitOrder":1,"curCode":"  public void testEbeMultiply() throws Exception {\n    String cexpr = \"ebeMultiply(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 2);\n    assertTrue(out.get(1).intValue() == 8);\n    assertTrue(out.get(2).intValue() == 18);\n    assertTrue(out.get(3).intValue() == 32);\n    assertTrue(out.get(4).intValue() == 50);\n    assertTrue(out.get(5).intValue() == 72);\n  }\n","date":"2018-04-06 02:00:07","endLine":2085,"groupId":"31156","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEbeMultiply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testEbeMultiply() throws Exception {\n    String cexpr = \"ebeMultiply(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 2);\n    assertTrue(out.get(1).intValue() == 8);\n    assertTrue(out.get(2).intValue() == 18);\n    assertTrue(out.get(3).intValue() == 32);\n    assertTrue(out.get(4).intValue() == 50);\n    assertTrue(out.get(5).intValue() == 72);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2066,"status":"B"}],"commitId":"80375acb7f696df7fb3cf0424d5e82777e3f5c87","commitMessage":"@@@SOLR-12183: Refactor Streaming Expression test cases\n","date":"2018-04-06 02:00:07","modifiedFileCount":"1","status":"B","submitter":"Joel Bernstein"},{"authorTime":"2020-06-17 01:27:53","codes":[{"authorDate":"2020-06-17 01:27:53","commitOrder":2,"curCode":"  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n","date":"2020-06-17 01:27:53","endLine":2224,"groupId":"10909","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/ef2698f7694ad2f1f3cbcb23f4710d6776b7d2.src","preCode":"  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2201,"status":"M"},{"authorDate":"2020-06-17 01:27:53","commitOrder":2,"curCode":"  public void testEbeMultiply() throws Exception {\n    String cexpr = \"ebeMultiply(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 2);\n    assertTrue(out.get(1).intValue() == 8);\n    assertTrue(out.get(2).intValue() == 18);\n    assertTrue(out.get(3).intValue() == 32);\n    assertTrue(out.get(4).intValue() == 50);\n    assertTrue(out.get(5).intValue() == 72);\n  }\n","date":"2020-06-17 01:27:53","endLine":3436,"groupId":"10909","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEbeMultiply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/ef2698f7694ad2f1f3cbcb23f4710d6776b7d2.src","preCode":"  public void testEbeMultiply() throws Exception {\n    String cexpr = \"ebeMultiply(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 2);\n    assertTrue(out.get(1).intValue() == 8);\n    assertTrue(out.get(2).intValue() == 18);\n    assertTrue(out.get(3).intValue() == 32);\n    assertTrue(out.get(4).intValue() == 50);\n    assertTrue(out.get(5).intValue() == 72);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3416,"status":"M"}],"commitId":"6357b3bdaaa0e2c2b1acfe838e55db3a83e38e73","commitMessage":"@@@SOLR-14573: Fix or suppress warnings in solrj/src/test\n","date":"2020-06-17 01:27:53","modifiedFileCount":"65","status":"M","submitter":"Erick Erickson"}]
