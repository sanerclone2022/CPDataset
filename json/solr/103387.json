[{"authorTime":"2013-04-02 01:43:27","codes":[{"authorDate":"2013-12-18 07:14:11","commitOrder":2,"curCode":"  private Object[] buildRequest(String q, boolean useSuggestQ, String handlerName, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n\n    if(useSuggestQ) {\n      params.add(\"suggest.q\");\n    } else {\n      params.add(\"q\");\n    }\n    params.add(q);\n\n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","date":"2013-12-18 07:14:11","endLine":137,"groupId":"38123","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(Stringq@booleanuseSuggestQ@StringhandlerName@String...addlParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/be/c861694a75b61f1de95181a203d854000ecd2a.src","preCode":"  private Object[] buildRequest(String q, boolean useSuggestQ, String handlerName, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n\n    if(useSuggestQ) {\n      params.add(\"suggest.q\");\n    } else {\n      params.add(\"q\");\n    }\n    params.add(q);\n\n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"},{"authorDate":"2013-04-02 01:43:27","commitOrder":2,"curCode":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","date":"2013-04-02 01:43:27","endLine":224,"groupId":"54610","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(Stringq@booleanuseSpellcheckQ@StringhandlerName@booleanuseGrouping@String...addlParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/b356ef3311ca9114e8c14bdc9b4a36093b2af9.src","preCode":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"NB"}],"commitId":"22baafc512ab4c4e291a4f452d842479bd7e4496","commitMessage":"@@@SOLR-5528: improve response format of the new SuggestComponent\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1551753 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-12-18 07:14:11","modifiedFileCount":"4","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  private Object[] buildRequest(String q, boolean useSuggestQ, String handlerName, String... addlParams) {\n    List<Object> params = new ArrayList<>();\n\n    if(useSuggestQ) {\n      params.add(\"suggest.q\");\n    } else {\n      params.add(\"q\");\n    }\n    params.add(q);\n    \n\n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","date":"2014-03-12 22:39:17","endLine":149,"groupId":"103387","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(Stringq@booleanuseSuggestQ@StringhandlerName@String...addlParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/f8e8de26ebabcc14681e818d60f5853398cbb1.src","preCode":"  private Object[] buildRequest(String q, boolean useSuggestQ, String handlerName, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n\n    if(useSuggestQ) {\n      params.add(\"suggest.q\");\n    } else {\n      params.add(\"q\");\n    }\n    params.add(q);\n    \n\n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","date":"2014-03-12 22:39:17","endLine":224,"groupId":"103387","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(Stringq@booleanuseSpellcheckQ@StringhandlerName@booleanuseGrouping@String...addlParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/f71cc95acc33d6c95ed176fd685f4b1885e3b9.src","preCode":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"}]
