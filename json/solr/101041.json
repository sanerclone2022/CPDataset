[{"authorTime":"2019-02-07 08:52:22","codes":[{"authorDate":"2018-11-11 08:48:50","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","date":"2018-11-11 10:44:25","endLine":68,"groupId":"53989","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/be/4f0cc92d4bd7acac45f08513163d06eb486429.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"},{"authorDate":"2019-02-07 08:52:22","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","date":"2019-02-07 10:09:13","endLine":63,"groupId":"10523","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/46/98c7ebe32ba9d69d3b1e51f4ff2849db737dd5.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiHeatmapFacetingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"f30f9b49bfe9bcf745886e045cc53d6aa111a15c","commitMessage":"@@@SOLR-13042: Miscellaneous JSON Faceting ref-guide improvements\n","date":"2019-02-07 10:09:13","modifiedFileCount":"1","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2021-01-18 23:59:41","codes":[{"authorDate":"2021-01-18 23:59:41","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1)\n        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)\n        .process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","date":"2021-01-18 23:59:41","endLine":69,"groupId":"101041","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/3497150fba08807875906b43ae0706679532f0.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2021-01-18 23:59:41","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1)\n        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)\n        .process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","date":"2021-01-18 23:59:41","endLine":65,"groupId":"101041","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/15a002f09453c55702c9b7d0cd90c4b39853ff.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiHeatmapFacetingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"8505d4d416fdf707bab55bc4da9a71ddb3374274","commitMessage":"@@@SOLR-15052: Per-replica states for reducing overseer bottlenecks (trunk) (#2177)\n\n","date":"2021-01-18 23:59:41","modifiedFileCount":"53","status":"M","submitter":"Noble Paul"}]
