[{"authorTime":"2016-04-20 00:06:32","codes":[{"authorDate":"2016-04-20 00:06:32","commitOrder":1,"curCode":"  public void testCloudSolrStream() throws Exception {\n\n    CloudSolrStream stream;\n    \n    \r\n    stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\")\"), factory);\n    Explanation explanation = stream.toExplanation(factory);\n    Assert.assertEquals(\"search\", explanation.getFunctionName());\n    Assert.assertEquals(CloudSolrStream.class.getName(), explanation.getImplementingClass());\n\n  }\n","date":"2016-04-20 00:06:32","endLine":83,"groupId":"24744","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloudSolrStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/88/898d8480bf5058e3eb65cf5f46c5e467a5b0d1.src","preCode":"  public void testCloudSolrStream() throws Exception {\n\n    CloudSolrStream stream;\n    \n    \r\n    stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\")\"), factory);\n    Explanation explanation = stream.toExplanation(factory);\n    Assert.assertEquals(\"search\", explanation.getFunctionName());\n    Assert.assertEquals(CloudSolrStream.class.getName(), explanation.getImplementingClass());\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExplanationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2016-04-20 00:06:32","commitOrder":1,"curCode":"  public void testSelectStream() throws Exception {\n\n    SelectStream stream;\n    \n    \r\n    stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory);\n    Explanation explanation = stream.toExplanation(factory);\n    Assert.assertEquals(\"select\", explanation.getFunctionName());\n    Assert.assertEquals(SelectStream.class.getName(), explanation.getImplementingClass());    \n  }\n","date":"2016-04-20 00:06:32","endLine":95,"groupId":"24754","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/88/898d8480bf5058e3eb65cf5f46c5e467a5b0d1.src","preCode":"  public void testSelectStream() throws Exception {\n\n    SelectStream stream;\n    \n    \r\n    stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory);\n    Explanation explanation = stream.toExplanation(factory);\n    Assert.assertEquals(\"select\", explanation.getFunctionName());\n    Assert.assertEquals(SelectStream.class.getName(), explanation.getImplementingClass());    \n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExplanationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"8ba1a3880bdcfb0a8764e997fae7a79cc29142a4","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-04-20 00:06:32","modifiedFileCount":"43","status":"B","submitter":"Karl Wright"},{"authorTime":"2018-02-26 14:13:26","codes":[{"authorDate":"2018-02-26 14:13:26","commitOrder":2,"curCode":"  public void testCloudSolrStream() throws Exception {\n    \r\n    try (CloudSolrStream stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\")\"), factory)) {\n      Explanation explanation = stream.toExplanation(factory);\n      Assert.assertEquals(\"search\", explanation.getFunctionName());\n      Assert.assertEquals(CloudSolrStream.class.getName(), explanation.getImplementingClass());\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":78,"groupId":"10724","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloudSolrStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c1/c53690a06322dc24660b1936b9d6bba8fd67c5.src","preCode":"  public void testCloudSolrStream() throws Exception {\n\n    CloudSolrStream stream;\n    \n    \r\n    stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\")\"), factory);\n    Explanation explanation = stream.toExplanation(factory);\n    Assert.assertEquals(\"search\", explanation.getFunctionName());\n    Assert.assertEquals(CloudSolrStream.class.getName(), explanation.getImplementingClass());\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExplanationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2018-02-26 14:13:26","commitOrder":2,"curCode":"  public void testSelectStream() throws Exception {\n    \r\n    try (SelectStream stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory)) {\n      Explanation explanation = stream.toExplanation(factory);\n      Assert.assertEquals(\"select\", explanation.getFunctionName());\n      Assert.assertEquals(SelectStream.class.getName(), explanation.getImplementingClass());\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":88,"groupId":"10724","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c1/c53690a06322dc24660b1936b9d6bba8fd67c5.src","preCode":"  public void testSelectStream() throws Exception {\n\n    SelectStream stream;\n    \n    \r\n    stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory);\n    Explanation explanation = stream.toExplanation(factory);\n    Assert.assertEquals(\"select\", explanation.getFunctionName());\n    Assert.assertEquals(SelectStream.class.getName(), explanation.getImplementingClass());    \n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExplanationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"6164643882f6f2bf371e53376cc9f0a2a184b150","commitMessage":"@@@SOLR-10809: Get precommit lint warnings out of Solr core\n","date":"2018-02-26 14:13:47","modifiedFileCount":"52","status":"M","submitter":"Erick Erickson"}]
