[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2013-11-23 21:46:12","commitOrder":2,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"Suggester prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n\n    SolrSuggester suggester = getSuggester(params);\n    if (suggester == null) {\n      throw new IllegalArgumentException(\"Error in configuration, no suggester found\");\n    }\n    if (params.getBool(SUGGEST_BUILD, false)) {\n      suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SUGGEST_RELOAD, false)) {\n      suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2013-11-23 21:46:12","endLine":160,"groupId":"29259","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/72c2af7e8dd56cd6c7d8dae9d3994bd6b0fc6b.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"Suggester prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n\n    SolrSuggester suggester = getSuggester(params);\n    if (suggester == null) {\n      throw new IllegalArgumentException(\"Error in configuration, no suggester found\");\n    }\n    if (params.getBool(SUGGEST_BUILD, false)) {\n      suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SUGGEST_RELOAD, false)) {\n      suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":2,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":116,"groupId":"29259","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/37913207b138fe81adaa2c7b317957ed96b6d9.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"NB"}],"commitId":"7763793c55dd62b8655e524e185bb8ef5f1405db","commitMessage":"@@@SOLR-5378: A new SuggestComponent that fully utilizes the Lucene suggester module and adds pluggable dictionaries.  payloads and better distributed support\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1544793 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-23 21:46:12","modifiedFileCount":"6","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2013-12-18 07:14:11","commitOrder":3,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"SuggestComponent prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n\n    SolrSuggester suggester = getSuggester(params);\n    if (suggester == null) {\n      if (params.get(SUGGEST_DICT) != null) {\n        throw new IllegalArgumentException(\"No suggester named \" + params.get(SUGGEST_DICT) +\" was configured\");\n      } else {\n        throw new IllegalArgumentException(\"No default suggester was configured\");\n      }\n    }\n    if (params.getBool(SUGGEST_BUILD, false)) {\n      suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SUGGEST_RELOAD, false)) {\n      suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2013-12-18 07:14:11","endLine":163,"groupId":"29259","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c8/aea7d93aa6c7f6002cc1e4717358135a2cdd6a.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"Suggester prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n\n    SolrSuggester suggester = getSuggester(params);\n    if (suggester == null) {\n      throw new IllegalArgumentException(\"Error in configuration, no suggester found\");\n    }\n    if (params.getBool(SUGGEST_BUILD, false)) {\n      suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SUGGEST_RELOAD, false)) {\n      suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":3,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":116,"groupId":"29259","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/37913207b138fe81adaa2c7b317957ed96b6d9.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"22baafc512ab4c4e291a4f452d842479bd7e4496","commitMessage":"@@@SOLR-5528: improve response format of the new SuggestComponent\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1551753 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-12-18 07:14:11","modifiedFileCount":"4","status":"M","submitter":"Robert Muir"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2014-01-11 01:59:22","commitOrder":4,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"SuggestComponent prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    \n    boolean buildAll = params.getBool(SUGGEST_BUILD_ALL, false);\n    boolean reloadAll = params.getBool(SUGGEST_RELOAD_ALL, false);\n    \n    final Collection<SolrSuggester> querysuggesters;\n    if (buildAll || reloadAll) {\n      querysuggesters = suggesters.values();\n    } else {\n      querysuggesters = getSuggesters(params);\n    }\n    \n    if (params.getBool(SUGGEST_BUILD, false) || buildAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!buildAll) ? \"build\" : \"buildAll\");\n    } else if (params.getBool(SUGGEST_RELOAD, false) || reloadAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!reloadAll) ? \"reload\" : \"reloadAll\");\n    }\n  }\n","date":"2014-01-11 01:59:22","endLine":172,"groupId":"29259","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/55/cbddb89070ac48dbd6d59e511472b48361a3bf.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"SuggestComponent prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n\n    SolrSuggester suggester = getSuggester(params);\n    if (suggester == null) {\n      if (params.get(SUGGEST_DICT) != null) {\n        throw new IllegalArgumentException(\"No suggester named \" + params.get(SUGGEST_DICT) +\" was configured\");\n      } else {\n        throw new IllegalArgumentException(\"No default suggester was configured\");\n      }\n    }\n    if (params.getBool(SUGGEST_BUILD, false)) {\n      suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SUGGEST_RELOAD, false)) {\n      suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":4,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":116,"groupId":"29259","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/37913207b138fe81adaa2c7b317957ed96b6d9.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"13084e4e81580add64c99f6b82bf4cdb99b1a075","commitMessage":"@@@SOLR-5529: add support for queries to use multiple suggesters in SuggestComponent\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1557206 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-11 01:59:22","modifiedFileCount":"8","status":"M","submitter":"Robert Muir"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2018-08-23 06:26:37","commitOrder":5,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    log.info(\"SuggestComponent prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    \n    boolean buildAll = params.getBool(SUGGEST_BUILD_ALL, false);\n    boolean reloadAll = params.getBool(SUGGEST_RELOAD_ALL, false);\n    \n    final Collection<SolrSuggester> querysuggesters;\n    if (buildAll || reloadAll) {\n      querysuggesters = suggesters.values();\n    } else {\n      querysuggesters = getSuggesters(params);\n    }\n    \n    if (params.getBool(SUGGEST_BUILD, false) || buildAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!buildAll) ? \"build\" : \"buildAll\");\n    } else if (params.getBool(SUGGEST_RELOAD, false) || reloadAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!reloadAll) ? \"reload\" : \"reloadAll\");\n    }\n  }\n","date":"2018-08-23 06:26:37","endLine":194,"groupId":"29259","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/6fdb1559444cfa39c8568b69cb54f120c15ff7.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    LOG.info(\"SuggestComponent prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    \n    boolean buildAll = params.getBool(SUGGEST_BUILD_ALL, false);\n    boolean reloadAll = params.getBool(SUGGEST_RELOAD_ALL, false);\n    \n    final Collection<SolrSuggester> querysuggesters;\n    if (buildAll || reloadAll) {\n      querysuggesters = suggesters.values();\n    } else {\n      querysuggesters = getSuggesters(params);\n    }\n    \n    if (params.getBool(SUGGEST_BUILD, false) || buildAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!buildAll) ? \"build\" : \"buildAll\");\n    } else if (params.getBool(SUGGEST_RELOAD, false) || reloadAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!reloadAll) ? \"reload\" : \"reloadAll\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":5,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":116,"groupId":"29259","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/37913207b138fe81adaa2c7b317957ed96b6d9.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"8cde1277ec7151bd6ab62950ac93cbdd6ff04d9f","commitMessage":"@@@SOLR-12690: Regularize LoggerFactory declarations\n","date":"2018-08-23 06:26:37","modifiedFileCount":"93","status":"M","submitter":"Erick Erickson"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2020-04-23 10:32:49","commitOrder":6,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    log.info(\"SuggestComponent prepare with : {}\", params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    \n    boolean buildAll = params.getBool(SUGGEST_BUILD_ALL, false);\n    boolean reloadAll = params.getBool(SUGGEST_RELOAD_ALL, false);\n    \n    final Collection<SolrSuggester> querysuggesters;\n    if (buildAll || reloadAll) {\n      querysuggesters = suggesters.values();\n    } else {\n      querysuggesters = getSuggesters(params);\n    }\n    \n    if (params.getBool(SUGGEST_BUILD, false) || buildAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!buildAll) ? \"build\" : \"buildAll\");\n    } else if (params.getBool(SUGGEST_RELOAD, false) || reloadAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!reloadAll) ? \"reload\" : \"reloadAll\");\n    }\n  }\n","date":"2020-04-23 10:32:49","endLine":195,"groupId":"102324","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/59/6e9f10a5d55719ec98cbfdabe6a2d0f84c018a.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    log.info(\"SuggestComponent prepare with : \" + params);\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    \n    boolean buildAll = params.getBool(SUGGEST_BUILD_ALL, false);\n    boolean reloadAll = params.getBool(SUGGEST_RELOAD_ALL, false);\n    \n    final Collection<SolrSuggester> querysuggesters;\n    if (buildAll || reloadAll) {\n      querysuggesters = suggesters.values();\n    } else {\n      querysuggesters = getSuggesters(params);\n    }\n    \n    if (params.getBool(SUGGEST_BUILD, false) || buildAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.build(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!buildAll) ? \"build\" : \"buildAll\");\n    } else if (params.getBool(SUGGEST_RELOAD, false) || reloadAll) {\n      for (SolrSuggester suggester : querysuggesters) {\n        suggester.reload(rb.req.getCore(), rb.req.getSearcher());\n      }\n      rb.rsp.add(\"command\", (!reloadAll) ? \"reload\" : \"reloadAll\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":6,"curCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":116,"groupId":"102324","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/37913207b138fe81adaa2c7b317957ed96b6d9.src","preCode":"  public void prepare(ResponseBuilder rb) throws IOException {\n\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    SolrSpellChecker spellChecker = getSpellChecker(params);\n    if (params.getBool(SPELLCHECK_BUILD, false)) {\n      spellChecker.build(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"build\");\n    } else if (params.getBool(SPELLCHECK_RELOAD, false)) {\n      spellChecker.reload(rb.req.getCore(), rb.req.getSearcher());\n      rb.rsp.add(\"command\", \"reload\");\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"e43b17962a116111af4348cf7548ee2e7a2375b8","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-23 10:32:49","modifiedFileCount":"102","status":"M","submitter":"Erick Erickson"}]
