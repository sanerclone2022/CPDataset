[{"authorTime":"2021-03-06 02:51:22","codes":[{"authorDate":"2021-03-06 02:51:22","commitOrder":1,"curCode":"  public void testPerRequestCredentialsWin() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\")\n            .withBasicAuthCredentials(\"foo2\", \"explicit\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      r.setBasicAuthCredentials(\"foo3\", \"per-request\");\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertTrue(DebugServlet.headers.size() > 0);\n      String authorizationHeader = DebugServlet.headers.get(\"authorization\");\n      assertNotNull(\"No authorization information in headers found. Headers: \" + DebugServlet.headers, authorizationHeader);\n      assertEquals(\"Basic \" + Base64.byteArrayToBase64(\"foo3:per-request\".getBytes(StandardCharsets.UTF_8)),  authorizationHeader);\n    } finally {\n      System.clearProperty(\"basicauth\");\n    }\n  }\n","date":"2021-03-06 02:51:22","endLine":727,"groupId":"3138","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPerRequestCredentialsWin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/728b6045944831fdc31fed192595562d072df3.src","preCode":"  public void testPerRequestCredentialsWin() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\")\n            .withBasicAuthCredentials(\"foo2\", \"explicit\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      r.setBasicAuthCredentials(\"foo3\", \"per-request\");\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertTrue(DebugServlet.headers.size() > 0);\n      String authorizationHeader = DebugServlet.headers.get(\"authorization\");\n      assertNotNull(\"No authorization information in headers found. Headers: \" + DebugServlet.headers, authorizationHeader);\n      assertEquals(\"Basic \" + Base64.byteArrayToBase64(\"foo3:per-request\".getBytes(StandardCharsets.UTF_8)),  authorizationHeader);\n    } finally {\n      System.clearProperty(\"basicauth\");\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":708,"status":"B"},{"authorDate":"2021-03-06 02:51:22","commitOrder":1,"curCode":"  public void testNoCredentials() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertFalse(\"Expecting no authorization header but got: \" + DebugServlet.headers, DebugServlet.headers.containsKey(\"authorization\"));\n    }\n  }\n","date":"2021-03-06 02:51:22","endLine":742,"groupId":"3143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoCredentials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/728b6045944831fdc31fed192595562d072df3.src","preCode":"  public void testNoCredentials() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertFalse(\"Expecting no authorization header but got: \" + DebugServlet.headers, DebugServlet.headers.containsKey(\"authorization\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":730,"status":"B"}],"commitId":"fe33a436a084a43b3fdceb7beea662730c535337","commitMessage":"@@@SOLR-15154: Let Http2SolrClient pass Basic Auth credentials to all requests (#2445)\n\nCredentials can now be set explicitly at the client level.  or can be read from System properties like in the previous version of the client when using PreemptiveBasicAuthClientBuilderFactory. Other implementations of HttpClientBuilderFactory can now also be used.","date":"2021-03-06 02:51:22","modifiedFileCount":"3","status":"B","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2021-03-06 02:51:22","codes":[{"authorDate":"2021-08-31 21:56:55","commitOrder":2,"curCode":"  public void testPerRequestCredentialsWin() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\")\n            .withBasicAuthCredentials(\"foo2\", \"explicit\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      r.setBasicAuthCredentials(\"foo3\", \"per-request\");\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertTrue(DebugServlet.headers.size() > 0);\n      String authorizationHeader = DebugServlet.headers.get(\"authorization\");\n      assertNotNull(\"No authorization information in headers found. Headers: \" + DebugServlet.headers, authorizationHeader);\n      assertEquals(\"Basic \" + Base64.getEncoder().encodeToString(\"foo3:per-request\".getBytes(StandardCharsets.UTF_8)),  authorizationHeader);\n    } finally {\n      System.clearProperty(\"basicauth\");\n    }\n  }\n","date":"2021-08-31 21:56:55","endLine":727,"groupId":"10555","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testPerRequestCredentialsWin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/9cd07a7e2534d1a4ce3fe929c2c8ab2e46b61d.src","preCode":"  public void testPerRequestCredentialsWin() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\")\n            .withBasicAuthCredentials(\"foo2\", \"explicit\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      r.setBasicAuthCredentials(\"foo3\", \"per-request\");\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertTrue(DebugServlet.headers.size() > 0);\n      String authorizationHeader = DebugServlet.headers.get(\"authorization\");\n      assertNotNull(\"No authorization information in headers found. Headers: \" + DebugServlet.headers, authorizationHeader);\n      assertEquals(\"Basic \" + Base64.byteArrayToBase64(\"foo3:per-request\".getBytes(StandardCharsets.UTF_8)),  authorizationHeader);\n    } finally {\n      System.clearProperty(\"basicauth\");\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":708,"status":"M"},{"authorDate":"2021-03-06 02:51:22","commitOrder":2,"curCode":"  public void testNoCredentials() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertFalse(\"Expecting no authorization header but got: \" + DebugServlet.headers, DebugServlet.headers.containsKey(\"authorization\"));\n    }\n  }\n","date":"2021-03-06 02:51:22","endLine":742,"groupId":"10555","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoCredentials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/728b6045944831fdc31fed192595562d072df3.src","preCode":"  public void testNoCredentials() {\n    try (Http2SolrClient client = new Http2SolrClient.Builder(jetty.getBaseUrl().toString() + \"/debug/foo\").build();) {\n      QueryRequest r = new QueryRequest(new SolrQuery(\"quick brown fox\"));\n      try {\n        ignoreException(\"Error from server\");\n        client.request(r);\n      } catch (Exception e) {\n        \r\n      }\n      unIgnoreException(\"Error from server\");\n      assertFalse(\"Expecting no authorization header but got: \" + DebugServlet.headers, DebugServlet.headers.containsKey(\"authorization\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":730,"status":"N"}],"commitId":"bd3c05868b4884cabe3eb747663ebdfdbdcd2770","commitMessage":"@@@SOLR-15111 Use JDK8 Base64 instead of own implementation (#24)\n\nCo-authored-by: Jan H?ydahl <janhoy@users.noreply.github.com>","date":"2021-08-31 21:56:55","modifiedFileCount":"20","status":"M","submitter":"Andr?s Salamon"}]
