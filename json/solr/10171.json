[{"authorTime":"2018-01-23 20:35:14","codes":[{"authorDate":"2018-01-23 20:35:14","commitOrder":1,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[] row = matrix.getData()[index.intValue()];\n      List<Number> list = new ArrayList();\n      for(double d : row) {\n        list.add(d);\n      }\n\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","date":"2018-01-23 20:35:14","endLine":55,"groupId":"2166","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/98/2cfbb744d10c68fc2692d0b68c7d176b6580b2.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[] row = matrix.getData()[index.intValue()];\n      List<Number> list = new ArrayList();\n      for(double d : row) {\n        list.add(d);\n      }\n\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RowAtEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2018-01-23 20:35:14","commitOrder":1,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[][] data = matrix.getData();\n      List<Number> list = new ArrayList();\n      for(double[] row : data) {\n        list.add(row[index.intValue()]);\n      }\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","date":"2018-01-23 20:35:14","endLine":54,"groupId":"40438","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/14096c559b98708b35bbf946a38f57dc5b09fd.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[][] data = matrix.getData();\n      List<Number> list = new ArrayList();\n      for(double[] row : data) {\n        list.add(row[index.intValue()]);\n      }\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ColumnAtEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"}],"commitId":"653935bbdfd70fa9490f8c363ffcf9832d3141a5","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-01-23 20:35:14","modifiedFileCount":"279","status":"B","submitter":"Karl Wright"},{"authorTime":"2020-06-08 09:31:51","codes":[{"authorDate":"2020-06-08 09:31:51","commitOrder":2,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[] row = matrix.getData()[index.intValue()];\n      List<Number> list = new ArrayList<>();\n      for(double d : row) {\n        list.add(d);\n      }\n\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","date":"2020-06-08 09:31:51","endLine":55,"groupId":"10171","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2c/d0df92fd0b751da958161da27ac27251c67302.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[] row = matrix.getData()[index.intValue()];\n      List<Number> list = new ArrayList();\n      for(double d : row) {\n        list.add(d);\n      }\n\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RowAtEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2020-06-08 09:31:51","commitOrder":2,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[][] data = matrix.getData();\n      List<Number> list = new ArrayList<>();\n      for(double[] row : data) {\n        list.add(row[index.intValue()]);\n      }\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","date":"2020-06-08 09:31:51","endLine":54,"groupId":"10171","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/37d540c1a49e0ac58f5e8bdc99374df289ff92.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    if(value1 instanceof Matrix) {\n      Matrix matrix = (Matrix) value1;\n      Number index = (Number) value2;\n      double[][] data = matrix.getData();\n      List<Number> list = new ArrayList();\n      for(double[] row : data) {\n        list.add(row[index.intValue()]);\n      }\n      return list;\n    } else {\n      throw new IOException(\"The rowAt function expects a matrix as the first parameter\");\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ColumnAtEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"7bf59a16bda85b19b68b639b395d143019a89fde","commitMessage":"@@@SOLR-14544: Fix or suppress warnings in solr/client/solrj/io/eval\n","date":"2020-06-08 09:31:51","modifiedFileCount":"110","status":"M","submitter":"Erick Erickson"}]
