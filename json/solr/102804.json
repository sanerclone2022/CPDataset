[{"authorTime":"2017-08-14 18:42:33","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-11-30 01:58:51","endLine":85,"groupId":"21218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6b/6b4afedf88f243718276b948d08f75daade293.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2017-08-14 18:42:33","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    \r\n    mBeanServer = ManagementFactory.getPlatformMBeanServer();\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n  }\n","date":"2017-08-14 18:42:33","endLine":51,"groupId":"21218","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/7ebafb741e9aba0e2b958e5fa00b470234103c.src","preCode":"  public static void setupCluster() throws Exception {\n    \r\n    mBeanServer = ManagementFactory.getPlatformMBeanServer();\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"NB"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2017-08-14 18:42:33","codes":[{"authorDate":"2018-12-13 06:00:08","commitOrder":3,"curCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-12-13 08:50:23","endLine":90,"groupId":"21218","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/04933ad6da6297c69daa315fa4ebe433bab6e1.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2017-08-14 18:42:33","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    \r\n    mBeanServer = ManagementFactory.getPlatformMBeanServer();\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n  }\n","date":"2017-08-14 18:42:33","endLine":51,"groupId":"21218","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/7ebafb741e9aba0e2b958e5fa00b470234103c.src","preCode":"  public static void setupCluster() throws Exception {\n    \r\n    mBeanServer = ManagementFactory.getPlatformMBeanServer();\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"44b51cd041371051d0b73b54afebc99fc0fa4862","commitMessage":"@@@SOLR-13067: Harden BasicAuthIntegrationTest.\n","date":"2018-12-13 08:50:23","modifiedFileCount":"2","status":"M","submitter":"markrmiller"},{"authorTime":"2020-07-08 23:57:24","codes":[{"authorDate":"2018-12-13 06:00:08","commitOrder":4,"curCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-12-13 08:50:23","endLine":90,"groupId":"102804","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/04933ad6da6297c69daa315fa4ebe433bab6e1.src","preCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"},{"authorDate":"2020-07-08 23:57:24","commitOrder":4,"curCode":"  public static void setupCluster() throws Exception {\n    \r\n    mBeanServer = ManagementFactory.getPlatformMBeanServer();\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1)\n        .process(cluster.getSolrClient());\n  }\n","date":"2020-07-08 23:57:24","endLine":62,"groupId":"102804","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5c/ff7737ceb48550bd7ef43f4067ff6282f263f9.src","preCode":"  public static void setupCluster() throws Exception {\n    \r\n    mBeanServer = ManagementFactory.getPlatformMBeanServer();\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"cf742f45963f4747e7041e8131248bc3a2b44864","commitMessage":"@@@SOLR-12847: Remove support for maxShardsPerNode.\n","date":"2020-07-08 23:57:24","modifiedFileCount":"144","status":"M","submitter":"Andrzej Bialecki"}]
