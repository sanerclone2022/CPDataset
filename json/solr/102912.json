[{"authorTime":"2013-06-27 08:44:27","codes":[{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testFailedParseMixedInt() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<Object,Object>();\n    Float floatVal = 294423.0f;\n    mixed.put(85, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518, \"-2,894,518\");\n    mixed.put(1879472193, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n                                     doc(f(\"id\", \"7202\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","date":"2013-06-27 08:44:27","endLine":362,"groupId":"26262","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedParseMixedInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testFailedParseMixedInt() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<Object,Object>();\n    Float floatVal = 294423.0f;\n    mixed.put(85, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518, \"-2,894,518\");\n    mixed.put(1879472193, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n                                     doc(f(\"id\", \"7202\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"B"},{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testFailedParseMixedLong() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<Object,Object>();\n    Float floatVal = 294423.0f;\n    mixed.put(85L, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518L, \"-2,894,518\");\n    mixed.put(1879472193L, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-long-no-run-processor\",\n                                     doc(f(\"id\", \"7204\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","date":"2013-06-27 08:44:27","endLine":445,"groupId":"26265","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedParseMixedLong","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testFailedParseMixedLong() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<Object,Object>();\n    Float floatVal = 294423.0f;\n    mixed.put(85L, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518L, \"-2,894,518\");\n    mixed.put(1879472193L, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-long-no-run-processor\",\n                                     doc(f(\"id\", \"7204\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"B"}],"commitId":"d6d65851cf4a7d1f9e5f0b58544374785e7c2594","commitMessage":"@@@SOLR-4892: Add field update processors to parse/convert String-typed fields to Date.  Number.  and Boolean\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 08:44:27","modifiedFileCount":"15","status":"B","submitter":"Steven Rowe"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":2,"curCode":"  public void testFailedParseMixedInt() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<>();\n    Float floatVal = 294423.0f;\n    mixed.put(85, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518, \"-2,894,518\");\n    mixed.put(1879472193, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n                                     doc(f(\"id\", \"7202\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","date":"2014-03-12 22:39:17","endLine":362,"groupId":"26262","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedParseMixedInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/1e8ff620c6bb77825846e02cf2d7454d6806cb.src","preCode":"  public void testFailedParseMixedInt() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<Object,Object>();\n    Float floatVal = 294423.0f;\n    mixed.put(85, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518, \"-2,894,518\");\n    mixed.put(1879472193, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n                                     doc(f(\"id\", \"7202\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":2,"curCode":"  public void testFailedParseMixedLong() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<>();\n    Float floatVal = 294423.0f;\n    mixed.put(85L, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518L, \"-2,894,518\");\n    mixed.put(1879472193L, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-long-no-run-processor\",\n                                     doc(f(\"id\", \"7204\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","date":"2014-03-12 22:39:17","endLine":445,"groupId":"26265","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedParseMixedLong","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/1e8ff620c6bb77825846e02cf2d7454d6806cb.src","preCode":"  public void testFailedParseMixedLong() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<Object,Object>();\n    Float floatVal = 294423.0f;\n    mixed.put(85L, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518L, \"-2,894,518\");\n    mixed.put(1879472193L, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-long-no-run-processor\",\n                                     doc(f(\"id\", \"7204\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2019-06-26 07:26:03","codes":[{"authorDate":"2019-06-26 07:26:03","commitOrder":3,"curCode":"  public void testFailedParseMixedInt() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<>();\n    Float floatVal = 294423.0f;\n    mixed.put(85, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518, \"-2,894,518\");\n    mixed.put(1879472193, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n                                     doc(f(\"id\", \"7202\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertThat(o, IS_STRING);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","date":"2019-06-26 07:26:03","endLine":368,"groupId":"102912","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedParseMixedInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testFailedParseMixedInt() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<>();\n    Float floatVal = 294423.0f;\n    mixed.put(85, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518, \"-2,894,518\");\n    mixed.put(1879472193, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n                                     doc(f(\"id\", \"7202\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"M"},{"authorDate":"2019-06-26 07:26:03","commitOrder":3,"curCode":"  public void testFailedParseMixedLong() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<>();\n    Float floatVal = 294423.0f;\n    mixed.put(85L, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518L, \"-2,894,518\");\n    mixed.put(1879472193L, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-long-no-run-processor\",\n                                     doc(f(\"id\", \"7204\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertThat(o, IS_STRING);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","date":"2019-06-26 07:26:03","endLine":459,"groupId":"102912","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedParseMixedLong","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testFailedParseMixedLong() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    Map<Object,Object> mixed = new HashMap<>();\n    Float floatVal = 294423.0f;\n    mixed.put(85L, \"85\");\n    mixed.put(floatVal, floatVal); \r\n    mixed.put(-2894518L, \"-2,894,518\");\n    mixed.put(1879472193L, \"1,879,472,193\");\n    SolrInputDocument d = processAdd(\"parse-long-no-run-processor\",\n                                     doc(f(\"id\", \"7204\"), f(\"not_in_schema\", mixed.values())));\n    assertNotNull(d);\n    boolean foundFloat = false;\n    for (Object o : d.getFieldValues(\"not_in_schema\")) {\n      if (floatVal == o) {\n        foundFloat = true;\n      } else {\n        assertTrue(o instanceof String);\n      }\n      mixed.values().remove(o);\n    }\n    assertTrue(foundFloat);\n    assertTrue(mixed.isEmpty());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"M"}],"commitId":"583c219183b2bca85936a095727d287c5c28526b","commitMessage":"@@@SOLR-13580: add assumeThat calls to ParsingFieldUpdateProcessorsTest to skip test methods impacted by java 13-ea bug in NumberFormat.parse()\n","date":"2019-06-26 07:26:03","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"}]
