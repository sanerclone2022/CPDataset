[{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2015-04-03 17:46:54","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n  }\n","date":"2015-04-03 17:46:54","endLine":95,"groupId":"49901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bd/edc7c633102f9501a9c1967dc121e04426875d.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestRestoreCore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2014-12-31 22:05:48","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n  }\n","date":"2014-12-31 22:05:48","endLine":105,"groupId":"49901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/96/3197ddec42917845f9806b3d90f3b0e985d06e.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"NB"}],"commitId":"79bf72708b94c01691027c9a30364b96a4705ccf","commitMessage":"@@@SOLR-6637: Solr should have a way to restore a core\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1671022 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-04-03 17:46:54","modifiedFileCount":"4","status":"M","submitter":"Varun Thacker"},{"authorTime":"2016-06-24 02:19:14","codes":[{"authorDate":"2016-06-24 02:19:14","commitOrder":5,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2016-06-24 02:19:28","endLine":97,"groupId":"49901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/f773a43263198491bed73d351e5dfb45e650ca.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestRestoreCore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2016-06-24 02:19:14","commitOrder":5,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2016-06-24 02:19:28","endLine":114,"groupId":"49901","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/a16a0a8173893b27840c30cb38fdcb653d7686.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"07be2c42ba24fea7c4e84836aa4c3f8d059f71d6","commitMessage":"@@@SOLR-7374: Core level backup/restore now supports specifying a directory implementation\n","date":"2016-06-24 02:19:28","modifiedFileCount":"17","status":"M","submitter":"Varun Thacker"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":6,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createAndStartJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2018-11-30 01:58:51","endLine":95,"groupId":"49901","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/02/32c87a6cb152c71c05a64e9a6f1d84401abb26.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestRestoreCore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":6,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createAndStartJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2018-11-30 01:58:51","endLine":112,"groupId":"49901","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/80a8db2179701fcc1e06f86ff59d990a2d371e.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2020-08-06 05:52:48","commitOrder":7,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-leader.xml\";\n\n    leader = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"leader\", null);\n    leader.setUp();\n    leader.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2020-08-06 05:52:48","endLine":95,"groupId":"49901","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/26/1a775c27c82d4c57b9085e048d086265100eb0.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master.xml\";\n\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createAndStartJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestRestoreCore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2020-08-06 05:52:48","commitOrder":7,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-leader1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-leader1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    leader = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"leader\", null);\n    leader.setUp();\n    leader.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2020-08-06 05:52:48","endLine":112,"groupId":"49901","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/b0f76a363c6754a8a8dcf4fc68989ad1dcc9e6.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-master1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-master1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    master = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"master\", null);\n    master.setUp();\n    master.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    masterJetty = createAndStartJetty(master);\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"7110118ad4f1a68f39a1db1caab374594098243e","commitMessage":"@@@SOLR-14702: Remove oppressive language (part1) (#1711)\n\nReplace references to \"master\" and \"slave\" with \"leader\" and \"follower\"","date":"2020-08-06 05:52:48","modifiedFileCount":"28","status":"M","submitter":"Marcus"},{"authorTime":"2021-09-23 00:46:59","codes":[{"authorDate":"2021-09-23 00:46:59","commitOrder":8,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-leader.xml\";\n\n    leader = new ReplicationTestHelper.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"leader\", null);\n    leader.setUp();\n    leader.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2021-09-23 00:46:59","endLine":97,"groupId":"103473","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/dee45f1bd679c12c7ae263cdf20af9e35dc94e.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-leader.xml\";\n\n    leader = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"leader\", null);\n    leader.setUp();\n    leader.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestRestoreCore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-09-23 00:46:59","commitOrder":8,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-leader1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-leader1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    leader = new ReplicationTestHelper.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"leader\", null);\n    leader.setUp();\n    leader.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","date":"2021-09-23 00:46:59","endLine":114,"groupId":"103473","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fe/641b3e1adf6f5684652d97d9821710353dc8f6.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    String configFile = \"solrconfig-leader1.xml\";\n\n    if(random().nextBoolean()) {\n      configFile = \"solrconfig-leader1-keepOneBackup.xml\";\n      addNumberToKeepInRequest = false;\n      backupKeepParamName = ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_INIT_PARAM;\n    }\n    leader = new TestReplicationHandler.SolrInstance(createTempDir(\"solr-instance\").toFile(), \"leader\", null);\n    leader.setUp();\n    leader.copyConfigFile(CONF_DIR + configFile, \"solrconfig.xml\");\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    docsSeed = random().nextLong();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"3cd71244d23704a7addf34eeac9f728862518f48","commitMessage":"@@@SOLR-15286: A brand new follower in the legacy mode should wait to replicate index before reporting healthy (#238)\n\n* https://issues.apache.org/jira/browse/SOLR-15286\n\nAdded log to the HealthCheckHandler for legacy mode to report followers healthy based on the index generation diff\n\nCo-authored-by: Pushkar Raste <praste@apple.com>","date":"2021-09-23 00:46:59","modifiedFileCount":"8","status":"M","submitter":"Pushkar Raste"}]
