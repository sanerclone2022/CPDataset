[{"authorTime":"2016-05-26 01:42:11","codes":[{"authorDate":"2016-05-26 01:42:11","commitOrder":1,"curCode":"  public void testLegacyFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","date":"2016-05-26 01:42:11","endLine":1131,"groupId":"17206","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLegacyFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/d92379b394ef8a9b41bd8d1532f30ac1bf732c.src","preCode":"  public void testLegacyFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1103,"status":"B"},{"authorDate":"2016-05-26 01:42:11","commitOrder":1,"curCode":"  public void testLegacyFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","date":"2016-05-26 01:42:11","endLine":1161,"groupId":"35308","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLegacyFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/d92379b394ef8a9b41bd8d1532f30ac1bf732c.src","preCode":"  public void testLegacyFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1134,"status":"B"}],"commitId":"366f8d18fe3ac9c9fb93493fe60d2bf4157de032","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2016-05-26 01:42:11","modifiedFileCount":"50","status":"B","submitter":"Noble Paul"},{"authorTime":"2018-07-30 16:08:16","codes":[{"authorDate":"2018-07-30 16:08:16","commitOrder":2,"curCode":"  public void testLegacyFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits.value);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:38:05","endLine":1134,"groupId":"103350","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLegacyFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/7bd7f4dbdc86fdf230ef84c8c0c2201a9c8b07.src","preCode":"  public void testLegacyFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1106,"status":"M"},{"authorDate":"2018-07-30 16:08:16","commitOrder":2,"curCode":"  public void testLegacyFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits.value);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:38:05","endLine":1164,"groupId":"103350","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLegacyFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/7bd7f4dbdc86fdf230ef84c8c0c2201a9c8b07.src","preCode":"  public void testLegacyFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new LegacyFloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = UninvertingReader.wrap(writer.getReader(), \n                     Collections.singletonMap(\"value\", Type.LEGACY_FLOAT));\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1137,"status":"M"}],"commitId":"9ca053712af0795cbd0d0d9f2d862f24d9e547c3","commitMessage":"@@@LUCENE-8430: TopDocs.totalHits may now be a lower bound of the hit count.\n","date":"2018-07-30 22:38:05","modifiedFileCount":"178","status":"M","submitter":"Adrien Grand"}]
