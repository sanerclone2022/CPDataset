[{"authorTime":"2018-12-31 19:05:31","codes":[{"authorDate":"2016-02-01 11:25:37","commitOrder":4,"curCode":"  protected NamedList unmarshalSortValues(SortSpec sortSpec, \n                                        NamedList sortFieldValues, \n                                        IndexSchema schema) {\n    NamedList unmarshalledSortValsPerField = new NamedList();\n\n    if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n    \n    List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n    SortField[] sortFields = sortSpec.getSort().getSort();\n\n    int marshalledFieldNum = 0;\n    for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n      final SortField sortField = sortFields[sortFieldNum];\n      final SortField.Type type = sortField.getType();\n\n      \r\n      if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n      final String sortFieldName = sortField.getField();\n      final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n      assert sortFieldName.equals(valueFieldName)\n        : \"sortFieldValues name key does not match expected SortField.getField\";\n\n      List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n      final SchemaField schemaField = schemaFields.get(sortFieldNum);\n      if (null == schemaField) {\n        unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n      } else {\n        FieldType fieldType = schemaField.getType();\n        List unmarshalledSortVals = new ArrayList();\n        for (Object sortVal : sortVals) {\n          unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n        }\n        unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n      }\n      marshalledFieldNum++;\n    }\n    return unmarshalledSortValsPerField;\n  }\n","date":"2016-02-01 11:25:37","endLine":1214,"groupId":"29041","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshalSortValues","params":"(SortSpecsortSpec@NamedListsortFieldValues@IndexSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/fe28dfe0e869d859e1ac1b8ae041200d924748.src","preCode":"  protected NamedList unmarshalSortValues(SortSpec sortSpec, \n                                        NamedList sortFieldValues, \n                                        IndexSchema schema) {\n    NamedList unmarshalledSortValsPerField = new NamedList();\n\n    if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n    \n    List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n    SortField[] sortFields = sortSpec.getSort().getSort();\n\n    int marshalledFieldNum = 0;\n    for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n      final SortField sortField = sortFields[sortFieldNum];\n      final SortField.Type type = sortField.getType();\n\n      \r\n      if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n      final String sortFieldName = sortField.getField();\n      final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n      assert sortFieldName.equals(valueFieldName)\n        : \"sortFieldValues name key does not match expected SortField.getField\";\n\n      List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n      final SchemaField schemaField = schemaFields.get(sortFieldNum);\n      if (null == schemaField) {\n        unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n      } else {\n        FieldType fieldType = schemaField.getType();\n        List unmarshalledSortVals = new ArrayList();\n        for (Object sortVal : sortVals) {\n          unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n        }\n        unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n      }\n      marshalledFieldNum++;\n    }\n    return unmarshalledSortValsPerField;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1175,"status":"NB"},{"authorDate":"2018-12-31 19:05:31","commitOrder":4,"curCode":"    private NamedList unmarshalSortValues(SortSpec sortSpec,\n                                          NamedList sortFieldValues,\n                                          IndexSchema schema) {\n      NamedList unmarshalledSortValsPerField = new NamedList();\n\n      if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n\n      List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n      SortField[] sortFields = sortSpec.getSort().getSort();\n\n      int marshalledFieldNum = 0;\n      for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n        final SortField sortField = sortFields[sortFieldNum];\n        final SortField.Type type = sortField.getType();\n\n        \r\n        if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n        final String sortFieldName = sortField.getField();\n        final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n        assert sortFieldName.equals(valueFieldName)\n            : \"sortFieldValues name key does not match expected SortField.getField\";\n\n        List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n        final SchemaField schemaField = schemaFields.get(sortFieldNum);\n        if (null == schemaField) {\n          unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n        } else {\n          FieldType fieldType = schemaField.getType();\n          List unmarshalledSortVals = new ArrayList();\n          for (Object sortVal : sortVals) {\n            unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n          }\n          unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n        }\n        marshalledFieldNum++;\n      }\n      return unmarshalledSortValsPerField;\n    }\n","date":"2018-12-31 19:05:31","endLine":650,"groupId":"29041","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unmarshalSortValues","params":"(SortSpecsortSpec@NamedListsortFieldValues@IndexSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/3839771bc3a6b3138cd6daee9a86497bd799f5.src","preCode":"    private NamedList unmarshalSortValues(SortSpec sortSpec,\n                                          NamedList sortFieldValues,\n                                          IndexSchema schema) {\n      NamedList unmarshalledSortValsPerField = new NamedList();\n\n      if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n\n      List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n      SortField[] sortFields = sortSpec.getSort().getSort();\n\n      int marshalledFieldNum = 0;\n      for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n        final SortField sortField = sortFields[sortFieldNum];\n        final SortField.Type type = sortField.getType();\n\n        \r\n        if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n        final String sortFieldName = sortField.getField();\n        final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n        assert sortFieldName.equals(valueFieldName)\n            : \"sortFieldValues name key does not match expected SortField.getField\";\n\n        List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n        final SchemaField schemaField = schemaFields.get(sortFieldNum);\n        if (null == schemaField) {\n          unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n        } else {\n          FieldType fieldType = schemaField.getType();\n          List unmarshalledSortVals = new ArrayList();\n          for (Object sortVal : sortVals) {\n            unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n          }\n          unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n        }\n        marshalledFieldNum++;\n      }\n      return unmarshalledSortValsPerField;\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":611,"status":"B"}],"commitId":"6a2de771bfc8a40738e1ce0645f8b2c8ae8f9e09","commitMessage":"@@@SOLR-13096: rename TestRankQueryPlugin to RankQueryTestPlugin\n","date":"2018-12-31 19:05:31","modifiedFileCount":"0","status":"M","submitter":"Christine Poerschke"},{"authorTime":"2021-07-13 23:49:56","codes":[{"authorDate":"2021-07-13 23:49:56","commitOrder":5,"curCode":"  protected NamedList<List<Object>> unmarshalSortValues(SortSpec sortSpec,\n                                        NamedList<List<Object>> sortFieldValues,\n                                        IndexSchema schema) {\n    NamedList<List<Object>> unmarshalledSortValsPerField = new NamedList<>();\n\n    if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n    \n    List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n    SortField[] sortFields = sortSpec.getSort().getSort();\n\n    int marshalledFieldNum = 0;\n    for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n      final SortField sortField = sortFields[sortFieldNum];\n      final SortField.Type type = sortField.getType();\n\n      \r\n      if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n      final String sortFieldName = sortField.getField();\n      final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n      assert sortFieldName.equals(valueFieldName)\n        : \"sortFieldValues name key does not match expected SortField.getField\";\n\n      List<Object> sortVals = sortFieldValues.getVal(marshalledFieldNum);\n\n      final SchemaField schemaField = schemaFields.get(sortFieldNum);\n      if (null == schemaField) {\n        unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n      } else {\n        FieldType fieldType = schemaField.getType();\n        List<Object> unmarshalledSortVals = new ArrayList<>();\n        for (Object sortVal : sortVals) {\n          unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n        }\n        unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n      }\n      marshalledFieldNum++;\n    }\n    return unmarshalledSortValsPerField;\n  }\n","date":"2021-07-13 23:49:56","endLine":1145,"groupId":"102335","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshalSortValues","params":"(SortSpecsortSpec@NamedList<List<Object>>sortFieldValues@IndexSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/851430f7dc8520787dd88382b07b1f3e3d8cd1.src","preCode":"  protected NamedList unmarshalSortValues(SortSpec sortSpec,\n                                        NamedList sortFieldValues, \n                                        IndexSchema schema) {\n    NamedList unmarshalledSortValsPerField = new NamedList();\n\n    if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n    \n    List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n    SortField[] sortFields = sortSpec.getSort().getSort();\n\n    int marshalledFieldNum = 0;\n    for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n      final SortField sortField = sortFields[sortFieldNum];\n      final SortField.Type type = sortField.getType();\n\n      \r\n      if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n      final String sortFieldName = sortField.getField();\n      final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n      assert sortFieldName.equals(valueFieldName)\n        : \"sortFieldValues name key does not match expected SortField.getField\";\n\n      List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n      final SchemaField schemaField = schemaFields.get(sortFieldNum);\n      if (null == schemaField) {\n        unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n      } else {\n        FieldType fieldType = schemaField.getType();\n        List unmarshalledSortVals = new ArrayList();\n        for (Object sortVal : sortVals) {\n          unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n        }\n        unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n      }\n      marshalledFieldNum++;\n    }\n    return unmarshalledSortValsPerField;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1106,"status":"M"},{"authorDate":"2021-07-13 23:49:56","commitOrder":5,"curCode":"    private NamedList unmarshalSortValues(SortSpec sortSpec,\n                                          NamedList sortFieldValues,\n                                          IndexSchema schema) {\n      NamedList unmarshalledSortValsPerField = new NamedList<>();\n\n      if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n\n      List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n      SortField[] sortFields = sortSpec.getSort().getSort();\n\n      int marshalledFieldNum = 0;\n      for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n        final SortField sortField = sortFields[sortFieldNum];\n        final SortField.Type type = sortField.getType();\n\n        \r\n        if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n        final String sortFieldName = sortField.getField();\n        final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n        assert sortFieldName.equals(valueFieldName)\n            : \"sortFieldValues name key does not match expected SortField.getField\";\n\n        List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n        final SchemaField schemaField = schemaFields.get(sortFieldNum);\n        if (null == schemaField) {\n          unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n        } else {\n          FieldType fieldType = schemaField.getType();\n          List unmarshalledSortVals = new ArrayList();\n          for (Object sortVal : sortVals) {\n            unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n          }\n          unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n        }\n        marshalledFieldNum++;\n      }\n      return unmarshalledSortValsPerField;\n    }\n","date":"2021-07-13 23:49:56","endLine":662,"groupId":"102335","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"unmarshalSortValues","params":"(SortSpecsortSpec@NamedListsortFieldValues@IndexSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1a/eaf91eaaa7ea6ced419aeacb864f80580fcdcb.src","preCode":"    private NamedList unmarshalSortValues(SortSpec sortSpec,\n                                          NamedList sortFieldValues,\n                                          IndexSchema schema) {\n      NamedList unmarshalledSortValsPerField = new NamedList();\n\n      if (0 == sortFieldValues.size()) return unmarshalledSortValsPerField;\n\n      List<SchemaField> schemaFields = sortSpec.getSchemaFields();\n      SortField[] sortFields = sortSpec.getSort().getSort();\n\n      int marshalledFieldNum = 0;\n      for (int sortFieldNum = 0; sortFieldNum < sortFields.length; sortFieldNum++) {\n        final SortField sortField = sortFields[sortFieldNum];\n        final SortField.Type type = sortField.getType();\n\n        \r\n        if (type==SortField.Type.SCORE || type==SortField.Type.DOC) continue;\n\n        final String sortFieldName = sortField.getField();\n        final String valueFieldName = sortFieldValues.getName(marshalledFieldNum);\n        assert sortFieldName.equals(valueFieldName)\n            : \"sortFieldValues name key does not match expected SortField.getField\";\n\n        List sortVals = (List)sortFieldValues.getVal(marshalledFieldNum);\n\n        final SchemaField schemaField = schemaFields.get(sortFieldNum);\n        if (null == schemaField) {\n          unmarshalledSortValsPerField.add(sortField.getField(), sortVals);\n        } else {\n          FieldType fieldType = schemaField.getType();\n          List unmarshalledSortVals = new ArrayList();\n          for (Object sortVal : sortVals) {\n            unmarshalledSortVals.add(fieldType.unmarshalSortValue(sortVal));\n          }\n          unmarshalledSortValsPerField.add(sortField.getField(), unmarshalledSortVals);\n        }\n        marshalledFieldNum++;\n      }\n      return unmarshalledSortValsPerField;\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":623,"status":"M"}],"commitId":"09986130545fabfb2cc76ced85a0da6ba536acf0","commitMessage":"@@@SOLR-15385 RawTypes Part VI (#207)\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-07-13 23:49:56","modifiedFileCount":"185","status":"M","submitter":"Mike Drob"}]
