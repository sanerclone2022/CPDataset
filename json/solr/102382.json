[{"authorTime":"2018-07-21 02:38:02","codes":[{"authorDate":"2018-07-21 02:38:02","commitOrder":1,"curCode":"  public boolean write(int docId, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n    int val;\n    if (vals.advance(docId) == docId) {\n      val = (int) vals.longValue();\n    } else {\n      return false;\n    }\n    ew.put(this.field, val);\n    return true;\n  }\n","date":"2018-07-21 02:38:07","endLine":44,"groupId":"57606","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(intdocId@LeafReaderreader@MapWriter.EntryWriterew@intfieldIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/66/e59368b65fdfaa900c3017e8eba1ba38228d15.src","preCode":"  public boolean write(int docId, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n    int val;\n    if (vals.advance(docId) == docId) {\n      val = (int) vals.longValue();\n    } else {\n      return false;\n    }\n    ew.put(this.field, val);\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/export/IntFieldWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2018-07-21 02:38:02","commitOrder":1,"curCode":"  public boolean write(int docId, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n    long val;\n    if (vals.advance(docId) == docId) {\n      val = vals.longValue();\n    } else {\n      return false;\n    }\n    ew.put(this.field, new Date(val));\n    return true;\n  }\n","date":"2018-07-21 02:38:07","endLine":45,"groupId":"61612","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(intdocId@LeafReaderreader@MapWriter.EntryWriterew@intfieldIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/35/843172447e5c95a58f07b98e909b9e96f319f5.src","preCode":"  public boolean write(int docId, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n    long val;\n    if (vals.advance(docId) == docId) {\n      val = vals.longValue();\n    } else {\n      return false;\n    }\n    ew.put(this.field, new Date(val));\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/export/DateFieldWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"9d9c3a0cd87832980a4745ec96fb2cd1216dcb4e","commitMessage":"@@@SOLR-11598: Support more than 4 sort fields in the export writer\n","date":"2018-07-21 02:38:07","modifiedFileCount":"2","status":"B","submitter":"Varun Thacker"},{"authorTime":"2018-08-24 01:27:15","codes":[{"authorDate":"2018-08-24 01:27:15","commitOrder":2,"curCode":"  public boolean write(SortDoc sortDoc, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    int val;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        val = (int) sortValue.getCurrentValue();\n      } else { \r\n        return false;\n      }\n    } else {\n      \r\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      if (vals.advance(sortDoc.docId) == sortDoc.docId) {\n        val = (int) vals.longValue();\n      } else {\n        return false;\n      }\n    }\n    ew.put(this.field, val);\n    return true;\n  }\n","date":"2018-08-24 01:48:10","endLine":54,"groupId":"20771","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(SortDocsortDoc@LeafReaderreader@MapWriter.EntryWriterew@intfieldIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f7/8f098e5c2ee4d2f5bb1d0e7c637cab96ab5e67.src","preCode":"  public boolean write(int docId, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n    int val;\n    if (vals.advance(docId) == docId) {\n      val = (int) vals.longValue();\n    } else {\n      return false;\n    }\n    ew.put(this.field, val);\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/export/IntFieldWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2018-08-24 01:27:15","commitOrder":2,"curCode":"  public boolean write(SortDoc sortDoc, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    Long val;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        val = (long) sortValue.getCurrentValue();\n      } else { \r\n        return false;\n      }\n    } else {\n      \r\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      if (vals.advance(sortDoc.docId) == sortDoc.docId) {\n        val = vals.longValue();\n      } else {\n        return false;\n      }\n    }\n    ew.put(this.field, new Date(val));\n    return true;\n  }\n","date":"2018-08-24 01:48:10","endLine":55,"groupId":"1575","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(SortDocsortDoc@LeafReaderreader@MapWriter.EntryWriterew@intfieldIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/85a064ebc9b2d2cf17fe05c58e803c6c8636b9.src","preCode":"  public boolean write(int docId, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n    long val;\n    if (vals.advance(docId) == docId) {\n      val = vals.longValue();\n    } else {\n      return false;\n    }\n    ew.put(this.field, new Date(val));\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/export/DateFieldWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"dfd2801cd27ccc1e24179cc0ee5768a22bb2e64c","commitMessage":"@@@SOLR-12572: While exporting documents using the export writer.  if a field is specified as a sort parameter and also in the fl (field list) parameter.  we save on one doc-value lookup. This can bring performance improvements of 15% and upwards depending on how many fields are in common\n","date":"2018-08-24 01:48:10","modifiedFileCount":"22","status":"M","submitter":"Varun Thacker"},{"authorTime":"2021-01-20 03:08:38","codes":[{"authorDate":"2021-01-20 03:08:38","commitOrder":3,"curCode":"  public boolean write(SortDoc sortDoc, LeafReaderContext readerContext, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    int val;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        val = (int) sortValue.getCurrentValue();\n      } else { \r\n        return false;\n      }\n    } else {\n      \r\n      int readerOrd = readerContext.ord;\n      NumericDocValues vals = null;\n      if(docValuesCache.containsKey(readerOrd)) {\n        NumericDocValues numericDocValues = docValuesCache.get(readerOrd);\n        if(numericDocValues.docID() < sortDoc.docId) {\n          \r\n          vals = numericDocValues;\n        }\n      }\n\n      if(vals == null) {\n        vals = DocValues.getNumeric(readerContext.reader(), this.field);\n        docValuesCache.put(readerOrd, vals);\n      }\n\n      if (vals.advance(sortDoc.docId) == sortDoc.docId) {\n        val = (int) vals.longValue();\n      } else {\n        return false;\n      }\n    }\n    ew.put(this.field, val);\n    return true;\n  }\n","date":"2021-01-20 04:35:56","endLine":70,"groupId":"102382","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"write","params":"(SortDocsortDoc@LeafReaderContextreaderContext@MapWriter.EntryWriterew@intfieldIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/e5426d4a950020f7d99a5042e3becc755aa3f3.src","preCode":"  public boolean write(SortDoc sortDoc, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    int val;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        val = (int) sortValue.getCurrentValue();\n      } else { \r\n        return false;\n      }\n    } else {\n      \r\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      if (vals.advance(sortDoc.docId) == sortDoc.docId) {\n        val = (int) vals.longValue();\n      } else {\n        return false;\n      }\n    }\n    ew.put(this.field, val);\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/export/IntFieldWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2021-01-20 03:08:38","commitOrder":3,"curCode":"  public boolean write(SortDoc sortDoc, LeafReaderContext readerContext, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    Long val;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        val = (long) sortValue.getCurrentValue();\n      } else { \r\n        return false;\n      }\n    } else {\n      \r\n      int readerOrd = readerContext.ord;\n      NumericDocValues vals = null;\n      if(docValuesCache.containsKey(readerOrd)) {\n        NumericDocValues numericDocValues = docValuesCache.get(readerOrd);\n        if(numericDocValues.docID() < sortDoc.docId) {\n          \r\n          vals = numericDocValues;\n        }\n      }\n\n      if(vals == null) {\n        vals = DocValues.getNumeric(readerContext.reader(), this.field);\n        docValuesCache.put(readerOrd, vals);\n      }\n\n      if (vals.advance(sortDoc.docId) == sortDoc.docId) {\n        val = vals.longValue();\n      } else {\n        return false;\n      }\n    }\n    ew.put(this.field, new Date(val));\n    return true;\n  }\n","date":"2021-01-20 04:35:56","endLine":72,"groupId":"102382","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"write","params":"(SortDocsortDoc@LeafReaderContextreaderContext@MapWriter.EntryWriterew@intfieldIndex)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e4/4ba08ebf0f205cc30c9cdd3144d96f200002e9.src","preCode":"  public boolean write(SortDoc sortDoc, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    Long val;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        val = (long) sortValue.getCurrentValue();\n      } else { \r\n        return false;\n      }\n    } else {\n      \r\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      if (vals.advance(sortDoc.docId) == sortDoc.docId) {\n        val = vals.longValue();\n      } else {\n        return false;\n      }\n    }\n    ew.put(this.field, new Date(val));\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/export/DateFieldWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"64df5a65f01b56a04e4e01038a86ce4a82e5163a","commitMessage":"@@@SOLR-14608: Faster sorting for the /export handler\n","date":"2021-01-20 04:35:56","modifiedFileCount":"24","status":"M","submitter":"Joel Bernstein"}]
