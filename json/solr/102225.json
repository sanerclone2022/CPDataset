[{"authorTime":"2015-05-18 00:07:33","codes":[{"authorDate":"2015-05-18 00:07:33","commitOrder":3,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumericType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    }\n  }\n","date":"2015-05-18 00:07:33","endLine":59,"groupId":"38050","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/55/0c96c0e361e9fc72dfcf2f4b212726974174f6.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumericType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"MB"},{"authorDate":"2015-05-18 00:07:33","commitOrder":3,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumericType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2015-05-18 00:07:33","endLine":72,"groupId":"38050","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/ea1bef9e6c84b957c0e1b5082a596c1cbb2335.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumericType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"b1b8169c91b1c0231d6e08fd857d2772a0e90605","commitMessage":"@@@SOLR-7553: hll function for hyperloglog\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1679876 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-05-18 00:07:33","modifiedFileCount":"5","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2017-02-08 02:38:22","codes":[{"authorDate":"2017-02-08 02:38:22","commitOrder":4,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    }\n  }\n","date":"2017-02-08 02:38:22","endLine":57,"groupId":"38050","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5e/1e97c900ba25e7dd9e45dddb7457e3038028d2.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumericType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2017-02-08 02:38:22","commitOrder":4,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2017-02-08 02:38:22","endLine":67,"groupId":"38050","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/c95e86e96b792734caa4f33b9329cce48e6099.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumericType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"59c41e2a6c685dd9ac943c69d12e9bfe2a7d380e","commitMessage":"@@@SOLR-10011: Add NumberType getNumberType() to FieldType and deprecate LegacyNumericType getNumericType()\n\nModify references to getNumericType() to use the new getNumberType(). NumberType is shared for the different numeric implementations supported in Solr (TrieFields and PointFields).\nCC SOLR-8396\n","date":"2017-02-08 02:38:22","modifiedFileCount":"27","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2017-05-04 11:04:33","codes":[{"authorDate":"2017-05-04 11:04:33","commitOrder":5,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","date":"2017-05-04 11:04:33","endLine":57,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/75e5fc8fe0459a2425dcacb29e7092bd951ecb.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2017-05-04 11:04:33","commitOrder":5,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2017-05-04 11:04:33","endLine":67,"groupId":"38050","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/80/e2bc1fb1afb06e8cb8e5c6d6ee9ca47654c440.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, getArg(), numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"3a7aedcef9a6c9f854508629759bcb9b766d2b08","commitMessage":"@@@SOLR-10596: fix unique/hll docvalue iterator reuse\n","date":"2017-05-04 11:04:33","modifiedFileCount":"9","status":"M","submitter":"yonik"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","date":"2017-06-29 17:00:17","endLine":61,"groupId":"38050","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/db/a410ac3c452a598228c3a267a53e80837b5f77.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2017-06-29 17:00:17","endLine":72,"groupId":"38050","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@intnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3c/55329c64bd6d7aa12b1fb11bec7462783f86da.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-04-10 21:46:54","codes":[{"authorDate":"2020-04-10 21:46:54","commitOrder":7,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","date":"2020-04-10 22:00:20","endLine":62,"groupId":"38050","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@longnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/0c1a7eb1173c0f4bf8a79cbb3f78e3df5388a2.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2020-04-10 21:46:54","commitOrder":7,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2020-04-10 22:00:20","endLine":71,"groupId":"38050","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@longnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/7b2a2a78f84dc1a6ca9165d892f6a74b53d5a2.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"36b280bd0a21952ea54c7567f037eb48dc93205a","commitMessage":"@@@SOLR-11775: return long val for facet count in json facet\n\n* Long value is returned for any count related to json facets\n  irrespective of number of shards\n","date":"2020-04-10 22:00:20","modifiedFileCount":"33","status":"M","submitter":"Munendra S N"},{"authorTime":"2020-05-07 23:04:06","codes":[{"authorDate":"2020-05-07 23:04:06","commitOrder":8,"curCode":"  public SlotAcc createSlotAcc(FacetRequest.FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","date":"2020-05-07 23:04:06","endLine":62,"groupId":"38050","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetRequest.FacetContextfcontext@longnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c6/c520c6b0746a1a57955f42dbcd5fd824ea337b.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2020-05-07 23:04:06","commitOrder":8,"curCode":"  public SlotAcc createSlotAcc(FacetRequest.FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2020-05-07 23:04:06","endLine":71,"groupId":"38050","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetRequest.FacetContextfcontext@longnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/2d4a34de4feb8a3a951b86016c7de421e831be.src","preCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"31b350e8040cbe30c4e85b7fb82eab4b6afd81c7","commitMessage":"@@@SOLR-14426 Move auxiliary classes to nested classes (#1487)\n\n","date":"2020-05-07 23:04:06","modifiedFileCount":"67","status":"M","submitter":"Mike Drob"},{"authorTime":"2020-05-21 20:59:32","codes":[{"authorDate":"2020-05-21 20:59:32","commitOrder":9,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","date":"2020-05-21 20:59:32","endLine":62,"groupId":"102225","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@longnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7f/476d6ef8bb928329a77ea2e57c5c0f980dde85.src","preCode":"  public SlotAcc createSlotAcc(FacetRequest.FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2020-05-21 20:59:32","commitOrder":9,"curCode":"  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","date":"2020-05-21 20:59:32","endLine":71,"groupId":"102225","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createSlotAcc","params":"(FacetContextfcontext@longnumDocs@intnumSlots)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/66/5bdd95604ebc04854572f31497cf28c3bfb033.src","preCode":"  public SlotAcc createSlotAcc(FacetRequest.FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(getArg());\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      if (sf.getType().isPointField()) {\n        return new SortedNumericAcc(fcontext, getArg(), numSlots);\n      } else if (sf.hasDocValues()) {\n        return new UniqueMultiDvSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      } else {\n        return new UniqueMultivaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    } else {\n      if (sf.getType().getNumberType() != null) {\n        \r\n        return new NumericAcc(fcontext, getArg(), numSlots);\n      } else {\n        return new UniqueSinglevaluedSlotAcc(fcontext, sf, numSlots, fcontext.isShard() ? factory : null);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/HLLAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"9c066f60f1804c26db8be226429a0be046c5a4db","commitMessage":"@@@SOLR-14482: Fix or suppress warnings in solr/search/facet\n","date":"2020-05-21 20:59:32","modifiedFileCount":"57","status":"M","submitter":"Erick Erickson"}]
