[{"authorTime":"2014-10-16 17:41:43","codes":[{"authorDate":"2015-11-13 23:52:02","commitOrder":2,"curCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).longValue();\n    try {\n      if (val instanceof String) return Long.parseLong((String) val);\n    } catch (NumberFormatException e) {\n      Double v = Double.parseDouble((String) val);\n      return v.longValue();\n    }\n    return super.toNativeType(val);\n  }\n","date":"2015-11-13 23:52:02","endLine":63,"groupId":"45341","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toNativeType","params":"(Objectval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3e/b5de5df2497400ae655c765d4b8e4cb74b69e0.src","preCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).longValue();\n    try {\n      if (val instanceof String) return Long.parseLong((String) val);\n    } catch (NumberFormatException e) {\n      Double v = Double.parseDouble((String) val);\n      return v.longValue();\n    }\n    return super.toNativeType(val);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieLongField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2014-10-16 17:41:43","commitOrder":2,"curCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).intValue();\n    try {\n      if (val instanceof String) return Integer.parseInt((String) val);\n    } catch (NumberFormatException e) {\n      Float v = Float.parseFloat((String) val);\n      return v.intValue();\n    }\n    return super.toNativeType(val);\n  }\n","date":"2014-10-16 17:41:43","endLine":46,"groupId":"57715","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toNativeType","params":"(Objectval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/a33815ef51077ed6db7fc4e81157d6b8666ef0.src","preCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).intValue();\n    try {\n      if (val instanceof String) return Integer.parseInt((String) val);\n    } catch (NumberFormatException e) {\n      Float v = Float.parseFloat((String) val);\n      return v.intValue();\n    }\n    return super.toNativeType(val);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieIntField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"NB"}],"commitId":"56b0a46f103d69a7a93c5a5f5818949978148cf6","commitMessage":"@@@SOLR-8287: TrieDoubleField and TrieLongField now override toNativeType\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1714226 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-13 23:52:02","modifiedFileCount":"2","status":"M","submitter":"Christine Poerschke"},{"authorTime":"2019-01-08 12:27:48","codes":[{"authorDate":"2019-01-08 12:27:48","commitOrder":3,"curCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).longValue();\n    try {\n      if (val instanceof CharSequence) return Long.parseLong(val.toString());\n    } catch (NumberFormatException e) {\n      Double v = Double.parseDouble((String)val);\n      return v.longValue();\n    }\n    return super.toNativeType(val);\n  }\n","date":"2019-01-08 12:27:48","endLine":64,"groupId":"101968","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toNativeType","params":"(Objectval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/6d39320cc2d1c6564aeba4bbf6d2041791186f.src","preCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).longValue();\n    try {\n      if (val instanceof String) return Long.parseLong((String) val);\n    } catch (NumberFormatException e) {\n      Double v = Double.parseDouble((String) val);\n      return v.longValue();\n    }\n    return super.toNativeType(val);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieLongField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-01-08 12:27:48","commitOrder":3,"curCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).intValue();\n    try {\n      if (val instanceof CharSequence) return Integer.parseInt(val.toString());\n    } catch (NumberFormatException e) {\n      Float v = Float.parseFloat(val.toString());\n      return v.intValue();\n    }\n    return super.toNativeType(val);\n  }\n","date":"2019-01-08 12:27:48","endLine":64,"groupId":"101968","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toNativeType","params":"(Objectval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8a/cb66d59e0e24dddde85460a6f97348763990cb.src","preCode":"  public Object toNativeType(Object val) {\n    if(val==null) return null;\n    if (val instanceof Number) return ((Number) val).intValue();\n    try {\n      if (val instanceof String) return Integer.parseInt((String) val);\n    } catch (NumberFormatException e) {\n      Float v = Float.parseFloat((String) val);\n      return v.intValue();\n    }\n    return super.toNativeType(val);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieIntField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"3932a4cc6cc4782cecd8d5f23771e3478485e906","commitMessage":"@@@SOLR-12983: JavabinLoader should avoid creating String Objects and create UTF8CharSequence fields from byte[]\n","date":"2019-01-08 12:27:48","modifiedFileCount":"16","status":"M","submitter":"Noble Paul"}]
