[{"authorTime":"2017-03-07 11:11:47","codes":[{"authorDate":"2017-01-22 06:57:11","commitOrder":2,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = Long.parseLong(min);\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = Long.parseLong(max);\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-01-22 06:57:11","endLine":85,"groupId":"11056","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/80/f3cf7765e43c9a03f1accb6e4a45250946f0f4.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = Long.parseLong(min);\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = Long.parseLong(max);\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/LongPointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"NB"},{"authorDate":"2017-03-07 11:11:47","commitOrder":2,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive, boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = DateMathParser.parseMath(null, min).getTime();\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = DateMathParser.parseMath(null, max).getTime();\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-03-07 11:11:47","endLine":83,"groupId":"30567","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/18/bf651569cae5607b0758e41791d4a37f7be687.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive, boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = DateMathParser.parseMath(null, min).getTime();\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = DateMathParser.parseMath(null, max).getTime();\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/DatePointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"3131ec2d99401c1fd1fc33a00343a59a78ab6445","commitMessage":"@@@SOLR-9986: Implement DatePointField\n","date":"2017-03-07 11:11:47","modifiedFileCount":"12","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2017-03-07 11:11:47","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":3,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = parseLongFromUser(field.getName(), min);\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = parseLongFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-06-29 17:00:17","endLine":80,"groupId":"11056","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/d8a3a03b42e23843415b9d57322f2b0b541efc.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = Long.parseLong(min);\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = Long.parseLong(max);\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/LongPointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2017-03-07 11:11:47","commitOrder":3,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive, boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = DateMathParser.parseMath(null, min).getTime();\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = DateMathParser.parseMath(null, max).getTime();\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-03-07 11:11:47","endLine":83,"groupId":"30567","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/18/bf651569cae5607b0758e41791d4a37f7be687.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive, boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = DateMathParser.parseMath(null, min).getTime();\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = DateMathParser.parseMath(null, max).getTime();\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/DatePointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-07-19 05:32:11","codes":[{"authorDate":"2017-07-19 05:32:11","commitOrder":4,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = parseLongFromUser(field.getName(), min);\n      if (!minInclusive) {\n        if (actualMin == Long.MAX_VALUE) return new MatchNoDocsQuery();\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = parseLongFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        if (actualMax == Long.MIN_VALUE) return new MatchNoDocsQuery();\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-07-19 05:32:11","endLine":83,"groupId":"101969","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7e/3f5e19825389282f5fde31ff35171add07d44a.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = parseLongFromUser(field.getName(), min);\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = parseLongFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/LongPointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-07-19 05:32:11","commitOrder":4,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive, boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = DateMathParser.parseMath(null, min).getTime();\n      if (!minInclusive) {\n        if (actualMin == Long.MAX_VALUE) return new MatchNoDocsQuery();\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = DateMathParser.parseMath(null, max).getTime();\n      if (!maxInclusive) {\n        if (actualMax == Long.MIN_VALUE) return new MatchNoDocsQuery();\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-07-19 05:32:11","endLine":141,"groupId":"101969","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e4/3f70639f635cb6a6bacbaf9be14655e0cf9a60.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive, boolean maxInclusive) {\n    long actualMin, actualMax;\n    if (min == null) {\n      actualMin = Long.MIN_VALUE;\n    } else {\n      actualMin = DateMathParser.parseMath(null, min).getTime();\n      if (!minInclusive) {\n        actualMin++;\n      }\n    }\n    if (max == null) {\n      actualMax = Long.MAX_VALUE;\n    } else {\n      actualMax = DateMathParser.parseMath(null, max).getTime();\n      if (!maxInclusive) {\n        actualMax--;\n      }\n    }\n    return LongPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/DatePointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"beec66ece79bde6fd091fa40b5d2ce08ad65365c","commitMessage":"@@@SOLR-11057: Fix overflow in point range queries when querying the type limits\n","date":"2017-07-19 05:32:11","modifiedFileCount":"4","status":"M","submitter":"Tomas Fernandez Lobbe"}]
