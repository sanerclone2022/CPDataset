[{"authorTime":"2017-04-12 01:22:23","codes":[{"authorDate":"2017-04-12 01:22:23","commitOrder":1,"curCode":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n","date":"2017-04-12 01:22:23","endLine":83,"groupId":"1579","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEntryListIncluded","params":"(booleancheckJmx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3a/e9c472073b12aa6bd46eb1c82549558bf2c0a2.src","preCode":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2017-04-12 01:22:23","commitOrder":1,"curCode":"  private void assertEntryListNotIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNull(metrics.get(\"total_size\"));\n    assertNull(metrics.get(\"entry#0\"));\n  }\n","date":"2017-04-12 01:22:23","endLine":96,"groupId":"1579","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEntryListNotIncluded","params":"(booleancheckJmx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3a/e9c472073b12aa6bd46eb1c82549558bf2c0a2.src","preCode":"  private void assertEntryListNotIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNull(metrics.get(\"total_size\"));\n    assertNull(metrics.get(\"entry#0\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"e30cc70fddcdd6fddb5eedf9f38e77fcb3f33bd1","commitMessage":"@@@SOLR-9959: SolrInfoMBean-s category and hierarchy cleanup.\n","date":"2017-04-12 01:22:23","modifiedFileCount":"132","status":"B","submitter":"Andrzej Bialecki"},{"authorTime":"2018-03-29 22:37:45","codes":[{"authorDate":"2018-03-29 22:37:45","commitOrder":2,"curCode":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n","date":"2018-03-29 22:37:45","endLine":83,"groupId":"27168","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEntryListIncluded","params":"(booleancheckJmx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/ace4b8894c82622cc8a132720f1c6cc2b8f050.src","preCode":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-03-29 22:37:45","commitOrder":2,"curCode":"  private void assertEntryListNotIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNull(metrics.get(\"total_size\"));\n    assertNull(metrics.get(\"entry#0\"));\n  }\n","date":"2018-03-29 22:37:45","endLine":96,"groupId":"27168","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEntryListNotIncluded","params":"(booleancheckJmx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/ace4b8894c82622cc8a132720f1c6cc2b8f050.src","preCode":"  private void assertEntryListNotIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNull(metrics.get(\"total_size\"));\n    assertNull(metrics.get(\"entry#0\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"358e59596d17ba34452ea923e048afee6233d597","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-03-29 22:37:45","modifiedFileCount":"62","status":"M","submitter":"Karl Wright"},{"authorTime":"2019-10-23 03:23:48","codes":[{"authorDate":"2019-10-23 03:23:48","commitOrder":3,"curCode":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    SolrMetricsContext solrMetricsContext = new SolrMetricsContext(metricManager, registryName, \"foo\");\n    mbean.initializeMetrics(solrMetricsContext, null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n","date":"2019-10-23 03:23:48","endLine":85,"groupId":"103258","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertEntryListIncluded","params":"(booleancheckJmx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/49/b754ff929373b66cd186c7c4a09764bc61f39f.src","preCode":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-10-23 03:23:48","commitOrder":3,"curCode":"  private void assertEntryListNotIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    SolrMetricsContext solrMetricsContext = new SolrMetricsContext(metricManager, registryName, \"foo\");\n    mbean.initializeMetrics(solrMetricsContext, null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNull(metrics.get(\"total_size\"));\n    assertNull(metrics.get(\"entry#0\"));\n  }\n","date":"2019-10-23 03:23:48","endLine":99,"groupId":"103258","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertEntryListNotIncluded","params":"(booleancheckJmx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/49/b754ff929373b66cd186c7c4a09764bc61f39f.src","preCode":"  private void assertEntryListNotIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNull(metrics.get(\"total_size\"));\n    assertNull(metrics.get(\"entry#0\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"1d7cd6157570ca12ba3480b082479a21dd5aa660","commitMessage":"@@@SOLR-13854: Remove deprecated SolrMetricProducer.initializeMetrics API.\n","date":"2019-10-23 03:23:48","modifiedFileCount":"27","status":"M","submitter":"Andrzej Bialecki"}]
