[{"authorTime":"2014-06-12 20:18:21","codes":[{"authorDate":"2014-06-12 20:18:21","commitOrder":1,"curCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument1.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2014-06-12 20:18:21","endLine":1925,"groupId":"41348","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"compareSolrDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/c0cb2f53c773100c03060ab2f90050197be549.src","preCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument1.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1876,"status":"B"},{"authorDate":"2014-06-12 20:18:21","commitOrder":1,"curCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n    if (Float.compare(sdoc1.getDocumentBoost(), sdoc2.getDocumentBoost()) != 0) {\n      return false;\n    }\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2014-06-12 20:18:21","endLine":2002,"groupId":"17580","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"compareSolrInputDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/c0cb2f53c773100c03060ab2f90050197be549.src","preCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n    if (Float.compare(sdoc1.getDocumentBoost(), sdoc2.getDocumentBoost()) != 0) {\n      return false;\n    }\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1951,"status":"B"}],"commitId":"51412938e5ad899287cce18ce7a728f0ed864ce5","commitMessage":"@@@SOLR-6048 the assert was not really failing the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1602138 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-12 20:18:21","modifiedFileCount":"3","status":"B","submitter":"Noble Paul"},{"authorTime":"2014-06-12 20:18:21","codes":[{"authorDate":"2016-12-17 07:41:02","commitOrder":2,"curCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2016-12-17 07:41:02","endLine":1987,"groupId":"41348","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"compareSolrDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/7679db08fc45dcd42e20d5928d110a46fff874.src","preCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument1.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1938,"status":"M"},{"authorDate":"2014-06-12 20:18:21","commitOrder":2,"curCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n    if (Float.compare(sdoc1.getDocumentBoost(), sdoc2.getDocumentBoost()) != 0) {\n      return false;\n    }\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2014-06-12 20:18:21","endLine":2002,"groupId":"17580","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"compareSolrInputDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/c0cb2f53c773100c03060ab2f90050197be549.src","preCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n    if (Float.compare(sdoc1.getDocumentBoost(), sdoc2.getDocumentBoost()) != 0) {\n      return false;\n    }\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1951,"status":"N"}],"commitId":"dcf202a95813d72b1fd56daa7e30cbf413b891b9","commitMessage":"@@@SOLR-9873: tests - fix SolrTestCaseJ4.compareSolrDocument num fields comparison\n","date":"2016-12-17 07:41:02","modifiedFileCount":"1","status":"M","submitter":"yonik"},{"authorTime":"2017-03-03 02:18:16","codes":[{"authorDate":"2016-12-17 07:41:02","commitOrder":3,"curCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2016-12-17 07:41:02","endLine":1987,"groupId":"41348","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"compareSolrDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/7679db08fc45dcd42e20d5928d110a46fff874.src","preCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1938,"status":"N"},{"authorDate":"2017-03-03 02:18:16","commitOrder":3,"curCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":2200,"groupId":"17580","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"compareSolrInputDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/c269cc59d8e21559790365e66d2d091d4be79d.src","preCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n    if (Float.compare(sdoc1.getDocumentBoost(), sdoc2.getDocumentBoost()) != 0) {\n      return false;\n    }\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2152,"status":"M"}],"commitId":"8ed2b764ed4d4d5203b5df1e16fdc1ffd640322c","commitMessage":"@@@LUCENE-6819: Remove index-time boosts.\n","date":"2017-03-03 02:18:16","modifiedFileCount":"113","status":"M","submitter":"Adrien Grand"},{"authorTime":"2018-06-11 22:48:30","codes":[{"authorDate":"2016-12-17 07:41:02","commitOrder":4,"curCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2016-12-17 07:41:02","endLine":1987,"groupId":"41348","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"compareSolrDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/7679db08fc45dcd42e20d5928d110a46fff874.src","preCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1938,"status":"N"},{"authorDate":"2018-06-11 22:48:30","commitOrder":4,"curCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    while (iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2)) {\n        return false;\n      }\n\n      if(!(sdoc1.get(key1).getFirstValue() instanceof SolrInputDocument)) {\n        if(!val1.equals(val2)) {\n          return false;\n        }\n      } else {\n        if (!(sdoc2.get(key2).getFirstValue() instanceof SolrInputDocument)) {\n          return false;\n        }\n        Collection col1 = (Collection) val1;\n        Collection col2 = (Collection) val2;\n        if (col1.size() != col2.size()) {\n          return false;\n        }\n        Iterator<SolrInputDocument> colIter1 = col1.iterator();\n        Iterator<SolrInputDocument> colIter2 = col2.iterator();\n        while (colIter1.hasNext()) {\n          if (!compareSolrInputDocument(colIter1.next(), colIter2.next())) {\n            return false;\n          }\n        }\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2018-06-11 22:48:30","endLine":2235,"groupId":"34186","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"compareSolrInputDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/e2cae4c680298f34755e5e77b4ba9e4b6cf790.src","preCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2165,"status":"M"}],"commitId":"8095139da3598e9f76c8d960855535553b753ee9","commitMessage":"@@@SOLR-12361: Allow nested child documents to be in field values of a SolrInputDocument.\n* AddUpdateCommand and it's relationship with DirectUpdateHandler2 was reworked substantially.\n\nFixes #385\n","date":"2018-06-11 22:48:30","modifiedFileCount":"12","status":"M","submitter":"David Smiley"},{"authorTime":"2020-06-11 06:05:50","codes":[{"authorDate":"2016-12-17 07:41:02","commitOrder":5,"curCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2016-12-17 07:41:02","endLine":1987,"groupId":"101865","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"compareSolrDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/7679db08fc45dcd42e20d5928d110a46fff874.src","preCode":"  public boolean compareSolrDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrDocument)  || !(actual instanceof SolrDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocument solrDocument1 = (SolrDocument) expected;\n    SolrDocument solrDocument2 = (SolrDocument) actual;\n\n    if(solrDocument1.getFieldNames().size() != solrDocument2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = solrDocument1.getFieldNames().iterator();\n    Iterator<String> iter2 = solrDocument2.getFieldNames().iterator();\n\n    if(iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = solrDocument1.getFieldValues(key1);\n      Object val2 = solrDocument2.getFieldValues(key2);\n\n      if(!key1.equals(key2) || !val1.equals(val2)) {\n        return false;\n      }\n    }\n\n    if(solrDocument1.getChildDocuments() == null && solrDocument2.getChildDocuments() == null) {\n      return true;\n    }\n    if(solrDocument1.getChildDocuments() == null || solrDocument2.getChildDocuments() == null) {\n      return false;\n    } else if(solrDocument1.getChildDocuments().size() != solrDocument2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrDocument> childDocsIter1 = solrDocument1.getChildDocuments().iterator();\n      Iterator<SolrDocument> childDocsIter2 = solrDocument2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1938,"status":"N"},{"authorDate":"2020-06-11 06:05:50","commitOrder":5,"curCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    while (iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2)) {\n        return false;\n      }\n\n      if(!(sdoc1.get(key1).getFirstValue() instanceof SolrInputDocument)) {\n        if(!val1.equals(val2)) {\n          return false;\n        }\n      } else {\n        if (!(sdoc2.get(key2).getFirstValue() instanceof SolrInputDocument)) {\n          return false;\n        }\n        @SuppressWarnings({\"rawtypes\"})\n        Collection col1 = (Collection) val1;\n        @SuppressWarnings({\"rawtypes\"})\n        Collection col2 = (Collection) val2;\n        if (col1.size() != col2.size()) {\n          return false;\n        }\n        @SuppressWarnings({\"unchecked\"})\n        Iterator<SolrInputDocument> colIter1 = col1.iterator();\n        @SuppressWarnings({\"unchecked\"})\n        Iterator<SolrInputDocument> colIter2 = col2.iterator();\n        while (colIter1.hasNext()) {\n          if (!compareSolrInputDocument(colIter1.next(), colIter2.next())) {\n            return false;\n          }\n        }\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","date":"2020-06-11 06:05:50","endLine":2413,"groupId":"101865","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"compareSolrInputDocument","params":"(Objectexpected@Objectactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d7/0013be34940fcd641f29c2f307c1f73e35b36c.src","preCode":"  public boolean compareSolrInputDocument(Object expected, Object actual) {\n\n    if (!(expected instanceof SolrInputDocument) || !(actual instanceof SolrInputDocument)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrInputDocument sdoc1 = (SolrInputDocument) expected;\n    SolrInputDocument sdoc2 = (SolrInputDocument) actual;\n\n    if(sdoc1.getFieldNames().size() != sdoc2.getFieldNames().size()) {\n      return false;\n    }\n\n    Iterator<String> iter1 = sdoc1.getFieldNames().iterator();\n    Iterator<String> iter2 = sdoc2.getFieldNames().iterator();\n\n    while (iter1.hasNext()) {\n      String key1 = iter1.next();\n      String key2 = iter2.next();\n\n      Object val1 = sdoc1.getFieldValues(key1);\n      Object val2 = sdoc2.getFieldValues(key2);\n\n      if(!key1.equals(key2)) {\n        return false;\n      }\n\n      if(!(sdoc1.get(key1).getFirstValue() instanceof SolrInputDocument)) {\n        if(!val1.equals(val2)) {\n          return false;\n        }\n      } else {\n        if (!(sdoc2.get(key2).getFirstValue() instanceof SolrInputDocument)) {\n          return false;\n        }\n        Collection col1 = (Collection) val1;\n        Collection col2 = (Collection) val2;\n        if (col1.size() != col2.size()) {\n          return false;\n        }\n        Iterator<SolrInputDocument> colIter1 = col1.iterator();\n        Iterator<SolrInputDocument> colIter2 = col2.iterator();\n        while (colIter1.hasNext()) {\n          if (!compareSolrInputDocument(colIter1.next(), colIter2.next())) {\n            return false;\n          }\n        }\n      }\n    }\n    if(sdoc1.getChildDocuments() == null && sdoc2.getChildDocuments() == null) {\n      return true;\n    }\n    if(sdoc1.getChildDocuments() == null || sdoc2.getChildDocuments() == null) {\n      return false;\n    } else if(sdoc1.getChildDocuments().size() != sdoc2.getChildDocuments().size()) {\n      return false;\n    } else {\n      Iterator<SolrInputDocument> childDocsIter1 = sdoc1.getChildDocuments().iterator();\n      Iterator<SolrInputDocument> childDocsIter2 = sdoc2.getChildDocuments().iterator();\n      while(childDocsIter1.hasNext()) {\n        if(!compareSolrInputDocument(childDocsIter1.next(), childDocsIter2.next())) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2339,"status":"M"}],"commitId":"07a203628ea46308612f4bb60686c313a6e4d75e","commitMessage":"@@@SOLR-14455: Fix or suppress warnings in solr/test-framework\n","date":"2020-06-11 06:05:50","modifiedFileCount":"12","status":"M","submitter":"Erick Erickson"}]
