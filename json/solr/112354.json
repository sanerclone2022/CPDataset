[{"authorTime":"2012-01-06 09:25:12","codes":[{"authorDate":"2012-01-06 09:25:12","commitOrder":1,"curCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","date":"2012-01-06 09:25:12","endLine":186,"groupId":"53386","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldFlags","params":"(IndexableFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/0074a19b98d919ea044fdcf363694ea14e0778.src","preCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2012-01-06 09:25:12","commitOrder":1,"curCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","date":"2012-01-06 09:25:12","endLine":216,"groupId":"53384","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFieldFlags","params":"(SchemaFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/0074a19b98d919ea044fdcf363694ea14e0778.src","preCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"}],"commitId":"c0959adbfcbcdc8363c420d3564bd34905757272","commitMessage":"@@@SOLR-1931.  speeding up the LukeRequestHandler\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1227924 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-06 09:25:12","modifiedFileCount":"3","status":"B","submitter":"Erick Erickson"},{"authorTime":"2013-03-03 09:04:47","codes":[{"authorDate":"2012-01-06 09:25:12","commitOrder":2,"curCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","date":"2012-01-06 09:25:12","endLine":186,"groupId":"53386","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldFlags","params":"(IndexableFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/0074a19b98d919ea044fdcf363694ea14e0778.src","preCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"N"},{"authorDate":"2013-03-03 09:04:47","commitOrder":2,"curCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","date":"2013-03-03 09:04:47","endLine":238,"groupId":"53384","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFieldFlags","params":"(SchemaFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/5d8ae3b4a119eda2be041af1e48231dbfe2bfe.src","preCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"}],"commitId":"fa0094035df7bdaa130f50c3e1a7355ca8b336f1","commitMessage":"@@@SOLR-4523: Show if fields have docvalues or highlighting offsets in admin UI\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1451970 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-03 09:04:47","modifiedFileCount":"2","status":"M","submitter":"Robert Muir"},{"authorTime":"2015-03-27 10:01:38","codes":[{"authorDate":"2012-01-06 09:25:12","commitOrder":3,"curCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","date":"2012-01-06 09:25:12","endLine":186,"groupId":"53386","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldFlags","params":"(IndexableFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/0074a19b98d919ea044fdcf363694ea14e0778.src","preCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"N"},{"authorDate":"2015-03-27 10:01:38","commitOrder":3,"curCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPayloads() )  ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","date":"2015-03-27 10:01:38","endLine":259,"groupId":"11343","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getFieldFlags","params":"(SchemaFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/90/68d3ee632d6f1ca86e6dc5288d48952b03cff8.src","preCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"}],"commitId":"ef0209189ee46ae6e62ecb6cf73b933390c56930","commitMessage":"@@@SOLR-5911: term vector payload support\nin schema & TermVectorComponent & LukeRequestHandler\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1669492 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-27 10:01:38","modifiedFileCount":"12","status":"M","submitter":"David Wayne Smiley"},{"authorTime":"2015-03-27 10:01:38","codes":[{"authorDate":"2016-01-18 03:54:50","commitOrder":4,"curCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexOptions() != IndexOptions.NONE)                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().docValuesType() != DocValuesType.NONE)        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPayloads())   ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n    \n    flags.append((f != null && DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS == opts) ?\n        FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","date":"2016-01-18 03:54:50","endLine":229,"groupId":"5187","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldFlags","params":"(IndexableFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/cc2bfd30855ba28074a9aa261290a80107c53e.src","preCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexed())                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS_ONLY == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2015-03-27 10:01:38","commitOrder":4,"curCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPayloads() )  ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","date":"2015-03-27 10:01:38","endLine":259,"groupId":"11343","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getFieldFlags","params":"(SchemaFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/90/68d3ee632d6f1ca86e6dc5288d48952b03cff8.src","preCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPayloads() )  ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"N"}],"commitId":"24c46305bd8f335c3d0e501a33dd3da82732c49e","commitMessage":"@@@LUCENE-6971: remove StorableField.  StoredDocument\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1725117 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-18 03:54:50","modifiedFileCount":"167","status":"M","submitter":"Michael McCandless"},{"authorTime":"2018-11-09 23:30:04","codes":[{"authorDate":"2018-11-09 23:30:04","commitOrder":5,"curCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexOptions() != IndexOptions.NONE)                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().docValuesType() != DocValuesType.NONE)        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (false)                                          ? FieldFlag.UNINVERTIBLE.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPayloads())   ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n    \n    flags.append((f != null && DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS == opts) ?\n        FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","date":"2018-11-09 23:30:04","endLine":230,"groupId":"112354","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldFlags","params":"(IndexableFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fe/a31ce08a515d02e485acb68e6a7f823cea0ddf.src","preCode":"  private static String getFieldFlags( IndexableField f )\n  {\n    IndexOptions opts = (f == null) ? null : f.fieldType().indexOptions();\n\n    StringBuilder flags = new StringBuilder();\n\n    flags.append( (f != null && f.fieldType().indexOptions() != IndexOptions.NONE)                     ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().tokenized())                   ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().stored())                      ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().docValuesType() != DocValuesType.NONE)        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (false)                                          ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' ); \r\n    flags.append( (f != null && f.fieldType().storeTermVectors())            ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorOffsets())   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPositions()) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().storeTermVectorPayloads())   ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.fieldType().omitNorms())                  ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n\n    flags.append( (f != null && DOCS == opts ) ?\n        FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n\n    flags.append((f != null && DOCS_AND_FREQS == opts) ?\n        FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-');\n    \n    flags.append((f != null && DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS == opts) ?\n        FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-');\n\n    flags.append( (f != null && f.getClass().getSimpleName().equals(\"LazyField\")) ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.binaryValue()!=null)                      ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' ); \r\n    flags.append( (false)                                          ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' ); \r\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2018-11-09 23:30:04","commitOrder":5,"curCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.isUninvertible())      ? FieldFlag.UNINVERTIBLE.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPayloads() )  ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","date":"2018-11-09 23:30:04","endLine":264,"groupId":"112354","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getFieldFlags","params":"(SchemaFieldf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fe/a31ce08a515d02e485acb68e6a7f823cea0ddf.src","preCode":"  private static String getFieldFlags( SchemaField f )\n  {\n    FieldType t = (f==null) ? null : f.getType();\n\n    \r\n    boolean lazy = false; \r\n    boolean binary = false; \r\n\n    StringBuilder flags = new StringBuilder();\n    flags.append( (f != null && f.indexed())             ? FieldFlag.INDEXED.getAbbreviation() : '-' );\n    flags.append( (t != null && t.isTokenized())         ? FieldFlag.TOKENIZED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.stored())              ? FieldFlag.STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.hasDocValues())        ? FieldFlag.DOC_VALUES.getAbbreviation() : \"-\" );\n    flags.append( (f != null && f.multiValued())         ? FieldFlag.MULTI_VALUED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermVector() )    ? FieldFlag.TERM_VECTOR_STORED.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermOffsets() )   ? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPositions() ) ? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeTermPayloads() )  ? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitNorms())           ? FieldFlag.OMIT_NORMS.getAbbreviation() : '-' );\n    flags.append( (f != null &&\n        f.omitTermFreqAndPositions() )        ? FieldFlag.OMIT_TF.getAbbreviation() : '-' );\n    flags.append( (f != null && f.omitPositions() )      ? FieldFlag.OMIT_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (f != null && f.storeOffsetsWithPositions() )      ? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation() : '-' );\n    flags.append( (lazy)                                 ? FieldFlag.LAZY.getAbbreviation() : '-' );\n    flags.append( (binary)                               ? FieldFlag.BINARY.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingFirst() )   ? FieldFlag.SORT_MISSING_FIRST.getAbbreviation() : '-' );\n    flags.append( (f != null && f.sortMissingLast() )    ? FieldFlag.SORT_MISSING_LAST.getAbbreviation() : '-' );\n    return flags.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"}],"commitId":"77a4bfaa90637cd3d9a8a2ef4889e163dab143aa","commitMessage":"@@@SOLR-12962: Added a new 'uninvertible' option for fields and fieldtypes. This defaults to 'true' for backcompat allowing a FieldCache to be built for indexed fields as needed.  but users are encouraged to set this to false (using docValues as needed) to reduce the risk of large fluxuations in heap size due to unexpected attempts to sort/facet/function on non-docValue fields.\n","date":"2018-11-09 23:30:04","modifiedFileCount":"22","status":"M","submitter":"Chris Hostetter"}]
