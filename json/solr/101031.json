[{"authorTime":"2019-08-29 21:11:51","codes":[{"authorDate":"2019-10-07 20:26:11","commitOrder":2,"curCode":"  public static void beforeClass() throws Exception {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, COLLECTION_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", COLLECTION_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    final String config = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/solrconfig.xml\";\n    final String schema = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/managed-schema\";\n    initCore(config, schema, tempSolrHome.getAbsolutePath(), COLLECTION_NAME);\n\n    client = new EmbeddedSolrServer(h.getCoreContainer(), COLLECTION_NAME) {\n      @Override\n      public void close() {\n        \r\n      }\n    };\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(client);\n    assertEquals(0, updateResponse.getStatus());\n  }\n","date":"2019-10-07 20:27:29","endLine":91,"groupId":"30039","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/60/6debb56d48c74165b2a66454c92a8223c206d2.src","preCode":"  public static void beforeClass() throws Exception {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, COLLECTION_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", COLLECTION_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    final String config = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/solrconfig.xml\";\n    final String schema = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/managed-schema\";\n    initCore(config, schema, tempSolrHome.getAbsolutePath(), COLLECTION_NAME);\n\n    client = new EmbeddedSolrServer(h.getCoreContainer(), COLLECTION_NAME) {\n      @Override\n      public void close() {\n        \r\n      }\n    };\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(client);\n    assertEquals(0, updateResponse.getStatus());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingEmbeddedTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2019-08-29 21:11:51","commitOrder":2,"curCode":"  public static String legacyExampleCollection1SolrHome() throws IOException {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n    if (sourceHome == null)\n      throw new IllegalStateException(\"No source home! Cannot create the legacy example solr home directory.\");\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, DEFAULT_CORE_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_CORE_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    return tempSolrHome.getAbsolutePath();\n  }\n","date":"2019-08-29 21:52:46","endLine":158,"groupId":"30039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"legacyExampleCollection1SolrHome","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8d/f8dea8ebf606b4d5b84d44939deebcf1ac879e.src","preCode":"  public static String legacyExampleCollection1SolrHome() throws IOException {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n    if (sourceHome == null)\n      throw new IllegalStateException(\"No source home! Cannot create the legacy example solr home directory.\");\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, DEFAULT_CORE_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_CORE_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    return tempSolrHome.getAbsolutePath();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/EmbeddedSolrServerTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"NB"}],"commitId":"24afd959024999c4e21b6e1c22bc9a5d126e6725","commitMessage":"@@@SOLR-13539: Improve atomic-update test coverage\n\nCloses #665\n","date":"2019-10-07 20:27:29","modifiedFileCount":"2","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2019-08-29 21:11:51","codes":[{"authorDate":"2021-01-18 20:45:47","commitOrder":3,"curCode":"  public static void beforeClass() throws Exception {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, COLLECTION_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", COLLECTION_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    final String config = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/solrconfig.xml\";\n    final String schema = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/managed-schema\";\n    initCore(config, schema, tempSolrHome.getAbsolutePath(), COLLECTION_NAME);\n\n    client = new EmbeddedSolrServer(h.getCoreContainer(), COLLECTION_NAME);\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(client);\n    assertEquals(0, updateResponse.getStatus());\n  }\n","date":"2021-01-30 01:15:22","endLine":86,"groupId":"101031","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/d4f1e35de173b9fe3a379f24e89f10ade2e9b9.src","preCode":"  public static void beforeClass() throws Exception {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, COLLECTION_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", COLLECTION_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    final String config = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/solrconfig.xml\";\n    final String schema = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/managed-schema\";\n    initCore(config, schema, tempSolrHome.getAbsolutePath(), COLLECTION_NAME);\n\n    client = new EmbeddedSolrServer(h.getCoreContainer(), COLLECTION_NAME) {\n      @Override\n      public void close() {\n        \r\n      }\n    };\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(client);\n    assertEquals(0, updateResponse.getStatus());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingEmbeddedTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-08-29 21:11:51","commitOrder":3,"curCode":"  public static String legacyExampleCollection1SolrHome() throws IOException {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n    if (sourceHome == null)\n      throw new IllegalStateException(\"No source home! Cannot create the legacy example solr home directory.\");\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, DEFAULT_CORE_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_CORE_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    return tempSolrHome.getAbsolutePath();\n  }\n","date":"2019-08-29 21:52:46","endLine":158,"groupId":"101031","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"legacyExampleCollection1SolrHome","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8d/f8dea8ebf606b4d5b84d44939deebcf1ac879e.src","preCode":"  public static String legacyExampleCollection1SolrHome() throws IOException {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n    if (sourceHome == null)\n      throw new IllegalStateException(\"No source home! Cannot create the legacy example solr home directory.\");\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, DEFAULT_CORE_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_CORE_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    return tempSolrHome.getAbsolutePath();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/EmbeddedSolrServerTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"N"}],"commitId":"715caaae52ab3ab548d37e18a173b7d744054257","commitMessage":"@@@SOLR-15085 Prevent EmbeddedSolrServer calling shutdown on a CoreContainer that was passed to it\n","date":"2021-01-30 01:15:22","modifiedFileCount":"6","status":"M","submitter":"Tim Owen"}]
