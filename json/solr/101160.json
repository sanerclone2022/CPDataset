[{"authorTime":"2015-03-10 09:38:57","codes":[{"authorDate":"2021-01-08 00:17:38","commitOrder":2,"curCode":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    MetricsQueryTemplate that = (MetricsQueryTemplate) o;\n    return name.equals(that.name) &&\n        Objects.equals(defaultType, that.defaultType) &&\n        template.equals(that.template);\n  }\n","date":"2021-01-08 00:17:38","endLine":123,"groupId":"40911","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0b/89455b1b5c17b554d189a880253e5edb40cd9a.src","preCode":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    MetricsQueryTemplate that = (MetricsQueryTemplate) o;\n    return name.equals(that.name) &&\n        Objects.equals(defaultType, that.defaultType) &&\n        template.equals(that.template);\n  }\n","realPath":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsQueryTemplate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2015-03-10 09:38:57","commitOrder":2,"curCode":"    public boolean equals(Object o) {\n      if (o instanceof HashQuery) {\n        HashQuery h = (HashQuery)o;\n        if(keysParam.equals(h.keysParam) && workers == h.workers && worker == h.worker && getBoost() == h.getBoost()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n","date":"2015-03-10 09:38:57","endLine":144,"groupId":"35546","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8f/dbf11d8945dbb9e6956f9b8cbe534ec710d7f8.src","preCode":"    public boolean equals(Object o) {\n      if (o instanceof HashQuery) {\n        HashQuery h = (HashQuery)o;\n        if(keysParam.equals(h.keysParam) && workers == h.workers && worker == h.worker && getBoost() == h.getBoost()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"NB"}],"commitId":"8b55fb868de1fb8b82b8663d19285a63ac9ee7af","commitMessage":"@@@SOLR-15059: Improve query performance monitoring (#2165)\n\n","date":"2021-01-08 00:17:38","modifiedFileCount":"2","status":"M","submitter":"Timothy Potter"},{"authorTime":"2021-03-05 12:43:16","codes":[{"authorDate":"2021-01-08 00:17:38","commitOrder":3,"curCode":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    MetricsQueryTemplate that = (MetricsQueryTemplate) o;\n    return name.equals(that.name) &&\n        Objects.equals(defaultType, that.defaultType) &&\n        template.equals(that.template);\n  }\n","date":"2021-01-08 00:17:38","endLine":123,"groupId":"101160","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0b/89455b1b5c17b554d189a880253e5edb40cd9a.src","preCode":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    MetricsQueryTemplate that = (MetricsQueryTemplate) o;\n    return name.equals(that.name) &&\n        Objects.equals(defaultType, that.defaultType) &&\n        template.equals(that.template);\n  }\n","realPath":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsQueryTemplate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"N"},{"authorDate":"2021-03-05 12:43:16","commitOrder":3,"curCode":"    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n      HashPartitionPredicate that = (HashPartitionPredicate) o;\n      return workers == that.workers &&\n          worker == that.worker;\n    }\n","date":"2021-03-05 12:43:16","endLine":212,"groupId":"101160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8b/f227d6d11c03ed5116aa9dfa8e805a35cc4e4f.src","preCode":"    public boolean equals(Object o) {\n      if (o instanceof HashQuery) {\n        HashQuery h = (HashQuery)o;\n        if(keysParam.equals(h.keysParam) && workers == h.workers && worker == h.worker && getBoost() == h.getBoost()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"ddbd3b88ec8a9c3acc55e351f94f370a11f514b5","commitMessage":"@@@SOLR-15185: Optimize Hash QParser (#1524)\n\nused in parallel() streaming expression.  Hash algorithm is different.\n* Simpler\n* Don't use Filter (to be removed)\n* Do use TwoPhaseIterator.  not PostFilter\n* Don't pre-compute matching docs (wasteful)\n* Support more fields.  and more field types\n* Faster hash on Strings (avoid Char conversion)\n* Stronger hash when using multiple fields","date":"2021-03-05 12:43:16","modifiedFileCount":"2","status":"M","submitter":"David Smiley"}]
