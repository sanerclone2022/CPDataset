[{"authorTime":"2014-05-06 02:54:08","codes":[{"authorDate":"2014-07-05 01:54:53","commitOrder":2,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2014-07-05 01:54:53","endLine":95,"groupId":"43499","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/f65ad55dae82e823a9c4f77f683cc091eb51c6.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2014-05-06 02:54:08","commitOrder":2,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2014-05-06 02:54:08","endLine":89,"groupId":"43499","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/67/fd8594f5916e88795f4f018287f73d0cb37d2a.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"NB"}],"commitId":"271576ed0f81421b0717f6da23bf3371c6c1bd87","commitMessage":"@@@SOLR-6223: SearchComponents may throw NPE when using shards.tolerant and there is a failure in the 'GET_FIELDS/GET_HIGHLIGHTS/GET_DEBUG' phase\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1607897 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-07-05 01:54:53","modifiedFileCount":"6","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":3,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url);\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2014-12-31 22:05:48","endLine":95,"groupId":"43499","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d6/f781666fed42d040818ab24c629438fe081d12.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":3,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url);\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2014-12-31 22:05:48","endLine":92,"groupId":"43499","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4a/4b6bcf61214490d63fd724338b2aeb35e705c4.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-19 21:25:29","codes":[{"authorDate":"2015-01-19 21:25:29","commitOrder":4,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    HttpSolrClient nodeClient = new HttpSolrClient(url);\n    try {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n    finally {\n      nodeClient.shutdown();\n    }\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2015-01-19 21:25:29","endLine":102,"groupId":"43499","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/35/4df28c85be0ccea05cf62107449546860c8706.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url);\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2015-01-19 21:25:29","commitOrder":4,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    HttpSolrClient nodeClient = new HttpSolrClient(url);\n    try {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n    finally {\n      nodeClient.shutdown();\n    }\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2015-01-19 21:25:29","endLine":100,"groupId":"43499","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/facc20798579047f1d93b22134f51cae688415.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url);\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"e61cd9654b069c45712c81ea39713ca352e529a8","commitMessage":"@@@SOLR-6840: Remove support for old-style solr.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1652995 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-19 21:25:29","modifiedFileCount":"56","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-28 19:55:57","codes":[{"authorDate":"2015-01-28 19:55:57","commitOrder":5,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2015-01-28 19:55:57","endLine":98,"groupId":"38327","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/3581e2702f07a0372c1a50079b7723eb95bb0b.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    HttpSolrClient nodeClient = new HttpSolrClient(url);\n    try {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n    finally {\n      nodeClient.shutdown();\n    }\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2015-01-28 19:55:57","commitOrder":5,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2015-01-28 19:55:57","endLine":96,"groupId":"38327","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/9be3d9a62c61ca34497ec3c1fbce89efa95829.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    HttpSolrClient nodeClient = new HttpSolrClient(url);\n    try {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n    finally {\n      nodeClient.shutdown();\n    }\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"3018576b67648f3f7f827103a881ef3477c70a18","commitMessage":"@@@SOLR-6954: SolrClient implements Closeable\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1655263 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-28 19:55:57","modifiedFileCount":"94","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-03-05 17:54:06","codes":[{"authorDate":"2015-03-05 17:54:06","commitOrder":6,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2015-03-05 17:54:06","endLine":98,"groupId":"38327","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bd/aa6b9b3929590b043fce6282ba04afcbd65199.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2015-03-05 17:54:06","commitOrder":6,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2015-03-05 17:54:06","endLine":97,"groupId":"38327","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/dc/9f8a6046234b75c4f37f93d693f9cf476f86c4.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"739e9b489d9b44ed25e85f29562bcbcf61d41498","commitMessage":"@@@SOLR-7179: Stop using sysprops to configure test jettys\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1664292 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-05 17:54:06","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"},{"authorTime":"2016-04-08 18:07:13","codes":[{"authorDate":"2016-04-08 18:07:13","commitOrder":7,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2016-04-08 18:07:13","endLine":97,"groupId":"43499","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/485d0ca81719ee1ef88be298f164fa4c0de8a2.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2016-04-08 18:07:13","commitOrder":7,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2016-04-08 18:07:13","endLine":97,"groupId":"43499","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b4/4766898ba3f657d2b599ab1ed8c601e66bd30c.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"9b65416e60d1183e0d145646c36e5eb9018603f8","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-04-08 18:07:13","modifiedFileCount":"119","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":8,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2018-11-30 01:58:51","endLine":97,"groupId":"43499","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/d50a7b90105469bdff752921e626ba43c18a21.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":8,"curCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2018-11-30 01:58:51","endLine":97,"groupId":"43499","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/5e3e07d2b0a2b2b1f6bdf954ca25c9a741ed1f.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2019-01-16 03:44:57","codes":[{"authorDate":"2019-01-16 03:44:57","commitOrder":9,"curCode":"  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableShardsWhitelist(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2019-01-16 03:44:57","endLine":98,"groupId":"43499","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/44/c8bf64591ed0c440c75398674b782b124a238a.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-01-16 03:44:57","commitOrder":9,"curCode":"  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableShardsWhitelist(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2019-01-16 03:44:57","endLine":98,"groupId":"43499","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/3c7f414f1e82ef8b6d51f1cfccb5e7ba7d3f9e.src","preCode":"  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"8b54b20fc488ae3e83f4a350a707dc0303ade230","commitMessage":"@@@SOLR-12770: Make it possible to configure a host whitelist for distributed search\n","date":"2019-01-16 03:44:57","modifiedFileCount":"14","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2021-03-24 22:34:08","codes":[{"authorDate":"2021-03-24 22:34:08","commitOrder":10,"curCode":"  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableUrlAllowList(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","date":"2021-04-26 21:44:20","endLine":98,"groupId":"102749","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/9b77401a7db8ee0e2801f97ce5b2ba9f4990bc.src","preCode":"  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableShardsWhitelist(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-03-24 22:34:08","commitOrder":10,"curCode":"  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableUrlAllowList(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","date":"2021-04-26 21:44:20","endLine":97,"groupId":"102749","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/46/df2ed8bc14aa09a8b63e31f13f960d41c0f14e.src","preCode":"  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableShardsWhitelist(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    \r\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"text\", \"batman\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"text\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"c7abf3f32ca439b73fbe0ed5a3a6d70ecc411cbb","commitMessage":"@@@SOLR-15217: Rename shardsWhitelist and extract AllowListUrlChecker.\n","date":"2021-04-26 21:44:20","modifiedFileCount":"27","status":"M","submitter":"Bruno Roustant"}]
