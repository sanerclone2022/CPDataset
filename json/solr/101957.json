[{"authorTime":"2015-12-02 17:22:22","codes":[{"authorDate":"2016-10-11 23:00:05","commitOrder":6,"curCode":"  public IndexOptions indexOptions() {\n    if (!indexed()) {\n      return IndexOptions.NONE;\n    }\n    \n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n\n    return options;\n  }\n","date":"2016-10-11 23:17:55","endLine":401,"groupId":"33728","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"indexOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/d68c282851a075371cf4e6fd95f9664ad7d674.src","preCode":"  public IndexOptions indexOptions() {\n    if (!indexed()) {\n      return IndexOptions.NONE;\n    }\n    \n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n\n    return options;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"B"},{"authorDate":"2015-12-02 17:22:22","commitOrder":6,"curCode":"  public static org.apache.lucene.document.FieldType createFieldType(SchemaField field) {\n    if (!field.indexed() && !field.stored()) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(\"Ignoring unindexed/unstored field: \" + field);\n      return null;\n    }\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(field.isTokenized());\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (field.omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (field.omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (field.storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n    newType.setIndexOptions(options);\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    return newType;\n  }\n","date":"2015-12-02 17:22:22","endLine":185,"groupId":"51653","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createFieldType","params":"(SchemaFieldfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ad/1a0ec63eaad70a46430e8214e18e286593b89a.src","preCode":"  public static org.apache.lucene.document.FieldType createFieldType(SchemaField field) {\n    if (!field.indexed() && !field.stored()) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(\"Ignoring unindexed/unstored field: \" + field);\n      return null;\n    }\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(field.isTokenized());\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (field.omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (field.omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (field.storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n    newType.setIndexOptions(options);\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    return newType;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"NB"}],"commitId":"98191225eb3ed4b2938a7ce27128a6a9b0e22590","commitMessage":"@@@SOLR-9579: SchemaField should implement lucene.IndexableFieldType to avoid repeated creation\n","date":"2016-10-11 23:17:55","modifiedFileCount":"12","status":"M","submitter":"yonik"},{"authorTime":"2018-08-23 06:26:37","codes":[{"authorDate":"2016-10-11 23:00:05","commitOrder":7,"curCode":"  public IndexOptions indexOptions() {\n    if (!indexed()) {\n      return IndexOptions.NONE;\n    }\n    \n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n\n    return options;\n  }\n","date":"2016-10-11 23:17:55","endLine":401,"groupId":"33728","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"indexOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/d68c282851a075371cf4e6fd95f9664ad7d674.src","preCode":"  public IndexOptions indexOptions() {\n    if (!indexed()) {\n      return IndexOptions.NONE;\n    }\n    \n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n\n    return options;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"N"},{"authorDate":"2018-08-23 06:26:37","commitOrder":7,"curCode":"  public static org.apache.lucene.document.FieldType createFieldType(SchemaField field) {\n    if (!field.indexed() && !field.stored()) {\n      if (log.isTraceEnabled())\n        log.trace(\"Ignoring unindexed/unstored field: \" + field);\n      return null;\n    }\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(field.isTokenized());\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (field.omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (field.omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (field.storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n    newType.setIndexOptions(options);\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    return newType;\n  }\n","date":"2018-08-23 06:26:37","endLine":193,"groupId":"51653","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createFieldType","params":"(SchemaFieldfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/36/8bfde76beca442fb5044981d1feab7cdb447fe.src","preCode":"  public static org.apache.lucene.document.FieldType createFieldType(SchemaField field) {\n    if (!field.indexed() && !field.stored()) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(\"Ignoring unindexed/unstored field: \" + field);\n      return null;\n    }\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(field.isTokenized());\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (field.omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (field.omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (field.storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n    newType.setIndexOptions(options);\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    return newType;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"8cde1277ec7151bd6ab62950ac93cbdd6ff04d9f","commitMessage":"@@@SOLR-12690: Regularize LoggerFactory declarations\n","date":"2018-08-23 06:26:37","modifiedFileCount":"93","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-04-23 10:32:49","codes":[{"authorDate":"2016-10-11 23:00:05","commitOrder":8,"curCode":"  public IndexOptions indexOptions() {\n    if (!indexed()) {\n      return IndexOptions.NONE;\n    }\n    \n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n\n    return options;\n  }\n","date":"2016-10-11 23:17:55","endLine":401,"groupId":"101957","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"indexOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/d68c282851a075371cf4e6fd95f9664ad7d674.src","preCode":"  public IndexOptions indexOptions() {\n    if (!indexed()) {\n      return IndexOptions.NONE;\n    }\n    \n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n\n    return options;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"N"},{"authorDate":"2020-04-23 10:32:49","commitOrder":8,"curCode":"  public static org.apache.lucene.document.FieldType createFieldType(SchemaField field) {\n    if (!field.indexed() && !field.stored()) {\n      log.trace(\"Ignoring unindexed/unstored field: {}\", field);\n      return null;\n    }\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(field.isTokenized());\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (field.omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (field.omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (field.storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n    newType.setIndexOptions(options);\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    return newType;\n  }\n","date":"2020-04-23 10:32:49","endLine":192,"groupId":"101957","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createFieldType","params":"(SchemaFieldfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/a172030c6388e398df1f5a3be66be2f7bae820.src","preCode":"  public static org.apache.lucene.document.FieldType createFieldType(SchemaField field) {\n    if (!field.indexed() && !field.stored()) {\n      if (log.isTraceEnabled())\n        log.trace(\"Ignoring unindexed/unstored field: \" + field);\n      return null;\n    }\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(field.isTokenized());\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    IndexOptions options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    if (field.omitTermFreqAndPositions()) {\n      options = IndexOptions.DOCS;\n    } else if (field.omitPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS;\n    } else if (field.storeOffsetsWithPositions()) {\n      options = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS;\n    }\n    newType.setIndexOptions(options);\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    return newType;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"e43b17962a116111af4348cf7548ee2e7a2375b8","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-23 10:32:49","modifiedFileCount":"102","status":"M","submitter":"Erick Erickson"}]
