[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    purgeFieldCache(FieldCache.DEFAULT);   \r\n  }\n","date":"2011-07-10 07:01:53","endLine":201,"groupId":"63153","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/ab99ec539a70a04dfa04d094400d294aefe1aa.src","preCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    purgeFieldCache(FieldCache.DEFAULT);   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    purgeFieldCache(FieldCache.DEFAULT);   \r\n  }\n","date":"2011-07-10 07:01:53","endLine":631,"groupId":"49367","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/ab99ec539a70a04dfa04d094400d294aefe1aa.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    purgeFieldCache(FieldCache.DEFAULT);   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":613,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2012-05-16 02:47:45","codes":[{"authorDate":"2012-05-16 02:47:45","commitOrder":2,"curCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","date":"2012-05-16 02:47:45","endLine":202,"groupId":"63153","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/f906787cc8bea5286830d7506c0013152f47da.src","preCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    purgeFieldCache(FieldCache.DEFAULT);   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2012-05-16 02:47:45","commitOrder":2,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","date":"2012-05-16 02:47:45","endLine":673,"groupId":"49367","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/f906787cc8bea5286830d7506c0013152f47da.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    purgeFieldCache(FieldCache.DEFAULT);   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"M"}],"commitId":"4652d65f0b0fb5ce1a248d6585470abdf8f38bf3","commitMessage":"@@@LUCENE-4047: Cleanup of LuceneTestCase: moved blocks of initialization/ cleanup code into JUnit instance and class rules.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1338826 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-16 02:47:45","modifiedFileCount":"34","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2012-05-16 02:47:45","codes":[{"authorDate":"2013-12-02 16:33:33","commitOrder":3,"curCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","date":"2013-12-02 16:33:33","endLine":204,"groupId":"47459","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/d6dbcf4f33fe7d47fc052cbfb571f02e1e9dd7.src","preCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2012-05-16 02:47:45","commitOrder":3,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","date":"2012-05-16 02:47:45","endLine":673,"groupId":"49367","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/f906787cc8bea5286830d7506c0013152f47da.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"N"}],"commitId":"4109c6db3365a901de47c97dcb41e673ee62ec95","commitMessage":"@@@SOLR-1871: The 'map' function query accepts a ValueSource as target and default value\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1546926 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-12-02 16:33:33","modifiedFileCount":"4","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-05-17 00:39:56","codes":[{"authorDate":"2014-05-17 00:39:56","commitOrder":4,"curCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","date":"2014-05-17 00:39:56","endLine":204,"groupId":"47459","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/d29edf650cdc2aafa4d8f81287e567d30370b5.src","preCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2014-05-17 00:39:56","commitOrder":4,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","date":"2014-05-17 00:39:56","endLine":661,"groupId":"49367","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/d29edf650cdc2aafa4d8f81287e567d30370b5.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0);\n\n    FieldCache.DEFAULT.purgeAllCaches();   \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":645,"status":"M"}],"commitId":"e2ba693a6ee11127897a25de1dbb7549ebe6ea3a","commitMessage":"@@@LUCENE-5666: Add UninvertingReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1595259 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-05-17 00:39:56","modifiedFileCount":"155","status":"M","submitter":"Robert Muir"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":5,"curCode":"  void doTest(String field) {\n    \r\n    int[] vals = { 100,-4,0,10,25,5 };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","date":"2017-06-29 17:00:17","endLine":200,"groupId":"47459","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/ee94b86bb41dcc451f72c81c21f6ed911b9e95.src","preCode":"  void doTest(String field) {\n    \r\n    float[] vals = new float[] {\n      100,-4,0,10,25,5\n    };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":5,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    int[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","date":"2017-06-29 17:00:17","endLine":733,"groupId":"49367","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/ee94b86bb41dcc451f72c81c21f6ed911b9e95.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    float[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":717,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-10-30 23:25:28","commitOrder":6,"curCode":"  void doTest(String field) {\n    clearIndex();\n\n    \r\n    int[] vals = { 100,-4,0,10,25,5 };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","date":"2017-10-30 23:26:31","endLine":204,"groupId":"47459","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/032037bcf64d02a5bfd657b2dcdbe97e03896c.src","preCode":"  void doTest(String field) {\n    \r\n    int[] vals = { 100,-4,0,10,25,5 };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    int[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","date":"2017-06-29 17:00:17","endLine":733,"groupId":"49367","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/ee94b86bb41dcc451f72c81c21f6ed911b9e95.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    int[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":717,"status":"N"}],"commitId":"84fa17d42a9c0c24f784ecc7afdb107e2503c610","commitMessage":"@@@TestFunctionQuery: clear index before each test to avoid cross contamination\n","date":"2017-10-30 23:26:31","modifiedFileCount":"1","status":"M","submitter":"Steve Rowe"},{"authorTime":"2017-12-06 21:06:03","codes":[{"authorDate":"2017-12-06 21:06:03","commitOrder":7,"curCode":"  void doTest(String field) {\n    clearIndex();\n\n    \r\n    int[] vals = { 100,-4,0,10,25,5 };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, 0f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,0f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,0, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,0, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,0, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,0, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,0, 100,1, 0,0);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,0, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","date":"2017-12-06 21:06:03","endLine":204,"groupId":"103109","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doTest","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/b33dac98d942e3ca30a68bc2ca364f1858e12a.src","preCode":"  void doTest(String field) {\n    clearIndex();\n\n    \r\n    int[] vals = { 100,-4,0,10,25,5 };\n    createIndex(field,vals);\n    createIndex(null, 88);  \r\n\n    \r\n    singleTest(field, \"\\0\", 10,10);\n\n    \r\n    singleTest(field,\"1.414213\", 10, 1.414213f);\n    singleTest(field,\"-1.414213\", 10, -1.414213f);\n\n    singleTest(field,\"sum(\\0,1)\", 10, 11);\n    singleTest(field,\"sum(\\0,\\0)\", 10, 20);\n    singleTest(field,\"sum(\\0,\\0,5)\", 10, 25);\n\n    singleTest(field,\"sub(\\0,1)\", 10, 9);\n\n    singleTest(field,\"product(\\0,1)\", 10, 10);\n    singleTest(field,\"product(\\0,-2,-4)\", 10, 80);\n\n    singleTest(field,\"log(\\0)\",10,1, 100,2);\n    singleTest(field,\"sqrt(\\0)\",100,10, 25,5, 0,0);\n    singleTest(field,\"abs(\\0)\",10,10, -4,4);\n    singleTest(field,\"pow(\\0,\\0)\",0,1, 5,3125);\n    singleTest(field,\"pow(\\0,0.5)\",100,10, 25,5, 0,0);\n    singleTest(field,\"div(1,\\0)\",-4,-.25f, 10,.1f, 100,.01f);\n    singleTest(field,\"div(1,1)\",-4,1, 10,1);\n\n    singleTest(field,\"sqrt(abs(\\0))\",-4,2);\n    singleTest(field,\"sqrt(sum(29,\\0))\",-4,5);\n\n    singleTest(field,\"map(\\0,0,0,500)\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,-4,5,500)\",100,100, -4,500, 0,500, 5,500, 10,10, 25,25);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500))\",10,10, -4,-4, 0,500);\n    singleTest(field,\"map(\\0,0,0,sum(\\0,500),sum(\\0,1))\",10,11, -4,-3, 0,500);\n    singleTest(field,\"map(\\0,-4,5,sum(\\0,1))\",100,100, -4,-3, 0,1, 5,6, 10,10, 25,25);\n\n    singleTest(field,\"scale(\\0,-1,1)\",-4,-1, 100,1, 0,-0.9230769f);\n    singleTest(field,\"scale(\\0,-10,1000)\",-4,-10, 100,1000, 0,28.846153f);\n\n    \r\n    singleTest(field,\"scale(log(\\0),-1000,1000)\",100,1000);\n\n    \r\n    singleTest(field,\"nvl(\\0,1)\", 0, 1, 100, 100);\n    \n    \r\n    singleTest(field, \"nvl(sum(0,\\0),1)\", 0, 1, 100, 100);\n\n    \r\n    singleTest(field,\"query({!func v=\\0})\", 10, 10, 88, 0);\n    \r\n    singleTest(field,\"query({!lucene v='\\0:[* TO *]'},8)\", 88, 8);\n    singleTest(field,\"sum(query({!func v=\\0},7.1),query({!func v=\\0}))\", 10, 20, 100, 200);\n    \r\n    singleTest(field,\"query({!func v=$vv})\", Arrays.asList(\"vv\",\"\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"query($vv)\",Arrays.asList(\"vv\",\"{!func}\\0\"), 10, 10, 88, 0);\n    singleTest(field,\"sum(query($v1,5),query($v1,7))\",\n            Arrays.asList(\"v1\",\"\\0:[* TO *]\"),  88,12\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2017-12-06 21:06:03","commitOrder":7,"curCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    int[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,0,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","date":"2017-12-06 21:06:03","endLine":797,"groupId":"103109","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldValueSourceParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/b33dac98d942e3ca30a68bc2ca364f1858e12a.src","preCode":"  public void testFieldValueSourceParser() {\n    clearIndex();\n\n    String field = \"CoMpleX \\\" fieldName _f\";\n    String fieldAsFunc = \"field(\\\"CoMpleX \\\\\\\" fieldName _f\\\")\";\n\n    int[] ids = {100,-4,0,10,25,5,77,1};\n\n    createIndex(field, ids);\n\n    \r\n    singleTest(fieldAsFunc, \"\\0\", \n               100,100,  -4,-4,  0,0,  10,10,  25,25,  5,5,  77,77,  1,1);\n    singleTest(fieldAsFunc, \"sqrt(\\0)\", \n               100,10,  25,5,  0,0,   1,1);\n    singleTest(fieldAsFunc, \"log(\\0)\",  1,0); \n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":781,"status":"M"}],"commitId":"a8a63464e7da63b3dbc884634fd0e00b3f0c140b","commitMessage":"@@@LUCENE-7996: Queries are now required to produce positive scores.\n","date":"2017-12-06 21:06:03","modifiedFileCount":"20","status":"M","submitter":"Adrien Grand"}]
