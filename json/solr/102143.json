[{"authorTime":"2014-01-23 00:50:07","codes":[{"authorDate":"2012-11-24 03:45:50","commitOrder":3,"curCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","date":"2012-11-24 03:45:50","endLine":81,"groupId":"37906","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseQueryFields","params":"(finalIndexSchemaindexSchema@finalSolrParamssolrParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/4484930b5554ea5a65aefde1b4fde0e12ab230.src","preCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DisMaxQParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"NB"},{"authorDate":"2014-01-23 00:50:07","commitOrder":3,"curCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.getQueryParserDefaultOperator(req.getSchema(), defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","date":"2014-01-23 00:50:07","endLine":183,"groupId":"13290","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"SimpleQParser","params":"(Stringqstr@SolrParamslocalParams@SolrParamsparams@SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cc/75ace4bf224819c42ceb823ae295c551a66ff5.src","preCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.getQueryParserDefaultOperator(req.getSchema(), defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/SimpleQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"}],"commitId":"4fcf007f944f3ae0ccff656bb5baf4119abaca8e","commitMessage":"@@@SOLR-5594: Allow FieldTypes to specify custom PrefixQuery behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1560412 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-23 00:50:07","modifiedFileCount":"5","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-04-26 06:18:24","codes":[{"authorDate":"2012-11-24 03:45:50","commitOrder":4,"curCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","date":"2012-11-24 03:45:50","endLine":81,"groupId":"37906","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseQueryFields","params":"(finalIndexSchemaindexSchema@finalSolrParamssolrParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/4484930b5554ea5a65aefde1b4fde0e12ab230.src","preCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DisMaxQParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"},{"authorDate":"2014-04-26 06:18:24","commitOrder":4,"curCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getQueryAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.getQueryParserDefaultOperator(req.getSchema(), defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","date":"2014-04-26 06:18:24","endLine":166,"groupId":"13290","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"SimpleQParser","params":"(Stringqstr@SolrParamslocalParams@SolrParamsparams@SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/3f9e34102b864f161853786682cb937a9f41f5.src","preCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.getQueryParserDefaultOperator(req.getSchema(), defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/SimpleQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"0dea18dd2eb7afcfb0403daf5e36154a6be1678c","commitMessage":"@@@SOLR-6017: Fix SimpleQParser to use query analyzer instead of index analyzer\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1590166 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-26 06:18:24","modifiedFileCount":"2","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2017-05-18 12:24:58","codes":[{"authorDate":"2012-11-24 03:45:50","commitOrder":5,"curCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","date":"2012-11-24 03:45:50","endLine":81,"groupId":"37906","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parseQueryFields","params":"(finalIndexSchemaindexSchema@finalSolrParamssolrParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/4484930b5554ea5a65aefde1b4fde0e12ab230.src","preCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DisMaxQParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"},{"authorDate":"2017-05-18 12:24:58","commitOrder":5,"curCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getQueryAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.parseOP(defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","date":"2017-05-18 12:24:58","endLine":162,"groupId":"13290","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"SimpleQParser","params":"(Stringqstr@SolrParamslocalParams@SolrParamsparams@SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/65d9364ecebef0b486af7e809df9d3fed40d8b.src","preCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getQueryAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.getQueryParserDefaultOperator(req.getSchema(), defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/SimpleQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"896270d1321296f5851cd39671328619225eb5a6","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-05-18 12:24:58","modifiedFileCount":"24","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2017-05-19 21:25:40","codes":[{"authorDate":"2017-05-19 21:25:40","commitOrder":6,"curCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = solrParams.get(CommonParams.DF);\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\" nor \"+CommonParams.DF +\" are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","date":"2017-05-19 21:27:28","endLine":80,"groupId":"102143","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parseQueryFields","params":"(finalIndexSchemaindexSchema@finalSolrParamssolrParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/f5def707ba9e84f5179ed3eea23efe093da46c.src","preCode":"  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DisMaxQParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2017-05-19 21:25:40","commitOrder":6,"curCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = defaultParams.get(CommonParams.DF);\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \" nor \" + CommonParams.DF\n              + \" are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getQueryAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.parseOP(defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","date":"2017-05-19 21:27:28","endLine":162,"groupId":"102143","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"SimpleQParser","params":"(Stringqstr@SolrParamslocalParams@SolrParamsparams@SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/e88ce6171d1a9dafa364c44406dba821c93643.src","preCode":"    public SimpleQParser (String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {\n\n      super(qstr, localParams, params, req);\n      \r\n      SolrParams defaultParams = SolrParams.wrapDefaults(localParams, params);\n\n      \r\n      Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(defaultParams.get(SimpleParams.QF));\n\n      if (queryFields.isEmpty()) {\n        \r\n        String defaultField = QueryParsing.getDefaultField(req.getSchema(), defaultParams.get(CommonParams.DF));\n\n        if (defaultField == null) {\n          \r\n          throw new IllegalStateException(\"Neither \" + SimpleParams.QF + \", \" + CommonParams.DF\n              + \", nor the default search field are present.\");\n        }\n\n        queryFields.put(defaultField, 1.0F);\n      }\n      else {\n        for (Map.Entry<String, Float> queryField : queryFields.entrySet()) {\n          if (queryField.getValue() == null) {\n            \r\n            \r\n            queryField.setValue(1.0F);\n          }\n        }\n      }\n\n      \r\n      int enabledOps = 0;\n      String opParam = defaultParams.get(SimpleParams.QO);\n\n      if (opParam == null) {\n        \r\n        enabledOps = -1;\n      } else {\n        \r\n        String[] operations = opParam.split(\",\");\n\n        for (String operation : operations) {\n          Integer enabledOp = OPERATORS.get(operation.trim().toUpperCase(Locale.ROOT));\n\n          if (enabledOp != null) {\n            enabledOps |= enabledOp;\n          }\n        }\n      }\n\n      \r\n      final IndexSchema schema = req.getSchema();\n      parser = new SolrSimpleQueryParser(req.getSchema().getQueryAnalyzer(), queryFields, enabledOps, this, schema);\n\n      \r\n      QueryParser.Operator defaultOp = QueryParsing.parseOP(defaultParams.get(QueryParsing.OP));\n\n      if (defaultOp == QueryParser.Operator.AND) {\n        parser.setDefaultOperator(BooleanClause.Occur.MUST);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/SimpleQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"4a57fb4d888f83457ea774a7e03c998eb2da59ba","commitMessage":"@@@SOLR-10585: Remove defaultSearchField completely in 7.0\n","date":"2017-05-19 21:27:28","modifiedFileCount":"21","status":"M","submitter":"Jan H?ydahl"}]
