[{"authorTime":"2015-08-13 07:13:46","codes":[{"authorDate":"2015-08-13 07:13:46","commitOrder":1,"curCode":"  private static DocSet createSmallSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxPossible, int firstReader) throws IOException {\n    int[] docs = new int[maxPossible];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        docs[sz++] = globalId;\n      }\n    }\n\n    return new SortedIntDocSet(docs, sz);\n  }\n","date":"2015-08-13 07:13:46","endLine":200,"groupId":"26185","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSmallSet","params":"(List<LeafReaderContext>leaves@PostingsEnum[]postList@intmaxPossible@intfirstReader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/857d445fc1a23efb5b4f25ea492f485bb52966.src","preCode":"  private static DocSet createSmallSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxPossible, int firstReader) throws IOException {\n    int[] docs = new int[maxPossible];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        docs[sz++] = globalId;\n      }\n    }\n\n    return new SortedIntDocSet(docs, sz);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"B"},{"authorDate":"2015-08-13 07:13:46","commitOrder":1,"curCode":"  private static DocSet createBigSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxDoc, int firstReader) throws IOException {\n    long[] bits = new long[FixedBitSet.bits2words(maxDoc)];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        bits[globalId >> 6] |= (1L << globalId);\n        sz++;\n      }\n    }\n\n    BitDocSet docSet = new BitDocSet( new FixedBitSet(bits, maxDoc), sz );\n\n    int smallSetSize = (maxDoc >> 6) + 5;\n    if (sz < smallSetSize) {\n      \r\n      DocSet smallSet = toSmallSet( docSet );\n      \r\n      return smallSet;\n    }\n\n    return docSet;\n  }\n","date":"2015-08-13 07:13:46","endLine":233,"groupId":"26185","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createBigSet","params":"(List<LeafReaderContext>leaves@PostingsEnum[]postList@intmaxDoc@intfirstReader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/857d445fc1a23efb5b4f25ea492f485bb52966.src","preCode":"  private static DocSet createBigSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxDoc, int firstReader) throws IOException {\n    long[] bits = new long[FixedBitSet.bits2words(maxDoc)];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        bits[globalId >> 6] |= (1L << globalId);\n        sz++;\n      }\n    }\n\n    BitDocSet docSet = new BitDocSet( new FixedBitSet(bits, maxDoc), sz );\n\n    int smallSetSize = (maxDoc >> 6) + 5;\n    if (sz < smallSetSize) {\n      \r\n      DocSet smallSet = toSmallSet( docSet );\n      \r\n      return smallSet;\n    }\n\n    return docSet;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"4f671e69ab718e693fc3ea54a807ccfc7b008e27","commitMessage":"@@@SOLR-7918: optimize term->DocSet generation\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1695623 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-13 07:13:46","modifiedFileCount":"1","status":"B","submitter":"Yonik Seeley"},{"authorTime":"2015-09-12 11:14:34","codes":[{"authorDate":"2015-08-13 07:13:46","commitOrder":2,"curCode":"  private static DocSet createSmallSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxPossible, int firstReader) throws IOException {\n    int[] docs = new int[maxPossible];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        docs[sz++] = globalId;\n      }\n    }\n\n    return new SortedIntDocSet(docs, sz);\n  }\n","date":"2015-08-13 07:13:46","endLine":200,"groupId":"102252","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSmallSet","params":"(List<LeafReaderContext>leaves@PostingsEnum[]postList@intmaxPossible@intfirstReader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/857d445fc1a23efb5b4f25ea492f485bb52966.src","preCode":"  private static DocSet createSmallSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxPossible, int firstReader) throws IOException {\n    int[] docs = new int[maxPossible];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        docs[sz++] = globalId;\n      }\n    }\n\n    return new SortedIntDocSet(docs, sz);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"},{"authorDate":"2015-09-12 11:14:34","commitOrder":2,"curCode":"  private static DocSet createBigSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxDoc, int firstReader) throws IOException {\n    long[] bits = new long[FixedBitSet.bits2words(maxDoc)];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        bits[globalId >> 6] |= (1L << globalId);\n        sz++;\n      }\n    }\n\n    BitDocSet docSet = new BitDocSet( new FixedBitSet(bits, maxDoc), sz );\n\n    int smallSetSize = smallSetSize(maxDoc);\n    if (sz < smallSetSize) {\n      \r\n      DocSet smallSet = toSmallSet( docSet );\n      \r\n      return smallSet;\n    }\n\n    return docSet;\n  }\n","date":"2015-09-12 11:14:34","endLine":204,"groupId":"102252","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createBigSet","params":"(List<LeafReaderContext>leaves@PostingsEnum[]postList@intmaxDoc@intfirstReader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f9/047ee51e3af23b02355f9917139739696a8efc.src","preCode":"  private static DocSet createBigSet(List<LeafReaderContext> leaves, PostingsEnum[] postList, int maxDoc, int firstReader) throws IOException {\n    long[] bits = new long[FixedBitSet.bits2words(maxDoc)];\n    int sz = 0;\n    for (int i = firstReader; i < postList.length; i++) {\n      PostingsEnum postings = postList[i];\n      if (postings == null) continue;\n      LeafReaderContext ctx = leaves.get(i);\n      Bits liveDocs = ctx.reader().getLiveDocs();\n      int base = ctx.docBase;\n      for (; ; ) {\n        int subId = postings.nextDoc();\n        if (subId == DocIdSetIterator.NO_MORE_DOCS) break;\n        if (liveDocs != null && !liveDocs.get(subId)) continue;\n        int globalId = subId + base;\n        bits[globalId >> 6] |= (1L << globalId);\n        sz++;\n      }\n    }\n\n    BitDocSet docSet = new BitDocSet( new FixedBitSet(bits, maxDoc), sz );\n\n    int smallSetSize = (maxDoc >> 6) + 5;\n    if (sz < smallSetSize) {\n      \r\n      DocSet smallSet = toSmallSet( docSet );\n      \r\n      return smallSet;\n    }\n\n    return docSet;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"68d942eee149c7041f5a748dd03b130fcac1b0e4","commitMessage":"@@@SOLR-8043: add DocSetCollector constructor that calculates small-set-size.  add DocSetUtil.smallSetSize\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1702586 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-09-12 11:14:34","modifiedFileCount":"6","status":"M","submitter":"Yonik Seeley"}]
