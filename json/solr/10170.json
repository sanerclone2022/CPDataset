[{"authorTime":"2018-10-04 22:27:32","codes":[{"authorDate":"2018-10-04 22:27:32","commitOrder":1,"curCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      return enclosingBall.getRadius();\n    }\n  }\n","date":"2018-10-04 22:36:27","endLine":43,"groupId":"40238","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1f/ae9eb64723714df4881c101d7b2fa89c6f4ea1.src","preCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      return enclosingBall.getRadius();\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetRadiusEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2018-10-04 22:27:32","commitOrder":1,"curCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Vector2D vec = (Vector2D)enclosingBall.getCenter();\n      List<Number> center = new ArrayList();\n      center.add(vec.getX());\n      center.add(vec.getY());\n      return center;\n    }\n  }\n","date":"2018-10-04 22:36:27","endLine":51,"groupId":"40238","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/45/ecea1dfe0c1137e14775c6b35cad5c26cbf6ce.src","preCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Vector2D vec = (Vector2D)enclosingBall.getCenter();\n      List<Number> center = new ArrayList();\n      center.add(vec.getX());\n      center.add(vec.getY());\n      return center;\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetCenterEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"}],"commitId":"a0487b04ea0b676e3732e49de1ca0e38a91aab3c","commitMessage":"@@@SOLR-12811: Add enclosingDisk and associated geometric Stream Evaluators\n","date":"2018-10-04 22:36:27","modifiedFileCount":"3","status":"B","submitter":"Joel Bernstein"},{"authorTime":"2020-06-08 09:31:51","codes":[{"authorDate":"2020-06-08 09:31:51","commitOrder":2,"curCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      @SuppressWarnings({\"rawtypes\"})\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      return enclosingBall.getRadius();\n    }\n  }\n","date":"2020-06-08 09:31:51","endLine":44,"groupId":"18776","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/680929ff1ce93b68b08c4b57b47e8573090eaf.src","preCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      return enclosingBall.getRadius();\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetRadiusEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2020-06-08 09:31:51","commitOrder":2,"curCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      @SuppressWarnings({\"rawtypes\"})\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Vector2D vec = (Vector2D)enclosingBall.getCenter();\n      List<Number> center = new ArrayList<>();\n      center.add(vec.getX());\n      center.add(vec.getY());\n      return center;\n    }\n  }\n","date":"2020-06-08 09:31:51","endLine":52,"groupId":"18776","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2f/c1ae8cb3d3f0ff60d3942736ddc5c8358ac5dd.src","preCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Vector2D vec = (Vector2D)enclosingBall.getCenter();\n      List<Number> center = new ArrayList();\n      center.add(vec.getX());\n      center.add(vec.getY());\n      return center;\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetCenterEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"7bf59a16bda85b19b68b639b395d143019a89fde","commitMessage":"@@@SOLR-14544: Fix or suppress warnings in solr/client/solrj/io/eval\n","date":"2020-06-08 09:31:51","modifiedFileCount":"110","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-22 00:19:37","codes":[{"authorDate":"2021-06-22 00:19:37","commitOrder":3,"curCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall<?,?> enclosingBall = (EnclosingBall<?,?>)value;\n      return enclosingBall.getRadius();\n    }\n  }\n","date":"2021-06-22 00:19:37","endLine":43,"groupId":"10170","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/08/2bf9f2f5a0d95a0d99a0cf3236111511705289.src","preCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      @SuppressWarnings({\"rawtypes\"})\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      return enclosingBall.getRadius();\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetRadiusEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2021-06-22 00:19:37","commitOrder":3,"curCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall<?,?> enclosingBall = (EnclosingBall<?,?>)value;\n      Vector2D vec = (Vector2D)enclosingBall.getCenter();\n      List<Number> center = new ArrayList<>();\n      center.add(vec.getX());\n      center.add(vec.getY());\n      return center;\n    }\n  }\n","date":"2021-06-22 00:19:37","endLine":51,"groupId":"10170","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/9cc1ee4d28ee201420343c2a57c180b65cc5ae.src","preCode":"  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      @SuppressWarnings({\"rawtypes\"})\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Vector2D vec = (Vector2D)enclosingBall.getCenter();\n      List<Number> center = new ArrayList<>();\n      center.add(vec.getX());\n      center.add(vec.getY());\n      return center;\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetCenterEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"}]
