[{"authorTime":"2013-06-27 08:44:27","codes":[{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                    new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        int intValue = number.intValue();\n        if (number.longValue() == (long)intValue) {\n          \r\n          return intValue;\n        }\n        log.debug(\"value '{}' doesn't fit into an Integer, thus was not mutated\", srcVal);\n        return SKIP_FIELD_VALUE_LIST_SINGLETON;\n      }\n      if (srcVal instanceof Integer) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","date":"2013-06-27 08:44:27","endLine":117,"groupId":"51239","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mutateValue","params":"(ObjectsrcVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/51/faad7038cf8d65de04e0f92bf9427b468742de.src","preCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                    new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        int intValue = number.intValue();\n        if (number.longValue() == (long)intValue) {\n          \r\n          return intValue;\n        }\n        log.debug(\"value '{}' doesn't fit into an Integer, thus was not mutated\", srcVal);\n        return SKIP_FIELD_VALUE_LIST_SINGLETON;\n      }\n      if (srcVal instanceof Integer) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/ParseIntFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n              new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.floatValue();\n      }\n      if (srcVal instanceof Float) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","date":"2013-06-27 08:44:27","endLine":116,"groupId":"51239","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mutateValue","params":"(ObjectsrcVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b0/85b8067c5f5a47dbbef18f771435b86cf748b3.src","preCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n              new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.floatValue();\n      }\n      if (srcVal instanceof Float) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/ParseFloatFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"d6d65851cf4a7d1f9e5f0b58544374785e7c2594","commitMessage":"@@@SOLR-4892: Add field update processors to parse/convert String-typed fields to Date.  Number.  and Boolean\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 08:44:27","modifiedFileCount":"15","status":"B","submitter":"Steven Rowe"},{"authorTime":"2020-04-21 09:08:15","codes":[{"authorDate":"2020-04-21 09:08:15","commitOrder":2,"curCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          if (log.isDebugEnabled()) {\n            log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                new Object[]{srcVal, stringVal.substring(pos.getIndex())});\n          }\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        int intValue = number.intValue();\n        if (number.longValue() == (long)intValue) {\n          \r\n          return intValue;\n        }\n        log.debug(\"value '{}' doesn't fit into an Integer, thus was not mutated\", srcVal);\n        return SKIP_FIELD_VALUE_LIST_SINGLETON;\n      }\n      if (srcVal instanceof Integer) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","date":"2020-04-21 09:08:15","endLine":119,"groupId":"102047","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"mutateValue","params":"(ObjectsrcVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3c/c7dc17baf6dc7c33e6394799786328b9d3bfe7.src","preCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                    new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        int intValue = number.intValue();\n        if (number.longValue() == (long)intValue) {\n          \r\n          return intValue;\n        }\n        log.debug(\"value '{}' doesn't fit into an Integer, thus was not mutated\", srcVal);\n        return SKIP_FIELD_VALUE_LIST_SINGLETON;\n      }\n      if (srcVal instanceof Integer) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/ParseIntFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2020-04-21 09:08:15","commitOrder":2,"curCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          if (log.isDebugEnabled()) {\n            log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                new Object[]{srcVal, stringVal.substring(pos.getIndex())});\n          }\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.floatValue();\n      }\n      if (srcVal instanceof Float) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","date":"2020-04-21 09:08:15","endLine":118,"groupId":"102047","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"mutateValue","params":"(ObjectsrcVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/2d3148ca39fcc9fb9673962d3382f1411d77bc.src","preCode":"    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString();\n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n              new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.floatValue();\n      }\n      if (srcVal instanceof Float) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/ParseFloatFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"c94770c2b9c00ccdc2d617d595d62f85a332dc0c","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-21 09:08:15","modifiedFileCount":"38","status":"M","submitter":"Erick Erickson"}]
