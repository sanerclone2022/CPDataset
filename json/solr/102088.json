[{"authorTime":"2012-11-24 03:45:50","codes":[{"authorDate":"2015-03-26 02:02:26","commitOrder":4,"curCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      List<Double> percentiles = new ArrayList<>();\n      ValueSource vs = fp.parseValueSource();\n      while (fp.hasMoreArguments()) {\n        double val = fp.parseDouble();\n        if (val<0 || val>100) {\n          throw new SyntaxError(\"requested percentile must be between 0 and 100.  got \" + val);\n        }\n        percentiles.add(val);\n      }\n\n      if (percentiles.isEmpty()) {\n        throw new SyntaxError(\"expected percentile(valsource,percent1[,percent2]*)  EXAMPLE:percentile(myfield,50)\");\n      }\n\n      return new PercentileAgg(vs, percentiles);\n    }\n","date":"2015-03-26 02:02:26","endLine":80,"groupId":"39836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(FunctionQParserfp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/40/a5e9b3d68db9458320222f814130f2ad966cdc.src","preCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      List<Double> percentiles = new ArrayList<>();\n      ValueSource vs = fp.parseValueSource();\n      while (fp.hasMoreArguments()) {\n        double val = fp.parseDouble();\n        if (val<0 || val>100) {\n          throw new SyntaxError(\"requested percentile must be between 0 and 100.  got \" + val);\n        }\n        percentiles.add(val);\n      }\n\n      if (percentiles.isEmpty()) {\n        throw new SyntaxError(\"expected percentile(valsource,percent1[,percent2]*)  EXAMPLE:percentile(myfield,50)\");\n      }\n\n      return new PercentileAgg(vs, percentiles);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2012-11-24 03:45:50","commitOrder":4,"curCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n","date":"2012-11-24 03:45:50","endLine":69,"groupId":"12256","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(FunctionQParserfp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f5/6ad15edec76dd6e03b09f1fbbdc37fdf077c55.src","preCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"NB"}],"commitId":"3a8d0c2f38d98c99b6943e32100b6879b339e148","commitMessage":"@@@SOLR-7306: percentiles for new facet module\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1669189 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-26 02:02:26","modifiedFileCount":"3","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2015-03-26 02:02:26","commitOrder":5,"curCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      List<Double> percentiles = new ArrayList<>();\n      ValueSource vs = fp.parseValueSource();\n      while (fp.hasMoreArguments()) {\n        double val = fp.parseDouble();\n        if (val<0 || val>100) {\n          throw new SyntaxError(\"requested percentile must be between 0 and 100.  got \" + val);\n        }\n        percentiles.add(val);\n      }\n\n      if (percentiles.isEmpty()) {\n        throw new SyntaxError(\"expected percentile(valsource,percent1[,percent2]*)  EXAMPLE:percentile(myfield,50)\");\n      }\n\n      return new PercentileAgg(vs, percentiles);\n    }\n","date":"2015-03-26 02:02:26","endLine":80,"groupId":"102088","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(FunctionQParserfp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/40/a5e9b3d68db9458320222f814130f2ad966cdc.src","preCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      List<Double> percentiles = new ArrayList<>();\n      ValueSource vs = fp.parseValueSource();\n      while (fp.hasMoreArguments()) {\n        double val = fp.parseDouble();\n        if (val<0 || val>100) {\n          throw new SyntaxError(\"requested percentile must be between 0 and 100.  got \" + val);\n        }\n        percentiles.add(val);\n      }\n\n      if (percentiles.isEmpty()) {\n        throw new SyntaxError(\"expected percentile(valsource,percent1[,percent2]*)  EXAMPLE:percentile(myfield,50)\");\n      }\n\n      return new PercentileAgg(vs, percentiles);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"},{"authorDate":"2016-10-03 03:18:22","commitOrder":5,"curCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) throws IOException {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n","date":"2016-10-03 03:18:22","endLine":70,"groupId":"102088","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(FunctionQParserfp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/e2cc68c98447d01783f051c62784439e3c0b73.src","preCode":"    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"}]
