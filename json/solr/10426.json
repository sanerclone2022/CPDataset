[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":238,"groupId":"7681","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/3c16871626fd9e72ec895290622170977f68ed.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2011-09-13 00:12:27","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":2,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2011-09-13 00:12:27","commitOrder":2,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='8983']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n","date":"2011-09-13 00:12:27","endLine":238,"groupId":"7681","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/48ce727e5972c4499a2fecde55de2b33428945.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"ebc43a1f5f515df22e0856d748785751a4f2a27b","commitMessage":"@@@Increase verbosity on failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1169814 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-13 00:12:27","modifiedFileCount":"1","status":"M","submitter":"Steven Rowe"},{"authorTime":"2012-02-17 06:24:04","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":3,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2012-02-17 06:24:04","commitOrder":3,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n  }\n","date":"2012-02-17 06:24:04","endLine":247,"groupId":"7681","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e0/9bcaa67e49f3b2821705f730aea0a525342f28.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='8983']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"91dc7befa49a4cd2ed38b26aab1ec8a6692ab631","commitMessage":"@@@SOLR-3137: When solr.xml is persisted.  you lose all system property substitution that was used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1245217 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-02-17 06:24:04","modifiedFileCount":"3","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2012-02-25 05:02:51","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":4,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2012-02-25 05:02:51","commitOrder":4,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", home.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='./']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(home.getAbsolutePath(), new File(solrXml.getParent(), \"solr-persist.xml\")); \n \n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2012-02-25 05:02:51","endLine":284,"groupId":"7681","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/59/fa18c64d6eca36ab0dea68b56df79a0acff2d2.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"51ca380dd8c3836d29294735b0b7489c76a0ded0","commitMessage":"@@@SOLR-3137: test+fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1293415 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-02-25 05:02:51","modifiedFileCount":"4","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2012-03-02 19:29:48","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":5,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2012-03-02 19:29:48","commitOrder":5,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", home.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(home.getAbsolutePath(), new File(solrXml.getParent(), \"solr-persist.xml\")); \n \n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2012-03-02 19:29:48","endLine":284,"groupId":"7681","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/eb/1468795d7616bb3c75331806a46e4de9e6271b.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", home.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='./']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(home.getAbsolutePath(), new File(solrXml.getParent(), \"solr-persist.xml\")); \n \n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"9d55bcc9ca1ca95a91b29621859a9373b114784d","commitMessage":"@@@Fixed a test failing on Windows (slash/backslash inconsistency). I check for an alternative.  don't know if it should be normalized on persist.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1296150 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-03-02 19:29:48","modifiedFileCount":"1","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2012-03-23 23:32:44","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":6,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2012-03-23 23:32:44","commitOrder":6,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2012-03-23 23:32:44","endLine":247,"groupId":"35558","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/197dfb4de141de5f091b3aeb8ade97f06f6b15.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", home.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(home.getAbsolutePath(), new File(solrXml.getParent(), \"solr-persist.xml\")); \n \n    \n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"2590469186d474ab9692e22633fa5fa929b3fabd","commitMessage":"@@@SOLR-3112: Fix tests not to write to src/test-files\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1304441 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-03-23 23:32:44","modifiedFileCount":"3","status":"M","submitter":"Robert Muir"},{"authorTime":"2012-07-09 23:03:56","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":7,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2012-07-09 23:03:56","commitOrder":7,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2012-07-09 23:03:56","endLine":245,"groupId":"51497","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/cb146b0d9060dc9dfcbef8d2d76d530a4244e9.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(fis);\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"e3813f80300b27d870797a37339ad42e06b27327","commitMessage":"@@@LUCENE-4199: Add a new target \"check-forbidden-apis\".  that parses all generated .class files for use of APIs that use default charset.  default locale.  or default timezone and fail build if violations found. This ensures.  that Lucene / Solr is independent on local configuration options\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1359202 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-09 23:03:56","modifiedFileCount":"228","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2012-12-17 00:08:36","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":8,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2012-12-17 00:08:36","commitOrder":8,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2012-12-17 00:08:36","endLine":278,"groupId":"51497","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/10/084b2ae32a53d8f90e21f62c69c25569bfcce7.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(), coreadmin);\n    \n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"679dbf00b9338e7a22988e9757e01dccb4c1c4a3","commitMessage":"@@@SOLR-4203: tweak how delete is handled so this test passes on windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1422608 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-12-17 00:08:36","modifiedFileCount":"5","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-04-02 02:27:50","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":9,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-04-02 02:27:50","commitOrder":9,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2013-04-02 02:27:50","endLine":270,"groupId":"51497","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/a0716370e1d8f3a62aa2996ab35a21471f7ef1.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='solr']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"3d184a24526d9f02678b0b830020905bc11f92a0","commitMessage":"@@@SOLR-4622: deprecate hardcoded hostContext and hostPort defaults\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1463242 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-02 02:27:50","modifiedFileCount":"2","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2013-06-17 08:33:31","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":10,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-06-17 08:33:31","commitOrder":10,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2013-06-17 08:33:31","endLine":270,"groupId":"51497","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/58/645d4f8725d87cfdf2c4630735d7ca2b136ae7.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and (@instanceDir='./' or @instanceDir='.\\\\')]\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"05eb3064233b5acab97aa34c2b714ac42401c35e","commitMessage":"@@@SOLR-4910.  improvements to persisting solr.xml and misc other fixes.  see CHANGES.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1493618 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-17 08:33:31","modifiedFileCount":"10","status":"M","submitter":"Erick Erickson"},{"authorTime":"2013-06-25 22:55:26","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":11,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-06-25 22:55:26","commitOrder":11,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = CoreContainer.createAndLoad(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2013-06-25 22:55:26","endLine":273,"groupId":"51497","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/02a4976bda09a20dbb189fc7c9b296b7e1a556.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"f47bb580ee835b29e167522289ff3f7af3115bf9","commitMessage":"@@@SOLR-4948: Tidy up CoreContainer construction logic\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1496505 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-25 22:55:26","modifiedFileCount":"40","status":"M","submitter":"Alan Woodward"},{"authorTime":"2013-06-26 01:59:31","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":12,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-06-26 01:59:31","commitOrder":12,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2013-06-26 01:59:31","endLine":270,"groupId":"51497","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/58/645d4f8725d87cfdf2c4630735d7ca2b136ae7.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = CoreContainer.createAndLoad(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"450534ff3a14c5b3fdaa649cf4769bd9d9a876b5","commitMessage":"@@@Revert 1496505\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1496564 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-26 01:59:31","modifiedFileCount":"40","status":"M","submitter":"Alan Woodward"},{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":13,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-06-27 04:18:33","commitOrder":13,"curCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      assertTrue(\"\\\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\\\" doesn't match in:\\n\" + solrPersistXml,\n          exists(\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2013-06-27 04:18:33","endLine":271,"groupId":"51497","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3d/2282e669ba684727c18b20f991e689e3afb594.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-07-02 23:50:49","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":14,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-07-02 23:50:49","commitOrder":14,"curCode":"  public void testProperties() throws Exception {\n\n    String persistedSolrXml = new File(tempDir, SOLR_PERSIST_XML).getAbsolutePath();\n    log.info(\"persistedSolrXml: {}\", persistedSolrXml);\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(persistedSolrXml, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(persistedSolrXml));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(persistedSolrXml));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      assertTrue(\"\\\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\\\" doesn't match in:\\n\" + solrPersistXml,\n          exists(\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(persistedSolrXml, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(persistedSolrXml));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(persistedSolrXml, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(persistedSolrXml));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = CoreContainer.createAndLoad(SOLR_HOME.getAbsolutePath(), new File(persistedSolrXml));\n \n    \r\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","date":"2013-07-02 23:50:49","endLine":292,"groupId":"51497","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/e1660708578ac17ad9e40dfc7f894b79f9199f.src","preCode":"  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      assertTrue(\"\\\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\\\" doesn't match in:\\n\" + solrPersistXml,\n          exists(\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(tempDir, SOLR_PERSIST_XML));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = new CoreContainer(SOLR_HOME.getAbsolutePath(), new File(tempDir, SOLR_PERSIST_XML));\n \n    mcr = CoreAdminRequest.persist(SOLR_PERSIST_XML, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"f38c5163cc898e55e1ec51f6026f41a0de8987d6","commitMessage":"@@@SOLR-4948: Tidy up CoreContainer construction logic\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1498990 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-07-02 23:50:49","modifiedFileCount":"44","status":"M","submitter":"Alan Woodward"},{"authorTime":"2013-07-12 00:35:01","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":15,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2013-07-12 00:35:01","commitOrder":15,"curCode":"  public void testProperties() throws Exception {\n\n    SolrXMLCoresLocator.NonPersistingLocator locator\n        = (SolrXMLCoresLocator.NonPersistingLocator) cores.getCoresLocator();\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores[@defaultCoreName='core0']\",\n        \"/solr/cores[@host='127.0.0.1']\",\n        \"/solr/cores[@hostPort='${hostPort:8983}']\",\n        \"/solr/cores[@zkClientTimeout='8000']\",\n        \"/solr/cores[@hostContext='${hostContext:solr}']\",\n        \"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\"\n        );\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores/core[@name='renamed_core']\",\n        \"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\",\n        \"/solr/cores/core[@collection='${collection:acollection}']\"\n        );\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n    TestHarness.validateXPath(locator.xml, \"/solr/cores/core[@name='collection1' and @instanceDir='.']\");\n\n  }\n","date":"2013-07-12 00:35:01","endLine":169,"groupId":"51497","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/dd85624eda0fb66d82f7a5e4334a6697851cc0.src","preCode":"  public void testProperties() throws Exception {\n\n    String persistedSolrXml = new File(tempDir, SOLR_PERSIST_XML).getAbsolutePath();\n    log.info(\"persistedSolrXml: {}\", persistedSolrXml);\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(persistedSolrXml, coreadmin);\n\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(persistedSolrXml));\n    try {\n      Document document = builder.parse(fis);\n      fis.close();\n      fis = new FileInputStream(new File(persistedSolrXml));\n      String solrPersistXml = IOUtils.toString(new InputStreamReader(fis, \"UTF-8\"));\n      \r\n      assertTrue(\"\\\"/solr/cores[@defaultCoreName='core0']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(\"\\\"/solr/cores[@host='127.0.0.1']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostPort='${hostPort:8983}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostPort='${hostPort:8983}']\", document));\n      assertTrue(\"\\\"/solr/cores[@zkClientTimeout='8000']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(\"\\\"/solr/cores[@hostContext='${hostContext:solr}']\\\" doesn't match in:\\n\" + solrPersistXml,\n                 exists(\"/solr/cores[@hostContext='${hostContext:solr}']\", document));\n      assertTrue(\"\\\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\\\" doesn't match in:\\n\" + solrPersistXml,\n          exists(\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    \n    mcr = CoreAdminRequest.persist(persistedSolrXml, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(persistedSolrXml));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n      assertTrue(exists(\"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\", document));\n      assertTrue(exists(\"/solr/cores/core[@collection='${collection:acollection}']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n\r\n\r\n\r\n\r\n    \n    mcr = CoreAdminRequest.persist(persistedSolrXml, getRenamedSolrAdmin());\n    \n\r\n\r\n\r\n\r\n    \n    fis = new FileInputStream(new File(persistedSolrXml));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='collection1' and @instanceDir='.']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    \r\n    cores.shutdown();\n    \n\r\n\r\n\r\n\r\n\r\n    \n    cores = CoreContainer.createAndLoad(SOLR_HOME.getAbsolutePath(), new File(persistedSolrXml));\n \n    \r\n    \n\r\n\r\n\r\n\r\n\r\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"5a42052fbaf53d58898d35841d2c0504e29b7c5c","commitMessage":"@@@SOLR-4914: Factor out core discovery and persistence logic\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1502276 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-07-12 00:35:01","modifiedFileCount":"28","status":"M","submitter":"Alan Woodward"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":16,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2014-12-31 22:05:48","commitOrder":16,"curCode":"  public void testProperties() throws Exception {\n\n    SolrXMLCoresLocator.NonPersistingLocator locator\n        = (SolrXMLCoresLocator.NonPersistingLocator) cores.getCoresLocator();\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrClient coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores[@defaultCoreName='core0']\",\n        \"/solr/cores[@host='127.0.0.1']\",\n        \"/solr/cores[@hostPort='${hostPort:8983}']\",\n        \"/solr/cores[@zkClientTimeout='8000']\",\n        \"/solr/cores[@hostContext='${hostContext:solr}']\",\n        \"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\"\n        );\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores/core[@name='renamed_core']\",\n        \"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\",\n        \"/solr/cores/core[@collection='${collection:acollection}']\"\n        );\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n    TestHarness.validateXPath(locator.xml, \"/solr/cores/core[@name='collection1' and @instanceDir='.']\");\n\n  }\n","date":"2014-12-31 22:05:48","endLine":169,"groupId":"51497","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/68/4dec87b1ddb1b7428ae8b96899c5ac5794040c.src","preCode":"  public void testProperties() throws Exception {\n\n    SolrXMLCoresLocator.NonPersistingLocator locator\n        = (SolrXMLCoresLocator.NonPersistingLocator) cores.getCoresLocator();\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores[@defaultCoreName='core0']\",\n        \"/solr/cores[@host='127.0.0.1']\",\n        \"/solr/cores[@hostPort='${hostPort:8983}']\",\n        \"/solr/cores[@zkClientTimeout='8000']\",\n        \"/solr/cores[@hostContext='${hostContext:solr}']\",\n        \"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\"\n        );\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores/core[@name='renamed_core']\",\n        \"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\",\n        \"/solr/cores/core[@collection='${collection:acollection}']\"\n        );\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n    TestHarness.validateXPath(locator.xml, \"/solr/cores/core[@name='collection1' and @instanceDir='.']\");\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-19 21:25:29","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":17,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"5806","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2015-01-19 21:25:29","commitOrder":17,"curCode":"  public void testProperties() throws Exception {\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrClient coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n  }\n","date":"2015-01-19 21:25:29","endLine":137,"groupId":"51497","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/94377b9e172ff2eebe61fb47e19665e761566e.src","preCode":"  public void testProperties() throws Exception {\n\n    SolrXMLCoresLocator.NonPersistingLocator locator\n        = (SolrXMLCoresLocator.NonPersistingLocator) cores.getCoresLocator();\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrClient coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores[@defaultCoreName='core0']\",\n        \"/solr/cores[@host='127.0.0.1']\",\n        \"/solr/cores[@hostPort='${hostPort:8983}']\",\n        \"/solr/cores[@zkClientTimeout='8000']\",\n        \"/solr/cores[@hostContext='${hostContext:solr}']\",\n        \"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\"\n        );\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n\n    TestHarness.validateXPath(locator.xml,\n        \"/solr/cores/core[@name='renamed_core']\",\n        \"/solr/cores/core[@instanceDir='${theInstanceDir:./}']\",\n        \"/solr/cores/core[@collection='${collection:acollection}']\"\n        );\n    \n    coreadmin = getRenamedSolrAdmin();\n    File dataDir = new File(tempDir,\"data3\");\n    File tlogDir = new File(tempDir,\"tlog3\");\n\n    CoreAdminRequest.createCore(\"newCore\", SOLR_HOME.getAbsolutePath(),\n        coreadmin, null, null, dataDir.getAbsolutePath(),\n        tlogDir.getAbsolutePath());\n\n    TestHarness.validateXPath(locator.xml, \"/solr/cores/core[@name='collection1' and @instanceDir='.']\");\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"e61cd9654b069c45712c81ea39713ca352e529a8","commitMessage":"@@@SOLR-6840: Remove support for old-style solr.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1652995 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-19 21:25:29","modifiedFileCount":"56","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-08-03 15:30:49","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":18,"curCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","date":"2011-07-10 07:01:53","endLine":126,"groupId":"10426","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/f408057eff81d6af52d75698b11a75aa0eb9b0.src","preCode":"  private UpdateRequest setupCores() throws SolrServerException, IOException {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"name\", \"core0\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"name\", \"core1\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    assertEquals(1,\n        getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0,\n        getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0,\n        getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1,\n        getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    return up;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2019-08-03 15:30:49","commitOrder":18,"curCode":"  public void testProperties() throws Exception {\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    expectThrows(Exception.class, () -> up.process(getSolrCore1()));\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    SolrTestCaseJ4.ignoreException(\"core0\");\n    expectThrows(Exception.class, () -> up.process(getSolrCore0()));\n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrClient coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n  }\n","date":"2019-08-03 15:30:49","endLine":118,"groupId":"10426","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"testProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/72d96949af526d463a08840d30ea064532b59a.src","preCode":"  public void testProperties() throws Exception {\n\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    \r\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    \r\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    \r\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    \r\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    \r\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    \r\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    \r\n    String name = \"core0\";\n    SolrClient coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"8c4fde94fe93c70b95ed3563fb65972bb303e0af","commitMessage":"@@@SOLR-12555: use expectThrows() to verify the ex thrown in tests\n","date":"2019-08-03 15:30:49","modifiedFileCount":"89","status":"M","submitter":"Munendra S N"}]
