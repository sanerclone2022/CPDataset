[{"authorTime":"2013-06-27 08:44:27","codes":[{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_f\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_f\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"128\"), f(\"float1_f\", floatString1), f(\"float2_f\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float1_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_f\"), EPSILON);\n    assertTrue(d.getFieldValue(\"float2_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_f\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:128\")\n        ,\"//float[@name='float1_f'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_f'][.='\" + value + \"']\");\n  }\n","date":"2013-06-27 08:44:27","endLine":466,"groupId":"19486","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseFloatRoundTrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_f\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_f\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"128\"), f(\"float1_f\", floatString1), f(\"float2_f\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float1_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_f\"), EPSILON);\n    assertTrue(d.getFieldValue(\"float2_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_f\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:128\")\n        ,\"//float[@name='float1_f'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_f'][.='\" + value + \"']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"B"},{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseTrieFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_tf\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_tf\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"728\"), f(\"float1_tf\", floatString1), f(\"float2_tf\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float1_tf\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_tf\"), EPSILON);\n    assertTrue(d.getFieldValue(\"float2_tf\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_tf\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:728\")\n        ,\"//float[@name='float1_tf'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_tf'][.='\" + value + \"']\");\n  }\n","date":"2013-06-27 08:44:27","endLine":504,"groupId":"19486","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseTrieFloatRoundTrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseTrieFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_tf\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_tf\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"728\"), f(\"float1_tf\", floatString1), f(\"float2_tf\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float1_tf\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_tf\"), EPSILON);\n    assertTrue(d.getFieldValue(\"float2_tf\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_tf\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:728\")\n        ,\"//float[@name='float1_tf'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_tf'][.='\" + value + \"']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":485,"status":"B"}],"commitId":"d6d65851cf4a7d1f9e5f0b58544374785e7c2594","commitMessage":"@@@SOLR-4892: Add field update processors to parse/convert String-typed fields to Date.  Number.  and Boolean\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 08:44:27","modifiedFileCount":"15","status":"B","submitter":"Steven Rowe"},{"authorTime":"2019-06-26 07:26:03","codes":[{"authorDate":"2019-06-26 07:26:03","commitOrder":2,"curCode":"  public void testParseFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_f\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_f\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"128\"), f(\"float1_f\", floatString1), f(\"float2_f\", floatString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"float1_f\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_f\"), EPSILON);\n    assertThat(d.getFieldValue(\"float2_f\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_f\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:128\")\n        ,\"//float[@name='float1_f'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_f'][.='\" + value + \"']\");\n  }\n","date":"2019-06-26 07:26:03","endLine":480,"groupId":"102914","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseFloatRoundTrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_f\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_f\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"128\"), f(\"float1_f\", floatString1), f(\"float2_f\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float1_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_f\"), EPSILON);\n    assertTrue(d.getFieldValue(\"float2_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_f\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:128\")\n        ,\"//float[@name='float1_f'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_f'][.='\" + value + \"']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":461,"status":"M"},{"authorDate":"2019-06-26 07:26:03","commitOrder":2,"curCode":"  public void testParseTrieFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_tf\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_tf\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"728\"), f(\"float1_tf\", floatString1), f(\"float2_tf\", floatString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"float1_tf\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_tf\"), EPSILON);\n    assertThat(d.getFieldValue(\"float2_tf\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_tf\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:728\")\n        ,\"//float[@name='float1_tf'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_tf'][.='\" + value + \"']\");\n  }\n","date":"2019-06-26 07:26:03","endLine":526,"groupId":"102914","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseTrieFloatRoundTrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseTrieFloatRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float1_tf\")); \r\n    assertNotNull(schema.getFieldOrNull(\"float2_tf\")); \r\n    float value = 10898.83491f;\n    String floatString1 = \"10898.83491\";\n    String floatString2 = \"10,898.83491\";\n    SolrInputDocument d = processAdd(\"parse-float\",\n        doc(f(\"id\", \"728\"), f(\"float1_tf\", floatString1), f(\"float2_tf\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float1_tf\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float1_tf\"), EPSILON);\n    assertTrue(d.getFieldValue(\"float2_tf\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float2_tf\"), EPSILON);\n\n    assertU(commit());\n    assertQ(req(\"id:728\")\n        ,\"//float[@name='float1_tf'][.='\" + value + \"']\"\n        ,\"//float[@name='float2_tf'][.='\" + value + \"']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"583c219183b2bca85936a095727d287c5c28526b","commitMessage":"@@@SOLR-13580: add assumeThat calls to ParsingFieldUpdateProcessorsTest to skip test methods impacted by java 13-ea bug in NumberFormat.parse()\n","date":"2019-06-26 07:26:03","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"}]
