[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testWithBinaryBean()throws Exception{\n    CommonsHttpSolrServer commonsHttpSolrServer = (CommonsHttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2011-07-10 07:01:53","endLine":94,"groupId":"54504","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithBinaryBean","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/bb24819eb408519aa9ee3fbd7ff04eedb807fe.src","preCode":"  public void testWithBinaryBean()throws Exception{\n    CommonsHttpSolrServer commonsHttpSolrServer = (CommonsHttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  private void doIt(CommonsHttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2011-07-10 07:01:53","endLine":129,"groupId":"2168","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doIt","params":"(CommonsHttpSolrServercommonsHttpSolrServer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/bb24819eb408519aa9ee3fbd7ff04eedb807fe.src","preCode":"  private void doIt(CommonsHttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2012-03-29 20:11:37","codes":[{"authorDate":"2012-03-29 20:11:37","commitOrder":2,"curCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrServer commonsHttpSolrServer = (HttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2012-03-29 20:11:37","endLine":94,"groupId":"54504","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithBinaryBean","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/618ed4bed3e618a4ba486adb17e2bb731ecced.src","preCode":"  public void testWithBinaryBean()throws Exception{\n    CommonsHttpSolrServer commonsHttpSolrServer = (CommonsHttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2012-03-29 20:11:37","commitOrder":2,"curCode":"  private void doIt(HttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2012-03-29 20:11:37","endLine":129,"groupId":"2168","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doIt","params":"(HttpSolrServercommonsHttpSolrServer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/618ed4bed3e618a4ba486adb17e2bb731ecced.src","preCode":"  private void doIt(CommonsHttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"b5f8deb7959b07fc2c297df66d6f2f39036e1e74","commitMessage":"@@@SOLR-2020: migrate to Java client that uses Apache Http Components http client (4.x)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1306800 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-03-29 20:11:37","modifiedFileCount":"41","status":"M","submitter":"Sami Siren"},{"authorTime":"2012-12-11 22:31:01","codes":[{"authorDate":"2012-12-11 22:31:01","commitOrder":3,"curCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrServer commonsHttpSolrServer = (HttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      @Override\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2012-12-11 22:31:01","endLine":97,"groupId":"54504","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithBinaryBean","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/f46a18ab98555410d26574d7b00a5ff4d1f813.src","preCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrServer commonsHttpSolrServer = (HttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2012-12-11 22:31:01","commitOrder":3,"curCode":"  private void doIt(HttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2012-12-11 22:31:01","endLine":135,"groupId":"22371","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doIt","params":"(HttpSolrServercommonsHttpSolrServer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/f46a18ab98555410d26574d7b00a5ff4d1f813.src","preCode":"  private void doIt(HttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"e2f54df3ca7639f143b195f75adbc5ee97187b92","commitMessage":"@@@fix missing Overrides\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1420195 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-12-11 22:31:01","modifiedFileCount":"843","status":"M","submitter":"Shai Erera"},{"authorTime":"2014-04-28 00:05:30","codes":[{"authorDate":"2014-04-28 00:05:30","commitOrder":4,"curCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrServer httpSolrServer = (HttpSolrServer) getSolrServer();\n    httpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    httpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    httpSolrServer.addBeans(new Iterator<Bean>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      @Override\n      public void remove() {\n        \r\n      }\n    });\n    httpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = httpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2014-04-28 00:05:30","endLine":99,"groupId":"54504","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithBinaryBean","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/c45d057be427d99f1b91e791056cdaffd1270b.src","preCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrServer commonsHttpSolrServer = (HttpSolrServer) getSolrServer();\n    commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    commonsHttpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.addBeans(new Iterator<Bean>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      @Override\n      public void remove() {\n        \r\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2014-04-28 00:05:30","commitOrder":4,"curCode":"  private void doIt(HttpSolrServer httpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    httpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        \r\n\n      }\n    });\n    httpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = httpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2014-04-28 00:05:30","endLine":137,"groupId":"22371","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doIt","params":"(HttpSolrServerhttpSolrServer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/c45d057be427d99f1b91e791056cdaffd1270b.src","preCode":"  private void doIt(HttpSolrServer commonsHttpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    commonsHttpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        \r\n\n      }\n    });\n    commonsHttpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = commonsHttpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"b2a01a6504c5f08cd8d26da403531dc87d1eda24","commitMessage":"@@@SOLR-6025: Replace mentions of CommonsHttpSolrServer with HttpSolrServer and StreamingUpdateSolrServer with ConcurrentUpdateSolrServer\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1590410 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-28 00:05:30","modifiedFileCount":"4","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":5,"curCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrClient client = (HttpSolrClient) getSolrClient();\n    client.setRequestWriter(new BinaryRequestWriter());\n    client.deleteByQuery(\"*:*\"); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    client.addBeans(new Iterator<Bean>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      @Override\n      public void remove() {\n        \r\n      }\n    });\n    client.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = client.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2014-12-31 22:05:48","endLine":98,"groupId":"10430","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithBinaryBean","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/9d0b6a63a35801f679e961eb8f84133e9a33f6.src","preCode":"  public void testWithBinaryBean()throws Exception{\n    HttpSolrServer httpSolrServer = (HttpSolrServer) getSolrServer();\n    httpSolrServer.setRequestWriter(new BinaryRequestWriter());\n    httpSolrServer.deleteByQuery( \"*:*\" ); \r\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    httpSolrServer.addBeans(new Iterator<Bean>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public Bean next() {\n        Bean bean = new Bean();\n        bean.id = \"\" + (++counter[0]);\n        bean.cat = \"foocat\";\n        return bean;\n      }\n\n      @Override\n      public void remove() {\n        \r\n      }\n    });\n    httpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = httpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":5,"curCode":"  private void doIt(HttpSolrClient client) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    client.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        \r\n\n      }\n    });\n    client.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = client.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","date":"2014-12-31 22:05:48","endLine":136,"groupId":"10430","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doIt","params":"(HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/9d0b6a63a35801f679e961eb8f84133e9a33f6.src","preCode":"  private void doIt(HttpSolrServer httpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    httpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        \r\n\n      }\n    });\n    httpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = httpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"}]
