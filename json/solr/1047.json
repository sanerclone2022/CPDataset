[{"authorTime":"2014-06-12 01:50:45","codes":[{"authorDate":"2012-07-09 23:03:56","commitOrder":3,"curCode":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n","date":"2012-07-09 23:03:56","endLine":62,"groupId":"8489","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getCharsetFromContentType","params":"(StringcontentType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/9c11b05fa0145d72912d3472aeb85d197def74.src","preCode":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"},{"authorDate":"2014-06-12 01:50:45","commitOrder":3,"curCode":"  private static boolean checkResponseCode(HttpURLConnection urlc) throws IOException {\n    if (urlc.getResponseCode() >= 400) {\n      warn(\"Solr returned an error #\" + urlc.getResponseCode() + \n            \" (\" + urlc.getResponseMessage() + \") for url: \" + urlc.getURL());\n      Charset charset = StandardCharsets.ISO_8859_1;\n      final String contentType = urlc.getContentType();\n      \r\n      if (contentType != null) {\n        int idx = contentType.toLowerCase(Locale.ROOT).indexOf(\"charset=\");\n        if (idx > 0) {\n          charset = Charset.forName(contentType.substring(idx + \"charset=\".length()).trim());\n        }\n      }\n      \r\n      try (InputStream errStream = urlc.getErrorStream()) {\n        if (errStream != null) {\n          BufferedReader br = new BufferedReader(new InputStreamReader(errStream, charset));\n          final StringBuilder response = new StringBuilder(\"Response: \");\n          int ch;\n          while ((ch = br.read()) != -1) {\n            response.append((char) ch);\n          }\n          warn(response.toString().trim());\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2014-06-12 01:50:45","endLine":913,"groupId":"22404","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkResponseCode","params":"(HttpURLConnectionurlc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f8/9598e271798e231364ac9977e20cb9fd08716d.src","preCode":"  private static boolean checkResponseCode(HttpURLConnection urlc) throws IOException {\n    if (urlc.getResponseCode() >= 400) {\n      warn(\"Solr returned an error #\" + urlc.getResponseCode() + \n            \" (\" + urlc.getResponseMessage() + \") for url: \" + urlc.getURL());\n      Charset charset = StandardCharsets.ISO_8859_1;\n      final String contentType = urlc.getContentType();\n      \r\n      if (contentType != null) {\n        int idx = contentType.toLowerCase(Locale.ROOT).indexOf(\"charset=\");\n        if (idx > 0) {\n          charset = Charset.forName(contentType.substring(idx + \"charset=\".length()).trim());\n        }\n      }\n      \r\n      try (InputStream errStream = urlc.getErrorStream()) {\n        if (errStream != null) {\n          BufferedReader br = new BufferedReader(new InputStreamReader(errStream, charset));\n          final StringBuilder response = new StringBuilder(\"Response: \");\n          int ch;\n          while ((ch = br.read()) != -1) {\n            response.append((char) ch);\n          }\n          warn(response.toString().trim());\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/SimplePostTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":885,"status":"B"}],"commitId":"386ad97623b811fc012372411ed9e7d8a7c6bb1c","commitMessage":"@@@SOLR-5940: post.jar reports back detailed error in case of error responses\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1601970 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-12 01:50:45","modifiedFileCount":"1","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2016-10-22 08:02:07","codes":[{"authorDate":"2012-07-09 23:03:56","commitOrder":4,"curCode":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n","date":"2012-07-09 23:03:56","endLine":62,"groupId":"1047","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getCharsetFromContentType","params":"(StringcontentType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/9c11b05fa0145d72912d3472aeb85d197def74.src","preCode":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2016-10-22 08:02:07","commitOrder":4,"curCode":"  private static boolean checkResponseCode(HttpURLConnection urlc) throws IOException, GeneralSecurityException {\n    if (urlc.getResponseCode() >= 400) {\n      warn(\"Solr returned an error #\" + urlc.getResponseCode() + \n            \" (\" + urlc.getResponseMessage() + \") for url: \" + urlc.getURL());\n      Charset charset = StandardCharsets.ISO_8859_1;\n      final String contentType = urlc.getContentType();\n      \r\n      if (contentType != null) {\n        int idx = contentType.toLowerCase(Locale.ROOT).indexOf(\"charset=\");\n        if (idx > 0) {\n          charset = Charset.forName(contentType.substring(idx + \"charset=\".length()).trim());\n        }\n      }\n      \r\n      try (InputStream errStream = urlc.getErrorStream()) {\n        if (errStream != null) {\n          BufferedReader br = new BufferedReader(new InputStreamReader(errStream, charset));\n          final StringBuilder response = new StringBuilder(\"Response: \");\n          int ch;\n          while ((ch = br.read()) != -1) {\n            response.append((char) ch);\n          }\n          warn(response.toString().trim());\n        }\n      }\n      if (urlc.getResponseCode() == 401) {\n        throw new GeneralSecurityException(\"Solr requires authentication (response 401). Please try again with '-u' option\");\n      }\n      if (urlc.getResponseCode() == 403) {\n        throw new GeneralSecurityException(\"You are not authorized to perform this action against Solr. (response 403)\");\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2016-10-22 08:02:07","endLine":987,"groupId":"1047","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkResponseCode","params":"(HttpURLConnectionurlc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/ef372acb8348960195d9addba88213389b55aa.src","preCode":"  private static boolean checkResponseCode(HttpURLConnection urlc) throws IOException {\n    if (urlc.getResponseCode() >= 400) {\n      warn(\"Solr returned an error #\" + urlc.getResponseCode() + \n            \" (\" + urlc.getResponseMessage() + \") for url: \" + urlc.getURL());\n      Charset charset = StandardCharsets.ISO_8859_1;\n      final String contentType = urlc.getContentType();\n      \r\n      if (contentType != null) {\n        int idx = contentType.toLowerCase(Locale.ROOT).indexOf(\"charset=\");\n        if (idx > 0) {\n          charset = Charset.forName(contentType.substring(idx + \"charset=\".length()).trim());\n        }\n      }\n      \r\n      try (InputStream errStream = urlc.getErrorStream()) {\n        if (errStream != null) {\n          BufferedReader br = new BufferedReader(new InputStreamReader(errStream, charset));\n          final StringBuilder response = new StringBuilder(\"Response: \");\n          int ch;\n          while ((ch = br.read()) != -1) {\n            response.append((char) ch);\n          }\n          warn(response.toString().trim());\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/SimplePostTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":953,"status":"M"}],"commitId":"e3a8a0fe5f7ebff46509f51f9d490a5c801626ba","commitMessage":"@@@SOLR-9662: New parameter -u <user:pass> in bin/post to pass basicauth credentials\n","date":"2016-10-22 08:02:07","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"}]
