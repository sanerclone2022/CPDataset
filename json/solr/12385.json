[{"authorTime":"2018-11-11 08:48:50","codes":[{"authorDate":"2018-11-11 08:48:50","commitOrder":1,"curCode":"  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n","date":"2018-11-11 10:44:25","endLine":170,"groupId":"20756","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withFacet","params":"(StringfacetName@Map<String@Object>facetJson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/7b071553aa4361781324444eeeb5fc252c58ae.src","preCode":"  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2018-11-11 08:48:50","commitOrder":1,"curCode":"  public JsonQueryRequest withStatFacet(String facetName, String facetValue) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetValue == null) {\n      throw new IllegalArgumentException(\"'facetValue' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetValue);\n    return this;\n  }\n","date":"2018-11-11 10:44:25","endLine":242,"groupId":"20756","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withStatFacet","params":"(StringfacetName@StringfacetValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/7b071553aa4361781324444eeeb5fc252c58ae.src","preCode":"  public JsonQueryRequest withStatFacet(String facetName, String facetValue) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetValue == null) {\n      throw new IllegalArgumentException(\"'facetValue' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetValue);\n    return this;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"}],"commitId":"52998fa50e60ce9c7f49167b1ab107347c30d8d6","commitMessage":"@@@SOLR-12965: Add facet support to JsonQueryRequest\n","date":"2018-11-11 10:44:25","modifiedFileCount":"3","status":"B","submitter":"Jason Gerlowski"},{"authorTime":"2020-06-14 20:11:23","codes":[{"authorDate":"2020-06-14 20:11:23","commitOrder":2,"curCode":"  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n","date":"2020-06-14 20:11:23","endLine":172,"groupId":"12385","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"withFacet","params":"(StringfacetName@Map<String@Object>facetJson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/ebda06380e23a2ec52e4b893f3cf1d111c2369.src","preCode":"  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2020-06-14 20:11:23","commitOrder":2,"curCode":"  public JsonQueryRequest withStatFacet(String facetName, String facetValue) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetValue == null) {\n      throw new IllegalArgumentException(\"'facetValue' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetValue);\n    return this;\n  }\n","date":"2020-06-14 20:11:23","endLine":248,"groupId":"12385","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"withStatFacet","params":"(StringfacetName@StringfacetValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/ebda06380e23a2ec52e4b893f3cf1d111c2369.src","preCode":"  public JsonQueryRequest withStatFacet(String facetName, String facetValue) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetValue == null) {\n      throw new IllegalArgumentException(\"'facetValue' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetValue);\n    return this;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"4e90e48ac29ee38662c04fcf7815d5170ceb2669","commitMessage":"@@@SOLR-14567: Fix or suppress remaining warnings in solrj\n","date":"2020-06-14 20:11:23","modifiedFileCount":"64","status":"M","submitter":"Erick Erickson"}]
