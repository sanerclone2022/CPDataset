[{"authorTime":"2018-01-23 20:35:14","codes":[{"authorDate":"2016-11-15 08:17:57","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2).addConfig(CONFIG, configset(CONFIG)).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, CONFIG, 2, 1)\n        .setMaxShardsPerNode(1)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","date":"2016-11-15 08:17:57","endLine":47,"groupId":"52650","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/e1be0d04b42f35b126fe3085830e1a0ac114c1.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2).addConfig(CONFIG, configset(CONFIG)).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, CONFIG, 2, 1)\n        .setMaxShardsPerNode(1)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/PreAnalyzedFieldManagedSchemaCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"NB"},{"authorDate":"2018-01-23 20:35:14","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, 2, 1) \r\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","date":"2018-01-23 20:35:14","endLine":49,"groupId":"52650","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/5678708bb20ee5fabce17ae9bcc22ef8252dc3.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, 2, 1) \r\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/SchemaApiFailureTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"}],"commitId":"653935bbdfd70fa9490f8c363ffcf9832d3141a5","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-01-23 20:35:14","modifiedFileCount":"279","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-07-08 23:57:24","codes":[{"authorDate":"2020-07-08 23:57:24","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2).addConfig(CONFIG, configset(CONFIG)).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, CONFIG, 2, 1)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","date":"2020-07-08 23:57:24","endLine":46,"groupId":"102716","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/50883e31f76eb7ab21113fc44b686d00bc58da.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2).addConfig(CONFIG, configset(CONFIG)).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, CONFIG, 2, 1)\n        .setMaxShardsPerNode(1)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/PreAnalyzedFieldManagedSchemaCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2020-07-08 23:57:24","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, 2, 1) \r\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","date":"2020-07-08 23:57:24","endLine":44,"groupId":"102716","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b4/c21296560d57bd4c41fec97cbbb9b4a1f8c305.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1).configure();\n    CollectionAdminRequest.createCollection(COLLECTION, 2, 1) \r\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 1));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/SchemaApiFailureTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"cf742f45963f4747e7041e8131248bc3a2b44864","commitMessage":"@@@SOLR-12847: Remove support for maxShardsPerNode.\n","date":"2020-07-08 23:57:24","modifiedFileCount":"144","status":"M","submitter":"Andrzej Bialecki"}]
