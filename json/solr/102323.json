[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"    public ShardFacetCount[] getLexSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","date":"2011-07-10 07:01:53","endLine":838,"groupId":"19398","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLexSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/98967ccdfab2cfb39a57e32ae4a59fc3f2f534.src","preCode":"    public ShardFacetCount[] getLexSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":829,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"    public ShardFacetCount[] getCountSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          if (o2.count < o1.count) return -1;\n          else if (o1.count < o2.count) return 1;\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","date":"2011-07-10 07:01:53","endLine":851,"groupId":"30830","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getCountSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/98967ccdfab2cfb39a57e32ae4a59fc3f2f534.src","preCode":"    public ShardFacetCount[] getCountSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          if (o2.count < o1.count) return -1;\n          else if (o1.count < o2.count) return 1;\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":840,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2012-12-11 22:31:01","codes":[{"authorDate":"2012-12-11 22:31:01","commitOrder":2,"curCode":"    public ShardFacetCount[] getLexSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        @Override\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","date":"2012-12-11 22:31:01","endLine":828,"groupId":"49703","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLexSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/10/be89439d0aef83342050e1ceb9a049b6b6a83e.src","preCode":"    public ShardFacetCount[] getLexSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":818,"status":"M"},{"authorDate":"2012-12-11 22:31:01","commitOrder":2,"curCode":"    public ShardFacetCount[] getCountSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        @Override\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          if (o2.count < o1.count) return -1;\n          else if (o1.count < o2.count) return 1;\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","date":"2012-12-11 22:31:01","endLine":842,"groupId":"34504","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getCountSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/10/be89439d0aef83342050e1ceb9a049b6b6a83e.src","preCode":"    public ShardFacetCount[] getCountSorted() {\n      ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          if (o2.count < o1.count) return -1;\n          else if (o1.count < o2.count) return 1;\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":830,"status":"M"}],"commitId":"e2f54df3ca7639f143b195f75adbc5ee97187b92","commitMessage":"@@@fix missing Overrides\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1420195 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-12-11 22:31:01","modifiedFileCount":"843","status":"M","submitter":"Shai Erera"},{"authorTime":"2016-03-04 21:23:47","codes":[{"authorDate":"2016-03-04 21:23:47","commitOrder":3,"curCode":"    public ShardFacetCount[] getLexSorted() {\n      ShardFacetCount[] arr \n        = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, (o1, o2) -> o1.indexed.compareTo(o2.indexed));\n      countSorted = arr;\n      return arr;\n    }\n","date":"2016-03-04 21:23:47","endLine":1454,"groupId":"102323","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLexSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/5efbf9218a1082b107485fc1c9114e35a45420.src","preCode":"    public ShardFacetCount[] getLexSorted() {\n      ShardFacetCount[] arr \n        = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        @Override\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1448,"status":"M"},{"authorDate":"2016-03-04 21:23:47","commitOrder":3,"curCode":"    public ShardFacetCount[] getCountSorted() {\n      ShardFacetCount[] arr \n        = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, (o1, o2) -> {\n        if (o2.count < o1.count) return -1;\n        else if (o1.count < o2.count) return 1;\n        return o1.indexed.compareTo(o2.indexed);\n      });\n      countSorted = arr;\n      return arr;\n    }\n","date":"2016-03-04 21:23:47","endLine":1466,"groupId":"102323","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getCountSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/5efbf9218a1082b107485fc1c9114e35a45420.src","preCode":"    public ShardFacetCount[] getCountSorted() {\n      ShardFacetCount[] arr \n        = counts.values().toArray(new ShardFacetCount[counts.size()]);\n      Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n        @Override\n        public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n          if (o2.count < o1.count) return -1;\n          else if (o1.count < o2.count) return 1;\n          return o1.indexed.compareTo(o2.indexed);\n        }\n      });\n      countSorted = arr;\n      return arr;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1456,"status":"M"}],"commitId":"c27dd8e03866082686ab3d17f7350f91975a8efc","commitMessage":"@@@SOLR-8750 : Use lambdas in code where SAM type interfaces are used\n","date":"2016-03-04 21:23:47","modifiedFileCount":"45","status":"M","submitter":"Noble Paul"}]
