[{"authorTime":"2020-05-21 02:16:05","codes":[{"authorDate":"2018-10-25 04:57:28","commitOrder":2,"curCode":"    public static Integer randomOverrequestParam(Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","date":"2018-10-25 04:57:35","endLine":664,"groupId":"34257","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"randomOverrequestParam","params":"(Randomr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/b912f7fd40882722377728e1121d96ab068196.src","preCode":"    public static Integer randomOverrequestParam(Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":648,"status":"NB"},{"authorDate":"2020-05-21 02:16:05","commitOrder":2,"curCode":"    public static Integer randomOverrequestParam(final Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","date":"2020-05-21 02:16:05","endLine":907,"groupId":"34257","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"randomOverrequestParam","params":"(finalRandomr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/a16e03331a7bbbaa458288b489efa9adc29f3e.src","preCode":"    public static Integer randomOverrequestParam(final Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":891,"status":"B"}],"commitId":"28209cb8b1fe2a4d8050e4877c4df2ad5d85509b","commitMessage":"@@@SOLR-14492: Fix ArrayIndexOutOfBoundsException in json.facet 'terms' when FacetFieldProcessorByHashDV is used with aggregations over multivalued numeric fields\n\nSOLR-14477: Fix incorrect 'relatedness()' calculations in json.facet 'terms' when 'prefix' option is used\n","date":"2020-05-21 02:16:05","modifiedFileCount":"8","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2020-07-06 04:28:08","codes":[{"authorDate":"2018-10-25 04:57:28","commitOrder":3,"curCode":"    public static Integer randomOverrequestParam(Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","date":"2018-10-25 04:57:35","endLine":664,"groupId":"103195","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"randomOverrequestParam","params":"(Randomr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/b912f7fd40882722377728e1121d96ab068196.src","preCode":"    public static Integer randomOverrequestParam(Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":648,"status":"N"},{"authorDate":"2020-07-06 04:28:08","commitOrder":3,"curCode":"    public static Integer randomOverrequestParam(final Random r, final String sort) {\n\n      if (\"index asc\".equals(sort)) {\n        return 0; \r\n      }\n      \n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","date":"2020-07-06 04:28:08","endLine":933,"groupId":"103195","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"randomOverrequestParam","params":"(finalRandomr@finalStringsort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/6dcb9f7b093fa3580c5dbd74736289b18b878b.src","preCode":"    public static Integer randomOverrequestParam(final Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; \r\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); \r\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); \r\n        default: break;\n      }\n      \r\n      return r.nextBoolean() ? null : -1;\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":912,"status":"M"}],"commitId":"fea6c1b9daa243e48297b4ba5a1ece68b8790a5b","commitMessage":"@@@SOLR-14595: add AwaitsFix test to TestJsonFacetRefinement demonstrating problem.  and work around to randomized testing in TestCloudJSONFacetSKGEquiv\n","date":"2020-07-06 04:28:08","modifiedFileCount":"2","status":"M","submitter":"Chris Hostetter"}]
