[{"authorTime":"2016-11-02 01:50:14","codes":[{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, true);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n\n    \r\n    \r\n    \r\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","date":"2016-11-02 01:50:14","endLine":125,"groupId":"21347","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"performQuery","params":"(TopDocshits@IndexSearchersearcher@intdocid@LTRScoringQuerymodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/76c99977113c34e4f89db414aaebe3a4c07aea.src","preCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, true);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n\n    \r\n    \r\n    \r\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, true);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","date":"2016-11-02 01:50:14","endLine":102,"groupId":"21347","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"performQuery","params":"(TopDocshits@IndexSearchersearcher@intdocid@LTRScoringQuerymodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/68/961d22473336a000d37172e6d40057fd60af2c.src","preCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, true);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestSelectiveWeightCreation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"5a66b3bc089e4b3e73b1c41c4cdcd89b183b85e7","commitMessage":"@@@SOLR-8542: Adds Solr Learning to Rank (LTR) plugin for reranking results with machine learning models. (Michael Nilsson.  Diego Ceccarelli.  Joshua Pantony.  Jon Dorando.  Naveen Santhapuri.  Alessandro Benedetti.  David Grohmann.  Christine Poerschke)\n","date":"2016-11-02 01:50:14","modifiedFileCount":"0","status":"B","submitter":"Christine Poerschke"},{"authorTime":"2017-12-08 18:41:33","codes":[{"authorDate":"2017-12-08 18:41:33","commitOrder":2,"curCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, ScoreMode.COMPLETE);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n\n    \r\n    \r\n    \r\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","date":"2017-12-08 18:41:33","endLine":116,"groupId":"16732","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"performQuery","params":"(TopDocshits@IndexSearchersearcher@intdocid@LTRScoringQuerymodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/9713fa52037100c8e54d4026fc034aa7c17fc3.src","preCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, true);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n\n    \r\n    \r\n    \r\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2017-12-08 18:41:33","commitOrder":2,"curCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, ScoreMode.COMPLETE);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","date":"2017-12-08 18:41:33","endLine":93,"groupId":"16732","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"performQuery","params":"(TopDocshits@IndexSearchersearcher@intdocid@LTRScoringQuerymodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/9343609681423fad6b005afda55a5578a5cb9a.src","preCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, true);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestSelectiveWeightCreation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"dcb84701a4c6d293b8eb30c676630d16d6cdcaa8","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-12-08 18:41:33","modifiedFileCount":"293","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-04-10 08:13:23","codes":[{"authorDate":"2018-04-10 08:13:23","commitOrder":3,"curCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createWeight(searcher.rewrite(model), ScoreMode.COMPLETE, 1);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n\n    \r\n    \r\n    \r\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","date":"2018-04-10 08:13:23","endLine":116,"groupId":"101234","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"performQuery","params":"(TopDocshits@IndexSearchersearcher@intdocid@LTRScoringQuerymodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/978946b28a8e41fa27772d2ed92b63fb693ff1.src","preCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, ScoreMode.COMPLETE);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n\n    \r\n    \r\n    \r\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-04-10 08:13:23","commitOrder":3,"curCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createWeight(searcher.rewrite(model), ScoreMode.COMPLETE, 1);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","date":"2018-04-10 08:13:23","endLine":93,"groupId":"101234","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"performQuery","params":"(TopDocshits@IndexSearchersearcher@intdocid@LTRScoringQuerymodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/35/91ce23569061dfab454a906b31c19e30468e15.src","preCode":"  private LTRScoringQuery.ModelWeight performQuery(TopDocs hits,\n      IndexSearcher searcher, int docid, LTRScoringQuery model) throws IOException,\n      ModelException {\n    final List<LeafReaderContext> leafContexts = searcher.getTopReaderContext()\n        .leaves();\n    final int n = ReaderUtil.subIndex(hits.scoreDocs[0].doc, leafContexts);\n    final LeafReaderContext context = leafContexts.get(n);\n    final int deBasedDoc = hits.scoreDocs[0].doc - context.docBase;\n\n    final Weight weight = searcher.createNormalizedWeight(model, ScoreMode.COMPLETE);\n    final Scorer scorer = weight.scorer(context);\n\n    \r\n    scorer.iterator().advance(deBasedDoc);\n    scorer.score();\n    assertTrue(weight instanceof LTRScoringQuery.ModelWeight);\n    final LTRScoringQuery.ModelWeight modelWeight = (LTRScoringQuery.ModelWeight) weight;\n    return modelWeight;\n\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestSelectiveWeightCreation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"1cd859713bda498fe295b2774fa74640d669882b","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-04-10 08:13:23","modifiedFileCount":"67","status":"M","submitter":"Karl Wright"}]
