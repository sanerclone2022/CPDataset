[{"authorTime":"2017-05-31 19:56:14","codes":[{"authorDate":"2017-04-07 18:11:23","commitOrder":3,"curCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }          \n        }\n      }      \n    }    \n","date":"2017-04-07 18:11:23","endLine":368,"groupId":"30164","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Readerin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/bbb36dbd7f37c3f6b93f9e86f82431cb295aeb.src","preCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }          \n        }\n      }      \n    }    \n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"NB"},{"authorDate":"2017-05-31 19:56:14","commitOrder":3,"curCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }\n        }\n      }\n    }\n","date":"2017-05-31 19:56:14","endLine":368,"groupId":"30164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Readerin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1f/4a97071393f9382f506cc83333709a62bc49fd.src","preCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"B"}],"commitId":"97693234def7fb4fc92d8fbaab775705aaaaf565","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-05-31 19:56:14","modifiedFileCount":"119","status":"M","submitter":"Karl Wright"},{"authorTime":"2019-09-13 20:42:38","codes":[{"authorDate":"2017-04-07 18:11:23","commitOrder":4,"curCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }          \n        }\n      }      \n    }    \n","date":"2017-04-07 18:11:23","endLine":368,"groupId":"30164","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Readerin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/bbb36dbd7f37c3f6b93f9e86f82431cb295aeb.src","preCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }          \n        }\n      }      \n    }    \n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"N"},{"authorDate":"2019-09-13 20:42:38","commitOrder":4,"curCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (Map.Entry<String, Set<String>> entry : cpsm.mappings.entrySet()) {\n          for (String mapping : entry.getValue()) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, entry.getKey()), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }\n        }\n      }\n    }\n","date":"2019-09-13 20:42:38","endLine":374,"groupId":"56121","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Readerin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/7c1f570857fe3bd3bdb49e8605d47c89fda2fe.src","preCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"}],"commitId":"ec78ef785275e4d46c0f133c6b55be1f974b8db2","commitMessage":"@@@Changing keyset() to entryset() and sometines values(). (#868)\n\n","date":"2019-09-13 20:42:38","modifiedFileCount":"21","status":"M","submitter":"Koen De Groote"},{"authorTime":"2019-09-13 20:42:38","codes":[{"authorDate":"2019-10-15 00:36:19","commitOrder":5,"curCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (Map.Entry<String, Set<String>> entry : cpsm.mappings.entrySet()) {\n          for (String mapping : entry.getValue()) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, entry.getKey()), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }          \n        }\n      }      \n    }    \n","date":"2019-10-15 00:36:19","endLine":379,"groupId":"102595","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Readerin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/87/878ce87c7130b7a9e1d6dbad4deb2a9f9a4b80.src","preCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (String term : cpsm.mappings.keySet()) {\n          for (String mapping : cpsm.mappings.get(term)) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, term), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }          \n        }\n      }      \n    }    \n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"},{"authorDate":"2019-09-13 20:42:38","commitOrder":5,"curCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (Map.Entry<String, Set<String>> entry : cpsm.mappings.entrySet()) {\n          for (String mapping : entry.getValue()) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, entry.getKey()), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }\n        }\n      }\n    }\n","date":"2019-09-13 20:42:38","endLine":374,"groupId":"102595","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Readerin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/7c1f570857fe3bd3bdb49e8605d47c89fda2fe.src","preCode":"    public void parse(Reader in) throws IOException, ParseException {\n      boolean ignoreCase = synonymManager.getIgnoreCase();\n      for (CasePreservedSynonymMappings cpsm : synonymManager.synonymMappings.values()) {\n        for (Map.Entry<String, Set<String>> entry : cpsm.mappings.entrySet()) {\n          for (String mapping : entry.getValue()) {\n            \r\n            CharsRef casedTerm = analyze(synonymManager.applyCaseSetting(ignoreCase, entry.getKey()), new CharsRefBuilder());\n            CharsRef casedMapping = analyze(synonymManager.applyCaseSetting(ignoreCase, mapping), new CharsRefBuilder());\n            add(casedTerm, casedMapping, false);\n          }\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"N"}],"commitId":"04786244d0ae37eef88948c7fdfb5ccb84ca47da","commitMessage":"@@@LUCENE-8979: Code Cleanup: Use entryset for map iteration wherever possible. - part 2\n\n","date":"2019-10-15 00:36:19","modifiedFileCount":"38","status":"M","submitter":"Koen De Groote"}]
