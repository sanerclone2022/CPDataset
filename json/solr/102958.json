[{"authorTime":"2019-07-15 21:57:13","codes":[{"authorDate":"2019-03-13 12:54:32","commitOrder":2,"curCode":"  private void testFailedDocument(SolrInputDocument sdoc, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), sdoc);\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertNotNull(errors);\n      assertTrue(\"Expected to find \" + errorMsg + \" in errors: \" + errors.toString(),errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    ++numDocsDeletedOrFailed;\n  }\n","date":"2019-03-13 13:32:23","endLine":474,"groupId":"62830","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedDocument","params":"(SolrInputDocumentsdoc@StringerrorMsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ecb22da940d9bd11671696597a3976aa0deec6.src","preCode":"  private void testFailedDocument(SolrInputDocument sdoc, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), sdoc);\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertNotNull(errors);\n      assertTrue(\"Expected to find \" + errorMsg + \" in errors: \" + errors.toString(),errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    ++numDocsDeletedOrFailed;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CategoryRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"NB"},{"authorDate":"2019-07-15 21:57:13","commitOrder":2,"curCode":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n","date":"2019-07-15 21:57:13","endLine":692,"groupId":"40234","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedDocument","params":"(Stringcategory@Stringtimestamp@StringerrorMsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/e6ab75b3a13554a640c33a5468ddf0eeb01d6d.src","preCode":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":682,"status":"B"}],"commitId":"c97551cc36c2b89320428a821e45c79951260673","commitMessage":"@@@SOLR-13375 - 2 dimensional routed aliases\n","date":"2019-07-15 21:57:13","modifiedFileCount":"21","status":"M","submitter":"Gus Heck"},{"authorTime":"2019-10-11 06:17:22","codes":[{"authorDate":"2019-03-13 12:54:32","commitOrder":3,"curCode":"  private void testFailedDocument(SolrInputDocument sdoc, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), sdoc);\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertNotNull(errors);\n      assertTrue(\"Expected to find \" + errorMsg + \" in errors: \" + errors.toString(),errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    ++numDocsDeletedOrFailed;\n  }\n","date":"2019-03-13 13:32:23","endLine":474,"groupId":"102958","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedDocument","params":"(SolrInputDocumentsdoc@StringerrorMsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ecb22da940d9bd11671696597a3976aa0deec6.src","preCode":"  private void testFailedDocument(SolrInputDocument sdoc, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), sdoc);\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertNotNull(errors);\n      assertTrue(\"Expected to find \" + errorMsg + \" in errors: \" + errors.toString(),errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    ++numDocsDeletedOrFailed;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CategoryRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"N"},{"authorDate":"2019-10-11 06:17:22","commitOrder":3,"curCode":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      String message = e.getMessage();\n      assertTrue(\"expected message to contain\" + errorMsg + \" but message was \" + message , message.contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n","date":"2019-10-11 06:17:22","endLine":693,"groupId":"102958","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedDocument","params":"(Stringcategory@Stringtimestamp@StringerrorMsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3d/583aca6dbcc0e6adf15caf29db7e8c175ee849.src","preCode":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      \r\n      final Object errors = resp.getResponseHeader().get(\"errors\"); \r\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":682,"status":"M"}],"commitId":"be813bd0aefcf480f854a05c7880494da5e8c8bf","commitMessage":"@@@SOLR-13760 - restore viability of date math in TRA start property (#879)\n\n* SOLR-13760 - restore viability of date math in TRA start property by \nfixing the start date for time routed aliases\nupon the receipt of the first document to avoid problems\nwith date math calculations required by DRA's\n","date":"2019-10-11 06:17:22","modifiedFileCount":"3","status":"M","submitter":"Gus Heck"}]
