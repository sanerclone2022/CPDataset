[{"authorTime":"2017-02-10 13:39:06","codes":[{"authorDate":"2017-02-10 13:39:06","commitOrder":1,"curCode":"  public void addManyFieldsWithSubAdds() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,add(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.1D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.423456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":214,"groupId":"62535","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addManyFieldsWithSubAdds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/15452f2de73cba03d013d2d1d4eed9c24152da.src","preCode":"  public void addManyFieldsWithSubAdds() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,add(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.1D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.423456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AddEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"},{"authorDate":"2017-02-10 13:39:06","commitOrder":1,"curCode":"  public void subManyFieldsWithSubsubs() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(0L, result);\n        \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(0L, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":187,"groupId":"62535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subManyFieldsWithSubsubs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/58/cef8dabf452c98634bf8f9427dd415c138ee43.src","preCode":"  public void subManyFieldsWithSubsubs() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(0L, result);\n        \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(0L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/SubtractEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"}],"commitId":"62489678d074edb2ee962e1c4ee38026ff504b2a","commitMessage":"@@@SOLR-9916: Adds Stream Evaluators to support evaluating values from tuples\n","date":"2017-02-10 13:39:51","modifiedFileCount":"6","status":"B","submitter":"Dennis Gove"},{"authorTime":"2019-10-11 09:18:45","codes":[{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"  public void addManyFieldsWithSubAdds() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,add(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(10D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.1D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.423456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(4 * 123456789123456789D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":204,"groupId":"10816","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"addManyFieldsWithSubAdds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/094d59711213923cb7bcec0f17e8c1fa2a24b2.src","preCode":"  public void addManyFieldsWithSubAdds() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,add(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.1D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(10.423456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AddEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"  public void subManyFieldsWithSubsubs() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(0D, result);\n        \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(0D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":182,"groupId":"10816","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"subManyFieldsWithSubsubs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/20/12770cf29da6258310bf04532d413875d4b748.src","preCode":"  public void subManyFieldsWithSubsubs() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(0L, result);\n        \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", 123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(0L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/SubtractEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"ad1c24e1903a74c611ec610aaf350d50d709519e","commitMessage":"@@@SOLR-13829: RecursiveEvaluator casts Continuous numbers to Discrete Numbers.  causing mismatch\n","date":"2019-10-11 09:19:25","modifiedFileCount":"17","status":"M","submitter":"Joel Bernstein"}]
