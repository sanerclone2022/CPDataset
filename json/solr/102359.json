[{"authorTime":"2015-08-27 10:18:36","codes":[{"authorDate":"2015-07-14 21:55:46","commitOrder":27,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        result.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        if (operation.sendToOCPQueue) handleResponse(operation.action.toLower(), props, rsp, operation.timeOut);\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2015-07-14 21:55:46","endLine":180,"groupId":"61709","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/b5a157c2e110acc789ee445da5a2386ae1da50.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        result.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        if (operation.sendToOCPQueue) handleResponse(operation.action.toLower(), props, rsp, operation.timeOut);\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"NB"},{"authorDate":"2015-08-27 10:18:36","commitOrder":27,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2015-08-27 10:18:36","endLine":110,"groupId":"61709","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/748359a1410bc387f468d8b3f53b7d00c29f56.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"679dd8f7902d0c607cc020d17b40b93b950c2939","commitMessage":"@@@SOLR-7789: Introduce a ConfigSet management API\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1698043 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-27 10:18:36","modifiedFileCount":"25","status":"M","submitter":"Gregory Chanan"},{"authorTime":"2015-08-27 10:18:36","codes":[{"authorDate":"2016-01-19 19:32:14","commitOrder":28,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} \", action.toLower(), req.getParamString());\n\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2016-01-19 19:32:14","endLine":192,"groupId":"47643","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/1766df95f111416adeee5b96a4f8b6c92c9312.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        result.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        if (operation.sendToOCPQueue) handleResponse(operation.action.toLower(), props, rsp, operation.timeOut);\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"},{"authorDate":"2015-08-27 10:18:36","commitOrder":28,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2015-08-27 10:18:36","endLine":110,"groupId":"61709","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/748359a1410bc387f468d8b3f53b7d00c29f56.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"a2e5c37c85acc7692d6fbcc29866a70db4f8be2e","commitMessage":"@@@SOLR-8534: Add generic support for collection APIs to be async\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1725474 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-19 19:32:14","modifiedFileCount":"4","status":"M","submitter":"Varun Thacker"},{"authorTime":"2015-08-27 10:18:36","codes":[{"authorDate":"2016-02-18 02:37:08","commitOrder":29,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      SolrResponse response = null;\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) {\n          response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        }\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n        final String collectionName = zkProps.getStr(NAME);\n        if (action.equals(CollectionAction.CREATE) && asyncId == null) {\n          if (rsp.getException() == null) {\n            waitForActiveCollection(collectionName, zkProps, cores, response);\n          }\n        }\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2016-02-18 02:37:08","endLine":209,"groupId":"44429","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/4786f8fc382f517e6b2bd39ab14efb77b4ef25.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} \", action.toLower(), req.getParamString());\n\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2015-08-27 10:18:36","commitOrder":29,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2015-08-27 10:18:36","endLine":110,"groupId":"61709","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/748359a1410bc387f468d8b3f53b7d00c29f56.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"31437c9b43cf93128e284e278470a39b2012a6cb","commitMessage":"@@@SOLR-8416: The collections create API should return after all replicas are active.\n","date":"2016-02-18 02:37:08","modifiedFileCount":"7","status":"M","submitter":"markrmiller"},{"authorTime":"2015-08-27 10:18:36","codes":[{"authorDate":"2016-03-01 12:00:22","commitOrder":30,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      SolrResponse response = null;\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) {\n          response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        }\n        else Overseer.getStateUpdateQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n        final String collectionName = zkProps.getStr(NAME);\n        if (action.equals(CollectionAction.CREATE) && asyncId == null) {\n          if (rsp.getException() == null) {\n            waitForActiveCollection(collectionName, zkProps, cores, response);\n          }\n        }\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2016-03-01 12:00:22","endLine":208,"groupId":"44429","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c8/1e18371dc88a1abc9888f1ab837d1f7466a9ef.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      SolrResponse response = null;\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) {\n          response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        }\n        else Overseer.getInQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n        final String collectionName = zkProps.getStr(NAME);\n        if (action.equals(CollectionAction.CREATE) && asyncId == null) {\n          if (rsp.getException() == null) {\n            waitForActiveCollection(collectionName, zkProps, cores, response);\n          }\n        }\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2015-08-27 10:18:36","commitOrder":30,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2015-08-27 10:18:36","endLine":110,"groupId":"61709","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/748359a1410bc387f468d8b3f53b7d00c29f56.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"79b62ee731d81f2eb9abf084c86a5c2f1435af41","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2016-03-01 12:00:22","modifiedFileCount":"79","status":"M","submitter":"Noble Paul"},{"authorTime":"2015-08-27 10:18:36","codes":[{"authorDate":"2016-07-21 00:30:55","commitOrder":31,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      SolrResponse response = null;\n      Map<String, Object> props = operation.execute(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) {\n          response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        }\n        else Overseer.getStateUpdateQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n        final String collectionName = zkProps.getStr(NAME);\n        if (action.equals(CollectionAction.CREATE) && asyncId == null) {\n          if (rsp.getException() == null) {\n            waitForActiveCollection(collectionName, zkProps, cores, response);\n          }\n        }\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2016-07-21 00:30:55","endLine":229,"groupId":"1003","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/7279080ea366fa25f030df431add51682cd256.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      SolrResponse response = null;\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) {\n          response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        }\n        else Overseer.getStateUpdateQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n        final String collectionName = zkProps.getStr(NAME);\n        if (action.equals(CollectionAction.CREATE) && asyncId == null) {\n          if (rsp.getException() == null) {\n            waitForActiveCollection(collectionName, zkProps, cores, response);\n          }\n        }\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2015-08-27 10:18:36","commitOrder":31,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2015-08-27 10:18:36","endLine":110,"groupId":"61709","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/748359a1410bc387f468d8b3f53b7d00c29f56.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"fb4de6adb1bd8b7b97999a98d8464e33ef9e965e","commitMessage":"@@@SOLR-8995: Use lambda to simplify CollectionsHandler\n","date":"2016-07-21 00:30:55","modifiedFileCount":"1","status":"M","submitter":"Noble Paul"},{"authorTime":"2017-01-31 13:57:33","codes":[{"authorDate":"2017-01-31 13:57:33","commitOrder":32,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-01-31 13:57:33","endLine":218,"groupId":"44429","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d7/759cadde0220f295bd9246b4808e83a2b66dd1.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      SolrResponse response = null;\n      Map<String, Object> props = operation.execute(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n        props.put(QUEUE_OPERATION, operation.action.toLower());\n        ZkNodeProps zkProps = new ZkNodeProps(props);\n        if (operation.sendToOCPQueue) {\n          response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);\n        }\n        else Overseer.getStateUpdateQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));\n        final String collectionName = zkProps.getStr(NAME);\n        if (action.equals(CollectionAction.CREATE) && asyncId == null) {\n          if (rsp.getException() == null) {\n            waitForActiveCollection(collectionName, zkProps, cores, response);\n          }\n        }\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2017-01-31 13:57:33","commitOrder":32,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-01-31 13:57:33","endLine":104,"groupId":"61709","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/6f02c9d6b4c39f0620f66250bf4fb1e4c79ae8.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      ConfigSetOperation operation = ConfigSetOperation.get(action);\n      log.info(\"Invoked ConfigSet Action :{} with params {} \", action.toLower(), req.getParamString());\n      Map<String, Object> result = operation.call(req, rsp, this);\n      if (result != null) {\n        \r\n        \r\n        result.put(QUEUE_OPERATION, CONFIGSETS_ACTION_PREFIX + operation.action.toLower());\n        ZkNodeProps props = new ZkNodeProps(result);\n        handleResponse(operation.action.toLower(), props, rsp, DEFAULT_ZK_TIMEOUT);\n      }\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"71abe130697b0f279d6e3613145f1f8f052c7848","commitMessage":"@@@SOLR-8029: Added new style APIs and a framework for creating new APIs and mapping old APIs to new\n","date":"2017-01-31 13:57:33","modifiedFileCount":"43","status":"M","submitter":"Noble Paul"},{"authorTime":"2017-03-29 03:14:27","codes":[{"authorDate":"2017-01-31 13:57:33","commitOrder":33,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-01-31 13:57:33","endLine":218,"groupId":"44429","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d7/759cadde0220f295bd9246b4808e83a2b66dd1.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"},{"authorDate":"2017-03-29 03:14:27","commitOrder":33,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-03-29 03:14:27","endLine":119,"groupId":"61709","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/489df05b0e1da62c79776d828a0dfd1d902675.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"6b0217b7cbff1216bb4ffbecdba02eb8c5dd3df6","commitMessage":"@@@SOLR-6736: Adding support for uploading zipped configsets using ConfigSets API\n","date":"2017-03-29 03:14:27","modifiedFileCount":"18","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-03-29 03:14:27","codes":[{"authorDate":"2018-05-03 10:01:07","commitOrder":34,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2018-05-03 10:01:07","endLine":237,"groupId":"44429","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/7f81aa26b08c76ca7bb3a54284487144ab53cf.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"},{"authorDate":"2017-03-29 03:14:27","commitOrder":34,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-03-29 03:14:27","endLine":119,"groupId":"61709","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/489df05b0e1da62c79776d828a0dfd1d902675.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"84925ba9abc7da8485f27fd52d0f80b14caad98f","commitMessage":"@@@SOLR-12289: Add more MDC logging information to collection admin requests\n","date":"2018-05-03 10:01:07","modifiedFileCount":"3","status":"M","submitter":"Varun Thacker"},{"authorTime":"2017-03-29 03:14:27","codes":[{"authorDate":"2020-04-23 10:32:49","commitOrder":35,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\");\n    }\n\n    \r\n    if (!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isInfoEnabled()) {\n        log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-04-23 10:32:49","endLine":262,"groupId":"14796","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d6/3b48f10934b07988474a4685a03d1b223013be.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\");\n    }\n\n    \r\n    if (!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\", action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2017-03-29 03:14:27","commitOrder":35,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-03-29 03:14:27","endLine":119,"groupId":"61709","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/489df05b0e1da62c79776d828a0dfd1d902675.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"e43b17962a116111af4348cf7548ee2e7a2375b8","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-23 10:32:49","modifiedFileCount":"102","status":"M","submitter":"Erick Erickson"},{"authorTime":"2017-03-29 03:14:27","codes":[{"authorDate":"2020-09-16 17:19:45","commitOrder":36,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isInfoEnabled()) {\n        log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-09-16 17:19:45","endLine":247,"groupId":"14796","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3c/9e37cad3e73dcdf7b94c977e0c399bc25a2849.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\");\n    }\n\n    \r\n    if (!cores.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isInfoEnabled()) {\n        log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2017-03-29 03:14:27","commitOrder":36,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2017-03-29 03:14:27","endLine":119,"groupId":"61709","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/489df05b0e1da62c79776d828a0dfd1d902675.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n\n    \r\n    if(!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"6b87cfb88c1ad428f3b6affb53aef1ed49949ab8","commitMessage":"@@@Merge branch 'master' of github.com:apache/lucene-solr\n","date":"2020-09-16 17:19:45","modifiedFileCount":"37","status":"M","submitter":"noblepaul"},{"authorTime":"2020-09-23 19:55:51","codes":[{"authorDate":"2020-09-16 17:19:45","commitOrder":37,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isInfoEnabled()) {\n        log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-09-16 17:19:45","endLine":247,"groupId":"14796","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3c/9e37cad3e73dcdf7b94c977e0c399bc25a2849.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isInfoEnabled()) {\n        log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"N"},{"authorDate":"2020-09-23 19:55:51","commitOrder":37,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-09-23 19:55:51","endLine":120,"groupId":"61709","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/1a255102cb91922b1f150008dd239717961138.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    if (coreContainer == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\");\n    }\n\n    \r\n    if (!coreContainer.isZooKeeperAware()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"Solr instance is not running in SolrCloud mode.\");\n    }\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"fd0c08615df9440061e5ae664dcfa3f5a7600568","commitMessage":"@@@SOLR-14890: Refactor code to use annotations for configset API (#1911)\n\n","date":"2020-09-23 19:55:51","modifiedFileCount":"12","status":"M","submitter":"Noble Paul"},{"authorTime":"2020-09-23 19:55:51","codes":[{"authorDate":"2020-11-17 05:59:31","commitOrder":38,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isDebugEnabled()) {\n        log.debug(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-11-17 05:59:31","endLine":242,"groupId":"44738","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8d/7e7cff34df1a6bba153fdbe56df77e58b51b59.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isInfoEnabled()) {\n        log.info(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2020-09-23 19:55:51","commitOrder":38,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-09-23 19:55:51","endLine":120,"groupId":"61709","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/1a255102cb91922b1f150008dd239717961138.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"}],"commitId":"2d583eaba7ab8eb778bebbc5557bae29ea481830","commitMessage":"@@@SOLR-14998: logging: info->debug in CollectionsHandler (#2079)\n\nBecause it's almost always redundant with HttpSolrCall's admin request log.\nCo-authored-by: Nazerke Seidan <nseidan@salesforce.com>","date":"2020-11-17 05:59:31","modifiedFileCount":"1","status":"M","submitter":"Nazerke Seidan"},{"authorTime":"2020-09-23 19:55:51","codes":[{"authorDate":"2021-02-25 07:08:16","commitOrder":39,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isDebugEnabled()) {\n        log.debug(\"Invoked Collection Action: {} with params {}\", action.toLower(), req.getParamString());\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2021-02-25 07:08:16","endLine":226,"groupId":"54337","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/2a18aebf76445f2991ee681c4571fac9b42cd7.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isDebugEnabled()) {\n        log.debug(\"Invoked Collection Action :{} with params {} and sendToOCPQueue={}\"\n            , action.toLower(), req.getParamString(), operation.sendToOCPQueue);\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"},{"authorDate":"2020-09-23 19:55:51","commitOrder":39,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-09-23 19:55:51","endLine":120,"groupId":"61709","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/1a255102cb91922b1f150008dd239717961138.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"}],"commitId":"04c95c71af5281e5a6145d0f3b37d871e391d048","commitMessage":"@@@SOLR-15146: remove unreachable code (#2431)\n\n","date":"2021-02-25 07:08:16","modifiedFileCount":"1","status":"M","submitter":"Ilan Ginzburg"},{"authorTime":"2020-09-23 19:55:51","codes":[{"authorDate":"2021-06-03 23:23:55","commitOrder":40,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      final String collection = params.get(COLLECTION);\n      MDCLoggingContext.setCollection(collection);\n      TraceUtils.setDbInstance(req, collection);\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isDebugEnabled()) {\n        log.debug(\"Invoked Collection Action: {} with params {}\", action.toLower(), req.getParamString());\n      }\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","date":"2021-06-03 23:23:55","endLine":221,"groupId":"102359","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/10700c044278947709449dc8958a51b55e1d0e.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    \r\n    CoreContainer cores = checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      CollectionAction action = CollectionAction.get(a);\n      if (action == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      }\n      CollectionOperation operation = CollectionOperation.get(action);\n      if (log.isDebugEnabled()) {\n        log.debug(\"Invoked Collection Action: {} with params {}\", action.toLower(), req.getParamString());\n      }\n      MDCLoggingContext.setCollection(req.getParams().get(COLLECTION));\n      invokeAction(req, rsp, cores, action, operation);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2020-09-23 19:55:51","commitOrder":40,"curCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","date":"2020-09-23 19:55:51","endLine":120,"groupId":"102359","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRequestBody","params":"(SolrQueryRequestreq@SolrQueryResponsersp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/1a255102cb91922b1f150008dd239717961138.src","preCode":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    checkErrors();\n\n    \r\n    SolrParams params = req.getParams();\n    String a = params.get(ConfigSetParams.ACTION);\n    if (a != null) {\n      ConfigSetAction action = ConfigSetAction.get(a);\n      if (action == null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown action: \" + a);\n      if (action == ConfigSetAction.UPLOAD) {\n        handleConfigUploadRequest(req, rsp);\n        return;\n      }\n      invokeAction(req, rsp, action);\n    } else {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"action is a required param\");\n    }\n\n    rsp.setHttpCaching(false);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"}],"commitId":"f38dbd343a10a53f3c941eea83f3251588f52d9c","commitMessage":"@@@SOLR-15392: Tracing span operation name and tags (#115)\n\nThe span operation name of a request is now composed of a command/verb\n  and a templated path. ex:  \"reload:/c/{collection}\"\n\nAdd these span tags:\n* http.method\n* http.status_code\n* http.params (non-standard; renamed from just \"params\")\n* db.type (\"solr\")\n* db.instance (collection or core name)\n* db.user\n\nAnd some span.log for relatively uncommon SolrDispatchFilter cases.\n","date":"2021-06-03 23:23:55","modifiedFileCount":"11","status":"M","submitter":"David Smiley"}]
