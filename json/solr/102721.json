[{"authorTime":"2021-05-08 22:00:23","codes":[{"authorDate":"2020-01-23 00:32:25","commitOrder":3,"curCode":"  public void setupCluster(boolean security) throws Exception {\n    \r\n    final Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Utils.makeMap(\"authorization\",\n                       Utils.makeMap(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", singletonMap(USER,\"admin\"),\n                                     \"permissions\", singletonList(Utils.makeMap(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Utils.makeMap(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n","date":"2020-01-23 00:32:25","endLine":119,"groupId":"9703","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"(booleansecurity)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/9a4069e21089eef3ccd85dd430a8c41bddec67.src","preCode":"  public void setupCluster(boolean security) throws Exception {\n    \r\n    final Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Utils.makeMap(\"authorization\",\n                       Utils.makeMap(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", singletonMap(USER,\"admin\"),\n                                     \"permissions\", singletonList(Utils.makeMap(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Utils.makeMap(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribDocExpirationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"NB"},{"authorDate":"2021-05-08 22:00:23","commitOrder":3,"curCode":"  public static void setupClusterWithSecurityEnabled() throws Exception {\n    final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n            Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                \"user-role\", singletonMap(USER, \"admin\"),\n                \"permissions\", singletonList(Map.of(\"name\", \"all\", \"role\", \"admin\"))),\n            \"authentication\",\n            Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                \"blockUnknown\", true,\n                \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(SECURITY_JSON)\n        .configure();\n  }\n","date":"2021-05-08 22:00:23","endLine":76,"groupId":"9703","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupClusterWithSecurityEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b5/cb3700299407d6932d6a2ec26776371047a1b7.src","preCode":"  public static void setupClusterWithSecurityEnabled() throws Exception {\n    final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n            Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                \"user-role\", singletonMap(USER, \"admin\"),\n                \"permissions\", singletonList(Map.of(\"name\", \"all\", \"role\", \"admin\"))),\n            \"authentication\",\n            Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                \"blockUnknown\", true,\n                \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(SECURITY_JSON)\n        .configure();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaWithAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"ae1ac22eb70d44f80e5c89241bdd0d3e4144e62a","commitMessage":"@@@SOLR-11904: Mark ReplicationHandler's polling thread as a Solr server thread so the PKI Interceptor is activated to allow PULL replicas to replicate from security-enabled leaders (#112)\n\n* SOLR-11904: Mark ReplicationHandler's polling thread as a Solr server thread so the PKI Interceptor is activated to allow PULL replicas to replicate from security-enabled leaders\n\n* Remove unnecessary change\n\n* Re-enable TestPullReplica\n\n* Fix bug introduced with refactoring and rename setupCluster method for new test\n\n* Fix a few IDE complaints\n\n* Address review comments\n\n* Mention Torsten B?gh K?ster in CHANGES.txt","date":"2021-05-08 22:00:23","modifiedFileCount":"2","status":"M","submitter":"Timothy Potter"},{"authorTime":"2021-05-08 22:00:23","codes":[{"authorDate":"2021-06-03 06:17:26","commitOrder":4,"curCode":"  public void setupCluster(boolean security) throws Exception {\n    \r\n    final Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n                       Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", Map.of(USER,\"admin\"),\n                                     \"permissions\", singletonList(Map.of(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", Map.of(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n","date":"2021-06-03 06:17:26","endLine":119,"groupId":"52650","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"(booleansecurity)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d1/1546a49b59f4e56cf959285e3a0df0683223aa.src","preCode":"  public void setupCluster(boolean security) throws Exception {\n    \r\n    final Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Utils.makeMap(\"authorization\",\n                       Utils.makeMap(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", singletonMap(USER,\"admin\"),\n                                     \"permissions\", singletonList(Utils.makeMap(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Utils.makeMap(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribDocExpirationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-05-08 22:00:23","commitOrder":4,"curCode":"  public static void setupClusterWithSecurityEnabled() throws Exception {\n    final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n            Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                \"user-role\", singletonMap(USER, \"admin\"),\n                \"permissions\", singletonList(Map.of(\"name\", \"all\", \"role\", \"admin\"))),\n            \"authentication\",\n            Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                \"blockUnknown\", true,\n                \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(SECURITY_JSON)\n        .configure();\n  }\n","date":"2021-05-08 22:00:23","endLine":76,"groupId":"9703","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupClusterWithSecurityEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b5/cb3700299407d6932d6a2ec26776371047a1b7.src","preCode":"  public static void setupClusterWithSecurityEnabled() throws Exception {\n    final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n            Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                \"user-role\", singletonMap(USER, \"admin\"),\n                \"permissions\", singletonList(Map.of(\"name\", \"all\", \"role\", \"admin\"))),\n            \"authentication\",\n            Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                \"blockUnknown\", true,\n                \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(SECURITY_JSON)\n        .configure();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaWithAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"}],"commitId":"c8e06a7298a2745c2b83102169073e2f8e8eceb5","commitMessage":"@@@SOLR-15385 Address many rawtypes warnings (#107)\n\nAddressed significant usage of raw types with Class.  Map.  and SolrRequest; removed over 400 SuppressWarning annotations.\n\nMap construction was replaced with Map.of when immutability was possible.  and Utils.makeMap when a mutable map was required.\n\nDiscovered a potential bug in the PackageStore tests where not all assertions were being verified - these tests will be fixed separately.\n\nCo-authored-by: David Smiley <dsmiley@salesforce.com>","date":"2021-06-03 06:17:26","modifiedFileCount":"244","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-05-08 22:00:23","codes":[{"authorDate":"2021-08-10 09:28:22","commitOrder":5,"curCode":"  public void setupCluster(boolean security) throws Exception {\n    \r\n    final MiniSolrCloudCluster.Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n                       Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", Map.of(USER,\"admin\"),\n                                     \"permissions\", singletonList(Map.of(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", Map.of(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n","date":"2021-08-10 09:28:22","endLine":118,"groupId":"102721","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"setupCluster","params":"(booleansecurity)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/da/d34efdd2d097e25cbbbfbbc43427d63a0a81bc.src","preCode":"  public void setupCluster(boolean security) throws Exception {\n    \r\n    final Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n                       Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", Map.of(USER,\"admin\"),\n                                     \"permissions\", singletonList(Map.of(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", Map.of(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribDocExpirationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2021-05-08 22:00:23","commitOrder":5,"curCode":"  public static void setupClusterWithSecurityEnabled() throws Exception {\n    final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n            Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                \"user-role\", singletonMap(USER, \"admin\"),\n                \"permissions\", singletonList(Map.of(\"name\", \"all\", \"role\", \"admin\"))),\n            \"authentication\",\n            Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                \"blockUnknown\", true,\n                \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(SECURITY_JSON)\n        .configure();\n  }\n","date":"2021-05-08 22:00:23","endLine":76,"groupId":"102721","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setupClusterWithSecurityEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b5/cb3700299407d6932d6a2ec26776371047a1b7.src","preCode":"  public static void setupClusterWithSecurityEnabled() throws Exception {\n    final String SECURITY_JSON = Utils.toJSONString\n        (Map.of(\"authorization\",\n            Map.of(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                \"user-role\", singletonMap(USER, \"admin\"),\n                \"permissions\", singletonList(Map.of(\"name\", \"all\", \"role\", \"admin\"))),\n            \"authentication\",\n            Map.of(\"class\", BasicAuthPlugin.class.getName(),\n                \"blockUnknown\", true,\n                \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(SECURITY_JSON)\n        .configure();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaWithAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"}],"commitId":"890ef78421f8c0645ae9f4f53ebca1177e8141d9","commitMessage":"@@@SOLR-15428: Integrate the OpenJDK JMH micro benchmark framework for micro benchmarks and performance comparisons & investigation. (#214)\n\n","date":"2021-08-10 09:28:22","modifiedFileCount":"13","status":"M","submitter":"Mark Robert Miller"}]
