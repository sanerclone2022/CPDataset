[{"authorTime":"2013-02-27 09:58:07","codes":[{"authorDate":"2013-02-27 09:58:07","commitOrder":1,"curCode":"  public void testDefaults() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text\", SweetSpotSimilarity.class);\n\n    \r\n    DefaultSimilarity d = new DefaultSimilarity();\n    for (int i = 0; i <=1000; i++) {\n      assertEquals(\"tf: i=\"+i, d.tf(i), sim.tf(i), 0.0F);\n    }\n\n    \r\n    assertEquals(\"norm 1\",  1.00F, sim.computeLengthNorm(1),  0.0F);\n    assertEquals(\"norm 4\",  0.50F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 16\", 0.25F, sim.computeLengthNorm(16), 0.0F);\n  }\n","date":"2013-02-27 09:58:07","endLine":48,"groupId":"32449","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/bfe4e029306c0ebed10734dd04c1aef5a58b8e.src","preCode":"  public void testDefaults() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text\", SweetSpotSimilarity.class);\n\n    \r\n    DefaultSimilarity d = new DefaultSimilarity();\n    for (int i = 0; i <=1000; i++) {\n      assertEquals(\"tf: i=\"+i, d.tf(i), sim.tf(i), 0.0F);\n    }\n\n    \r\n    assertEquals(\"norm 1\",  1.00F, sim.computeLengthNorm(1),  0.0F);\n    assertEquals(\"norm 4\",  0.50F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 16\", 0.25F, sim.computeLengthNorm(16), 0.0F);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2013-02-27 09:58:07","commitOrder":1,"curCode":"  public void testBaselineParameters() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text_baseline\", \n                                            SweetSpotSimilarity.class);\n    \n    DefaultSimilarity d = new DefaultSimilarity();\n\n    \r\n    for (int i = 1; i <=6; i++) {\n      assertEquals(\"tf i=\"+i, 1.5F, sim.tf(i), 0.0F);\n    }\n    \r\n    for (int i = 6; i <=1000; i++) {\n      assertTrue(\"tf: i=\"+i+\" : s=\"+sim.tf(i)+\n                 \" < d=\"+d.tf(i),\n                 sim.tf(i) < d.tf(i));\n    }\n\n    \r\n    assertEquals(\"norm 1 == 7\", \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 2 == 6\",  \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 3\",  1.00F, sim.computeLengthNorm(3),  0.0F);\n    assertEquals(\"norm 4\",  1.00F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 5\",  1.00F, sim.computeLengthNorm(5),  0.0F);\n    assertTrue(\"norm 6 too high: \" + sim.computeLengthNorm(6),\n               sim.computeLengthNorm(6) < 1.0F);\n    assertTrue(\"norm 7 higher then norm 6\", \n               sim.computeLengthNorm(7) < sim.computeLengthNorm(6));\n    assertEquals(\"norm 20\", 0.25F, sim.computeLengthNorm(20), 0.0F);\n  }\n","date":"2013-02-27 09:58:07","endLine":81,"groupId":"32441","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaselineParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/bfe4e029306c0ebed10734dd04c1aef5a58b8e.src","preCode":"  public void testBaselineParameters() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text_baseline\", \n                                            SweetSpotSimilarity.class);\n    \n    DefaultSimilarity d = new DefaultSimilarity();\n\n    \r\n    for (int i = 1; i <=6; i++) {\n      assertEquals(\"tf i=\"+i, 1.5F, sim.tf(i), 0.0F);\n    }\n    \r\n    for (int i = 6; i <=1000; i++) {\n      assertTrue(\"tf: i=\"+i+\" : s=\"+sim.tf(i)+\n                 \" < d=\"+d.tf(i),\n                 sim.tf(i) < d.tf(i));\n    }\n\n    \r\n    assertEquals(\"norm 1 == 7\", \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 2 == 6\",  \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 3\",  1.00F, sim.computeLengthNorm(3),  0.0F);\n    assertEquals(\"norm 4\",  1.00F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 5\",  1.00F, sim.computeLengthNorm(5),  0.0F);\n    assertTrue(\"norm 6 too high: \" + sim.computeLengthNorm(6),\n               sim.computeLengthNorm(6) < 1.0F);\n    assertTrue(\"norm 7 higher then norm 6\", \n               sim.computeLengthNorm(7) < sim.computeLengthNorm(6));\n    assertEquals(\"norm 20\", 0.25F, sim.computeLengthNorm(20), 0.0F);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"db6ca427baed3640ea2962d1a30cf0d2a02d6fc4","commitMessage":"@@@SOLR-1365: New SweetSpotSimilarityFactory allows customizable TF/IDF based Similarity when you know the optimal \"Sweet Spot\" of values for the field length and TF scoring factors\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1450577 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-27 09:58:07","modifiedFileCount":"3","status":"B","submitter":"Chris M. Hostetter"},{"authorTime":"2015-09-15 06:03:35","codes":[{"authorDate":"2015-09-15 06:03:35","commitOrder":2,"curCode":"  public void testDefaults() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text\", SweetSpotSimilarity.class);\n\n    \r\n    ClassicSimilarity d = new ClassicSimilarity();\n    for (int i = 0; i <=1000; i++) {\n      assertEquals(\"tf: i=\"+i, d.tf(i), sim.tf(i), 0.0F);\n    }\n\n    \r\n    assertEquals(\"norm 1\",  1.00F, sim.computeLengthNorm(1),  0.0F);\n    assertEquals(\"norm 4\",  0.50F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 16\", 0.25F, sim.computeLengthNorm(16), 0.0F);\n  }\n","date":"2015-09-15 06:03:35","endLine":48,"groupId":"32449","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/07d1afd941cdd9fc7cf43516c27ad2228a15e9.src","preCode":"  public void testDefaults() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text\", SweetSpotSimilarity.class);\n\n    \r\n    DefaultSimilarity d = new DefaultSimilarity();\n    for (int i = 0; i <=1000; i++) {\n      assertEquals(\"tf: i=\"+i, d.tf(i), sim.tf(i), 0.0F);\n    }\n\n    \r\n    assertEquals(\"norm 1\",  1.00F, sim.computeLengthNorm(1),  0.0F);\n    assertEquals(\"norm 4\",  0.50F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 16\", 0.25F, sim.computeLengthNorm(16), 0.0F);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2015-09-15 06:03:35","commitOrder":2,"curCode":"  public void testBaselineParameters() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text_baseline\", \n                                            SweetSpotSimilarity.class);\n    \n    ClassicSimilarity d = new ClassicSimilarity();\n\n    \r\n    for (int i = 1; i <=6; i++) {\n      assertEquals(\"tf i=\"+i, 1.5F, sim.tf(i), 0.0F);\n    }\n    \r\n    for (int i = 6; i <=1000; i++) {\n      assertTrue(\"tf: i=\"+i+\" : s=\"+sim.tf(i)+\n                 \" < d=\"+d.tf(i),\n                 sim.tf(i) < d.tf(i));\n    }\n\n    \r\n    assertEquals(\"norm 1 == 7\", \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 2 == 6\",  \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 3\",  1.00F, sim.computeLengthNorm(3),  0.0F);\n    assertEquals(\"norm 4\",  1.00F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 5\",  1.00F, sim.computeLengthNorm(5),  0.0F);\n    assertTrue(\"norm 6 too high: \" + sim.computeLengthNorm(6),\n               sim.computeLengthNorm(6) < 1.0F);\n    assertTrue(\"norm 7 higher then norm 6\", \n               sim.computeLengthNorm(7) < sim.computeLengthNorm(6));\n    assertEquals(\"norm 20\", 0.25F, sim.computeLengthNorm(20), 0.0F);\n  }\n","date":"2015-09-15 06:03:35","endLine":81,"groupId":"32441","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaselineParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/07d1afd941cdd9fc7cf43516c27ad2228a15e9.src","preCode":"  public void testBaselineParameters() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text_baseline\", \n                                            SweetSpotSimilarity.class);\n    \n    DefaultSimilarity d = new DefaultSimilarity();\n\n    \r\n    for (int i = 1; i <=6; i++) {\n      assertEquals(\"tf i=\"+i, 1.5F, sim.tf(i), 0.0F);\n    }\n    \r\n    for (int i = 6; i <=1000; i++) {\n      assertTrue(\"tf: i=\"+i+\" : s=\"+sim.tf(i)+\n                 \" < d=\"+d.tf(i),\n                 sim.tf(i) < d.tf(i));\n    }\n\n    \r\n    assertEquals(\"norm 1 == 7\", \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 2 == 6\",  \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 3\",  1.00F, sim.computeLengthNorm(3),  0.0F);\n    assertEquals(\"norm 4\",  1.00F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 5\",  1.00F, sim.computeLengthNorm(5),  0.0F);\n    assertTrue(\"norm 6 too high: \" + sim.computeLengthNorm(6),\n               sim.computeLengthNorm(6) < 1.0F);\n    assertTrue(\"norm 7 higher then norm 6\", \n               sim.computeLengthNorm(7) < sim.computeLengthNorm(6));\n    assertEquals(\"norm 20\", 0.25F, sim.computeLengthNorm(20), 0.0F);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"a944ab17a712f58e8417639763a0c7267fa11e61","commitMessage":"@@@LUCENE-6789: change IndexSearcher default similarity to BM25\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1703070 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-09-15 06:03:35","modifiedFileCount":"74","status":"M","submitter":"Robert Muir"},{"authorTime":"2017-05-18 22:27:31","codes":[{"authorDate":"2017-05-18 22:27:31","commitOrder":3,"curCode":"  public void testDefaults() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text\", SweetSpotSimilarity.class);\n\n    \r\n    ClassicSimilarity d = new ClassicSimilarity();\n    for (int i = 0; i <=1000; i++) {\n      assertEquals(\"tf: i=\"+i, d.tf(i), sim.tf(i), 0.0F);\n    }\n\n    \r\n    assertEquals(\"norm 1\",  1.00F, computeNorm(sim, 1),  0.0F);\n    assertEquals(\"norm 4\",  0.50F, computeNorm(sim, 4),  0.0F);\n    assertEquals(\"norm 16\", 0.25F, computeNorm(sim, 16), 0.0F);\n  }\n","date":"2017-05-18 22:27:31","endLine":91,"groupId":"103142","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/52/d6f8d4c04d871324b12aa64220747d3ae7c259.src","preCode":"  public void testDefaults() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text\", SweetSpotSimilarity.class);\n\n    \r\n    ClassicSimilarity d = new ClassicSimilarity();\n    for (int i = 0; i <=1000; i++) {\n      assertEquals(\"tf: i=\"+i, d.tf(i), sim.tf(i), 0.0F);\n    }\n\n    \r\n    assertEquals(\"norm 1\",  1.00F, sim.computeLengthNorm(1),  0.0F);\n    assertEquals(\"norm 4\",  0.50F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 16\", 0.25F, sim.computeLengthNorm(16), 0.0F);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2017-05-18 22:27:31","commitOrder":3,"curCode":"  public void testBaselineParameters() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text_baseline\", \n                                            SweetSpotSimilarity.class);\n    \n    ClassicSimilarity d = new ClassicSimilarity();\n\n    \r\n    for (int i = 1; i <=6; i++) {\n      assertEquals(\"tf i=\"+i, 1.5F, sim.tf(i), 0.0F);\n    }\n    \r\n    for (int i = 6; i <=1000; i++) {\n      assertTrue(\"tf: i=\"+i+\" : s=\"+sim.tf(i)+\n                 \" < d=\"+d.tf(i),\n                 sim.tf(i) < d.tf(i));\n    }\n\n    \r\n    assertEquals(\"norm 1 == 7\", \n                 computeNorm(sim, 1), computeNorm(sim, 7),  0.0F);\n    assertEquals(\"norm 2 == 6\",  \n                 computeNorm(sim, 1), computeNorm(sim, 7),  0.0F);\n    assertEquals(\"norm 3\",  1.00F, computeNorm(sim, 3),  0.0F);\n    assertEquals(\"norm 4\",  1.00F, computeNorm(sim, 4),  0.0F);\n    assertEquals(\"norm 5\",  1.00F, computeNorm(sim, 5),  0.0F);\n    assertTrue(\"norm 6 too high: \" + computeNorm(sim, 6),\n               computeNorm(sim, 6) < 1.0F);\n    assertTrue(\"norm 7 higher then norm 6\", \n               computeNorm(sim, 7) < computeNorm(sim, 6));\n    assertEquals(\"norm 20\", 0.25F, computeNorm(sim, 20), 0.0F);\n  }\n","date":"2017-05-18 22:27:31","endLine":124,"groupId":"103142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaselineParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/52/d6f8d4c04d871324b12aa64220747d3ae7c259.src","preCode":"  public void testBaselineParameters() throws Exception {\n    SweetSpotSimilarity sim = getSimilarity(\"text_baseline\", \n                                            SweetSpotSimilarity.class);\n    \n    ClassicSimilarity d = new ClassicSimilarity();\n\n    \r\n    for (int i = 1; i <=6; i++) {\n      assertEquals(\"tf i=\"+i, 1.5F, sim.tf(i), 0.0F);\n    }\n    \r\n    for (int i = 6; i <=1000; i++) {\n      assertTrue(\"tf: i=\"+i+\" : s=\"+sim.tf(i)+\n                 \" < d=\"+d.tf(i),\n                 sim.tf(i) < d.tf(i));\n    }\n\n    \r\n    assertEquals(\"norm 1 == 7\", \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 2 == 6\",  \n                 sim.computeLengthNorm(1), sim.computeLengthNorm(7),  0.0F);\n    assertEquals(\"norm 3\",  1.00F, sim.computeLengthNorm(3),  0.0F);\n    assertEquals(\"norm 4\",  1.00F, sim.computeLengthNorm(4),  0.0F);\n    assertEquals(\"norm 5\",  1.00F, sim.computeLengthNorm(5),  0.0F);\n    assertTrue(\"norm 6 too high: \" + sim.computeLengthNorm(6),\n               sim.computeLengthNorm(6) < 1.0F);\n    assertTrue(\"norm 7 higher then norm 6\", \n               sim.computeLengthNorm(7) < sim.computeLengthNorm(6));\n    assertEquals(\"norm 20\", 0.25F, sim.computeLengthNorm(20), 0.0F);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"06a6034d9bc8f06ea567c0110b954b35515c2ea0","commitMessage":"@@@LUCENE-7730: Better accuracy for the length normalization factor.\n","date":"2017-05-18 22:27:31","modifiedFileCount":"43","status":"M","submitter":"Adrien Grand"}]
