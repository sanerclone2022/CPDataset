[{"authorTime":"2016-10-12 15:16:41","codes":[{"authorDate":"2016-06-14 22:07:45","commitOrder":3,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2016-06-14 22:07:45","endLine":156,"groupId":"40407","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/02/f8d5a3d761e39d6ec4f18691a6c231418ef962.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"NB"},{"authorDate":"2016-10-12 15:16:41","commitOrder":3,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2016-10-12 15:16:41","endLine":3220,"groupId":"40407","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/97/24b8175d545cd38f8317620ac0e5f4c7ab269e.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3202,"status":"B"}],"commitId":"6512d0c62024177cc5d6c8b7086faaa149565dfb","commitMessage":"@@@SOLR-9610: New AssertTool in SolrCLI for easier cross platform assertions from command line\n","date":"2016-10-12 15:16:41","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2016-10-26 20:19:22","codes":[{"authorDate":"2016-10-26 20:19:22","commitOrder":4,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2016-10-26 20:19:22","endLine":168,"groupId":"40407","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/5019095edf2ccc7e8e1d233c59fe29d572fcc2.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2016-10-26 20:19:22","commitOrder":4,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2016-10-26 20:19:22","endLine":3295,"groupId":"40407","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/5019095edf2ccc7e8e1d233c59fe29d572fcc2.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3277,"status":"M"}],"commitId":"db43bfb0464347143e58e662113a5630224b070e","commitMessage":"@@@SOLR-9610: Add timeout option.  abort early on auth failure\nSOLR-9680: Better error messages in SolrCLI when authentication required\n","date":"2016-10-26 20:19:22","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2017-02-08 02:15:51","codes":[{"authorDate":"2017-02-08 02:15:51","commitOrder":5,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2017-02-08 02:15:51","endLine":164,"groupId":"40407","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/6cf8dfae1f9546c522ecdc2c72c0c50de6b99c.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2017-02-08 02:15:51","commitOrder":5,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2017-02-08 02:15:51","endLine":3318,"groupId":"40407","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/6cf8dfae1f9546c522ecdc2c72c0c50de6b99c.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3301,"status":"M"}],"commitId":"e1a577645756addc8ed060024e4af7ccd15c2321","commitMessage":"@@@SOLR-9997: Enable configuring SolrHttpClientBuilder via java system property.\n","date":"2017-02-08 02:15:51","modifiedFileCount":"4","status":"M","submitter":"markrmiller"},{"authorTime":"2019-04-03 10:45:33","codes":[{"authorDate":"2019-04-03 10:45:33","commitOrder":6,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2019-04-03 10:45:33","endLine":206,"groupId":"34928","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7e/ddc7669090b2be6b8bb2b54184bdebabfb6fac.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2019-04-03 10:45:33","commitOrder":6,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2019-04-03 10:45:33","endLine":3802,"groupId":"34928","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7e/ddc7669090b2be6b8bb2b54184bdebabfb6fac.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3785,"status":"M"}],"commitId":"2d690885e554dda7b4b4e0f46f2bd9cacdb32df6","commitMessage":"@@@SOLR-13322 - let forbidden apis check for sysout in solr core\n","date":"2019-04-03 10:45:33","modifiedFileCount":"29","status":"M","submitter":"Gus Heck"},{"authorTime":"2019-04-30 05:14:38","codes":[{"authorDate":"2019-04-30 05:14:38","commitOrder":7,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          if (verbose) {\n            exc.printStackTrace(CLIO.getErrStream());\n          }\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2019-04-30 05:14:38","endLine":212,"groupId":"112496","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/83ec817861ea350398ea92fa311db93e40bbae.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"},{"authorDate":"2019-04-30 05:14:38","commitOrder":7,"curCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          if (verbose) {\n            CLIO.err(\"\\nERROR: \" + exc + \"\\n\");\n          } else {\n            CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          }\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","date":"2019-04-30 05:14:38","endLine":3915,"groupId":"112496","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"runTool","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/83ec817861ea350398ea92fa311db93e40bbae.src","preCode":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        toolExitStatus = runAssert(cli);\n      } catch (Exception exc) {\n        \r\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 100; \r\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3894,"status":"M"}],"commitId":"6eccf2bf53899e0b1f47c8bb67cc5bca82966cb4","commitMessage":"@@@SOLR-13427: Support simulating the execution of autoscaling suggestions.\n","date":"2019-04-30 05:14:38","modifiedFileCount":"23","status":"M","submitter":"Andrzej Bialecki"}]
