[{"authorTime":"2014-09-09 00:34:23","codes":[{"authorDate":"2014-09-09 00:34:23","commitOrder":1,"curCode":"  private void removeQueryFacetsUnderLimits(ResponseBuilder rb) {\n    if (rb.stage != ResponseBuilder.STAGE_EXECUTE_QUERY) {\n      return;\n    }\n    FacetInfo fi = rb._facetInfo;\n    Map<String, QueryFacet> query_facets = fi.queryFacets;\n    if (query_facets == null) {\n      return;\n    }\n    LinkedHashMap<String, QueryFacet> newQueryFacets = new LinkedHashMap<>();\n\n    \r\n    int minCount = rb.req.getParams().getInt(FacetParams.FACET_MINCOUNT, 0);\n    boolean replace = false;\n    for (Map.Entry<String, QueryFacet> ent : query_facets.entrySet()) {\n      if (ent.getValue().count >= minCount) {\n        newQueryFacets.put(ent.getKey(), ent.getValue());\n      } else {\n        log.trace(\"Removing facetQuery/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n        replace = true;\n      }\n    }\n    if (replace) {\n      fi.queryFacets = newQueryFacets;\n    }\n  }\n","date":"2014-09-09 00:34:23","endLine":660,"groupId":"45747","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeQueryFacetsUnderLimits","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/9b86ec4929312b05ed721e1476290e9811e7b2.src","preCode":"  private void removeQueryFacetsUnderLimits(ResponseBuilder rb) {\n    if (rb.stage != ResponseBuilder.STAGE_EXECUTE_QUERY) {\n      return;\n    }\n    FacetInfo fi = rb._facetInfo;\n    Map<String, QueryFacet> query_facets = fi.queryFacets;\n    if (query_facets == null) {\n      return;\n    }\n    LinkedHashMap<String, QueryFacet> newQueryFacets = new LinkedHashMap<>();\n\n    \r\n    int minCount = rb.req.getParams().getInt(FacetParams.FACET_MINCOUNT, 0);\n    boolean replace = false;\n    for (Map.Entry<String, QueryFacet> ent : query_facets.entrySet()) {\n      if (ent.getValue().count >= minCount) {\n        newQueryFacets.put(ent.getKey(), ent.getValue());\n      } else {\n        log.trace(\"Removing facetQuery/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n        replace = true;\n      }\n    }\n    if (replace) {\n      fi.queryFacets = newQueryFacets;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"B"},{"authorDate":"2014-09-09 00:34:23","commitOrder":1,"curCode":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          log.trace(\"Removing facet/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n","date":"2014-09-09 00:34:23","endLine":1379,"groupId":"63385","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"respectMinCount","params":"(longminCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/9b86ec4929312b05ed721e1476290e9811e7b2.src","preCode":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          log.trace(\"Removing facet/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1365,"status":"B"}],"commitId":"7fbd55f67949836ca051333937e8b4a7acb231ec","commitMessage":"@@@SOLR-6187: facet.mincount ignored in range faceting using distributed search\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1623429 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-09 00:34:23","modifiedFileCount":"2","status":"B","submitter":"Erick Erickson"},{"authorTime":"2020-04-23 10:32:49","codes":[{"authorDate":"2020-04-23 10:32:49","commitOrder":2,"curCode":"  private void removeQueryFacetsUnderLimits(ResponseBuilder rb) {\n    if (rb.stage != ResponseBuilder.STAGE_EXECUTE_QUERY) {\n      return;\n    }\n    FacetInfo fi = rb._facetInfo;\n    Map<String, QueryFacet> query_facets = fi.queryFacets;\n    if (query_facets == null) {\n      return;\n    }\n    LinkedHashMap<String, QueryFacet> newQueryFacets = new LinkedHashMap<>();\n\n    \r\n    int minCount = rb.req.getParams().getInt(FacetParams.FACET_MINCOUNT, 0);\n    boolean replace = false;\n    for (Map.Entry<String, QueryFacet> ent : query_facets.entrySet()) {\n      if (ent.getValue().count >= minCount) {\n        newQueryFacets.put(ent.getKey(), ent.getValue());\n      } else {\n        if (log.isTraceEnabled()) {\n          log.trace(\"Removing facetQuery/key: {}/{} mincount={}\", ent.getKey(), ent.getValue(), minCount);\n        }\n        replace = true;\n      }\n    }\n    if (replace) {\n      fi.queryFacets = newQueryFacets;\n    }\n  }\n","date":"2020-04-23 10:32:49","endLine":881,"groupId":"102322","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeQueryFacetsUnderLimits","params":"(ResponseBuilderrb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/8525a00eb0ff528e26b144fe0a063818676168.src","preCode":"  private void removeQueryFacetsUnderLimits(ResponseBuilder rb) {\n    if (rb.stage != ResponseBuilder.STAGE_EXECUTE_QUERY) {\n      return;\n    }\n    FacetInfo fi = rb._facetInfo;\n    Map<String, QueryFacet> query_facets = fi.queryFacets;\n    if (query_facets == null) {\n      return;\n    }\n    LinkedHashMap<String, QueryFacet> newQueryFacets = new LinkedHashMap<>();\n\n    \r\n    int minCount = rb.req.getParams().getInt(FacetParams.FACET_MINCOUNT, 0);\n    boolean replace = false;\n    for (Map.Entry<String, QueryFacet> ent : query_facets.entrySet()) {\n      if (ent.getValue().count >= minCount) {\n        newQueryFacets.put(ent.getKey(), ent.getValue());\n      } else {\n        log.trace(\"Removing facetQuery/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n        replace = true;\n      }\n    }\n    if (replace) {\n      fi.queryFacets = newQueryFacets;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":854,"status":"M"},{"authorDate":"2020-04-23 10:32:49","commitOrder":2,"curCode":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          if (log.isTraceEnabled()) {\n            log.trace(\"Removing facet/key: {}/{} mincount={}\", ent.getKey(), ent.getValue(), minCount);\n          }\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n","date":"2020-04-23 10:32:49","endLine":1550,"groupId":"102322","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"respectMinCount","params":"(longminCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/8525a00eb0ff528e26b144fe0a063818676168.src","preCode":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          log.trace(\"Removing facet/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1534,"status":"M"}],"commitId":"e43b17962a116111af4348cf7548ee2e7a2375b8","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-23 10:32:49","modifiedFileCount":"102","status":"M","submitter":"Erick Erickson"}]
