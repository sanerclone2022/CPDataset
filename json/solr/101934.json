[{"authorTime":"2021-08-10 09:28:22","codes":[{"authorDate":"2021-08-10 09:28:22","commitOrder":1,"curCode":"    public void setup(\n        BenchmarkParams benchmarkParams, MiniClusterState.MiniClusterBenchState miniClusterState)\n        throws Exception {\n\n      SplittableRandom random = miniClusterState.getRandom();\n\n      System.setProperty(\"maxMergeAtOnce\", \"20\");\n      System.setProperty(\"segmentsPerTier\", \"20\");\n\n      miniClusterState.startMiniCluster(nodeCount);\n\n      miniClusterState.createCollection(collection, numShards, numReplicas);\n\n      \r\n      DocMaker docMaker = new DocMaker();\n      docMaker.addField(\n          \"id\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.UNIQUE_INT));\n      docMaker.addField(\n          \"facet_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(64)\n              .withMaxCardinality(facetCard, random));\n      docMaker.addField(\n          \"facet2_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(16)\n              .withMaxCardinality(facetCard, random));\n      docMaker.addField(\n          \"facet3_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.UNICODE)\n              .withMaxLength(128)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"text\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(64)\n              .withTokenCount(random.nextInt(350, 512)));\n      docMaker.addField(\n          \"int_i\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.INTEGER));\n      docMaker.addField(\n          \"int2_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"int3_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"int4_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n\n      miniClusterState.index(collection, docMaker, docCount);\n      miniClusterState.forceMerge(collection, 15);\n\n      params = new ModifiableSolrParams();\n\n      MiniClusterState.params(\n          params,\n          \"q\",\n          \"*:*\",\n          \"json.facet\",\n          \"{f1:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'min(int3_i)'}  }\"\n              + \" , f2:{method:'\"\n              + fm\n              + \"',, type:terms, field:'facet_s', sort:'x desc', facet:{x:'max(int3_i)'}  } \"\n              + \" , f3:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'unique(facet2_s)'}  } \"\n              + \" , f4:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'hll(facet2_s)'}  } \"\n              + \" , f5:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'variance(int3_i)'}  } \"\n              + \" , f6:{type:terms, field:'int3_i', limit:1, sort:'x desc', facet:{x:'hll(int2_i)'}  } \"\n              + \" , f7:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'missing(int4_i)'}  } \"\n              + \" , f8:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'countvals(int4_i)'}  } \"\n              + \"}\");\n\n      \r\n    }\n","date":"2021-08-10 09:28:22","endLine":184,"groupId":"42394","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"(BenchmarkParamsbenchmarkParams@MiniClusterState.MiniClusterBenchStateminiClusterState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/08/8c703e67a54d4e3407d335b60cb06ac5e7f519.src","preCode":"    public void setup(\n        BenchmarkParams benchmarkParams, MiniClusterState.MiniClusterBenchState miniClusterState)\n        throws Exception {\n\n      SplittableRandom random = miniClusterState.getRandom();\n\n      System.setProperty(\"maxMergeAtOnce\", \"20\");\n      System.setProperty(\"segmentsPerTier\", \"20\");\n\n      miniClusterState.startMiniCluster(nodeCount);\n\n      miniClusterState.createCollection(collection, numShards, numReplicas);\n\n      \r\n      DocMaker docMaker = new DocMaker();\n      docMaker.addField(\n          \"id\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.UNIQUE_INT));\n      docMaker.addField(\n          \"facet_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(64)\n              .withMaxCardinality(facetCard, random));\n      docMaker.addField(\n          \"facet2_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(16)\n              .withMaxCardinality(facetCard, random));\n      docMaker.addField(\n          \"facet3_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.UNICODE)\n              .withMaxLength(128)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"text\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(64)\n              .withTokenCount(random.nextInt(350, 512)));\n      docMaker.addField(\n          \"int_i\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.INTEGER));\n      docMaker.addField(\n          \"int2_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"int3_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"int4_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n\n      miniClusterState.index(collection, docMaker, docCount);\n      miniClusterState.forceMerge(collection, 15);\n\n      params = new ModifiableSolrParams();\n\n      MiniClusterState.params(\n          params,\n          \"q\",\n          \"*:*\",\n          \"json.facet\",\n          \"{f1:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'min(int3_i)'}  }\"\n              + \" , f2:{method:'\"\n              + fm\n              + \"',, type:terms, field:'facet_s', sort:'x desc', facet:{x:'max(int3_i)'}  } \"\n              + \" , f3:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'unique(facet2_s)'}  } \"\n              + \" , f4:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'hll(facet2_s)'}  } \"\n              + \" , f5:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'variance(int3_i)'}  } \"\n              + \" , f6:{type:terms, field:'int3_i', limit:1, sort:'x desc', facet:{x:'hll(int2_i)'}  } \"\n              + \" , f7:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'missing(int4_i)'}  } \"\n              + \" , f8:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'countvals(int4_i)'}  } \"\n              + \"}\");\n\n      \r\n    }\n","realPath":"solr/benchmark/src/java/org/apache/solr/bench/search/JsonFaceting.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"},{"authorDate":"2021-08-10 09:28:22","commitOrder":1,"curCode":"  public void testGenDoc() throws Exception {\n    SplittableRandom random = new SplittableRandom();\n\n    DocMaker docMaker = new DocMaker();\n    docMaker.addField(\n        \"id\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.UNIQUE_INT));\n\n    docMaker.addField(\n        \"facet_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(64)\n            .withMaxCardinality(5, random));\n    docMaker.addField(\n        \"facet2_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(16)\n            .withMaxCardinality(100, random));\n    docMaker.addField(\n        \"facet3_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.UNICODE)\n            .withMaxLength(128)\n            .withMaxCardinality(12000, random));\n    docMaker.addField(\n        \"text\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(12)\n            .withMaxTokenCount(ThreadLocalRandom.current().nextInt(512) + 1));\n    docMaker.addField(\n        \"int_i\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.INTEGER));\n    docMaker.addField(\n        \"int2_i\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.INTEGER)\n            .withMaxCardinality(500, random));\n\n    for (int i = 0; i < 5; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      \r\n    }\n  }\n","date":"2021-08-10 09:28:22","endLine":81,"groupId":"42394","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGenDoc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/51fcef4aebc5240b6f12b51fc5572286238d0b.src","preCode":"  public void testGenDoc() throws Exception {\n    SplittableRandom random = new SplittableRandom();\n\n    DocMaker docMaker = new DocMaker();\n    docMaker.addField(\n        \"id\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.UNIQUE_INT));\n\n    docMaker.addField(\n        \"facet_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(64)\n            .withMaxCardinality(5, random));\n    docMaker.addField(\n        \"facet2_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(16)\n            .withMaxCardinality(100, random));\n    docMaker.addField(\n        \"facet3_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.UNICODE)\n            .withMaxLength(128)\n            .withMaxCardinality(12000, random));\n    docMaker.addField(\n        \"text\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(12)\n            .withMaxTokenCount(ThreadLocalRandom.current().nextInt(512) + 1));\n    docMaker.addField(\n        \"int_i\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.INTEGER));\n    docMaker.addField(\n        \"int2_i\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.INTEGER)\n            .withMaxCardinality(500, random));\n\n    for (int i = 0; i < 5; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      \r\n    }\n  }\n","realPath":"solr/benchmark/src/test/org/apache/solr/bench/DockMakerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"}],"commitId":"890ef78421f8c0645ae9f4f53ebca1177e8141d9","commitMessage":"@@@SOLR-15428: Integrate the OpenJDK JMH micro benchmark framework for micro benchmarks and performance comparisons & investigation. (#214)\n\n","date":"2021-08-10 09:28:22","modifiedFileCount":"13","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2021-09-10 00:29:14","codes":[{"authorDate":"2021-09-10 00:29:14","commitOrder":2,"curCode":"    public void setup(\n        BenchmarkParams benchmarkParams, MiniClusterState.MiniClusterBenchState miniClusterState)\n        throws Exception {\n\n      System.setProperty(\"maxMergeAtOnce\", \"20\");\n      System.setProperty(\"segmentsPerTier\", \"20\");\n\n      miniClusterState.startMiniCluster(nodeCount);\n\n      miniClusterState.createCollection(collection, numShards, numReplicas);\n\n      \r\n      Docs docs =\n          docs()\n              .field(\"id\", integers().incrementing())\n              .field(\n                  \"facet_s\",\n                  strings().basicLatinAlphabet().maxCardinality(facetCard).ofLengthBetween(1, 64))\n              .field(\n                  \"facet2_s\",\n                  strings().basicLatinAlphabet().maxCardinality(facetCard).ofLengthBetween(1, 16))\n              .field(\n                  \"facet3_s\",\n                  strings()\n                      .basicMultilingualPlaneAlphabet()\n                      .maxCardinality(facetCard2)\n                      .ofLengthBetween(1, 128))\n              .field(strings().basicLatinAlphabet().multi(512).ofLengthBetween(4, 16))\n              .field(integers().all())\n              .field(integers().allWithMaxCardinality(facetCard2))\n              .field(integers().allWithMaxCardinality(facetCard2))\n              .field(integers().allWithMaxCardinality(facetCard2));\n\n      miniClusterState.index(collection, docs, docCount);\n      miniClusterState.forceMerge(collection, 15);\n\n      params = new ModifiableSolrParams();\n\n      MiniClusterState.params(\n          params,\n          \"q\",\n          \"*:*\",\n          \"json.facet\",\n          \"{f1:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'min(int3_i)'}  }\"\n              + \" , f2:{method:'\"\n              + fm\n              + \"',, type:terms, field:'facet_s', sort:'x desc', facet:{x:'max(int3_i)'}  } \"\n              + \" , f3:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'unique(facet2_s)'}  } \"\n              + \" , f4:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'hll(facet2_s)'}  } \"\n              + \" , f5:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'variance(int3_i)'}  } \"\n              + \" , f6:{type:terms, field:'int3_i', limit:1, sort:'x desc', facet:{x:'hll(int2_i)'}  } \"\n              + \" , f7:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'missing(int4_i)'}  } \"\n              + \" , f8:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'countvals(int4_i)'}  } \"\n              + '}');\n\n      \r\n    }\n","date":"2021-09-10 00:29:14","endLine":162,"groupId":"101934","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setup","params":"(BenchmarkParamsbenchmarkParams@MiniClusterState.MiniClusterBenchStateminiClusterState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/e4b87f5fc1c1e17d7c950d62f4954feb1218cf.src","preCode":"    public void setup(\n        BenchmarkParams benchmarkParams, MiniClusterState.MiniClusterBenchState miniClusterState)\n        throws Exception {\n\n      SplittableRandom random = miniClusterState.getRandom();\n\n      System.setProperty(\"maxMergeAtOnce\", \"20\");\n      System.setProperty(\"segmentsPerTier\", \"20\");\n\n      miniClusterState.startMiniCluster(nodeCount);\n\n      miniClusterState.createCollection(collection, numShards, numReplicas);\n\n      \r\n      DocMaker docMaker = new DocMaker();\n      docMaker.addField(\n          \"id\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.UNIQUE_INT));\n      docMaker.addField(\n          \"facet_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(64)\n              .withMaxCardinality(facetCard, random));\n      docMaker.addField(\n          \"facet2_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(16)\n              .withMaxCardinality(facetCard, random));\n      docMaker.addField(\n          \"facet3_s\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.UNICODE)\n              .withMaxLength(128)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"text\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.ALPHEBETIC)\n              .withMaxLength(64)\n              .withTokenCount(random.nextInt(350, 512)));\n      docMaker.addField(\n          \"int_i\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.INTEGER));\n      docMaker.addField(\n          \"int2_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"int3_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n      docMaker.addField(\n          \"int4_i\",\n          FieldDef.FieldDefBuilder.aFieldDef()\n              .withContent(DocMaker.Content.INTEGER)\n              .withMaxCardinality(facetCard2, random));\n\n      miniClusterState.index(collection, docMaker, docCount);\n      miniClusterState.forceMerge(collection, 15);\n\n      params = new ModifiableSolrParams();\n\n      MiniClusterState.params(\n          params,\n          \"q\",\n          \"*:*\",\n          \"json.facet\",\n          \"{f1:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'min(int3_i)'}  }\"\n              + \" , f2:{method:'\"\n              + fm\n              + \"',, type:terms, field:'facet_s', sort:'x desc', facet:{x:'max(int3_i)'}  } \"\n              + \" , f3:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'unique(facet2_s)'}  } \"\n              + \" , f4:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'hll(facet2_s)'}  } \"\n              + \" , f5:{method:'\"\n              + fm\n              + \"', type:terms, field:'facet_s', sort:'x desc', facet:{x:'variance(int3_i)'}  } \"\n              + \" , f6:{type:terms, field:'int3_i', limit:1, sort:'x desc', facet:{x:'hll(int2_i)'}  } \"\n              + \" , f7:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'missing(int4_i)'}  } \"\n              + \" , f8:{type:terms, field:'facet_s', limit:2, sort:'x desc', facet:{x:'countvals(int4_i)'}  } \"\n              + \"}\");\n\n      \r\n    }\n","realPath":"solr/benchmark/src/java/org/apache/solr/bench/search/JsonFaceting.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2021-09-10 00:29:14","commitOrder":2,"curCode":"  public void testGenDoc() {\n    Docs docMaker =\n        docs()\n            .field(\"id\", integers().incrementing())\n            .field(\n                \"facet_s\",\n                strings()\n                    .basicMultilingualPlaneAlphabet()\n                    .maxCardinality(integers().between(5, 16))\n                    .ofLengthBetween(1, 128))\n            .field(booleans().all());\n\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = docMaker.inputDocument();\n      if (log.isInfoEnabled()) {\n        log.info(\"doc:\\n{}\", doc);\n      }\n    }\n  }\n","date":"2021-09-10 00:29:14","endLine":226,"groupId":"101934","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGenDoc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/93c535f5fde5cc00855210d4bf5a680393b288.src","preCode":"  public void testGenDoc() throws Exception {\n    SplittableRandom random = new SplittableRandom();\n\n    DocMaker docMaker = new DocMaker();\n    docMaker.addField(\n        \"id\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.UNIQUE_INT));\n\n    docMaker.addField(\n        \"facet_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(64)\n            .withMaxCardinality(5, random));\n    docMaker.addField(\n        \"facet2_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(16)\n            .withMaxCardinality(100, random));\n    docMaker.addField(\n        \"facet3_s\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.UNICODE)\n            .withMaxLength(128)\n            .withMaxCardinality(12000, random));\n    docMaker.addField(\n        \"text\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxLength(12)\n            .withMaxTokenCount(ThreadLocalRandom.current().nextInt(512) + 1));\n    docMaker.addField(\n        \"int_i\", FieldDef.FieldDefBuilder.aFieldDef().withContent(DocMaker.Content.INTEGER));\n    docMaker.addField(\n        \"int2_i\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.INTEGER)\n            .withMaxCardinality(500, random));\n\n    for (int i = 0; i < 5; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      \r\n    }\n  }\n","realPath":"solr/benchmark/src/test/org/apache/solr/bench/DockMakerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"}],"commitId":"88801396adf702ad394f557cdd610c4928a2e372","commitMessage":"@@@SOLR-15581: New DSL/impl for benchmark random data generation. (#254)\n\n","date":"2021-09-10 00:29:14","modifiedFileCount":"6","status":"M","submitter":"Mark Robert Miller"}]
