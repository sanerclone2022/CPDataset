[{"authorTime":"2020-05-19 04:22:56","codes":[{"authorDate":"2020-05-19 04:22:56","commitOrder":3,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2020-05-19 21:10:23","endLine":380,"groupId":"48328","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ee/4570d95d7037a313c550a083c21513e148b064.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"MB"},{"authorDate":"2020-05-19 04:22:56","commitOrder":3,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    \r\n  }\n","date":"2020-05-19 21:10:23","endLine":307,"groupId":"48328","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/87/47565dbe0c81f84b453bb7a1fb690585c2c6e6.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    \r\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"B"}],"commitId":"16aad55369d285fec96425f996984a9f4afe28e4","commitMessage":"@@@SOLR-14476: Add percentiles and standard deviation aggregations to stats.  facet and timeseries Streaming Expressions\n","date":"2020-05-19 21:10:23","modifiedFileCount":"8","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2021-04-01 23:34:41","codes":[{"authorDate":"2021-04-01 23:34:41","commitOrder":4,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        }  else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-01 23:38:54","endLine":378,"groupId":"48328","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/0c34624a0855abb0f9d65ea421991d0c4a3637.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"},{"authorDate":"2021-04-01 23:34:41","commitOrder":4,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n","date":"2021-04-01 23:38:54","endLine":307,"groupId":"48328","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/26/bc861376ba115b2ce14918c33663e52c28179f.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"00bc7101f274dcd8a49aeea159a476f79e89ceb9","commitMessage":"@@@SOLR-15208: Add the countDist aggregation to the stats.  facet and timeseries Streaming Expressions\n","date":"2021-04-01 23:38:54","modifiedFileCount":"6","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2021-04-01 23:34:41","codes":[{"authorDate":"2021-04-07 21:54:39","commitOrder":5,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n\n\n    \r\n    if(split != null) {\n      buf.append('\"');\n      buf.append(\"split\");\n      buf.append('\"');\n      buf.append(\":{\");\n      buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n      buf.append(\",\\\"field\\\":\\\"\").append(split.toString()).append('\"');\n      buf.append(\",\\\"limit\\\":\").append(limit);\n      buf.append(\",\\\"overrequest\\\":100\");\n      if(_metrics[0].getIdentifier().startsWith(\"count(\")) {\n        buf.append(\",\\\"sort\\\":\\\"\").append(\"count\").append(\" desc\\\"\");\n      } else {\n        buf.append(\",\\\"sort\\\":\\\"\").append(\"facet_0\").append(\" desc\\\"\");\n      }\n      buf.append(\",\\\"facet\\\":{\");\n      \r\n      int metricCount = 0;\n      for(Metric metric : _metrics) {\n        String identifier = metric.getIdentifier();\n        if(!identifier.startsWith(\"count(\")) {\n          if(metricCount>0) {\n            buf.append(\",\");\n          }\n          if(identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if(identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          }  else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n          ++metricCount;\n        }\n      }\n      buf.append(\"}}\");\n    } else {\n      \r\n      int metricCount = 0;\n      for(Metric metric : _metrics) {\n        String identifier = metric.getIdentifier();\n        if(!identifier.startsWith(\"count(\")) {\n          if(metricCount>0) {\n            buf.append(\",\");\n          }\n          if(identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if(identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          }  else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n          ++metricCount;\n        }\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-07 21:54:50","endLine":445,"groupId":"10368","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/aea17ea5bd3e25281eb439d37df5b0b4be5c41.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        }  else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"M"},{"authorDate":"2021-04-01 23:34:41","commitOrder":5,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n","date":"2021-04-01 23:38:54","endLine":307,"groupId":"10368","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/26/bc861376ba115b2ce14918c33663e52c28179f.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"N"}],"commitId":"440d4baab12885c962de75e46e150d2723e20215","commitMessage":"@@@SOLR-14916: Add split parameter to timeseries Streaming Expression\n","date":"2021-04-07 21:54:50","modifiedFileCount":"2","status":"M","submitter":"Joel Bernstein"}]
