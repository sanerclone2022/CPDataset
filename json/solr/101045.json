[{"authorTime":"2018-11-11 08:48:50","codes":[{"authorDate":"2018-11-17 21:25:16","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","date":"2018-11-18 06:14:40","endLine":53,"groupId":"10523","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/cd581628e4c3921973936168fcbb4f0fc6ece5.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestHeatmapFacetingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2018-11-11 08:48:50","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","date":"2018-11-11 10:44:25","endLine":67,"groupId":"53989","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/d3876bdafce66a90fc0b6b54eb533979831ff2.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"NB"}],"commitId":"d17c6d8897aad4b06c9c7200d0c445e1170e503f","commitMessage":"@@@SOLR-12981: Introduce SolrJ type for JSON facet response parsing\n\nRecent JIRA's (SOLR-12947.  SOLR-12965) have added support making it\neasier to compose JSON query/faceting requests using SolrJ.  But neither\nmade parsing the responses to these queries any easier.\n\nThis commit introduces NestableJsonFacet (along with several companion\ntypes) which are Java representations of the JSON faceting response.\nThey can be accessed via the new QueryResponse method:\n`getJsonFacetingResponse()`.\n","date":"2018-11-18 06:14:40","modifiedFileCount":"6","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2021-01-18 23:59:41","codes":[{"authorDate":"2021-01-18 23:59:41","commitOrder":4,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1)\n        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)\n        .process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","date":"2021-01-18 23:59:41","endLine":55,"groupId":"101045","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/97/7d4055e0d642378e468b5bc2d224130b269a94.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.SOURCE_HOME, \"solrj/src/test-files/solrj/solr/configsets/spatial/conf\").toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    indexSpatialData();\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestHeatmapFacetingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2021-01-18 23:59:41","commitOrder":4,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)\n        .process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","date":"2021-01-18 23:59:41","endLine":76,"groupId":"101045","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fe/0f3169d144bb888e99b1203e0e6c9feea941d1.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(CONFIG_NAME, new File(ExternalPaths.TECHPRODUCTS_CONFIGSET).toPath())\n        .configure();\n\n    final List<String> solrUrls = new ArrayList<>();\n    solrUrls.add(cluster.getJettySolrRunner(0).getBaseUrl().toString());\n\n    CollectionAdminRequest.createCollection(COLLECTION_NAME, CONFIG_NAME, 1, 1).process(cluster.getSolrClient());\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(cluster.getSolrClient());\n    assertEquals(0, updateResponse.getStatus());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"8505d4d416fdf707bab55bc4da9a71ddb3374274","commitMessage":"@@@SOLR-15052: Per-replica states for reducing overseer bottlenecks (trunk) (#2177)\n\n","date":"2021-01-18 23:59:41","modifiedFileCount":"53","status":"M","submitter":"Noble Paul"}]
