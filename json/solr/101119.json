[{"authorTime":"2018-11-11 08:48:50","codes":[{"authorDate":"2018-11-11 08:48:50","commitOrder":1,"curCode":"  public void testSimpleJsonTermsFacet() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3));\n  }\n","date":"2018-11-11 10:44:25","endLine":143,"groupId":"34441","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleJsonTermsFacet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/d3876bdafce66a90fc0b6b54eb533979831ff2.src","preCode":"  public void testSimpleJsonTermsFacet() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2018-11-11 08:48:50","commitOrder":1,"curCode":"  public void testTermsFacet2() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(5);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3),\n        new FacetBucket(\"connector\", 2),\n        new FacetBucket(\"graphics card\", 2));\n  }\n","date":"2018-11-11 10:44:25","endLine":166,"groupId":"34441","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTermsFacet2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/d3876bdafce66a90fc0b6b54eb533979831ff2.src","preCode":"  public void testTermsFacet2() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(5);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3),\n        new FacetBucket(\"connector\", 2),\n        new FacetBucket(\"graphics card\", 2));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"}],"commitId":"52998fa50e60ce9c7f49167b1ab107347c30d8d6","commitMessage":"@@@SOLR-12965: Add facet support to JsonQueryRequest\n","date":"2018-11-11 10:44:25","modifiedFileCount":"3","status":"B","submitter":"Jason Gerlowski"},{"authorTime":"2018-11-17 21:25:16","codes":[{"authorDate":"2018-11-17 21:25:16","commitOrder":2,"curCode":"  public void testSimpleJsonTermsFacet() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertHasFacetWithBucketValues(topLevelFacetingData,\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3));\n  }\n","date":"2018-11-18 06:14:40","endLine":145,"groupId":"101119","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleJsonTermsFacet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/ab80127d5c511678de2ce71b00aa26f185f322.src","preCode":"  public void testSimpleJsonTermsFacet() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2018-11-17 21:25:16","commitOrder":2,"curCode":"  public void testTermsFacet2() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(5);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertHasFacetWithBucketValues(topLevelFacetingData,\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3),\n        new FacetBucket(\"connector\", 2),\n        new FacetBucket(\"graphics card\", 2));\n  }\n","date":"2018-11-18 06:14:40","endLine":169,"groupId":"101119","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTermsFacet2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/ab80127d5c511678de2ce71b00aa26f185f322.src","preCode":"  public void testTermsFacet2() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    \r\n    final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(5);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"categories\", categoryFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    \r\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(32, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4),\n        new FacetBucket(\"memory\", 3),\n        new FacetBucket(\"connector\", 2),\n        new FacetBucket(\"graphics card\", 2));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"d17c6d8897aad4b06c9c7200d0c445e1170e503f","commitMessage":"@@@SOLR-12981: Introduce SolrJ type for JSON facet response parsing\n\nRecent JIRA's (SOLR-12947.  SOLR-12965) have added support making it\neasier to compose JSON query/faceting requests using SolrJ.  But neither\nmade parsing the responses to these queries any easier.\n\nThis commit introduces NestableJsonFacet (along with several companion\ntypes) which are Java representations of the JSON faceting response.\nThey can be accessed via the new QueryResponse method:\n`getJsonFacetingResponse()`.\n","date":"2018-11-18 06:14:40","modifiedFileCount":"6","status":"M","submitter":"Jason Gerlowski"}]
