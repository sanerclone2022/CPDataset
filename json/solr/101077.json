[{"authorTime":"2018-11-11 08:48:50","codes":[{"authorDate":"2018-11-11 08:48:50","commitOrder":1,"curCode":"  public void testSingleStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasStatFacetWithValue(rawResponse,\"sum_price\", 5251.270030975342);\n  }\n","date":"2018-11-11 10:44:25","endLine":213,"groupId":"1813","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingleStatFacet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/17f7f0535d3e8dfed600d6a9bebde7d0ff3bf4.src","preCode":"  public void testSingleStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasStatFacetWithValue(rawResponse,\"sum_price\", 5251.270030975342);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"},{"authorDate":"2018-11-11 08:48:50","commitOrder":1,"curCode":"  public void testMultiStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\")\n        .withStatFacet(\"avg_price\", \"avg(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasStatFacetWithValue(rawResponse,\"sum_price\", 5251.270030975342);\n    assertHasStatFacetWithValue(rawResponse,\"avg_price\", 328.20437693595886);\n  }\n","date":"2018-11-11 10:44:25","endLine":231,"groupId":"1813","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiStatFacet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/17f7f0535d3e8dfed600d6a9bebde7d0ff3bf4.src","preCode":"  public void testMultiStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\")\n        .withStatFacet(\"avg_price\", \"avg(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasStatFacetWithValue(rawResponse,\"sum_price\", 5251.270030975342);\n    assertHasStatFacetWithValue(rawResponse,\"avg_price\", 328.20437693595886);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"B"}],"commitId":"52998fa50e60ce9c7f49167b1ab107347c30d8d6","commitMessage":"@@@SOLR-12965: Add facet support to JsonQueryRequest\n","date":"2018-11-11 10:44:25","modifiedFileCount":"3","status":"B","submitter":"Jason Gerlowski"},{"authorTime":"2018-11-17 21:25:16","codes":[{"authorDate":"2018-11-17 21:25:16","commitOrder":2,"curCode":"  public void testSingleStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertExpectedDocumentsFoundAndReturned(response, NUM_TECHPRODUCTS_DOCS, 10);\n    final NestableJsonFacet topLevelFacetData = response.getJsonFacetingResponse();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, topLevelFacetData.getCount());\n    assertHasStatFacetWithValue(topLevelFacetData,\"sum_price\", 5251.270030975342);\n  }\n","date":"2018-11-18 06:14:40","endLine":266,"groupId":"101077","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingleStatFacet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/4fdd2de78d748666b54478e94e6768d8f02407.src","preCode":"  public void testSingleStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasStatFacetWithValue(rawResponse,\"sum_price\", 5251.270030975342);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"},{"authorDate":"2018-11-17 21:25:16","commitOrder":2,"curCode":"  public void testMultiStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\")\n        .withStatFacet(\"avg_price\", \"avg(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertExpectedDocumentsFoundAndReturned(response, NUM_TECHPRODUCTS_DOCS, 10);\n    final NestableJsonFacet topLevelFacetData = response.getJsonFacetingResponse();\n    assertHasStatFacetWithValue(topLevelFacetData,\"sum_price\", 5251.270030975342);\n    assertHasStatFacetWithValue(topLevelFacetData,\"avg_price\", 328.20437693595886);\n  }\n","date":"2018-11-18 06:14:40","endLine":281,"groupId":"101077","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiStatFacet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/4fdd2de78d748666b54478e94e6768d8f02407.src","preCode":"  public void testMultiStatFacet() throws Exception {\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withStatFacet(\"sum_price\", \"sum(price)\")\n        .withStatFacet(\"avg_price\", \"avg(price)\");\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasStatFacetWithValue(rawResponse,\"sum_price\", 5251.270030975342);\n    assertHasStatFacetWithValue(rawResponse,\"avg_price\", 328.20437693595886);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"d17c6d8897aad4b06c9c7200d0c445e1170e503f","commitMessage":"@@@SOLR-12981: Introduce SolrJ type for JSON facet response parsing\n\nRecent JIRA's (SOLR-12947.  SOLR-12965) have added support making it\neasier to compose JSON query/faceting requests using SolrJ.  But neither\nmade parsing the responses to these queries any easier.\n\nThis commit introduces NestableJsonFacet (along with several companion\ntypes) which are Java representations of the JSON faceting response.\nThey can be accessed via the new QueryResponse method:\n`getJsonFacetingResponse()`.\n","date":"2018-11-18 06:14:40","modifiedFileCount":"6","status":"M","submitter":"Jason Gerlowski"}]
