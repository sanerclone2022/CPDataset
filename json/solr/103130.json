[{"authorTime":"2015-10-12 20:15:07","codes":[{"authorDate":"2015-10-12 20:15:07","commitOrder":1,"curCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","date":"2015-10-12 20:15:07","endLine":150,"groupId":"31872","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/de/3c849ce20c8bcd291f313e618e3a7cc0d83f80.src","preCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2015-10-12 20:15:07","commitOrder":1,"curCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","date":"2015-10-12 20:15:07","endLine":200,"groupId":"31872","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullIteratorFilteredDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/de/3c849ce20c8bcd291f313e618e3a7cc0d83f80.src","preCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"}],"commitId":"b3d191832cc355149c67e4c095fd08aae5ad7d4e","commitMessage":"@@@LUCENE-6301: Removal of org.apache.lucene.Filter.\n\nFrom a Lucene perspective Filter is gone. However it was still used for things\nlike DocSet and SolrConstantScoreQuery in Solr.  so it has been moved to\nthe oas.search package for now.  even though in the long term it would be nice\nfor Solr to move to the Query API entirely as well.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1708097 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-10-12 20:15:07","modifiedFileCount":"50","status":"B","submitter":"Adrien Grand"},{"authorTime":"2016-05-24 16:33:15","codes":[{"authorDate":"2016-05-24 16:33:15","commitOrder":2,"curCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","date":"2016-05-24 16:33:15","endLine":159,"groupId":"31872","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/4723b82c9957f50a391218729ccfe71afb32ef.src","preCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2016-05-24 16:33:15","commitOrder":2,"curCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","date":"2016-05-24 16:33:15","endLine":220,"groupId":"31872","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullIteratorFilteredDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/4723b82c9957f50a391218729ccfe71afb32ef.src","preCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"e44509f2dfc22f95f0a13372461d6db58b66611c","commitMessage":"@@@LUCENE-7277: Make Query.hashCode and Query.equals abstract.\n","date":"2016-05-24 16:33:15","modifiedFileCount":"113","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2018-07-30 15:49:34","codes":[{"authorDate":"2018-07-30 15:49:34","commitOrder":3,"curCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits.value);\n    reader.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:20:36","endLine":159,"groupId":"31872","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/88/b16ae66661688e575feeed146cfd4bd1cef7cd.src","preCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2018-07-30 15:49:34","commitOrder":3,"curCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits.value);\n    reader.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:20:36","endLine":220,"groupId":"31872","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullIteratorFilteredDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/88/b16ae66661688e575feeed146cfd4bd1cef7cd.src","preCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"3a837ca3745cc4a1cdb582be01ad38890b1dedd0","commitMessage":"@@@LUCENE-8412: Further simplification.\n","date":"2018-07-30 22:20:36","modifiedFileCount":"4","status":"M","submitter":"Adrien Grand"},{"authorTime":"2018-07-30 16:08:16","codes":[{"authorDate":"2018-07-30 16:08:16","commitOrder":4,"curCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits.value);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits.value);\n    reader.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:38:05","endLine":159,"groupId":"103130","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4a/5c80543f49536d3df9748ced73144236cb059e.src","preCode":"  public void testNullDocIdSet() throws Exception {\n    \r\n    \r\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n    \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return null;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n\n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits.value);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2018-07-30 16:08:16","commitOrder":4,"curCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits.value);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits.value);\n    reader.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:38:05","endLine":220,"groupId":"103130","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullIteratorFilteredDocIdSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4a/5c80543f49536d3df9748ced73144236cb059e.src","preCode":"  public void testNullIteratorFilteredDocIdSet() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"c\", \"val\", Field.Store.NO));\n    writer.addDocument(doc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    \r\n    IndexSearcher searcher = newSearcher(reader);\n    Assert.assertEquals(1, searcher.search(new MatchAllDocsQuery(), 10).totalHits);\n    \n      \r\n    Filter f = new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        final DocIdSet innerNullIteratorSet = new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          } \n\n          @Override\n          public long ramBytesUsed() {\n            return 0L;\n          }\n        };\n        return new FilteredDocIdSet(innerNullIteratorSet) {\n          @Override\n          protected boolean match(int docid) {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public String toString(String field) {\n        return \"nullDocIdSetFilter\";\n      }\n      \n      @Override\n      public boolean equals(Object other) {\n        return other == this;\n      }\n      \n      @Override\n      public int hashCode() {\n        return System.identityHashCode(this);\n      }\n    };\n    \n    Query filtered = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), Occur.MUST)\n        .add(f, Occur.FILTER)\n        .build();\n    Assert.assertEquals(0, searcher.search(filtered, 10).totalHits.value);\n    reader.close();\n    dir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestFilteredDocIdSet.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"9ca053712af0795cbd0d0d9f2d862f24d9e547c3","commitMessage":"@@@LUCENE-8430: TopDocs.totalHits may now be a lower bound of the hit count.\n","date":"2018-07-30 22:38:05","modifiedFileCount":"178","status":"M","submitter":"Adrien Grand"}]
