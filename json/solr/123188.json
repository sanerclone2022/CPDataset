[{"authorTime":"2018-10-25 04:57:28","codes":[{"authorDate":"2018-10-25 04:57:28","commitOrder":1,"curCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected,null));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2018-10-25 04:57:35","endLine":355,"groupId":"19234","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFacetSKGsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery@finalStringforeQ@finalStringbackQ)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/129935adbc73eb249b4ed64e12ee00dd104f05.src","preCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected,null));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"B"},{"authorDate":"2018-10-25 04:57:28","commitOrder":1,"curCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2018-10-25 04:57:35","endLine":466,"groupId":"19234","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFacetCountsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/b912f7fd40882722377728e1121d96ab068196.src","preCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"B"}],"commitId":"71988c756b76a96cb96fc8f86183219a4a008389","commitMessage":"@@@SOLR-12793: Move TestCloudJSONFacetJoinDomain amd TestCloudJSONFacetSKG to the facet test package\n","date":"2018-10-25 04:57:35","modifiedFileCount":"1","status":"B","submitter":"Varun Thacker"},{"authorTime":"2018-10-25 04:57:28","codes":[{"authorDate":"2020-05-21 02:16:05","commitOrder":2,"curCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2020-05-21 02:16:05","endLine":388,"groupId":"19234","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFacetSKGsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery@finalStringforeQ@finalStringbackQ)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/75/e961155460b62496b59c9e5832b9ec200b4f19.src","preCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected,null));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"},{"authorDate":"2018-10-25 04:57:28","commitOrder":2,"curCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2018-10-25 04:57:35","endLine":466,"groupId":"19234","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFacetCountsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/b912f7fd40882722377728e1121d96ab068196.src","preCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"N"}],"commitId":"28209cb8b1fe2a4d8050e4877c4df2ad5d85509b","commitMessage":"@@@SOLR-14492: Fix ArrayIndexOutOfBoundsException in json.facet 'terms' when FacetFieldProcessorByHashDV is used with aggregations over multivalued numeric fields\n\nSOLR-14477: Fix incorrect 'relatedness()' calculations in json.facet 'terms' when 'prefix' option is used\n","date":"2020-05-21 02:16:05","modifiedFileCount":"8","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":3,"curCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      @SuppressWarnings({\"rawtypes\"})\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":403,"groupId":"62910","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFacetSKGsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery@finalStringforeQ@finalStringbackQ)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/09/92af80ab0ea3099fbf678928c0e327f604b644.src","preCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":3,"curCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      @SuppressWarnings({\"rawtypes\"})\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":471,"groupId":"62910","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFacetCountsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/877461e87be42d91f2be1dffb06fb9c1c79d99.src","preCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":432,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-09 02:08:25","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":4,"curCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList<Object> topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      @SuppressWarnings(\"unchecked\")\n      final NamedList<Object> facetResponse = (NamedList<Object>) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2021-06-09 02:08:25","endLine":402,"groupId":"123188","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"assertFacetSKGsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery@finalStringforeQ@finalStringbackQ)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6f/24519260509732bcf0867661851378dab55ed7.src","preCode":"  private void assertFacetSKGsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                         Map<String,TermFacet> expected,\n                                         final String query,\n                                         final String foreQ,\n                                         final String backQ) throws SolrServerException, IOException {\n    final SolrParams baseParams = params(\"rows\",\"0\", \"fore\", foreQ, \"back\", backQ);\n    \n    final SolrParams facetParams = params(\"q\", query,\n                                          \"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      @SuppressWarnings({\"rawtypes\"})\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n\n      \r\n      \r\n      \r\n      \r\n      assertFacetSKGsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n      \n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"M"},{"authorDate":"2021-06-09 02:08:25","commitOrder":4,"curCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    NamedList<Object> topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      @SuppressWarnings(\"unchecked\")\n      final NamedList<Object> facetResponse = (NamedList<Object>) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","date":"2021-06-09 02:08:25","endLine":505,"groupId":"123188","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"assertFacetCountsAreCorrect","params":"(finalAtomicIntegermaxBucketsToCheck@Map<String@TermFacet>expected@finalStringquery)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c6/7c9d3c01ce2b60b20d5184cb731d689bc54e42.src","preCode":"  private void assertFacetCountsAreCorrect(final AtomicInteger maxBucketsToCheck,\n                                           Map<String,TermFacet> expected,\n                                           final String query) throws SolrServerException, IOException {\n\n    final SolrParams baseParams = params(\"q\", query, \"rows\",\"0\");\n    final SolrParams facetParams = params(\"json.facet\", \"\"+TermFacet.toJSONFacetParamValue(expected));\n    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);\n    \n    log.info(\"Doing full run: {}\", initParams);\n\n    QueryResponse rsp = null;\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList topNamedList = null;\n    try {\n      rsp = (new QueryRequest(initParams)).process(getRandClient(random()));\n      assertNotNull(initParams + \" is null rsp?\", rsp);\n      topNamedList = rsp.getResponse();\n      assertNotNull(initParams + \" is null topNamedList?\", topNamedList);\n    } catch (Exception e) {\n      throw new RuntimeException(\"init query failed: \" + initParams + \": \" + \n                                 e.getMessage(), e);\n    }\n    try {\n      @SuppressWarnings({\"rawtypes\"})\n      final NamedList facetResponse = (NamedList) topNamedList.get(\"facets\");\n      assertNotNull(\"null facet results?\", facetResponse);\n      assertEquals(\"numFound mismatch with top count?\",\n                   rsp.getResults().getNumFound(), ((Number)facetResponse.get(\"count\")).longValue());\n      if (0 == rsp.getResults().getNumFound()) {\n        \r\n        expected = Collections.emptyMap();\n      }\n      assertFacetCountsAreCorrect(maxBucketsToCheck, expected, baseParams, facetResponse);\n    } catch (AssertionError e) {\n      throw new AssertionError(initParams + \" ===> \" + topNamedList + \" --> \" + e.getMessage(), e);\n    } finally {\n      log.info(\"Ending full run\"); \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"}]
