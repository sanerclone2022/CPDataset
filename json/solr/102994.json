[{"authorTime":"2015-11-03 08:43:17","codes":[{"authorDate":"2015-11-03 08:43:17","commitOrder":1,"curCode":"  public void testCloneField() throws Exception {\n\n    SolrInputDocument d;\n\n    \r\n    for (String chain : Arrays.asList(\"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n      \n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n\n    \r\n    for (String chain : Arrays.asList(\"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\", \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\",\n                                 \"123456789\", \"\", 42, \"abcd\",\n                                 \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n    \n    \r\n    for (String chain : Arrays.asList(\"clone-simple-regex-syntax\",\n                                      \"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n  }\n","date":"2015-11-03 08:43:17","endLine":274,"groupId":"34907","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCloneField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/618416228bb6a77fff01f2dae0e4b9a534976d.src","preCode":"  public void testCloneField() throws Exception {\n\n    SolrInputDocument d;\n\n    \r\n    for (String chain : Arrays.asList(\"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n      \n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n\n    \r\n    for (String chain : Arrays.asList(\"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\", \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\",\n                                 \"123456789\", \"\", 42, \"abcd\",\n                                 \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n    \n    \r\n    for (String chain : Arrays.asList(\"clone-simple-regex-syntax\",\n                                      \"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2015-11-03 08:43:17","commitOrder":1,"curCode":"  public void testCloneFieldRegexReplaceAll() throws Exception {\n    SolrInputDocument d = processAdd(\"clone-regex-replaceall\",\n                                     doc(f(\"id\", \"1111\"),\n                                         f(\"foo_x2_s\", \"123456789\", \"\", 42, \"abcd\"),\n                                         f(\"foo_x3_x7_s\", \"xyz\")));\n    \n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                 d.getFieldValues(\"foo_y2_s\"));\n    assertEquals(\"xyz\",\n                 d.getFieldValue(\"foo_y3_y7_s\"));\n  }\n","date":"2015-11-03 08:43:17","endLine":287,"groupId":"34907","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneFieldRegexReplaceAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/618416228bb6a77fff01f2dae0e4b9a534976d.src","preCode":"  public void testCloneFieldRegexReplaceAll() throws Exception {\n    SolrInputDocument d = processAdd(\"clone-regex-replaceall\",\n                                     doc(f(\"id\", \"1111\"),\n                                         f(\"foo_x2_s\", \"123456789\", \"\", 42, \"abcd\"),\n                                         f(\"foo_x3_x7_s\", \"xyz\")));\n    \n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                 d.getFieldValues(\"foo_y2_s\"));\n    assertEquals(\"xyz\",\n                 d.getFieldValue(\"foo_y3_y7_s\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"B"}],"commitId":"be76c6845c2e6e9df8bd1be1544b131fedd03647","commitMessage":"@@@SOLR-8113: CloneFieldUpdateProcessorFactory now supports choosing a dest field name based on a regex pattern and replacement init options.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1712195 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-03 08:43:17","modifiedFileCount":"2","status":"B","submitter":"Chris M. Hostetter"},{"authorTime":"2015-11-03 08:43:17","codes":[{"authorDate":"2017-03-03 02:18:16","commitOrder":2,"curCode":"  public void testCloneField() throws Exception {\n\n    SolrInputDocument d;\n\n    \r\n    for (String chain : Arrays.asList(\"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n      \n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n    }\n\n    \r\n    for (String chain : Arrays.asList(\"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\", \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\",\n                                 \"123456789\", \"\", 42, \"abcd\",\n                                 \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n    }\n    \n    \r\n    for (String chain : Arrays.asList(\"clone-simple-regex-syntax\",\n                                      \"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", \"orig1\", \"orig2\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":267,"groupId":"102994","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCloneField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/1cad172f30de23bc1ea9ec07fc7895044a22f1.src","preCode":"  public void testCloneField() throws Exception {\n\n    SolrInputDocument d;\n\n    \r\n    for (String chain : Arrays.asList(\"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n      \n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n\n    \r\n    for (String chain : Arrays.asList(\"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\", \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source0_s\", \"NOT COPIED\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\"),\n                         f(\"source2_s\", \"xxx\", 999)));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"xxx\", 999),\n                   d.getFieldValues(\"source2_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\",\n                                 \"123456789\", \"\", 42, \"abcd\",\n                                 \"xxx\", 999),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n    \n    \r\n    for (String chain : Arrays.asList(\"clone-simple-regex-syntax\",\n                                      \"clone-single\", \"clone-single-regex\",\n                                      \"clone-multi\", \"clone-multi-regex\",\n                                      \"clone-array\", \"clone-array-regex\", \n                                      \"clone-selector\", \"clone-selector-regex\")) {\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n\n      \r\n      d = processAdd(chain,\n                     doc(f(\"id\", \"1111\"),\n                         field(\"dest_s\", 2.3f, \"orig1\", \"orig2\"),\n                         f(\"source1_s\", \"123456789\", \"\", 42, \"abcd\")));\n      assertNotNull(chain, d);\n      assertEquals(chain,\n                   Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"source1_s\"));\n      assertEquals(chain,\n                   Arrays.asList(\"orig1\", \"orig2\", \"123456789\", \"\", 42, \"abcd\"),\n                   d.getFieldValues(\"dest_s\"));\n      assertEquals(chain + \": dest boost changed\",\n                   2.3f, d.getField(\"dest_s\").getBoost(), 0.0f);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2015-11-03 08:43:17","commitOrder":2,"curCode":"  public void testCloneFieldRegexReplaceAll() throws Exception {\n    SolrInputDocument d = processAdd(\"clone-regex-replaceall\",\n                                     doc(f(\"id\", \"1111\"),\n                                         f(\"foo_x2_s\", \"123456789\", \"\", 42, \"abcd\"),\n                                         f(\"foo_x3_x7_s\", \"xyz\")));\n    \n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                 d.getFieldValues(\"foo_y2_s\"));\n    assertEquals(\"xyz\",\n                 d.getFieldValue(\"foo_y3_y7_s\"));\n  }\n","date":"2015-11-03 08:43:17","endLine":287,"groupId":"102994","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneFieldRegexReplaceAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/618416228bb6a77fff01f2dae0e4b9a534976d.src","preCode":"  public void testCloneFieldRegexReplaceAll() throws Exception {\n    SolrInputDocument d = processAdd(\"clone-regex-replaceall\",\n                                     doc(f(\"id\", \"1111\"),\n                                         f(\"foo_x2_s\", \"123456789\", \"\", 42, \"abcd\"),\n                                         f(\"foo_x3_x7_s\", \"xyz\")));\n    \n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"123456789\", \"\", 42, \"abcd\"),\n                 d.getFieldValues(\"foo_y2_s\"));\n    assertEquals(\"xyz\",\n                 d.getFieldValue(\"foo_y3_y7_s\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"N"}],"commitId":"8ed2b764ed4d4d5203b5df1e16fdc1ffd640322c","commitMessage":"@@@LUCENE-6819: Remove index-time boosts.\n","date":"2017-03-03 02:18:16","modifiedFileCount":"113","status":"M","submitter":"Adrien Grand"}]
