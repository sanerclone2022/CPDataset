[{"authorTime":"2019-01-05 23:08:36","codes":[{"authorDate":"2019-01-05 23:08:36","commitOrder":1,"curCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2019-01-05 23:08:36","endLine":289,"groupId":"23088","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getNode","params":"(Stringpath@Documentdoc@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b8/38f74483f4c44246f22b29c847b1987b4311d0.src","preCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"B"},{"authorDate":"2019-01-05 23:08:36","commitOrder":1,"curCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.trace(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2019-01-05 23:08:36","endLine":319,"groupId":"48015","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getNodeList","params":"(Stringpath@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b8/38f74483f4c44246f22b29c847b1987b4311d0.src","preCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.trace(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"B"}],"commitId":"ff19a3a2613106f4b545b0693296368bdce7acf0","commitMessage":"@@@SOLR-12365: Renamed class Config to XmlConfigFile\n","date":"2019-01-05 23:08:36","modifiedFileCount":"8","status":"B","submitter":"David Smiley"},{"authorTime":"2019-11-24 06:18:05","codes":[{"authorDate":"2019-11-24 06:18:05","commitOrder":2,"curCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2019-11-24 06:57:59","endLine":286,"groupId":"2325","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getNode","params":"(Stringpath@Documentdoc@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/6ddf0e1ad51f45982ef8c524b6293c618d2dd5.src","preCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2019-11-24 06:18:05","commitOrder":2,"curCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.debug(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2019-11-24 06:57:59","endLine":316,"groupId":"2321","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getNodeList","params":"(Stringpath@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/6ddf0e1ad51f45982ef8c524b6293c618d2dd5.src","preCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.trace(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"}],"commitId":"d809bc27f1b5cd6d97e0bfe688c99d481bc42d39","commitMessage":"@@@SOLR-12193: Move some log messages to TRACE level.  remove some dead code\n","date":"2019-11-24 06:57:59","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2019-11-24 07:06:07","codes":[{"authorDate":"2019-11-24 06:18:05","commitOrder":3,"curCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2019-11-24 06:57:59","endLine":286,"groupId":"2325","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getNode","params":"(Stringpath@Documentdoc@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/6ddf0e1ad51f45982ef8c524b6293c618d2dd5.src","preCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"N"},{"authorDate":"2019-11-24 07:06:07","commitOrder":3,"curCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.trace(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2019-11-24 07:06:07","endLine":316,"groupId":"2321","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getNodeList","params":"(Stringpath@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/90aa494b6b115441bbd5da623ed9edc716fab1.src","preCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.debug(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"}],"commitId":"592ea19eff0a0d4225f92d0b96bfb3c9559c077e","commitMessage":"@@@SOLR-12193: reverting one line back to trace\n","date":"2019-11-24 07:06:07","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2020-04-18 08:40:32","codes":[{"authorDate":"2020-04-18 08:40:32","commitOrder":4,"curCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(\"{} missing optional {}\", name, path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(\"{}:{}={}\", name, path, nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2020-04-18 08:40:32","endLine":276,"groupId":"102614","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getNode","params":"(Stringpath@Documentdoc@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/08/fe56953f05a82ce6a491cd30ae6dd29e1c6c1a.src","preCode":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"},{"authorDate":"2020-04-18 08:40:32","commitOrder":4,"curCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(\"{} missing optional {}\", name, path);\n          return null;\n        }\n      }\n\n      log.trace(\"{}:{}={}\", name, path, nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","date":"2020-04-18 08:40:32","endLine":306,"groupId":"102614","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getNodeList","params":"(Stringpath@booleanerrIfMissing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/08/fe56953f05a82ce6a491cd30ae6dd29e1c6c1a.src","preCode":"  public NodeList getNodeList(String path, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodeList = (NodeList)xpath.evaluate(xstr, doc, XPathConstants.NODESET);\n\n      if (null == nodeList) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n\n      log.trace(name + \":\" + path + \"=\" + nodeList);\n      return nodeList;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/XmlConfigFile.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"3af165b32ac8028a6c01ac9c9a6d2c808efa0e85","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-18 08:40:32","modifiedFileCount":"37","status":"M","submitter":"Erick Erickson"}]
