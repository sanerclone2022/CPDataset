[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public static void populate() throws Exception {\n    cleanIndex();\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","date":"2017-10-18 01:52:02","endLine":115,"groupId":"36397","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"populate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/89f3f977b74921a45dce58a3330e91bd2af528.src","preCode":"  public static void populate() throws Exception {\n    cleanIndex();\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","date":"2017-10-18 01:52:02","endLine":130,"groupId":"36397","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/b573da5519446658bdbb2704bd4bae52980c3c.src","preCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":2,"curCode":"  public static void populate() throws Exception {\n    cleanIndex();\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","date":"2017-10-18 01:52:02","endLine":115,"groupId":"36397","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"populate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/89f3f977b74921a45dce58a3330e91bd2af528.src","preCode":"  public static void populate() throws Exception {\n    cleanIndex();\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","date":"2018-07-16 18:24:45","endLine":130,"groupId":"36397","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7f/8a5d772f4e0a763e78abb2c136939e0d4706c9.src","preCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":3,"curCode":"  public void populate() throws Exception {\n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    intMissing = 0;\n    longMissing = 0;\n    doubleMissing = 0;\n    floatMissing = 0;\n    dateMissing = 0;\n    stringMissing = 0;\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","date":"2018-11-30 01:58:51","endLine":119,"groupId":"36397","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"populate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/39843238d130fd33f8c27a8f9ee0027b918060.src","preCode":"  public static void populate() throws Exception {\n    cleanIndex();\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":3,"curCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","date":"2018-07-16 18:24:45","endLine":130,"groupId":"36397","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7f/8a5d772f4e0a763e78abb2c136939e0d4706c9.src","preCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2019-05-30 01:27:15","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":4,"curCode":"  public void populate() throws Exception {\n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    intMissing = 0;\n    longMissing = 0;\n    doubleMissing = 0;\n    floatMissing = 0;\n    dateMissing = 0;\n    stringMissing = 0;\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","date":"2018-11-30 01:58:51","endLine":119,"groupId":"36397","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"populate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/39843238d130fd33f8c27a8f9ee0027b918060.src","preCode":"  public void populate() throws Exception {\n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    intMissing = 0;\n    longMissing = 0;\n    doubleMissing = 0;\n    floatMissing = 0;\n    dateMissing = 0;\n    stringMissing = 0;\n    \n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2019-05-30 01:27:15","commitOrder":4,"curCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","date":"2019-05-30 01:27:15","endLine":136,"groupId":"36397","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0e/817a65b367b6177aa29015f4ba92ca35f7a9a6.src","preCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"c2b92f3015d44a48abc7cc5f7c972298ea317a07","commitMessage":"@@@Fix all solr tests to pass w/ -Dtests.dups=2 -Dtests.jvms=1\n","date":"2019-05-30 01:27:15","modifiedFileCount":"18","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2019-05-30 01:27:15","codes":[{"authorDate":"2019-11-10 00:49:31","commitOrder":5,"curCode":"  public static void populate() throws Exception {\n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    intMissing = 0;\n    longMissing = 0;\n    doubleMissing = 0;\n    floatMissing = 0;\n    dateMissing = 0;\n    stringMissing = 0;\n\n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n\n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n\n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n\n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n\n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n\n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n\n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","date":"2019-12-12 04:48:17","endLine":119,"groupId":"101700","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"populate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/db/c9522aaceefc1796b3147031ae302123244dcb.src","preCode":"  public void populate() throws Exception {\n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    intMissing = 0;\n    longMissing = 0;\n    doubleMissing = 0;\n    floatMissing = 0;\n    dateMissing = 0;\n    stringMissing = 0;\n\n    UpdateRequest req = new UpdateRequest();\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n\n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n\n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n\n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n\n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n\n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n\n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      req.add(fields.toArray(new String[0]));\n    }\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-05-30 01:27:15","commitOrder":5,"curCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","date":"2019-05-30 01:27:15","endLine":136,"groupId":"101700","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0e/817a65b367b6177aa29015f4ba92ca35f7a9a6.src","preCode":"  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  \r\n      }\n    }\n    \n    assertU(commit()); \n    \n    \r\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"}],"commitId":"f01b3e97d19c4b96ca9eb7d4e2a8647f68fbb969","commitMessage":"@@@SOLR-13904: Make Analytics component sensitive to timeAllowed.\n","date":"2019-12-12 04:48:17","modifiedFileCount":"11","status":"M","submitter":"Mikhail Khludnev"}]
