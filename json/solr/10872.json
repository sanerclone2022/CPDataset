[{"authorTime":"2017-04-12 03:17:03","codes":[{"authorDate":"2018-08-20 02:58:14","commitOrder":12,"curCode":"  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      \r\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n","date":"2018-08-20 02:59:38","endLine":1842,"groupId":"19591","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRollupWithNoParallel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/44b6cef7c72ffe657657c342f81ff5554e4d37.src","preCode":"  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      \r\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1788,"status":"B"},{"authorDate":"2017-04-12 03:17:03","commitOrder":12,"curCode":"  public void testZeroParallelReducerStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n    try {\n      SolrParams sParamsA = mapParams(\"q\", \"blah\", \"fl\", \"id,a_s,a_i,a_f\", \"sort\", \"a_s asc,a_f asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n      ReducerStream rstream = new ReducerStream(stream,\n          new FieldEqualitor(\"a_s\"),\n          new GroupOperation(new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING), 2));\n      ParallelStream pstream = parallelStream(rstream, new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING));\n      attachStreamFactory(pstream);\n      pstream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(pstream);\n      assert (tuples.size() == 0);\n    } finally {\n      solrClientCache.close();\n    }\n\n  }\n","date":"2017-04-12 03:24:42","endLine":1939,"groupId":"19591","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testZeroParallelReducerStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/e3aa052c87d83b30d7226f1bcbc4b526b1b0a6.src","preCode":"  public void testZeroParallelReducerStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n    try {\n      SolrParams sParamsA = mapParams(\"q\", \"blah\", \"fl\", \"id,a_s,a_i,a_f\", \"sort\", \"a_s asc,a_f asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n      ReducerStream rstream = new ReducerStream(stream,\n          new FieldEqualitor(\"a_s\"),\n          new GroupOperation(new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING), 2));\n      ParallelStream pstream = parallelStream(rstream, new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING));\n      attachStreamFactory(pstream);\n      pstream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(pstream);\n      assert (tuples.size() == 0);\n    } finally {\n      solrClientCache.close();\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1906,"status":"NB"}],"commitId":"3e4545219ef72e89d227b46a26a951f621989d40","commitMessage":"@@@SOLR-12674: RollupStream should not use the HashQueryParser for 1 worker\n","date":"2018-08-20 02:59:38","modifiedFileCount":"4","status":"M","submitter":"Varun Thacker"},{"authorTime":"2018-11-28 00:21:42","codes":[{"authorDate":"2018-11-28 00:21:42","commitOrder":13,"curCode":"  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      \r\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\", \"qt\", \"/export\" );\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\", qt=\\\"/export\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n","date":"2018-11-28 00:22:02","endLine":1851,"groupId":"10872","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRollupWithNoParallel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/85f2ce458e9299a8c12edad6d0e2bcf87128db.src","preCode":"  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      \r\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1797,"status":"M"},{"authorDate":"2018-11-28 00:21:42","commitOrder":13,"curCode":"  public void testZeroParallelReducerStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n    try {\n      SolrParams sParamsA = mapParams(\"q\", \"a_s:blah\", \"fl\", \"id,a_s,a_i,a_f\", \"sort\", \"a_s asc,a_f asc\", \"partitionKeys\", \"a_s\", \"qt\", \"/export\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n      ReducerStream rstream = new ReducerStream(stream,\n          new FieldEqualitor(\"a_s\"),\n          new GroupOperation(new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING), 2));\n      ParallelStream pstream = parallelStream(rstream, new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING));\n      attachStreamFactory(pstream);\n      pstream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(pstream);\n      assert (tuples.size() == 0);\n    } finally {\n      solrClientCache.close();\n    }\n\n  }\n","date":"2018-11-28 00:22:02","endLine":2007,"groupId":"10872","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testZeroParallelReducerStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/85f2ce458e9299a8c12edad6d0e2bcf87128db.src","preCode":"  public void testZeroParallelReducerStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n    try {\n      SolrParams sParamsA = mapParams(\"q\", \"blah\", \"fl\", \"id,a_s,a_i,a_f\", \"sort\", \"a_s asc,a_f asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n      ReducerStream rstream = new ReducerStream(stream,\n          new FieldEqualitor(\"a_s\"),\n          new GroupOperation(new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING), 2));\n      ParallelStream pstream = parallelStream(rstream, new FieldComparator(\"a_s\", ComparatorOrder.ASCENDING));\n      attachStreamFactory(pstream);\n      pstream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(pstream);\n      assert (tuples.size() == 0);\n    } finally {\n      solrClientCache.close();\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1974,"status":"M"}],"commitId":"c2cac887702f9efc0a6bf75cd9f1e78f730c2c4f","commitMessage":"@@@SOLR-12984: The search Streaming Expression should properly support and push down paging when using the /select handler\n","date":"2018-11-28 00:22:02","modifiedFileCount":"8","status":"M","submitter":"Joel Bernstein"}]
