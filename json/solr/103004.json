[{"authorTime":"2017-02-15 21:55:48","codes":[{"authorDate":"2017-02-15 21:55:48","commitOrder":1,"curCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directory\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directoryDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n    \r\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"DIRECTORY\")).count());\n  }\n","date":"2017-02-15 21:55:48","endLine":120,"groupId":"49236","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexNoMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/b511d48e7aaae030fa6068baa81e22784e45d4.src","preCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directory\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directoryDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n    \r\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"DIRECTORY\")).count());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2017-02-15 21:55:48","commitOrder":1,"curCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    System.setProperty(\"solr.tests.metrics.directory\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directoryDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n    \r\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"DIRECTORY\")).count() > 20);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n\n    \r\n    meter = (Meter)metrics.get(\"DIRECTORY.total.reads\");\n    assertTrue(\"totalReads\", meter.getCount() > 0);\n    meter = (Meter)metrics.get(\"DIRECTORY.total.writes\");\n    assertTrue(\"totalWrites\", meter.getCount() > 0);\n    \r\n    Histogram histogram = (Histogram)metrics.get(\"DIRECTORY.total.readSizes\");\n    assertTrue(\"readSizes\", histogram.getCount() > 0);\n    histogram = (Histogram)metrics.get(\"DIRECTORY.total.writeSizes\");\n    assertTrue(\"writeSizes\", histogram.getCount() > 0);\n    meter = (Meter)metrics.get(\"DIRECTORY.segments.writes\");\n    assertTrue(\"segmentsWrites\", meter.getCount() > 0);\n    histogram = (Histogram)metrics.get(\"DIRECTORY.segments.writeSizes\");\n    assertTrue(\"segmentsWriteSizes\", histogram.getCount() > 0);\n\n  }\n","date":"2017-02-15 21:55:48","endLine":168,"groupId":"49238","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetricsWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/b511d48e7aaae030fa6068baa81e22784e45d4.src","preCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    System.setProperty(\"solr.tests.metrics.directory\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directoryDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n    \r\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"DIRECTORY\")).count() > 20);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n\n    \r\n    meter = (Meter)metrics.get(\"DIRECTORY.total.reads\");\n    assertTrue(\"totalReads\", meter.getCount() > 0);\n    meter = (Meter)metrics.get(\"DIRECTORY.total.writes\");\n    assertTrue(\"totalWrites\", meter.getCount() > 0);\n    \r\n    Histogram histogram = (Histogram)metrics.get(\"DIRECTORY.total.readSizes\");\n    assertTrue(\"readSizes\", histogram.getCount() > 0);\n    histogram = (Histogram)metrics.get(\"DIRECTORY.total.writeSizes\");\n    assertTrue(\"writeSizes\", histogram.getCount() > 0);\n    meter = (Meter)metrics.get(\"DIRECTORY.segments.writes\");\n    assertTrue(\"segmentsWrites\", meter.getCount() > 0);\n    histogram = (Histogram)metrics.get(\"DIRECTORY.segments.writeSizes\");\n    assertTrue(\"segmentsWriteSizes\", histogram.getCount() > 0);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"}],"commitId":"b6f49dc1fb4ad6ef890ae1d09f6d4c0584bb6f64","commitMessage":"@@@SOLR-10130 Serious performance degradation in Solr 6.4.1 due to the\nnew metrics collection.\n","date":"2017-02-15 21:55:48","modifiedFileCount":"3","status":"B","submitter":"Andrzej Bialecki"},{"authorTime":"2017-02-27 21:39:13","codes":[{"authorDate":"2017-02-27 21:39:13","commitOrder":2,"curCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n  }\n","date":"2017-02-27 23:32:27","endLine":96,"groupId":"49236","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexNoMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/935bb383035962baebe6f63b4ad9609c245120.src","preCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directory\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directoryDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n    \r\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"DIRECTORY\")).count());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2017-02-27 21:39:13","commitOrder":2,"curCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n  }\n","date":"2017-02-27 23:32:27","endLine":124,"groupId":"49236","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetricsWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/935bb383035962baebe6f63b4ad9609c245120.src","preCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    System.setProperty(\"solr.tests.metrics.directory\", \"false\");\n    System.setProperty(\"solr.tests.metrics.directoryDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n    \r\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"DIRECTORY\")).count() > 20);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n\n    \r\n    meter = (Meter)metrics.get(\"DIRECTORY.total.reads\");\n    assertTrue(\"totalReads\", meter.getCount() > 0);\n    meter = (Meter)metrics.get(\"DIRECTORY.total.writes\");\n    assertTrue(\"totalWrites\", meter.getCount() > 0);\n    \r\n    Histogram histogram = (Histogram)metrics.get(\"DIRECTORY.total.readSizes\");\n    assertTrue(\"readSizes\", histogram.getCount() > 0);\n    histogram = (Histogram)metrics.get(\"DIRECTORY.total.writeSizes\");\n    assertTrue(\"writeSizes\", histogram.getCount() > 0);\n    meter = (Meter)metrics.get(\"DIRECTORY.segments.writes\");\n    assertTrue(\"segmentsWrites\", meter.getCount() > 0);\n    histogram = (Histogram)metrics.get(\"DIRECTORY.segments.writeSizes\");\n    assertTrue(\"segmentsWriteSizes\", histogram.getCount() > 0);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"a248e6e3c080cfe6deb873d1ef114e4b9c1c043d","commitMessage":"@@@SOLR-10182 Remove metrics collection at Directory level.\n","date":"2017-02-27 23:32:27","modifiedFileCount":"6","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2017-02-27 21:39:13","codes":[{"authorDate":"2017-03-14 18:17:56","commitOrder":3,"curCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    \r\n    assertEquals(2, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n  }\n","date":"2017-03-14 19:36:35","endLine":97,"groupId":"49236","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexNoMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/85937c7f0dc1b6a5001be94df04fa50857e2b5.src","preCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    assertEquals(0, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2017-02-27 21:39:13","commitOrder":3,"curCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n  }\n","date":"2017-02-27 23:32:27","endLine":124,"groupId":"49236","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetricsWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/935bb383035962baebe6f63b4ad9609c245120.src","preCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"}],"commitId":"1750095048a5bee9c8f63d9bf6ad53d4a309aa60","commitMessage":"@@@SOLR-10247: Support non-numeric metrics and a \"compact\" format of /admin/metrics.\n","date":"2017-03-14 19:36:35","modifiedFileCount":"14","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2017-02-27 21:39:13","codes":[{"authorDate":"2021-08-11 16:28:50","commitOrder":4,"curCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    \r\n    assertEquals(3, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n  }\n","date":"2021-08-11 16:28:50","endLine":97,"groupId":"103004","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testIndexNoMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a6/29be3bb41ee3a40d9874daadabb52d32dc4e3b.src","preCode":"  public void testIndexNoMetrics() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\");\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"false\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n    \r\n    assertEquals(2, metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2017-02-27 21:39:13","commitOrder":4,"curCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n  }\n","date":"2017-02-27 23:32:27","endLine":124,"groupId":"103004","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetricsWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/935bb383035962baebe6f63b4ad9609c245120.src","preCode":"  public void testIndexMetricsWithDetails() throws Exception {\n    System.setProperty(\"solr.tests.metrics.merge\", \"false\"); \r\n    System.setProperty(\"solr.tests.metrics.mergeDetails\", \"true\");\n    initCore(\"solrconfig-indexmetrics.xml\", \"schema.xml\");\n\n    addDocs();\n\n    MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName());\n    assertNotNull(registry);\n\n    Map<String, Metric> metrics = registry.getMetrics();\n\n    assertTrue(metrics.entrySet().stream().filter(e -> e.getKey().startsWith(\"INDEX\")).count() >= 12);\n\n    \r\n    Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\");\n    assertTrue(\"minorMerge: \" + timer.getCount(), timer.getCount() >= 3);\n    timer = (Timer)metrics.get(\"INDEX.merge.major\");\n    assertEquals(\"majorMerge: \" + timer.getCount(), 0, timer.getCount());\n    \r\n    Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\");\n    assertEquals(\"majorMergeDocs: \" + meter.getCount(), 0, meter.getCount());\n\n    meter = (Meter)metrics.get(\"INDEX.flush\");\n    assertTrue(\"flush: \" + meter.getCount(), meter.getCount() > 10);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexMetricsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"}],"commitId":"28b0cb7b850d7c0d4e2174fb29422d556c28b81f","commitMessage":"@@@SOLR-15428: Update test for additional index metric.  segment count.\n","date":"2021-08-11 16:28:50","modifiedFileCount":"1","status":"M","submitter":"markrmiller@gmail.com"}]
