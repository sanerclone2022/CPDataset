[{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2016-05-05 15:05:25","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","date":"2016-05-05 15:05:25","endLine":78,"groupId":"21218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/f712659106d84b3dd605745f3409c0625ad4a7.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/graph/GraphExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"NB"},{"authorDate":"2018-11-30 01:58:18","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-11-30 01:58:51","endLine":85,"groupId":"21218","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6b/6b4afedf88f243718276b948d08f75daade293.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2018-12-13 06:00:08","codes":[{"authorDate":"2016-05-05 15:05:25","commitOrder":3,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","date":"2016-05-05 15:05:25","endLine":78,"groupId":"102793","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/f712659106d84b3dd605745f3409c0625ad4a7.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/graph/GraphExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"},{"authorDate":"2018-12-13 06:00:08","commitOrder":3,"curCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-12-13 08:50:23","endLine":90,"groupId":"102793","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/04933ad6da6297c69daa315fa4ebe433bab6e1.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"44b51cd041371051d0b73b54afebc99fc0fa4862","commitMessage":"@@@SOLR-13067: Harden BasicAuthIntegrationTest.\n","date":"2018-12-13 08:50:23","modifiedFileCount":"2","status":"M","submitter":"markrmiller"}]
