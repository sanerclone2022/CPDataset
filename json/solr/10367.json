[{"authorTime":"2020-05-19 04:22:56","codes":[{"authorDate":"2020-05-19 04:22:56","commitOrder":5,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2020-05-19 21:10:23","endLine":748,"groupId":"22851","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6e/96cfd9485230855f24714769fcbc96d3df216a.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":684,"status":"MB"},{"authorDate":"2020-05-19 04:22:56","commitOrder":5,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    \r\n  }\n","date":"2020-05-19 21:10:23","endLine":307,"groupId":"48328","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/87/47565dbe0c81f84b453bb7a1fb690585c2c6e6.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    \r\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"B"}],"commitId":"16aad55369d285fec96425f996984a9f4afe28e4","commitMessage":"@@@SOLR-14476: Add percentiles and standard deviation aggregations to stats.  facet and timeseries Streaming Expressions\n","date":"2020-05-19 21:10:23","modifiedFileCount":"8","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2021-04-01 23:34:41","codes":[{"authorDate":"2021-04-01 23:34:41","commitOrder":6,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-01 23:38:54","endLine":784,"groupId":"10367","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/20/a24bba9f1feb883dd913f3db3f3e71d16c364c.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":718,"status":"M"},{"authorDate":"2021-04-01 23:34:41","commitOrder":6,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n","date":"2021-04-01 23:38:54","endLine":307,"groupId":"10367","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/26/bc861376ba115b2ce14918c33663e52c28179f.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"00bc7101f274dcd8a49aeea159a476f79e89ceb9","commitMessage":"@@@SOLR-15208: Add the countDist aggregation to the stats.  facet and timeseries Streaming Expressions\n","date":"2021-04-01 23:38:54","modifiedFileCount":"6","status":"M","submitter":"Joel Bernstein"}]
