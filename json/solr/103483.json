[{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2020-08-06 05:52:48","commitOrder":18,"curCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        @SuppressWarnings({\"rawtypes\"})\n        List replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + (String)timesFailed, timesFailed == null || ((String) timesFailed).equals(\"1\"));\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","date":"2020-08-06 05:52:48","endLine":398,"groupId":"33272","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        @SuppressWarnings({\"rawtypes\"})\n        List replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + (String)timesFailed, timesFailed == null || ((String) timesFailed).equals(\"1\"));\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"MB"},{"authorDate":"2020-08-06 05:52:48","commitOrder":18,"curCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","date":"2020-08-06 05:52:48","endLine":429,"groupId":"33273","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLegacyConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"B"}],"commitId":"7110118ad4f1a68f39a1db1caab374594098243e","commitMessage":"@@@SOLR-14702: Remove oppressive language (part1) (#1711)\n\nReplace references to \"master\" and \"slave\" with \"leader\" and \"follower\"","date":"2020-08-06 05:52:48","modifiedFileCount":"28","status":"M","submitter":"Marcus"},{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2021-01-25 23:54:40","commitOrder":19,"curCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        @SuppressWarnings({\"rawtypes\"})\n        List replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + timesFailed, timesFailed == null || ((Number) timesFailed).intValue() == 1);\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","date":"2021-01-25 23:56:50","endLine":398,"groupId":"33272","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1a/4da88955f7e8df79a74441d762af39b74a2b71.src","preCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        @SuppressWarnings({\"rawtypes\"})\n        List replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + (String)timesFailed, timesFailed == null || ((String) timesFailed).equals(\"1\"));\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"M"},{"authorDate":"2020-08-06 05:52:48","commitOrder":19,"curCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","date":"2020-08-06 05:52:48","endLine":429,"groupId":"33273","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLegacyConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"N"}],"commitId":"166d39a12eff53d9cfdf47b101cfe98a7020dcba","commitMessage":"@@@SOLR-15076: Fix wrong test assumption - type of this property has changed\nin SOLR-14924.\n","date":"2021-01-25 23:56:50","modifiedFileCount":"1","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2021-06-29 03:06:47","commitOrder":20,"curCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        List<?> replicatedAtCount = (List<?>) ((NamedList<?>) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List<?>) ((NamedList<?>) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + timesFailed, timesFailed == null || ((Number) timesFailed).intValue() == 1);\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","date":"2021-06-29 03:06:47","endLine":416,"groupId":"14260","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/49/8d4d11150820b70e7293875f03a8405cff57fb.src","preCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        @SuppressWarnings({\"rawtypes\"})\n        List replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List) ((NamedList) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + timesFailed, timesFailed == null || ((Number) timesFailed).intValue() == 1);\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"},{"authorDate":"2020-08-06 05:52:48","commitOrder":20,"curCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","date":"2020-08-06 05:52:48","endLine":429,"groupId":"33273","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testLegacyConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"N"}],"commitId":"5e7310c344b4d31903acda93c7638bce125b63cf","commitMessage":"@@@SOLR-15385 RawTypes Part IV.  solr-core (#195)\n\n","date":"2021-06-29 03:06:47","modifiedFileCount":"93","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-09-23 00:46:59","codes":[{"authorDate":"2021-09-23 00:46:59","commitOrder":21,"curCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n\n    followerClient.close();\n    leaderClient.close();\n    leaderClient = ReplicationTestHelper.createNewSolrClient(buildUrl(leaderJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME);\n    followerClient = ReplicationTestHelper.createNewSolrClient(buildUrl(followerJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    clearIndexWithReplication();\n    {\n      NamedList<Object> details = getDetails(leaderClient);\n\n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        List<?> replicatedAtCount = (List<?>) ((NamedList<?>) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List<?>) ((NamedList<?>) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n\n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n\n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i);\n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + timesFailed, timesFailed == null || ((Number) timesFailed).intValue() == 1);\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = ReplicationTestHelper.createNewSolrClient(buildUrl(repeaterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME);\n\n\n      NamedList<Object> details = getDetails(repeaterClient);\n\n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try {\n        if (repeaterJetty != null) repeaterJetty.stop();\n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","date":"2021-09-23 00:46:59","endLine":386,"groupId":"103483","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"doTestDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void doTestDetails() throws Exception {\n    followerJetty.stop();\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\", \"solrconfig.xml\");\n    followerJetty = createAndStartJetty(follower);\n    \n    followerClient.close();\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    clearIndexWithReplication();\n    { \n      NamedList<Object> details = getDetails(leaderClient);\n      \n      assertEquals(\"leader isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"leader isFollower?\",\n                   \"false\", details.get(\"isFollower\"));\n      assertNotNull(\"leader has leader section\",\n                    details.get(\"leader\"));\n    }\n\n    \r\n    for (int i = 0; i < 3; i++) {\n      NamedList<Object> details = getDetails(followerClient);\n      assertNotNull(i + \": \" + details);\n      assertNotNull(i + \": \" + details.toString(), details.get(\"follower\"));\n\n      if (i > 0) {\n        rQuery(i, \"*:*\", followerClient);\n        List<?> replicatedAtCount = (List<?>) ((NamedList<?>) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        int tries = 0;\n        while ((replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5) {\n          Thread.sleep(1000);\n          details = getDetails(followerClient);\n          replicatedAtCount = (List<?>) ((NamedList<?>) details.get(\"follower\")).get(\"indexReplicatedAtList\");\n        }\n        \n        assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(), replicatedAtCount);\n        \n        \r\n        \r\n        assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(), replicatedAtCount.size() >= i); \n      }\n\n      assertEquals(i + \": \" + \"follower isLeader?\", \"false\", details.get(\"isLeader\"));\n      assertEquals(i + \": \" + \"follower isFollower?\", \"true\", details.get(\"isFollower\"));\n      assertNotNull(i + \": \" + \"follower has follower section\", details.get(\"follower\"));\n      \r\n      Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED);\n      \r\n      \r\n      assertTrue(i + \": \" + \"follower has fetch error count: \" + timesFailed, timesFailed == null || ((Number) timesFailed).intValue() == 1);\n\n      if (3 != i) {\n        \r\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n        leaderClient.commit();\n        pullFromTo(leaderJetty, followerJetty);\n      }\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrClient repeaterClient = null;\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createAndStartJetty(repeater);\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) {  }\n      if (repeaterClient != null) repeaterClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"},{"authorDate":"2021-09-23 00:46:59","commitOrder":21,"curCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = ReplicationTestHelper.createNewSolrClient(buildUrl(instanceJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME);\n\n\n      NamedList<Object> details = getDetails(client);\n\n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","date":"2021-09-23 00:46:59","endLine":417,"groupId":"103483","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testLegacyConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void testLegacyConfiguration() throws Exception {\n    SolrInstance solrInstance = null;\n    JettySolrRunner instanceJetty = null;\n    SolrClient client = null;\n    try {\n      solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"replication-legacy\", leaderJetty.getLocalPort());\n      solrInstance.setUp();\n      instanceJetty = createAndStartJetty(solrInstance);\n      client = createNewSolrClient(instanceJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(client);\n      \n      assertEquals(\"repeater isLeader?\",\n                   \"true\", details.get(\"isLeader\"));\n      assertEquals(\"repeater isFollower?\",\n                   \"true\", details.get(\"isFollower\"));\n      assertNotNull(\"repeater has leader section\",\n                    details.get(\"leader\"));\n      assertNotNull(\"repeater has follower section\",\n                    details.get(\"follower\"));\n\n    } finally {\n      if (instanceJetty != null) {\n        instanceJetty.stop();\n      }\n      if (client != null) client.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"3cd71244d23704a7addf34eeac9f728862518f48","commitMessage":"@@@SOLR-15286: A brand new follower in the legacy mode should wait to replicate index before reporting healthy (#238)\n\n* https://issues.apache.org/jira/browse/SOLR-15286\n\nAdded log to the HealthCheckHandler for legacy mode to report followers healthy based on the index generation diff\n\nCo-authored-by: Pushkar Raste <praste@apple.com>","date":"2021-09-23 00:46:59","modifiedFileCount":"8","status":"M","submitter":"Pushkar Raste"}]
