[{"authorTime":"2018-11-28 00:21:42","codes":[{"authorDate":"2018-11-28 00:21:42","commitOrder":8,"curCode":"  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    \r\n    expression.addParameter(collection);\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n","date":"2018-11-28 00:22:02","endLine":146,"groupId":"7598","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toExpression","params":"(StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2e/eeb78e77102275782cfc3100eb927a0a6db439.src","preCode":"  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    \r\n    expression.addParameter(collection);\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SearchStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2018-11-28 00:21:42","commitOrder":8,"curCode":"  public StreamExpression toExpression(StreamFactory factory) throws IOException {\n    \r\n    \n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n    \n    \r\n    expression.addParameter(collection);\n    \n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n    \n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n    \n    \r\n    if(null != fieldMappings && 0 != fieldMappings.size()){\n      StringBuilder sb = new StringBuilder();\n      for(Entry<String,String> mapping : fieldMappings.entrySet()){\n        if(sb.length() > 0){ sb.append(\",\"); }\n        sb.append(mapping.getKey());\n        sb.append(\"=\");\n        sb.append(mapping.getValue());\n      }\n      \n      expression.addParameter(new StreamExpressionNamedParameter(\"aliases\", sb.toString()));\n    }\n        \n    return expression;   \n  }\n","date":"2018-11-28 00:22:02","endLine":202,"groupId":"7598","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toExpression","params":"(StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2c/ff0a7620a7f02577f3d78a53a824153e4d2a66.src","preCode":"  public StreamExpression toExpression(StreamFactory factory) throws IOException {\n    \r\n    \n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n    \n    \r\n    expression.addParameter(collection);\n    \n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n    \n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n    \n    \r\n    if(null != fieldMappings && 0 != fieldMappings.size()){\n      StringBuilder sb = new StringBuilder();\n      for(Entry<String,String> mapping : fieldMappings.entrySet()){\n        if(sb.length() > 0){ sb.append(\",\"); }\n        sb.append(mapping.getKey());\n        sb.append(\"=\");\n        sb.append(mapping.getValue());\n      }\n      \n      expression.addParameter(new StreamExpressionNamedParameter(\"aliases\", sb.toString()));\n    }\n        \n    return expression;   \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CloudSolrStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"MB"}],"commitId":"c2cac887702f9efc0a6bf75cd9f1e78f730c2c4f","commitMessage":"@@@SOLR-12984: The search Streaming Expression should properly support and push down paging when using the /select handler\n","date":"2018-11-28 00:22:02","modifiedFileCount":"8","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2018-12-12 22:15:41","codes":[{"authorDate":"2018-12-12 22:15:41","commitOrder":9,"curCode":"  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    \r\n    if(collection.indexOf(',') > -1) {\n      expression.addParameter(\"\\\"\"+collection+\"\\\"\");\n    } else {\n      expression.addParameter(collection);\n    }\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n","date":"2018-12-12 22:16:08","endLine":151,"groupId":"10290","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toExpression","params":"(StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/36/43969f23cefc5cbf1426076d6f84c617408d5e.src","preCode":"  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    \r\n    expression.addParameter(collection);\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SearchStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2018-12-12 22:15:41","commitOrder":9,"curCode":"  public StreamExpression toExpression(StreamFactory factory) throws IOException {\n    \r\n    \n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n    \n    \r\n    if(collection.indexOf(',') > -1) {\n      expression.addParameter(\"\\\"\"+collection+\"\\\"\");\n    } else {\n      expression.addParameter(collection);\n    }\n    \n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n    \n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n    \n    \r\n    if(null != fieldMappings && 0 != fieldMappings.size()){\n      StringBuilder sb = new StringBuilder();\n      for(Entry<String,String> mapping : fieldMappings.entrySet()){\n        if(sb.length() > 0){ sb.append(\",\"); }\n        sb.append(mapping.getKey());\n        sb.append(\"=\");\n        sb.append(mapping.getValue());\n      }\n      \n      expression.addParameter(new StreamExpressionNamedParameter(\"aliases\", sb.toString()));\n    }\n        \n    return expression;   \n  }\n","date":"2018-12-12 22:16:08","endLine":206,"groupId":"10290","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toExpression","params":"(StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f8/71473eefe45e97e6f5c6cd82998799068d58d5.src","preCode":"  public StreamExpression toExpression(StreamFactory factory) throws IOException {\n    \r\n    \n    \r\n    StreamExpression expression = new StreamExpression(\"search\");\n    \n    \r\n    expression.addParameter(collection);\n    \n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        \r\n        \r\n        \r\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n    \n    \r\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n    \n    \r\n    if(null != fieldMappings && 0 != fieldMappings.size()){\n      StringBuilder sb = new StringBuilder();\n      for(Entry<String,String> mapping : fieldMappings.entrySet()){\n        if(sb.length() > 0){ sb.append(\",\"); }\n        sb.append(mapping.getKey());\n        sb.append(\"=\");\n        sb.append(mapping.getValue());\n      }\n      \n      expression.addParameter(new StreamExpressionNamedParameter(\"aliases\", sb.toString()));\n    }\n        \n    return expression;   \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CloudSolrStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"7e4555a2fdb863d6aac2f785116f8f13e51bf16b","commitMessage":"@@@SOLR-13057: Allow search.  facet and timeseries Streaming Expressions to accept a comma delimited list of collections\n","date":"2018-12-12 22:16:08","modifiedFileCount":"6","status":"M","submitter":"Joel Bernstein"}]
