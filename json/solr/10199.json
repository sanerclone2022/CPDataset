[{"authorTime":"2016-03-26 02:00:29","codes":[{"authorDate":"2017-11-08 20:29:28","commitOrder":2,"curCode":"  private double[] scale(double[] values, double min, double max) {\n\n    double localMin = Double.MAX_VALUE;\n    double localMax = Double.MIN_VALUE;\n    for (double d : values) {\n      if (d > localMax) {\n        localMax = d;\n      }\n\n      if (d < localMin) {\n        localMin = d;\n      }\n    }\n\n    \r\n\n    double[] scaled = new double[values.length];\n\n    for (int i = 0; i < scaled.length; i++) {\n      double x = values[i];\n      double s = (x - localMin) / (localMax - localMin);\n      scaled[i] = s;\n    }\n\n    if (min != 0 || max != 1) {\n      \r\n      double scale = max - min;\n\n      for (int i = 0; i < scaled.length; i++) {\n        double d = scaled[i];\n        scaled[i] = (scale * d) + min;\n      }\n    }\n\n    return scaled;\n  }\n","date":"2017-11-08 20:29:28","endLine":114,"groupId":"62400","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"scale","params":"(double[]values@doublemin@doublemax)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/60/c63774fd5b5ff544fe5f610b9810292bc378a7.src","preCode":"  private double[] scale(double[] values, double min, double max) {\n\n    double localMin = Double.MAX_VALUE;\n    double localMax = Double.MIN_VALUE;\n    for (double d : values) {\n      if (d > localMax) {\n        localMax = d;\n      }\n\n      if (d < localMin) {\n        localMin = d;\n      }\n    }\n\n    \r\n\n    double[] scaled = new double[values.length];\n\n    for (int i = 0; i < scaled.length; i++) {\n      double x = values[i];\n      double s = (x - localMin) / (localMax - localMin);\n      scaled[i] = s;\n    }\n\n    if (min != 0 || max != 1) {\n      \r\n      double scale = max - min;\n\n      for (int i = 0; i < scaled.length; i++) {\n        double d = scaled[i];\n        scaled[i] = (scale * d) + min;\n      }\n    }\n\n    return scaled;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MinMaxScaleEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2016-03-26 02:00:29","commitOrder":2,"curCode":"  public static void assertUpdateTolerantAddErrors(String assertionMsgPrefix,\n                                                   UpdateResponse response,\n                                                   String... errorIdsExpected) {\n    ExpectedErr[] expected = new ExpectedErr[errorIdsExpected.length];\n    for (int i = 0; i < expected.length; i++) {\n      expected[i] = addErr(errorIdsExpected[i]);\n    }\n    assertUpdateTolerantErrors(assertionMsgPrefix, response, expected);\n  }\n","date":"2016-03-26 02:02:55","endLine":994,"groupId":"55456","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUpdateTolerantAddErrors","params":"(StringassertionMsgPrefix@UpdateResponseresponse@String...errorIdsExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/4c0745fd46bf706198823fdc52d2d8900e4d9b.src","preCode":"  public static void assertUpdateTolerantAddErrors(String assertionMsgPrefix,\n                                                   UpdateResponse response,\n                                                   String... errorIdsExpected) {\n    ExpectedErr[] expected = new ExpectedErr[errorIdsExpected.length];\n    for (int i = 0; i < expected.length; i++) {\n      expected[i] = addErr(errorIdsExpected[i]);\n    }\n    assertUpdateTolerantErrors(assertionMsgPrefix, response, expected);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestTolerantUpdateProcessorCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":986,"status":"NB"}],"commitId":"dae5c570b939e1442b0c7eb1e62f6748e4c207f3","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-11-08 20:29:28","modifiedFileCount":"193","status":"M","submitter":"Karl Wright"},{"authorTime":"2016-03-26 02:00:29","codes":[{"authorDate":"2018-08-09 09:05:02","commitOrder":3,"curCode":"  public static double[] scale(double[] values, double min, double max) {\n\n    double localMin = Double.MAX_VALUE;\n    double localMax = Double.MIN_VALUE;\n    for (double d : values) {\n      if (d > localMax) {\n        localMax = d;\n      }\n\n      if (d < localMin) {\n        localMin = d;\n      }\n    }\n\n    \r\n\n    double[] scaled = new double[values.length];\n\n    for (int i = 0; i < scaled.length; i++) {\n      double x = values[i];\n      double s = (x - localMin) / (localMax - localMin);\n      scaled[i] = s;\n    }\n\n    if (min != 0 || max != 1) {\n      \r\n      double scale = max - min;\n\n      for (int i = 0; i < scaled.length; i++) {\n        double d = scaled[i];\n        scaled[i] = (scale * d) + min;\n      }\n    }\n\n    return scaled;\n  }\n","date":"2018-08-09 09:05:21","endLine":114,"groupId":"10199","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"scale","params":"(double[]values@doublemin@doublemax)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/9691022b8f26b10c87bfb89064f47a138ebd6b.src","preCode":"  private double[] scale(double[] values, double min, double max) {\n\n    double localMin = Double.MAX_VALUE;\n    double localMax = Double.MIN_VALUE;\n    for (double d : values) {\n      if (d > localMax) {\n        localMax = d;\n      }\n\n      if (d < localMin) {\n        localMin = d;\n      }\n    }\n\n    \r\n\n    double[] scaled = new double[values.length];\n\n    for (int i = 0; i < scaled.length; i++) {\n      double x = values[i];\n      double s = (x - localMin) / (localMax - localMin);\n      scaled[i] = s;\n    }\n\n    if (min != 0 || max != 1) {\n      \r\n      double scale = max - min;\n\n      for (int i = 0; i < scaled.length; i++) {\n        double d = scaled[i];\n        scaled[i] = (scale * d) + min;\n      }\n    }\n\n    return scaled;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MinMaxScaleEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2016-03-26 02:00:29","commitOrder":3,"curCode":"  public static void assertUpdateTolerantAddErrors(String assertionMsgPrefix,\n                                                   UpdateResponse response,\n                                                   String... errorIdsExpected) {\n    ExpectedErr[] expected = new ExpectedErr[errorIdsExpected.length];\n    for (int i = 0; i < expected.length; i++) {\n      expected[i] = addErr(errorIdsExpected[i]);\n    }\n    assertUpdateTolerantErrors(assertionMsgPrefix, response, expected);\n  }\n","date":"2016-03-26 02:02:55","endLine":994,"groupId":"10199","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertUpdateTolerantAddErrors","params":"(StringassertionMsgPrefix@UpdateResponseresponse@String...errorIdsExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/4c0745fd46bf706198823fdc52d2d8900e4d9b.src","preCode":"  public static void assertUpdateTolerantAddErrors(String assertionMsgPrefix,\n                                                   UpdateResponse response,\n                                                   String... errorIdsExpected) {\n    ExpectedErr[] expected = new ExpectedErr[errorIdsExpected.length];\n    for (int i = 0; i < expected.length; i++) {\n      expected[i] = addErr(errorIdsExpected[i]);\n    }\n    assertUpdateTolerantErrors(assertionMsgPrefix, response, expected);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestTolerantUpdateProcessorCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":986,"status":"N"}],"commitId":"cb1db482523cf33b7927b5155d506202d8ddbd89","commitMessage":"@@@SOLR-11863: Add knnRegress Stream Evaluator to support nearest neighbor regression\n","date":"2018-08-09 09:05:21","modifiedFileCount":"6","status":"M","submitter":"Joel Bernstein"}]
