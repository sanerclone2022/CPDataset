[{"authorTime":"2013-08-06 10:04:42","codes":[{"authorDate":"2013-08-15 02:11:45","commitOrder":2,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2013-08-15 02:11:45","endLine":75,"groupId":"2535","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/4a9603e3d69e8333008d015c23f188b4a282c8.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2013-08-06 10:04:42","commitOrder":2,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2013-08-06 10:04:42","endLine":61,"groupId":"2535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/98/624601899f5e40f87908d62e306afe987296c0.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"NB"}],"commitId":"a5c0445b88bfaf796068accbd7c19237a8f94ba1","commitMessage":"@@@cleanup TestSolrCoreProperties so that it's less hackish and absurd -- and while we're at it.  close the book on SOLR-4952\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1513996 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-15 02:11:45","modifiedFileCount":"1","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2013-08-26 08:06:04","codes":[{"authorDate":"2013-08-26 08:06:04","commitOrder":3,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2013-08-26 08:06:04","endLine":76,"groupId":"235","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/18/1dae10b29f0d2d4975b2398ea2ffa739a0f4b3.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2013-08-26 08:06:04","commitOrder":3,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2013-08-26 08:06:04","endLine":60,"groupId":"235","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2c/0a8203de57f7fdf69eebb98b0bf3c0abd7a719.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"84063af19a3694e40ccf16850c2b644f4a3df1e6","commitMessage":"@@@SOLR-4817 Solr should not fall back to the back compat built in solr.xml in SolrCloud mode.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1517398 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-26 08:06:04","modifiedFileCount":"18","status":"M","submitter":"Erick Erickson"},{"authorTime":"2014-03-28 01:23:40","codes":[{"authorDate":"2014-03-28 01:23:40","commitOrder":4,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-03-28 01:23:40","endLine":76,"groupId":"235","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2e/beca3225bb84d9943b5ec9d1e8b3dbd01b0262.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2014-03-28 01:23:40","commitOrder":4,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-03-28 01:23:40","endLine":60,"groupId":"235","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/4677d56a27a83aa11b7d1e3c2a245a1e92ffcf.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"6afdd45556df06e2f6696367a6e465afa2f18cc2","commitMessage":"@@@SOLR-5914: Solr tests should use dataDir for tmp files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1582413 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-28 01:23:40","modifiedFileCount":"93","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-03-28 01:23:40","codes":[{"authorDate":"2014-03-31 19:34:01","commitOrder":5,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-03-31 19:34:01","endLine":75,"groupId":"235","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b0/63728a398c4a9d01e58633d84b893b68b5633e.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2014-03-28 01:23:40","commitOrder":5,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-03-28 01:23:40","endLine":60,"groupId":"235","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/4677d56a27a83aa11b7d1e3c2a245a1e92ffcf.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"}],"commitId":"2f8192f3c5a880a190455c1d981d0266f3ed6f1d","commitMessage":"@@@LUCENE-5560: Cleanup charset handling for Java 7\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1583302 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-31 19:34:01","modifiedFileCount":"177","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2014-04-05 17:17:20","codes":[{"authorDate":"2014-04-05 17:17:20","commitOrder":6,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-04-05 17:17:20","endLine":72,"groupId":"235","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/17/de9263d9bb89f6c2f12f839ab6c654cf70a9f9.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2014-04-05 17:17:20","commitOrder":6,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-04-05 17:17:20","endLine":60,"groupId":"235","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/b9c2b80e6ec23c7e9929aff417a17fdc613ae8.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"2b1c7f34c475be280b033feaaa9984de48660d2d","commitMessage":"@@@LUCENE-5577: Temporary folder and file management (and cleanup facilities)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1585028 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-05 17:17:20","modifiedFileCount":"188","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2014-09-14 05:46:29","codes":[{"authorDate":"2014-09-14 05:46:29","commitOrder":7,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-09-14 05:46:29","endLine":72,"groupId":"235","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/000c7dce96c9b3733322b9e88e9f02b4781327.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2014-09-14 05:46:29","commitOrder":7,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2014-09-14 05:46:29","endLine":60,"groupId":"235","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f1/1753588647a6755aa4a63edca8eff9ee655134.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"3eb66fb19ca2aa3d9dce53661f3233b6c9d3f974","commitMessage":"@@@LUCENE-5945: Full cutover to Path api from java.io.File\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1624784 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-14 05:46:29","modifiedFileCount":"293","status":"M","submitter":"Robert Muir"},{"authorTime":"2015-01-19 21:25:29","codes":[{"authorDate":"2015-01-19 21:25:29","commitOrder":8,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), \"/solr\", 0, null, null, true, null, sslConfig);\n\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","date":"2015-01-19 21:25:29","endLine":87,"groupId":"235","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/fea2ff59b381f8416cb724ec2eb80a72c4eafd.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2015-01-19 21:25:29","commitOrder":8,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2015-01-19 21:25:29","endLine":75,"groupId":"235","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d4/3163dc3ee58ecb6a25c490a10779ed6c27c45e.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"e61cd9654b069c45712c81ea39713ca352e529a8","commitMessage":"@@@SOLR-6840: Remove support for old-style solr.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1652995 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-19 21:25:29","modifiedFileCount":"56","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-19 21:25:29","codes":[{"authorDate":"2015-02-26 22:05:24","commitOrder":9,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","date":"2015-02-26 22:05:24","endLine":87,"groupId":"235","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/aa/f6b37d7b21e01d4a7c04d48e71d93a61654b4f.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), \"/solr\", 0, null, null, true, null, sslConfig);\n\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2015-01-19 21:25:29","commitOrder":9,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","date":"2015-01-19 21:25:29","endLine":75,"groupId":"235","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d4/3163dc3ee58ecb6a25c490a10779ed6c27c45e.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"}],"commitId":"46ede7622e42d9acfe1f3213c2391add9ad8c1fa","commitMessage":"@@@SOLR-7166: Encapsulate JettySolrRunner config\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1662449 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-26 22:05:24","modifiedFileCount":"17","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-03-05 17:54:06","codes":[{"authorDate":"2015-02-26 22:05:24","commitOrder":10,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","date":"2015-02-26 22:05:24","endLine":87,"groupId":"235","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/aa/f6b37d7b21e01d4a7c04d48e71d93a61654b4f.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2015-03-05 17:54:06","commitOrder":10,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath());\n  }\n","date":"2015-03-05 17:54:06","endLine":75,"groupId":"235","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/75/e120898107aa6fdec9cc0e3e57944d06caa35b.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"739e9b489d9b44ed25e85f29562bcbcf61d41498","commitMessage":"@@@SOLR-7179: Stop using sysprops to configure test jettys\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1664292 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-05 17:54:06","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-03-05 17:54:06","codes":[{"authorDate":"2016-03-04 18:54:10","commitOrder":11,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","date":"2016-03-04 18:54:10","endLine":88,"groupId":"235","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/ad78b748016b5de6d0152776f0f4f7ff5b8cac.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2015-03-05 17:54:06","commitOrder":11,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath());\n  }\n","date":"2015-03-05 17:54:06","endLine":75,"groupId":"235","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/75/e120898107aa6fdec9cc0e3e57944d06caa35b.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"}],"commitId":"517acece6a210b2d1baf75a39fe3b77ea59926b2","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n\nConflicts:\n\tsolr/CHANGES.txt\n","date":"2016-03-04 18:54:10","modifiedFileCount":"303","status":"M","submitter":"Noble Paul"},{"authorTime":"2016-10-29 05:18:58","codes":[{"authorDate":"2016-03-04 18:54:10","commitOrder":12,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","date":"2016-03-04 18:54:10","endLine":88,"groupId":"235","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/ad78b748016b5de6d0152776f0f4f7ff5b8cac.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2016-10-29 05:18:58","commitOrder":12,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), StandardCharsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath());\n  }\n","date":"2016-10-29 05:18:58","endLine":74,"groupId":"235","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/427492e66ec1f7fcaf4554cce45fa7095ff1b5.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), Charsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"2e21511cd37310044e7d167fd80b5277cb942603","commitMessage":"@@@SOLR-9621: Remove several Guava & Apache Commons calls in favor of java 8 alternatives.\n","date":"2016-10-29 05:18:58","modifiedFileCount":"35","status":"M","submitter":"David Smiley"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2016-03-04 18:54:10","commitOrder":13,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","date":"2016-03-04 18:54:10","endLine":88,"groupId":"102645","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/ad78b748016b5de6d0152776f0f4f7ff5b8cac.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    \r\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2018-11-30 01:58:18","commitOrder":13,"curCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), StandardCharsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createAndStartJetty(homeDir.getAbsolutePath());\n  }\n","date":"2018-11-30 01:58:51","endLine":74,"groupId":"102645","id":24,"instanceNumber":2,"isCurCommit":1,"methodName":"beforeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1a/d7765c0fa59baf13f9bbbfb4acf68b9bdc02ef.src","preCode":"  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-binaryfield.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-basic.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    try (Writer w = new OutputStreamWriter(Files.newOutputStream(collDir.toPath().resolve(\"core.properties\")), StandardCharsets.UTF_8)) {\n      Properties coreProps = new Properties();\n      coreProps.put(\"name\", \"collection1\");\n      coreProps.store(w, \"\");\n    }\n\n    createJetty(homeDir.getAbsolutePath());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"}]
