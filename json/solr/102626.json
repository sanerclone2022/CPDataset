[{"authorTime":"2013-11-30 09:32:26","codes":[{"authorDate":"2013-11-30 09:32:26","commitOrder":1,"curCode":"  static void accumSingleSeg(int counts[], SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      segCounts[1+si.getOrd(doc)]++;\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","date":"2013-11-30 09:32:26","endLine":279,"groupId":"50799","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"accumSingleSeg","params":"(intcounts[]@SortedDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/c04f87cde5b3b1b6aab637dcb5749f2455a075.src","preCode":"  static void accumSingleSeg(int counts[], SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      segCounts[1+si.getOrd(doc)]++;\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"B"},{"authorDate":"2013-11-30 09:32:26","commitOrder":1,"curCode":"  static void accumMultiSeg(int counts[], SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+(int)si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      si.setDocument(doc);\n      int term = (int) si.nextOrd();\n      if (term < 0) {\n        counts[0]++; \r\n      } else {\n        do {\n          segCounts[1+term]++;\n        } while ((term = (int)si.nextOrd()) >= 0);\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","date":"2013-11-30 09:32:26","endLine":344,"groupId":"49009","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"accumMultiSeg","params":"(intcounts[]@SortedSetDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/c04f87cde5b3b1b6aab637dcb5749f2455a075.src","preCode":"  static void accumMultiSeg(int counts[], SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+(int)si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      si.setDocument(doc);\n      int term = (int) si.nextOrd();\n      if (term < 0) {\n        counts[0]++; \r\n      } else {\n        do {\n          segCounts[1+term]++;\n        } while ((term = (int)si.nextOrd()) >= 0);\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"B"}],"commitId":"cafdce601cd20bd27186c78cca76d95ec3eaecac","commitMessage":"@@@SOLR-5512: Optimize DocValuesFacets\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1546675 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-30 09:32:26","modifiedFileCount":"3","status":"B","submitter":"Robert Muir"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":2,"curCode":"  static void accumSingleSeg(int counts[], SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > si.docID()) {\n        si.advance(doc);\n      }\n      if (doc == si.docID()) {\n        segCounts[1+si.ordValue()]++;\n      } else {\n        segCounts[0]++;\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","date":"2016-10-03 03:18:22","endLine":318,"groupId":"32631","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"accumSingleSeg","params":"(intcounts[]@SortedDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/1764d65c9a36c1edff2267252158de40f539f0.src","preCode":"  static void accumSingleSeg(int counts[], SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      segCounts[1+si.getOrd(doc)]++;\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":293,"status":"M"},{"authorDate":"2016-10-03 03:18:22","commitOrder":2,"curCode":"  static void accumMultiSeg(int counts[], SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+(int)si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > si.docID()) {\n        si.advance(doc);\n      }\n      if (doc == si.docID()) {\n        int term = (int) si.nextOrd();\n        do {\n          segCounts[1+term]++;\n        } while ((term = (int)si.nextOrd()) >= 0);\n      } else {\n        counts[0]++; \r\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","date":"2016-10-03 03:18:22","endLine":385,"groupId":"46179","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"accumMultiSeg","params":"(intcounts[]@SortedSetDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/1764d65c9a36c1edff2267252158de40f539f0.src","preCode":"  static void accumMultiSeg(int counts[], SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+(int)si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      si.setDocument(doc);\n      int term = (int) si.nextOrd();\n      if (term < 0) {\n        counts[0]++; \r\n      } else {\n        do {\n          segCounts[1+term]++;\n        } while ((term = (int)si.nextOrd()) >= 0);\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"M"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2016-10-24 19:15:53","codes":[{"authorDate":"2016-10-24 19:15:53","commitOrder":3,"curCode":"  static void accumSingleSeg(int counts[], SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (si.advanceExact(doc)) {\n        segCounts[1+si.ordValue()]++;\n      } else {\n        segCounts[0]++;\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","date":"2016-10-24 19:15:53","endLine":312,"groupId":"102626","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"accumSingleSeg","params":"(intcounts[]@SortedDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/ab34bf5063d03370e96fa14f527d2fd54fab61.src","preCode":"  static void accumSingleSeg(int counts[], SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > si.docID()) {\n        si.advance(doc);\n      }\n      if (doc == si.docID()) {\n        segCounts[1+si.ordValue()]++;\n      } else {\n        segCounts[0]++;\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"},{"authorDate":"2016-10-24 19:15:53","commitOrder":3,"curCode":"  static void accumMultiSeg(int counts[], SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+(int)si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (si.advanceExact(doc)) {\n        int term = (int) si.nextOrd();\n        do {\n          segCounts[1+term]++;\n        } while ((term = (int)si.nextOrd()) >= 0);\n      } else {\n        counts[0]++; \r\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","date":"2016-10-24 19:15:53","endLine":373,"groupId":"102626","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"accumMultiSeg","params":"(intcounts[]@SortedSetDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/ab34bf5063d03370e96fa14f527d2fd54fab61.src","preCode":"  static void accumMultiSeg(int counts[], SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    \r\n    final int segCounts[];\n    if (map == null) {\n      segCounts = counts;\n    } else {\n      segCounts = new int[1+(int)si.getValueCount()];\n    }\n    \n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > si.docID()) {\n        si.advance(doc);\n      }\n      if (doc == si.docID()) {\n        int term = (int) si.nextOrd();\n        do {\n          segCounts[1+term]++;\n        } while ((term = (int)si.nextOrd()) >= 0);\n      } else {\n        counts[0]++; \r\n      }\n    }\n    \n    \r\n    if (map != null) {\n      migrateGlobal(counts, segCounts, subIndex, map);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"}],"commitId":"c9de11d02464a146c6ab2aa561622876d081a070","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2016-10-24 19:15:53","modifiedFileCount":"58","status":"M","submitter":"Noble Paul"}]
