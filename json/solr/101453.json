[{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":1,"curCode":"  private static ValueFacet constructValueFacet(String name, AnalyticsValueFacetRequest facetRequest, ExpressionFactory expressionFactory, Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (facetRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facets must contain a mapping expression to facet over, '\" + name + \"' has none.\");\n    }\n    \n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(facetRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be mapping expressions, \"\n          + \"the following expression in value facet '\" + name + \"' contains a reduction: \" + facetRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be castable to string expressions, \"\n          + \"the following expression in value facet '\" + name + \"' is not: \" + facetRequest.expression);\n    }\n    \n    ValueFacet facet = new ValueFacet(name, (StringValueStream)expr);\n    \n    \r\n    if (facetRequest.sort != null) {\n      facet.setSort(constructSort(facetRequest.sort, expressions));\n    }\n    return facet;\n  }\n","date":"2017-06-29 17:00:17","endLine":357,"groupId":"43819","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"constructValueFacet","params":"(Stringname@AnalyticsValueFacetRequestfacetRequest@ExpressionFactoryexpressionFactory@Map<String@AnalyticsExpression>expressions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/a62e2a151fd0a5736158da9a351a488f9324f3.src","preCode":"  private static ValueFacet constructValueFacet(String name, AnalyticsValueFacetRequest facetRequest, ExpressionFactory expressionFactory, Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (facetRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facets must contain a mapping expression to facet over, '\" + name + \"' has none.\");\n    }\n    \n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(facetRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be mapping expressions, \"\n          + \"the following expression in value facet '\" + name + \"' contains a reduction: \" + facetRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be castable to string expressions, \"\n          + \"the following expression in value facet '\" + name + \"' is not: \" + facetRequest.expression);\n    }\n    \n    ValueFacet facet = new ValueFacet(name, (StringValueStream)expr);\n    \n    \r\n    if (facetRequest.sort != null) {\n      facet.setSort(constructSort(facetRequest.sort, expressions));\n    }\n    return facet;\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":334,"status":"B"},{"authorDate":"2017-06-29 17:00:17","commitOrder":1,"curCode":"  private static PivotNode<?> constructPivot(AnalyticsPivotRequest pivotRequest,\n                                      PivotNode<?> childPivot,\n                                      ExpressionFactory expressionFactory,\n                                      Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (pivotRequest.name == null || pivotRequest.name.length() == 0) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have a name.\");\n    }\n    if (pivotRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have an expression to facet over, '\" + pivotRequest.name + \"' does not.\");\n    }\n    \n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(pivotRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be mapping expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' contains a reduction: \" + pivotRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be castable to string expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' is not: '\" + pivotRequest.expression);\n    }\n    \n    PivotNode<?> pivot;\n    if (childPivot == null) {\n      pivot = new PivotNode.PivotLeaf(pivotRequest.name, (StringValueStream)expr);\n    } else {\n      pivot = new PivotNode.PivotBranch(pivotRequest.name, (StringValueStream)expr, childPivot);\n    }\n    \n    \r\n    if (pivotRequest.sort != null) {\n      pivot.setSort(constructSort(pivotRequest.sort, expressions));\n    }\n    return pivot;\n  }\n","date":"2017-06-29 17:00:17","endLine":414,"groupId":"43821","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"constructPivot","params":"(AnalyticsPivotRequestpivotRequest@PivotNode<?>childPivot@ExpressionFactoryexpressionFactory@Map<String@AnalyticsExpression>expressions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/a62e2a151fd0a5736158da9a351a488f9324f3.src","preCode":"  private static PivotNode<?> constructPivot(AnalyticsPivotRequest pivotRequest,\n                                      PivotNode<?> childPivot,\n                                      ExpressionFactory expressionFactory,\n                                      Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (pivotRequest.name == null || pivotRequest.name.length() == 0) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have a name.\");\n    }\n    if (pivotRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have an expression to facet over, '\" + pivotRequest.name + \"' does not.\");\n    }\n    \n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(pivotRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be mapping expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' contains a reduction: \" + pivotRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be castable to string expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' is not: '\" + pivotRequest.expression);\n    }\n    \n    PivotNode<?> pivot;\n    if (childPivot == null) {\n      pivot = new PivotNode.PivotLeaf(pivotRequest.name, (StringValueStream)expr);\n    } else {\n      pivot = new PivotNode.PivotBranch(pivotRequest.name, (StringValueStream)expr, childPivot);\n    }\n    \n    \r\n    if (pivotRequest.sort != null) {\n      pivot.setSort(constructSort(pivotRequest.sort, expressions));\n    }\n    return pivot;\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":380,"status":"B"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"B","submitter":"Karl Wright"},{"authorTime":"2021-06-22 00:19:37","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  private static ValueFacet constructValueFacet(String name, AnalyticsValueFacetRequest facetRequest, ExpressionFactory expressionFactory, Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (facetRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facets must contain a mapping expression to facet over, '\" + name + \"' has none.\");\n    }\n    \n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(facetRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be mapping expressions, \"\n          + \"the following expression in value facet '\" + name + \"' contains a reduction: \" + facetRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be castable to string expressions, \"\n          + \"the following expression in value facet '\" + name + \"' is not: \" + facetRequest.expression);\n    }\n    \n    ValueFacet facet = new ValueFacet(name, (StringValueStream)expr);\n    \n    \r\n    if (facetRequest.sort != null) {\n      facet.setSort(constructSort(facetRequest.sort, expressions));\n    }\n    return facet;\n  }\n","date":"2017-06-29 17:00:17","endLine":357,"groupId":"101453","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"constructValueFacet","params":"(Stringname@AnalyticsValueFacetRequestfacetRequest@ExpressionFactoryexpressionFactory@Map<String@AnalyticsExpression>expressions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/a62e2a151fd0a5736158da9a351a488f9324f3.src","preCode":"  private static ValueFacet constructValueFacet(String name, AnalyticsValueFacetRequest facetRequest, ExpressionFactory expressionFactory, Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (facetRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facets must contain a mapping expression to facet over, '\" + name + \"' has none.\");\n    }\n    \n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(facetRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be mapping expressions, \"\n          + \"the following expression in value facet '\" + name + \"' contains a reduction: \" + facetRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Value Facet expressions must be castable to string expressions, \"\n          + \"the following expression in value facet '\" + name + \"' is not: \" + facetRequest.expression);\n    }\n    \n    ValueFacet facet = new ValueFacet(name, (StringValueStream)expr);\n    \n    \r\n    if (facetRequest.sort != null) {\n      facet.setSort(constructSort(facetRequest.sort, expressions));\n    }\n    return facet;\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":334,"status":"N"},{"authorDate":"2021-06-22 00:19:37","commitOrder":2,"curCode":"  private static PivotNode<?> constructPivot(AnalyticsPivotRequest pivotRequest,\n                                      PivotNode<?> childPivot,\n                                      ExpressionFactory expressionFactory,\n                                      Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (pivotRequest.name == null || pivotRequest.name.length() == 0) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have a name.\");\n    }\n    if (pivotRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have an expression to facet over, '\" + pivotRequest.name + \"' does not.\");\n    }\n\n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(pivotRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be mapping expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' contains a reduction: \" + pivotRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be castable to string expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' is not: '\" + pivotRequest.expression);\n    }\n\n    PivotNode<?> pivot;\n    if (childPivot == null) {\n      pivot = new PivotNode.PivotLeaf(pivotRequest.name, (StringValueStream)expr);\n    } else {\n      pivot = new PivotNode.PivotBranch<>(pivotRequest.name, (StringValueStream)expr, childPivot);\n    }\n\n    \r\n    if (pivotRequest.sort != null) {\n      pivot.setSort(constructSort(pivotRequest.sort, expressions));\n    }\n    return pivot;\n  }\n","date":"2021-06-22 00:19:37","endLine":387,"groupId":"101453","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"constructPivot","params":"(AnalyticsPivotRequestpivotRequest@PivotNode<?>childPivot@ExpressionFactoryexpressionFactory@Map<String@AnalyticsExpression>expressions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/55499d8b186e68a91257156bce98850024c464.src","preCode":"  private static PivotNode<?> constructPivot(AnalyticsPivotRequest pivotRequest,\n                                      PivotNode<?> childPivot,\n                                      ExpressionFactory expressionFactory,\n                                      Map<String, AnalyticsExpression> expressions) throws SolrException {\n    if (pivotRequest.name == null || pivotRequest.name.length() == 0) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have a name.\");\n    }\n    if (pivotRequest.expression == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivots must have an expression to facet over, '\" + pivotRequest.name + \"' does not.\");\n    }\n\n    \r\n    AnalyticsValueStream expr = expressionFactory.createExpression(pivotRequest.expression);\n    if (!expr.getExpressionType().isUnreduced()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be mapping expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' contains a reduction: \" + pivotRequest.expression);\n    }\n    if (!(expr instanceof StringValueStream)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Pivot expressions must be castable to string expressions, \"\n          + \"the following expression in pivot '\" + pivotRequest.name + \"' is not: '\" + pivotRequest.expression);\n    }\n\n    PivotNode<?> pivot;\n    if (childPivot == null) {\n      pivot = new PivotNode.PivotLeaf(pivotRequest.name, (StringValueStream)expr);\n    } else {\n      pivot = new PivotNode.PivotBranch(pivotRequest.name, (StringValueStream)expr, childPivot);\n    }\n\n    \r\n    if (pivotRequest.sort != null) {\n      pivot.setSort(constructSort(pivotRequest.sort, expressions));\n    }\n    return pivot;\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"}]
