[{"authorTime":"2017-07-06 20:56:58","codes":[{"authorDate":"2015-02-12 13:03:58","commitOrder":9,"curCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","date":"2015-02-12 13:03:58","endLine":914,"groupId":"4861","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestRepeater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/45/c33542c0f9de1dea37bc52e55fd4080ff93f8a.src","preCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":844,"status":"NB"},{"authorDate":"2017-07-06 20:56:58","commitOrder":9,"curCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","date":"2017-07-06 21:02:55","endLine":82,"groupId":"62441","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"after","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/eb02098f82252b8917f46b4eddf767b9c1ce66.src","preCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/request/TestStreamBody.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"80b1430a3ec3f6684ae50483bafc6db10c3cb13d","commitMessage":"@@@SOLR-10748: Make stream.body configurable and disabled by default\n","date":"2017-07-06 21:02:55","modifiedFileCount":"7","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2017-07-06 20:56:58","codes":[{"authorDate":"2018-04-08 18:44:45","commitOrder":10,"curCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","date":"2018-04-08 18:44:45","endLine":1061,"groupId":"4861","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestRepeater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e4/b7fa32a72840d1705c869df5408e60a6a28f61.src","preCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":990,"status":"M"},{"authorDate":"2017-07-06 20:56:58","commitOrder":10,"curCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","date":"2017-07-06 21:02:55","endLine":82,"groupId":"62441","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"after","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/eb02098f82252b8917f46b4eddf767b9c1ce66.src","preCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/request/TestStreamBody.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"bd8fe72426b2a9df45050143e85481f523854239","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-04-08 18:44:45","modifiedFileCount":"5","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-07-06 20:56:58","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":11,"curCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","date":"2018-11-30 01:58:51","endLine":1067,"groupId":"4861","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestRepeater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/d2c04d5f155c6adda1b8d55086b5dd7a6a6a8f.src","preCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":996,"status":"M"},{"authorDate":"2017-07-06 20:56:58","commitOrder":11,"curCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","date":"2017-07-06 21:02:55","endLine":82,"groupId":"62441","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"after","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/eb02098f82252b8917f46b4eddf767b9c1ce66.src","preCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/request/TestStreamBody.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2017-07-06 20:56:58","codes":[{"authorDate":"2020-08-06 05:52:48","commitOrder":12,"curCode":"  public void doTestRepeater() throws Exception {\n    \r\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower1.xml\", \"solrconfig.xml\");\n    followerJetty.stop();\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n      leaderClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(3, \"*:*\", followerClient);\n      \n      assertVersions(leaderClient, repeaterClient);\n      assertVersions(repeaterClient, followerClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(3, \"*:*\", followerClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(6, \"*:*\", followerClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","date":"2020-08-06 05:52:48","endLine":1175,"groupId":"4861","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestRepeater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void doTestRepeater() throws Exception {\n    \r\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1104,"status":"M"},{"authorDate":"2017-07-06 20:56:58","commitOrder":12,"curCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","date":"2017-07-06 21:02:55","endLine":82,"groupId":"62441","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"after","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/eb02098f82252b8917f46b4eddf767b9c1ce66.src","preCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/request/TestStreamBody.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"7110118ad4f1a68f39a1db1caab374594098243e","commitMessage":"@@@SOLR-14702: Remove oppressive language (part1) (#1711)\n\nReplace references to \"master\" and \"slave\" with \"leader\" and \"follower\"","date":"2020-08-06 05:52:48","modifiedFileCount":"28","status":"M","submitter":"Marcus"},{"authorTime":"2017-07-06 20:56:58","codes":[{"authorDate":"2021-09-23 00:46:59","commitOrder":13,"curCode":"  public void doTestRepeater() throws Exception {\n    \r\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower1.xml\", \"solrconfig.xml\");\n    followerJetty.stop();\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(buildUrl(followerJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(buildUrl(repeaterJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n      for (int i = 0; i < 3; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n      leaderClient.commit();\n\n      pullFromTo(leaderJetty, repeaterJetty);\n\n      rQuery(3, \"*:*\", repeaterClient);\n\n      pullFromTo(repeaterJetty, followerJetty);\n\n      rQuery(3, \"*:*\", followerClient);\n\n      assertVersions(leaderClient, repeaterClient);\n      assertVersions(repeaterClient, followerClient);\n\n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n\n      pullFromTo(leaderJetty, repeaterJetty);\n\n      rQuery(3, \"*:*\", repeaterClient);\n\n      pullFromTo(repeaterJetty, followerJetty);\n\n      rQuery(3, \"*:*\", followerClient);\n\n      for (int i = 3; i < 6; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n      leaderClient.commit();\n\n      pullFromTo(leaderJetty, repeaterJetty);\n\n      rQuery(6, \"*:*\", repeaterClient);\n\n      pullFromTo(repeaterJetty, followerJetty);\n\n      rQuery(6, \"*:*\", followerClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n\n  }\n","date":"2021-09-23 00:46:59","endLine":1144,"groupId":"103484","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"doTestRepeater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void doTestRepeater() throws Exception {\n    \r\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower1.xml\", \"solrconfig.xml\");\n    followerJetty.stop();\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n      leaderClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(3, \"*:*\", followerClient);\n      \n      assertVersions(leaderClient, repeaterClient);\n      assertVersions(repeaterClient, followerClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(3, \"*:*\", followerClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(6, \"*:*\", followerClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1073,"status":"M"},{"authorDate":"2017-07-06 20:56:58","commitOrder":13,"curCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","date":"2017-07-06 21:02:55","endLine":82,"groupId":"103484","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"after","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/eb02098f82252b8917f46b4eddf767b9c1ce66.src","preCode":"  public void after() throws Exception {\n    if (jetty != null) {\n      jetty.stop();\n      jetty = null;\n    }\n    if (client != null) {\n      client.close();\n      client = null;\n    }\n    if (restTestHarness != null) {\n      restTestHarness.close();\n      restTestHarness = null;\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/request/TestStreamBody.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"3cd71244d23704a7addf34eeac9f728862518f48","commitMessage":"@@@SOLR-15286: A brand new follower in the legacy mode should wait to replicate index before reporting healthy (#238)\n\n* https://issues.apache.org/jira/browse/SOLR-15286\n\nAdded log to the HealthCheckHandler for legacy mode to report followers healthy based on the index generation diff\n\nCo-authored-by: Pushkar Raste <praste@apple.com>","date":"2021-09-23 00:46:59","modifiedFileCount":"8","status":"M","submitter":"Pushkar Raste"}]
