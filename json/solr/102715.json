[{"authorTime":"2013-04-22 22:26:55","codes":[{"authorDate":"2013-04-22 22:26:55","commitOrder":1,"curCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    initCore(\"solrconfig-mutable-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2013-04-22 22:26:55","endLine":357,"groupId":"46867","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWithSchemaCodecFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/c9a7899a0286cb25eb9d148083022f94ddf241.src","preCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    initCore(\"solrconfig-mutable-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":332,"status":"B"},{"authorDate":"2013-04-22 22:26:55","commitOrder":1,"curCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    initCore(\"solrconfig-mutable-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2013-04-22 22:26:55","endLine":384,"groupId":"52802","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWithSchemaSimilarityFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/c9a7899a0286cb25eb9d148083022f94ddf241.src","preCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    initCore(\"solrconfig-mutable-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"B"}],"commitId":"28b7111dc79fb0095814d617a5879fb93e70fb9c","commitMessage":"@@@SOLR-3251: Dynamically add fields to schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1470539 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-22 22:26:55","modifiedFileCount":"120","status":"B","submitter":"Steven Rowe"},{"authorTime":"2013-08-14 02:37:26","codes":[{"authorDate":"2013-08-14 02:37:26","commitOrder":2,"curCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2013-08-14 02:37:26","endLine":370,"groupId":"46867","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWithSchemaCodecFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a1/27b67c6b1ec6841d6e1d0cdb37419b375f6c80.src","preCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    initCore(\"solrconfig-mutable-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"},{"authorDate":"2013-08-14 02:37:26","commitOrder":2,"curCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2013-08-14 02:37:26","endLine":398,"groupId":"52802","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWithSchemaSimilarityFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a1/27b67c6b1ec6841d6e1d0cdb37419b375f6c80.src","preCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    initCore(\"solrconfig-mutable-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"}],"commitId":"960e49b28843ab845117725800cb2cde6254f400","commitMessage":"@@@SOLR-4952: get all manged schema tests using solrconfig.snippet.randomindexconfig.xml - mainly by removing several solrconfig-*-managed-schema.xml files and using sys props in solrconfig-managed-schema.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1513611 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-14 02:37:26","modifiedFileCount":"5","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2014-03-12 22:39:17","endLine":370,"groupId":"46867","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWithSchemaCodecFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2c/95ef6c86dc408f0448bc34c197b11449c01195.src","preCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2014-03-12 22:39:17","endLine":398,"groupId":"52802","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWithSchemaSimilarityFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2c/95ef6c86dc408f0448bc34c197b11449c01195.src","preCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<String,Object>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-09-04 23:56:25","codes":[{"authorDate":"2014-09-04 23:56:25","commitOrder":4,"curCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2014-09-04 23:56:25","endLine":367,"groupId":"46867","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWithSchemaCodecFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/06/36606af4135f348c7607f636cf1289ce878f05.src","preCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"},{"authorDate":"2014-09-04 23:56:25","commitOrder":4,"curCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2014-09-04 23:56:25","endLine":395,"groupId":"52802","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWithSchemaSimilarityFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/06/36606af4135f348c7607f636cf1289ce878f05.src","preCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.delete()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"M"}],"commitId":"3604769c3abad5b41a84fdd390ec3493b5804abc","commitMessage":"@@@LUCENE-5906: Use Files.delete everywhere instead of File.delete\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1622506 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-04 23:56:25","modifiedFileCount":"72","status":"M","submitter":"Robert Muir"},{"authorTime":"2021-09-16 20:43:31","codes":[{"authorDate":"2021-09-16 20:43:31","commitOrder":5,"curCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema.xml\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2021-09-16 20:43:31","endLine":386,"groupId":"102715","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddWithSchemaCodecFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/a5a79a321defc265288209deb339419792b44d.src","preCode":"  public void testAddWithSchemaCodecFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema_codec.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"string_f\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\", \n                  h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"string_disk_new_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\", \n               h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"string_disk\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"aBc\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"M"},{"authorDate":"2021-09-16 20:43:31","commitOrder":5,"curCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema.xml\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","date":"2021-09-16 20:43:31","endLine":414,"groupId":"102715","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddWithSchemaSimilarityFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/a5a79a321defc265288209deb339419792b44d.src","preCode":"  public void testAddWithSchemaSimilarityFactory() throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-bm25.xml\", tmpSolrHome.getPath());\n\n    String uniqueKey = \"id\";\n    assertNotNull(\"Unique key field '\" + uniqueKey + \"' is not present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(uniqueKey));\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n\n    Map<String,Object> options = new HashMap<>();\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(fieldName, \"thing\", uniqueKey, \"123\"));\n    assertU(commit());\n\n    assertQ(req(fieldName + \":thing\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"M"}],"commitId":"df903cbdc1de7fb2c3469b9773d6f9d23d591a5d","commitMessage":"@@@ SOLR-10887: Append .xml to managed-schema file VERSION 2 (#279)\n\nManaged schema file is now called \"managed-schema.xml\".  however there is a fallback to \"managed-schema\" since that is a common legacy name for the file.   Updated the name of the files used in running tests.","date":"2021-09-16 20:43:31","modifiedFileCount":"9","status":"M","submitter":"Eric Pugh"}]
