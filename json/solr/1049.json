[{"authorTime":"2018-06-09 21:40:55","codes":[{"authorDate":"2018-06-09 21:40:55","commitOrder":1,"curCode":"  default void writeNamedListAsMapMangled(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    HashMap<String, Integer> repeats = new HashMap<>(4);\n\n    boolean first = true;\n    for (int i = 0; i < sz; i++) {\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n\n      if (first) {\n        first = false;\n        repeats.put(key, 0);\n      } else {\n        writeMapSeparator();\n\n        Integer repeatCount = repeats.get(key);\n        if (repeatCount == null) {\n          repeats.put(key, 0);\n        } else {\n          String newKey = key;\n          int newCount = repeatCount;\n          do {  \r\n            newKey = key + ' ' + (++newCount);\n            repeatCount = repeats.get(newKey);\n          } while (repeatCount != null);\n\n          repeats.put(key, newCount);\n          key = newKey;\n        }\n      }\n\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2018-06-09 21:40:55","endLine":364,"groupId":"56419","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeNamedListAsMapMangled","params":"(Stringname@NamedListval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/76bd16e9a17e872118f42d3c296d969c418f95.src","preCode":"  default void writeNamedListAsMapMangled(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    HashMap<String, Integer> repeats = new HashMap<>(4);\n\n    boolean first = true;\n    for (int i = 0; i < sz; i++) {\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n\n      if (first) {\n        first = false;\n        repeats.put(key, 0);\n      } else {\n        writeMapSeparator();\n\n        Integer repeatCount = repeats.get(key);\n        if (repeatCount == null) {\n          repeats.put(key, 0);\n        } else {\n          String newKey = key;\n          int newCount = repeatCount;\n          do {  \r\n            newKey = key + ' ' + (++newCount);\n            repeatCount = repeats.get(newKey);\n          } while (repeatCount != null);\n\n          repeats.put(key, newCount);\n          key = newKey;\n        }\n      }\n\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"B"},{"authorDate":"2018-06-09 21:40:55","commitOrder":1,"curCode":"  default void writeNamedListAsMapWithDups(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    for (int i = 0; i < sz; i++) {\n      if (i != 0) {\n        writeMapSeparator();\n      }\n\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2018-06-09 21:40:55","endLine":391,"groupId":"56418","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeNamedListAsMapWithDups","params":"(Stringname@NamedListval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/76bd16e9a17e872118f42d3c296d969c418f95.src","preCode":"  default void writeNamedListAsMapWithDups(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    for (int i = 0; i < sz; i++) {\n      if (i != 0) {\n        writeMapSeparator();\n      }\n\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"B"}],"commitId":"944b24fab8a4f53f2a60c7754a878c86267eaceb","commitMessage":"@@@SOLR-12455: Refactor JSON serialization code into SolrJ package\n","date":"2018-06-09 21:40:55","modifiedFileCount":"13","status":"B","submitter":"Noble Paul"},{"authorTime":"2020-06-06 21:30:17","codes":[{"authorDate":"2020-06-06 21:30:17","commitOrder":2,"curCode":"  default void writeNamedListAsMapMangled(String name, @SuppressWarnings({\"rawtypes\"})NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    HashMap<String, Integer> repeats = new HashMap<>(4);\n\n    boolean first = true;\n    for (int i = 0; i < sz; i++) {\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n\n      if (first) {\n        first = false;\n        repeats.put(key, 0);\n      } else {\n        writeMapSeparator();\n\n        Integer repeatCount = repeats.get(key);\n        if (repeatCount == null) {\n          repeats.put(key, 0);\n        } else {\n          String newKey = key;\n          int newCount = repeatCount;\n          do {  \r\n            newKey = key + ' ' + (++newCount);\n            repeatCount = repeats.get(newKey);\n          } while (repeatCount != null);\n\n          repeats.put(key, newCount);\n          key = newKey;\n        }\n      }\n\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2020-06-06 21:30:17","endLine":365,"groupId":"56419","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeNamedListAsMapMangled","params":"(Stringname@@SuppressWarnings({\"rawtypes\"})NamedListval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/472ad79ebc5fe63cd015a957b2b9d4bfa07cee.src","preCode":"  default void writeNamedListAsMapMangled(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    HashMap<String, Integer> repeats = new HashMap<>(4);\n\n    boolean first = true;\n    for (int i = 0; i < sz; i++) {\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n\n      if (first) {\n        first = false;\n        repeats.put(key, 0);\n      } else {\n        writeMapSeparator();\n\n        Integer repeatCount = repeats.get(key);\n        if (repeatCount == null) {\n          repeats.put(key, 0);\n        } else {\n          String newKey = key;\n          int newCount = repeatCount;\n          do {  \r\n            newKey = key + ' ' + (++newCount);\n            repeatCount = repeats.get(newKey);\n          } while (repeatCount != null);\n\n          repeats.put(key, newCount);\n          key = newKey;\n        }\n      }\n\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"},{"authorDate":"2020-06-06 21:30:17","commitOrder":2,"curCode":"  default void writeNamedListAsMapWithDups(String name, @SuppressWarnings({\"rawtypes\"})NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    for (int i = 0; i < sz; i++) {\n      if (i != 0) {\n        writeMapSeparator();\n      }\n\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2020-06-06 21:30:17","endLine":392,"groupId":"56418","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeNamedListAsMapWithDups","params":"(Stringname@@SuppressWarnings({\"rawtypes\"})NamedListval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/472ad79ebc5fe63cd015a957b2b9d4bfa07cee.src","preCode":"  default void writeNamedListAsMapWithDups(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    for (int i = 0; i < sz; i++) {\n      if (i != 0) {\n        writeMapSeparator();\n      }\n\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"M"}],"commitId":"6d5b1ae7f4bf02f8d0a4a193af08d0ec0cd0b0aa","commitMessage":"@@@SOLR-14536: Fix or suppress warnings in apache/solr/common\n","date":"2020-06-06 21:30:17","modifiedFileCount":"23","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-22 00:19:37","codes":[{"authorDate":"2021-06-22 00:19:37","commitOrder":3,"curCode":"  default void writeNamedListAsMapMangled(String name, NamedList<?> val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    HashMap<String, Integer> repeats = new HashMap<>(4);\n\n    boolean first = true;\n    for (int i = 0; i < sz; i++) {\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n\n      if (first) {\n        first = false;\n        repeats.put(key, 0);\n      } else {\n        writeMapSeparator();\n\n        Integer repeatCount = repeats.get(key);\n        if (repeatCount == null) {\n          repeats.put(key, 0);\n        } else {\n          String newKey = key;\n          int newCount = repeatCount;\n          do {  \r\n            newKey = key + ' ' + (++newCount);\n            repeatCount = repeats.get(newKey);\n          } while (repeatCount != null);\n\n          repeats.put(key, newCount);\n          key = newKey;\n        }\n      }\n\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2021-06-22 00:19:37","endLine":363,"groupId":"1049","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"writeNamedListAsMapMangled","params":"(Stringname@NamedList<?>val)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/025e38786776da419481e272e39c3d742e338f.src","preCode":"  default void writeNamedListAsMapMangled(String name, @SuppressWarnings({\"rawtypes\"})NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    HashMap<String, Integer> repeats = new HashMap<>(4);\n\n    boolean first = true;\n    for (int i = 0; i < sz; i++) {\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n\n      if (first) {\n        first = false;\n        repeats.put(key, 0);\n      } else {\n        writeMapSeparator();\n\n        Integer repeatCount = repeats.get(key);\n        if (repeatCount == null) {\n          repeats.put(key, 0);\n        } else {\n          String newKey = key;\n          int newCount = repeatCount;\n          do {  \r\n            newKey = key + ' ' + (++newCount);\n            repeatCount = repeats.get(newKey);\n          } while (repeatCount != null);\n\n          repeats.put(key, newCount);\n          key = newKey;\n        }\n      }\n\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"},{"authorDate":"2021-06-22 00:19:37","commitOrder":3,"curCode":"  default void writeNamedListAsMapWithDups(String name, NamedList<?> val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    for (int i = 0; i < sz; i++) {\n      if (i != 0) {\n        writeMapSeparator();\n      }\n\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2021-06-22 00:19:37","endLine":390,"groupId":"1049","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"writeNamedListAsMapWithDups","params":"(Stringname@NamedList<?>val)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/025e38786776da419481e272e39c3d742e338f.src","preCode":"  default void writeNamedListAsMapWithDups(String name, @SuppressWarnings({\"rawtypes\"})NamedList val) throws IOException {\n    int sz = val.size();\n    writeMapOpener(sz);\n    incLevel();\n\n    for (int i = 0; i < sz; i++) {\n      if (i != 0) {\n        writeMapSeparator();\n      }\n\n      String key = val.getName(i);\n      if (key == null) key = \"\";\n      indent();\n      writeKey(key, true);\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"M"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"}]
