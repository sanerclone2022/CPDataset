[{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":3,"curCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        assert fos.size() == channel.size();\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2013-06-27 04:18:33","endLine":461,"groupId":"32089","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeCommit","params":"(CommitUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/f1a342c93396a1566d8759d7b85e82a66fa715.src","preCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        assert fos.size() == channel.size();\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"MB"},{"authorDate":"2013-06-27 04:18:33","commitOrder":3,"curCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        \n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        tlogOutStream.hflush();\n\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2013-06-27 04:18:33","endLine":231,"groupId":"32089","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeCommit","params":"(CommitUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/93/5774d766a5c5ddd5f1ed912cc6a70a37946212.src","preCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        \n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        tlogOutStream.hflush();\n\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"B"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":4,"curCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        assert fos.size() == channel.size();\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2013-06-27 04:18:33","endLine":461,"groupId":"32089","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeCommit","params":"(CommitUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/f1a342c93396a1566d8759d7b85e82a66fa715.src","preCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        assert fos.size() == channel.size();\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"N"},{"authorDate":"2016-10-03 03:18:22","commitOrder":4,"curCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        \n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        ensureFlushed();  \r\n\n        \r\n        closeOutput();\n\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2016-10-03 03:18:22","endLine":240,"groupId":"32089","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeCommit","params":"(CommitUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e7/25127a8fc4bece56d9fef6713b4011ae2d0d30.src","preCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        \n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        fos.flush();  \r\n        tlogOutStream.hflush();\n\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-06-04 12:32:31","codes":[{"authorDate":"2018-06-04 12:32:31","commitOrder":5,"curCode":"  public long writeCommit(CommitUpdateCommand cmd) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n\n        fos.flush();  \r\n        assert fos.size() == channel.size();\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2018-06-04 12:32:31","endLine":479,"groupId":"102037","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeCommit","params":"(CommitUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/23896d491e177e3002e96cae35a78ef5848cd1.src","preCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n\n        fos.flush();  \r\n        assert fos.size() == channel.size();\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"M"},{"authorDate":"2018-06-04 12:32:31","commitOrder":5,"curCode":"  public long writeCommit(CommitUpdateCommand cmd) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        \n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        ensureFlushed();  \r\n\n        \r\n        closeOutput();\n\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2018-06-04 12:32:31","endLine":230,"groupId":"102037","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeCommit","params":"(CommitUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8e/d7d7ad65abf5a34a1a0d669c7d730c70e08890.src","preCode":"  public long writeCommit(CommitUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        \n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.COMMIT | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(END_MESSAGE);  \r\n\n        endRecord(pos);\n        \n        ensureFlushed();  \r\n\n        \r\n        closeOutput();\n\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"ab316bbc91c273b13c851a38ad5d14ef64ab3eec","commitMessage":"@@@SOLR-9922: Write buffering updates to another tlog\n","date":"2018-06-04 12:32:31","modifiedFileCount":"11","status":"M","submitter":"Cao Manh Dat"}]
