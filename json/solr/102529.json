[{"authorTime":"2016-01-08 03:37:49","codes":[{"authorDate":"2015-12-18 01:08:10","commitOrder":2,"curCode":"  public static boolean injectFailReplicaRequests() {\n    if (failReplicaRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failReplicaRequests);\n      boolean enabled = pair.getKey();\n      int chanceIn100 = pair.getValue();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","date":"2015-12-18 01:08:10","endLine":128,"groupId":"3820","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"injectFailReplicaRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/54/16234b43cc6f4a7abbc81f3cb64306bdf75c78.src","preCode":"  public static boolean injectFailReplicaRequests() {\n    if (failReplicaRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failReplicaRequests);\n      boolean enabled = pair.getKey();\n      int chanceIn100 = pair.getValue();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"NB"},{"authorDate":"2016-01-08 03:37:49","commitOrder":2,"curCode":"  public static boolean injectFailUpdateRequests() {\n    if (failUpdateRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failUpdateRequests);\n      boolean enabled = pair.getKey();\n      int chanceIn100 = pair.getValue();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","date":"2016-01-08 03:37:49","endLine":144,"groupId":"3820","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"injectFailUpdateRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/98/61a1065a52d0e41152be1bfe6dab1aefe51770.src","preCode":"  public static boolean injectFailUpdateRequests() {\n    if (failUpdateRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failUpdateRequests);\n      boolean enabled = pair.getKey();\n      int chanceIn100 = pair.getValue();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"53c72a9ebdd145da307d5e0027f1d0225a58da44","commitMessage":"@@@SOLR-8451: We should not call method.abort in HttpSolrClient or HttpSolrCall#remoteQuery and HttpSolrCall#remoteQuery should not close streams.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1723615 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-08 03:37:49","modifiedFileCount":"5","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2016-05-08 14:57:51","codes":[{"authorDate":"2016-05-08 14:57:51","commitOrder":3,"curCode":"  public static boolean injectFailReplicaRequests() {\n    if (failReplicaRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failReplicaRequests);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","date":"2016-05-08 14:57:51","endLine":168,"groupId":"23706","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"injectFailReplicaRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cc/3f85d4472a570f55a11f69ee2205dfbe9592ea.src","preCode":"  public static boolean injectFailReplicaRequests() {\n    if (failReplicaRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failReplicaRequests);\n      boolean enabled = pair.getKey();\n      int chanceIn100 = pair.getValue();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2016-05-08 14:57:51","commitOrder":3,"curCode":"  public static boolean injectFailUpdateRequests() {\n    if (failUpdateRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failUpdateRequests);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","date":"2016-05-08 14:57:51","endLine":181,"groupId":"23706","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"injectFailUpdateRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cc/3f85d4472a570f55a11f69ee2205dfbe9592ea.src","preCode":"  public static boolean injectFailUpdateRequests() {\n    if (failUpdateRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failUpdateRequests);\n      boolean enabled = pair.getKey();\n      int chanceIn100 = pair.getValue();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"d57e0de5ea992417d97da6b39d26809b5b23adc4","commitMessage":"@@@SOLR-9071: rename the getters in org.apache.solr.common.util.Pair class\n","date":"2016-05-08 14:57:51","modifiedFileCount":"4","status":"M","submitter":"Noble Paul"},{"authorTime":"2016-08-10 14:29:38","codes":[{"authorDate":"2016-08-10 14:29:38","commitOrder":4,"curCode":"  public static boolean injectFailReplicaRequests() {\n    if (failReplicaRequests != null) {\n      Random rand = random();\n      if (null == rand) return true;\n      \n      Pair<Boolean,Integer> pair = parseValue(failReplicaRequests);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","date":"2016-08-10 14:29:38","endLine":211,"groupId":"102529","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"injectFailReplicaRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/de74d02f168056e04393831d4eff99f92b8264.src","preCode":"  public static boolean injectFailReplicaRequests() {\n    if (failReplicaRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failReplicaRequests);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2016-08-10 14:29:38","commitOrder":4,"curCode":"  public static boolean injectFailUpdateRequests() {\n    if (failUpdateRequests != null) {\n      Random rand = random();\n      if (null == rand) return true;\n      \n      Pair<Boolean,Integer> pair = parseValue(failUpdateRequests);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","date":"2016-08-10 14:29:38","endLine":227,"groupId":"102529","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"injectFailUpdateRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/de74d02f168056e04393831d4eff99f92b8264.src","preCode":"  public static boolean injectFailUpdateRequests() {\n    if (failUpdateRequests != null) {\n      Pair<Boolean,Integer> pair = parseValue(failUpdateRequests);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && RANDOM.nextInt(100) >= (100 - chanceIn100)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Random test update fail\");\n      }\n    }\n\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"}],"commitId":"22eeba9920d65a704156145d101616394992602d","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-08-10 14:29:38","modifiedFileCount":"36","status":"M","submitter":"Karl Wright"}]
