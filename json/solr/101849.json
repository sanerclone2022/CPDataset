[{"authorTime":"2012-01-26 03:49:26","codes":[{"authorDate":"2012-01-26 03:49:26","commitOrder":2,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2012-01-26 03:49:26","endLine":200,"groupId":"62167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/20429d8f902736f5c551976d3593b682fa69ca.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"MB"},{"authorDate":"2012-01-26 03:49:26","commitOrder":2,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2012-01-26 03:49:26","endLine":78,"groupId":"62167","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/1f06e18e9a0901a1b6107b109b9761e1491790.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"9fed484fb108e53cd6026133f660b3fd270e2025","commitMessage":"@@@SOLR-2358: merge in solrcloud branch (watch out hudson!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1235888 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-26 03:49:26","modifiedFileCount":"88","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2012-07-02 23:57:12","codes":[{"authorDate":"2012-07-02 23:57:12","commitOrder":3,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2012-07-02 23:57:12","endLine":210,"groupId":"52175","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/44/32b665dc4bb72b373894764139c3ea1a8e357c.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"},{"authorDate":"2012-07-02 23:57:12","commitOrder":3,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2012-07-02 23:57:12","endLine":79,"groupId":"52175","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/0f5c46c0f918cb431199d1954fd55f864e8203.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"3bbbd0bea3b0fb395978fe92ce3c77ee766c5e78","commitMessage":"@@@SOLR-3488: Added a Collection management API for SolrCloud.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1356313 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-02 23:57:12","modifiedFileCount":"19","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2012-09-17 22:46:02","codes":[{"authorDate":"2012-09-17 22:46:02","commitOrder":4,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"127.0.0.1:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2012-09-17 22:46:02","endLine":210,"groupId":"52175","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/8bc20e5f70c62f25532ef0d4bafe08ab916141.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"},{"authorDate":"2012-09-17 22:46:02","commitOrder":4,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"127.0.0.1:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2012-09-17 22:46:02","endLine":86,"groupId":"52175","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fc/42cf383987ed62c3b7a7c5bdb907835985a37f.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"4214846719468f1c820b470f536ac13dbf4d2ecb","commitMessage":"@@@switch some of the localhost usage to 127.0.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1386639 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-09-17 22:46:02","modifiedFileCount":"6","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-02-12 23:11:24","codes":[{"authorDate":"2014-02-12 23:11:24","commitOrder":5,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2014-02-12 23:11:24","endLine":316,"groupId":"52175","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/4cdb90ee5003b75deecef8062d2801f256bf7e.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"127.0.0.1:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"},{"authorDate":"2014-02-12 23:11:24","commitOrder":5,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2014-02-12 23:11:24","endLine":126,"groupId":"52175","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/e1f8dc7cf5054929cf26df0e0f04507b6450f8.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"127.0.0.1:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"98810d1f54958b22a30afbeb9db77066e03ecd5a","commitMessage":"@@@SOLR-3854: Cleans up a lot of the tests by using a common function to build a consistent schemed URL (fixes SSL for SolrCmdDistributorTest) + disabled the \"useClientAuth\" property for OSX clients.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1567643 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-12 23:11:24","modifiedFileCount":"14","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-02-12 23:11:24","codes":[{"authorDate":"2014-08-14 20:32:27","commitOrder":6,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2014-08-14 20:32:27","endLine":313,"groupId":"52175","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/18/26ac66fa087f37ddc76fc9a114152752d53fdf.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":293,"status":"M"},{"authorDate":"2014-02-12 23:11:24","commitOrder":6,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2014-02-12 23:11:24","endLine":126,"groupId":"52175","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/e1f8dc7cf5054929cf26df0e0f04507b6450f8.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"N"}],"commitId":"f25288764a92c20163520b53c8f6fd7fbfa18ca0","commitMessage":"@@@SOLR-5656: Add autoAddReplicas feature for shared file systems.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617919 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-14 20:32:27","modifiedFileCount":"48","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":7,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2014-12-31 22:05:48","endLine":312,"groupId":"52175","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/4649b83efbf47dc0b87bab482c85a9613446d4.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":7,"curCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2014-12-31 22:05:48","endLine":127,"groupId":"52175","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6b/1863211e8140d032fbe29153e4dce5d06d8e8f.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-19 21:25:29","codes":[{"authorDate":"2015-01-19 21:25:29","commitOrder":8,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2015-01-19 21:25:29","endLine":322,"groupId":"52175","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/73d2cba3b70d48455b727cb7e45103491669bf.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"},{"authorDate":"2015-01-19 21:25:29","commitOrder":8,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n    System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(\"control\").toString());\n    writeCoreProperties(testDir.toPath().resolve(\"control/cores\"), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2015-01-19 21:25:29","endLine":138,"groupId":"52175","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a1/c561e53b3522cbece5961ea9575b6d3a094bef.src","preCode":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"e61cd9654b069c45712c81ea39713ca352e529a8","commitMessage":"@@@SOLR-6840: Remove support for old-style solr.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1652995 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-19 21:25:29","modifiedFileCount":"56","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-19 21:25:29","codes":[{"authorDate":"2015-03-03 02:07:55","commitOrder":9,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome);\n      System.setProperty(\"coreRootDirectory\", jettyHome.toString());\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n                                      \n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2015-03-03 02:07:55","endLine":346,"groupId":"38886","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/20/eea63cb2e2fc901cbaa5d458c52bc47f000dee.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"},{"authorDate":"2015-01-19 21:25:29","commitOrder":9,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n    System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(\"control\").toString());\n    writeCoreProperties(testDir.toPath().resolve(\"control/cores\"), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2015-01-19 21:25:29","endLine":138,"groupId":"52175","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a1/c561e53b3522cbece5961ea9575b6d3a094bef.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n    System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(\"control\").toString());\n    writeCoreProperties(testDir.toPath().resolve(\"control/cores\"), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"}],"commitId":"821ab8b0d9e75c556e7b388e89da3cb5431f7d67","commitMessage":"@@@SOLR-7171: BaseDistributedSearchTestCase now clones getSolrHome() for each subclass.  and consistently uses getSolrXml()\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1663381 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-03 02:07:55","modifiedFileCount":"3","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2015-03-05 17:54:06","codes":[{"authorDate":"2015-03-05 17:54:06","commitOrder":10,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2015-03-05 17:54:06","endLine":343,"groupId":"38886","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/e27481fce7afdb172f53a6d25b83ad49882a68.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome);\n      System.setProperty(\"coreRootDirectory\", jettyHome.toString());\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n                                      \n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"},{"authorDate":"2015-03-05 17:54:06","commitOrder":10,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    File controlHome = testDir.toPath().resolve(\"control\").toFile();\n\n    seedSolrHome(controlHome);\n    writeCoreProperties(controlHome.toPath().resolve(\"cores\").resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(controlHome, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path shardHome = testDir.toPath().resolve(shardname);\n      seedSolrHome(shardHome.toFile());\n      Path coresPath = shardHome.resolve(\"cores\");\n      writeCoreProperties(coresPath.resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n      JettySolrRunner j = createJetty(shardHome.toFile(),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2015-03-05 17:54:06","endLine":122,"groupId":"3560","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/7b8847e86ebef72c6ec70099f3693b7ba6a2cd.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n    System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(\"control\").toString());\n    writeCoreProperties(testDir.toPath().resolve(\"control/cores\"), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"739e9b489d9b44ed25e85f29562bcbcf61d41498","commitMessage":"@@@SOLR-7179: Stop using sysprops to configure test jettys\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1664292 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-05 17:54:06","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":11,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2018-11-30 01:58:51","endLine":370,"groupId":"38886","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/a1f7a556c176a6b48696a3e6cb323102fa4e80.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":11,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    File controlHome = testDir.toPath().resolve(\"control\").toFile();\n\n    seedSolrHome(controlHome);\n    writeCoreProperties(controlHome.toPath().resolve(\"cores\").resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(controlHome, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n    controlJetty.start();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path shardHome = testDir.toPath().resolve(shardname);\n      seedSolrHome(shardHome.toFile());\n      Path coresPath = shardHome.resolve(\"cores\");\n      writeCoreProperties(coresPath.resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n      JettySolrRunner j = createJetty(shardHome.toFile(),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2018-11-30 01:58:51","endLine":134,"groupId":"3560","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/ddb98136e9c83dede9155a8f4aa3265c8159b7.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    File controlHome = testDir.toPath().resolve(\"control\").toFile();\n\n    seedSolrHome(controlHome);\n    writeCoreProperties(controlHome.toPath().resolve(\"cores\").resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(controlHome, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path shardHome = testDir.toPath().resolve(shardname);\n      seedSolrHome(shardHome.toFile());\n      Path coresPath = shardHome.resolve(\"cores\");\n      writeCoreProperties(coresPath.resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n      JettySolrRunner j = createJetty(shardHome.toFile(),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-12-17 00:58:20","commitOrder":12,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n\n      if (shardStr.endsWith(\"/\")) shardStr += DEFAULT_TEST_CORENAME;\n      else shardStr += \"/\" + DEFAULT_TEST_CORENAME;\n\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2018-12-17 00:58:20","endLine":373,"groupId":"101849","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5e/4cab2728c7022893f42da1381a39fea7d41fb3.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":343,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":12,"curCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    File controlHome = testDir.toPath().resolve(\"control\").toFile();\n\n    seedSolrHome(controlHome);\n    writeCoreProperties(controlHome.toPath().resolve(\"cores\").resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(controlHome, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n    controlJetty.start();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path shardHome = testDir.toPath().resolve(shardname);\n      seedSolrHome(shardHome.toFile());\n      Path coresPath = shardHome.resolve(\"cores\");\n      writeCoreProperties(coresPath.resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n      JettySolrRunner j = createJetty(shardHome.toFile(),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","date":"2018-11-30 01:58:51","endLine":134,"groupId":"101849","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createServers","params":"(intnumShards)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/ddb98136e9c83dede9155a8f4aa3265c8159b7.src","preCode":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    File controlHome = testDir.toPath().resolve(\"control\").toFile();\n\n    seedSolrHome(controlHome);\n    writeCoreProperties(controlHome.toPath().resolve(\"cores\").resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n    controlJetty = createJetty(controlHome, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n    controlJetty.start();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path shardHome = testDir.toPath().resolve(shardname);\n      seedSolrHome(shardHome.toFile());\n      Path coresPath = shardHome.resolve(\"cores\");\n      writeCoreProperties(coresPath.resolve(DEFAULT_TEST_CORENAME), DEFAULT_TEST_CORENAME);\n      JettySolrRunner j = createJetty(shardHome.toFile(),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"}],"commitId":"f80e8e11672d31c6e12069d2bd12a28b92e5a336","commitMessage":"@@@Merge jira/http2 branch to master\n","date":"2018-12-17 00:58:20","modifiedFileCount":"47","status":"M","submitter":"Cao Manh Dat"}]
