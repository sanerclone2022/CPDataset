[{"authorTime":"2014-10-16 17:41:43","codes":[{"authorDate":"2014-10-16 17:41:43","commitOrder":1,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2014-10-16 17:41:43","endLine":179,"groupId":"47924","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/c36a3d25358897968e5c6913b1ca091d6a2f6b.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"},{"authorDate":"2014-10-16 17:41:43","commitOrder":1,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2014-10-16 17:41:43","endLine":247,"groupId":"25132","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/c36a3d25358897968e5c6913b1ca091d6a2f6b.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"}],"commitId":"6a790d5b25ba0b1d86c1ab47947b7d4655d98994","commitMessage":"@@@SOLR-6307\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1632259 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-16 17:41:43","modifiedFileCount":"6","status":"B","submitter":"Noble Paul"},{"authorTime":"2017-02-15 08:24:25","codes":[{"authorDate":"2017-02-15 08:24:25","commitOrder":2,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2017-02-15 08:24:25","endLine":180,"groupId":"6177","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/fdab369ba60d2801b17e98de27d7a2c92a06a6.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2017-02-15 08:24:25","commitOrder":2,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2017-02-15 08:24:25","endLine":248,"groupId":"13169","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/fdab369ba60d2801b17e98de27d7a2c92a06a6.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"26298f35df118aad186e6eaf1ea5c2e5f50d607f","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2017-02-15 08:24:25","modifiedFileCount":"40","status":"M","submitter":"Noble Paul"},{"authorTime":"2017-02-15 09:32:14","codes":[{"authorDate":"2017-02-15 09:32:14","commitOrder":3,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2017-02-15 09:32:14","endLine":180,"groupId":"47924","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/07af7d880aeba9163656cba506435e401ab199.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2017-02-15 09:32:14","commitOrder":3,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2017-02-15 09:32:14","endLine":248,"groupId":"25132","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/07af7d880aeba9163656cba506435e401ab199.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"325cbf00185e3fe2576720c83635cbed8ed12c0e","commitMessage":"@@@Revert \"Merge remote-tracking branch 'origin/master'\"\n\nThis reverts commit 26298f35df118aad186e6eaf1ea5c2e5f50d607f.  reversing\nchanges made to 65c6c576b720b19029a10bf14f81d4de23302863.\n\nundoing the merge commit\n","date":"2017-02-15 09:32:14","modifiedFileCount":"40","status":"M","submitter":"Noble Paul"},{"authorTime":"2017-02-15 09:43:28","codes":[{"authorDate":"2017-02-15 09:43:28","commitOrder":4,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2017-02-15 09:43:28","endLine":180,"groupId":"6177","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/fdab369ba60d2801b17e98de27d7a2c92a06a6.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2017-02-15 09:43:28","commitOrder":4,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2017-02-15 09:43:28","endLine":248,"groupId":"13169","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/fdab369ba60d2801b17e98de27d7a2c92a06a6.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"9a1702a8f5b5496893a99c4e1f39cd58520786ae","commitMessage":"@@@SOLR-8029: Reverting the previous commit and the merge\n","date":"2017-02-15 09:43:28","modifiedFileCount":"41","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":5,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2018-07-16 18:24:45","endLine":179,"groupId":"6177","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/a84e6bb69f36125894022b3b4b4cc79d3e53b9.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":5,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2018-07-16 18:24:45","endLine":247,"groupId":"51878","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/a84e6bb69f36125894022b3b4b4cc79d3e53b9.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(new Long(222));\n    removeList.add(new Long(333));    \n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2019-10-07 21:29:31","codes":[{"authorDate":"2019-10-07 21:29:31","commitOrder":6,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2019-10-08 01:38:55","endLine":184,"groupId":"16016","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/c76b778128257e9d7f8c74508e703d6980a40a.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2019-10-07 21:29:31","commitOrder":6,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2019-10-08 01:38:55","endLine":254,"groupId":"16758","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/c76b778128257e9d7f8c74508e703d6980a40a.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"ceb47042d1597c4add81cb8b8ec5a6d56d13711a","commitMessage":"@@@SOLR-13539: Fix MV removeregex atomic-updates\n\nPrior to this commit.  the ByteArrayUtf8CharSequence issues had been\nfixed on single value removeregex commands.  but not if multiple regex's\nwere used.\n\nThis commit fixes our NamedList parsing for this additional case.  It\nalso adds some tests for related atomic-update cases.\n\nCo-Authored-By: Tim Owen\n","date":"2019-10-08 01:38:55","modifiedFileCount":"2","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2020-11-12 01:28:11","codes":[{"authorDate":"2020-11-12 01:28:11","commitOrder":7,"curCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    \r\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4242\");\n    doc.setField(\"values_is\", new String[] {\"111\", \"222\", \"333\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4242\");\n    doc.setField(\"values_is\", ImmutableMap.of(\"remove\", 111));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"values_is:111\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n    assertQ(req(\"q\", \"values_is:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"values_is:333\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","date":"2020-11-12 01:28:11","endLine":200,"groupId":"102943","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/54/e9f9d0e531c1bd16d2d1242f1f37937f13fefe.src","preCode":"  public void testRemoveInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"333\", \"333\", \"444\"});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"222\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"333\", \"444\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new String[]{\"111\", \"222\", \"444\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2020-11-12 01:28:11","commitOrder":7,"curCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    \r\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4242\");\n    doc.setField(\"values_is\", new Integer[] {111, 222, 333});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4242\");\n    doc.setField(\"values_is\", ImmutableMap.of(\"remove\", 111));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"values_is:111\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n    assertQ(req(\"q\", \"values_is:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"values_is:333\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","date":"2020-11-12 01:28:11","endLine":286,"groupId":"102943","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveIntegerInDocSavedWithInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/54/e9f9d0e531c1bd16d2d1242f1f37937f13fefe.src","preCode":"  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 333, 333, 444});\n    \n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1002\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 222, 333, 444});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1020\");\n    doc.setField(\"intRemove\", new Integer[]{111, 333, 444});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    doc.setField(\"intRemove\", new Integer[]{111, 222, 444});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    List<Long> removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"intRemove:333\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1021\");\n    removeList = new ArrayList<Long>();\n    removeList.add(222L);\n    removeList.add(333L);\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:222\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1001\");\n    doc.setField(\"intRemove\", ImmutableMap.of(\"remove\", 111)); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"intRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"intRemove:111\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"a7197ac0ce8333ce7019f49c6fab690a96ff7d77","commitMessage":"@@@SOLR-14971: Handle atomic-removes on uncommitted docs (#2056)\n\nDocs fetched from the update log via RTG look different than docs\nfetched from commits in the index: the types of\nfield-values may be different between the two.  etc.\n\nThis is a problem for atomic add/remove of field values.  where matching\nexisting values has historically been done by object equals() calls (via\nCollection operations).  This relies on equality checks which don't have\nflexible enough semantics to match values across these different types.\n(For example.  `new Long(1).equals(new Integer(1))` returns `false`).\nThis was causing some add-distinct and remove operations on\nuncommitted values to silently fail to remove field values.\n\nThis commit patches over this by converting between types in the more\ncommon cases before using the fallback behavior.","date":"2020-11-12 01:28:11","modifiedFileCount":"2","status":"M","submitter":"Jason Gerlowski"}]
