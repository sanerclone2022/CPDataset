[{"authorTime":"2020-05-14 05:29:33","codes":[{"authorDate":"2020-05-14 05:29:33","commitOrder":1,"curCode":"  public void testAllPermissionAllowsActionsWhenUserHasCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"dev\", \"admin\");\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , STATUS_OK);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(makeMap(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , STATUS_OK);\n  }\n","date":"2020-05-14 05:29:33","endLine":372,"groupId":"50692","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllPermissionAllowsActionsWhenUserHasCorrectRole","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/ff9a8e05a56d0cbd948ed88576d818fb921457.src","preCode":"  public void testAllPermissionAllowsActionsWhenUserHasCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"dev\", \"admin\");\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , STATUS_OK);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(makeMap(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , STATUS_OK);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"B"},{"authorDate":"2020-05-14 05:29:33","commitOrder":1,"curCode":"  public void testAllPermissionDeniesActionsWhenUserIsNotCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"admin\");\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(makeMap(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , FORBIDDEN);\n  }\n","date":"2020-05-14 05:29:33","endLine":435,"groupId":"50692","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAllPermissionDeniesActionsWhenUserIsNotCorrectRole","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/ff9a8e05a56d0cbd948ed88576d818fb921457.src","preCode":"  public void testAllPermissionDeniesActionsWhenUserIsNotCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"admin\");\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(makeMap(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , FORBIDDEN);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"B"}],"commitId":"1e449e3d048ad9dca3de4630920a9c46d57eb83f","commitMessage":"@@@SOLR-12131: ExternalRoleRuleBasedAuthorizationPlugin (#341)\n\n","date":"2020-05-14 05:29:33","modifiedFileCount":"6","status":"B","submitter":"Jan H?ydahl"},{"authorTime":"2020-05-08 03:02:36","codes":[{"authorDate":"2020-05-08 03:02:36","commitOrder":2,"curCode":"  public void testAllPermissionAllowsActionsWhenUserHasCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"dev\", \"admin\");\n    checkRules(Map.of(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , STATUS_OK);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(Map.of(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , STATUS_OK);\n  }\n","date":"2020-07-08 00:37:50","endLine":364,"groupId":"102809","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllPermissionAllowsActionsWhenUserHasCorrectRole","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/75caa0075792ecef503a323da1a2e2db258d36.src","preCode":"  public void testAllPermissionAllowsActionsWhenUserHasCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"dev\", \"admin\");\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , STATUS_OK);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(makeMap(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , STATUS_OK);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"},{"authorDate":"2020-05-08 03:02:36","commitOrder":2,"curCode":"  public void testAllPermissionDeniesActionsWhenUserIsNotCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"admin\");\n    checkRules(Map.of(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(Map.of(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , FORBIDDEN);\n  }\n","date":"2020-07-08 00:37:50","endLine":427,"groupId":"102809","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAllPermissionDeniesActionsWhenUserIsNotCorrectRole","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/75caa0075792ecef503a323da1a2e2db258d36.src","preCode":"  public void testAllPermissionDeniesActionsWhenUserIsNotCorrectRole() {\n    SolrRequestHandler handler = new UpdateRequestHandler();\n    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));\n    setUserRole(\"dev\", \"dev\");\n    setUserRole(\"admin\", \"admin\");\n    addPermission(\"all\", \"admin\");\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    handler = new PropertiesRequestHandler();\n    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));\n    checkRules(makeMap(\"resource\", \"/admin/info/properties\",\n        \"userPrincipal\", \"dev\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", handler,\n        \"params\", new MapSolrParams(emptyMap()))\n        , FORBIDDEN);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"M"}],"commitId":"d3f4b21deb0056098e9e888a6b9d72e0bf2d0834","commitMessage":"@@@SOLR-10814 Add short-name feature to RuleBasedAuthz plugin\n\nAdditional-Author: Hrishikesh Gadre <hgadre@cloudera.com>\n","date":"2020-07-08 00:37:50","modifiedFileCount":"11","status":"M","submitter":"Mike Drob"}]
