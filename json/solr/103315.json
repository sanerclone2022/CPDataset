[{"authorTime":"2013-05-13 05:23:37","codes":[{"authorDate":"2013-05-13 05:23:37","commitOrder":1,"curCode":"  public void testPureMax() {\n    q = parse(\"foo bar\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.0, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n    ArrayList<Query> qa = ((DisjunctionMaxQuery) clauses[0].getQuery()).getDisjuncts();\n    assertEquals(2, qa.size());\n    assertEquals(\"text:foo\", qa.get(0).toString());\n  }\n","date":"2013-05-13 05:23:37","endLine":73,"groupId":"60162","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPureMax","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/e1483609836cdfd56e05c74f557e78be0e9cb2.src","preCode":"  public void testPureMax() {\n    q = parse(\"foo bar\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.0, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n    ArrayList<Query> qa = ((DisjunctionMaxQuery) clauses[0].getQuery()).getDisjuncts();\n    assertEquals(2, qa.size());\n    assertEquals(\"text:foo\", qa.get(0).toString());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2013-05-13 05:23:37","commitOrder":1,"curCode":"  public void testTie() {\n    q = parse(\"foo bar\", \"tie\", \"0.5\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.5, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n  }\n","date":"2013-05-13 05:23:37","endLine":93,"groupId":"60162","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTie","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/e1483609836cdfd56e05c74f557e78be0e9cb2.src","preCode":"  public void testTie() {\n    q = parse(\"foo bar\", \"tie\", \"0.5\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.5, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"1cd6be071210590dce654771ca03f1c2dd26b8b7","commitMessage":"@@@SOLR-4785: New MaxScoreQParserPlugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1481651 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-05-13 05:23:37","modifiedFileCount":"1","status":"B","submitter":"Jan H?ydahl"},{"authorTime":"2013-05-13 05:23:37","codes":[{"authorDate":"2015-10-31 01:12:38","commitOrder":2,"curCode":"  public void testPureMax() {\n    q = parse(\"foo bar\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.0, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n    List<Query> qa = ((DisjunctionMaxQuery) clauses[0].getQuery()).getDisjuncts();\n    assertEquals(2, qa.size());\n    assertEquals(\"text:foo\", qa.get(0).toString());\n  }\n","date":"2015-10-31 01:12:38","endLine":77,"groupId":"60162","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPureMax","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d8/2b2c5e06932c745b9d34a72d52230970d7a9bf.src","preCode":"  public void testPureMax() {\n    q = parse(\"foo bar\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.0, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n    ArrayList<Query> qa = ((DisjunctionMaxQuery) clauses[0].getQuery()).getDisjuncts();\n    assertEquals(2, qa.size());\n    assertEquals(\"text:foo\", qa.get(0).toString());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2013-05-13 05:23:37","commitOrder":2,"curCode":"  public void testTie() {\n    q = parse(\"foo bar\", \"tie\", \"0.5\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.5, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n  }\n","date":"2013-05-13 05:23:37","endLine":93,"groupId":"60162","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTie","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/e1483609836cdfd56e05c74f557e78be0e9cb2.src","preCode":"  public void testTie() {\n    q = parse(\"foo bar\", \"tie\", \"0.5\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.5, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"ae779d8115c6baae284f36bdd3b2f3d0f58ca80f","commitMessage":"@@@LUCENE-6870: Make DisjunctionMaxQuery immutable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1711509 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-10-31 01:12:38","modifiedFileCount":"14","status":"M","submitter":"Adrien Grand"},{"authorTime":"2013-05-13 05:23:37","codes":[{"authorDate":"2021-04-29 23:36:50","commitOrder":3,"curCode":"  public void testPureMax() {\n    q = parse(\"foo bar\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.0, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n    Collection<Query> qa = ((DisjunctionMaxQuery) clauses[0].getQuery()).getDisjuncts();\n    assertEquals(2, qa.size());\n    final Collection<String> qaStrings = qa.stream()\n            .map(q -> q.toString())\n            .collect(Collectors.toList());\n    org.hamcrest.MatcherAssert.assertThat(qaStrings, hasItem(\"text:foo\"));\n  }\n","date":"2021-04-29 23:36:50","endLine":100,"groupId":"103315","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPureMax","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/82/ed69c65a69f315a6de3e82c1857d7739458ddd.src","preCode":"  public void testPureMax() {\n    q = parse(\"foo bar\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.0, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n    List<Query> qa = ((DisjunctionMaxQuery) clauses[0].getQuery()).getDisjuncts();\n    assertEquals(2, qa.size());\n    assertEquals(\"text:foo\", qa.get(0).toString());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2013-05-13 05:23:37","commitOrder":3,"curCode":"  public void testTie() {\n    q = parse(\"foo bar\", \"tie\", \"0.5\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.5, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n  }\n","date":"2013-05-13 05:23:37","endLine":93,"groupId":"103315","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTie","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/e1483609836cdfd56e05c74f557e78be0e9cb2.src","preCode":"  public void testTie() {\n    q = parse(\"foo bar\", \"tie\", \"0.5\");\n    clauses = clauses(q);\n    assertEquals(1, clauses.length);\n    assertTrue(clauses[0].getQuery() instanceof DisjunctionMaxQuery);\n    assertEquals(0.5, ((DisjunctionMaxQuery) clauses[0].getQuery()).getTieBreakerMultiplier(), 1e-15);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"9ca0d5dc45399ffe38561ae45ebd5b25febffb95","commitMessage":"@@@Update type assumptions in TestMaxScoreQueryParser (#106)\n\nThis updates Solr to address an underlying change that widened the\nreturn type of DisjunctionMaxQuery from List to Collection.\n\nPrecommit/check should now pass.","date":"2021-04-29 23:36:50","modifiedFileCount":"1","status":"M","submitter":"Jason Gerlowski"}]
