[{"authorTime":"2018-10-16 03:09:40","codes":[{"authorDate":"2018-10-11 22:43:30","commitOrder":2,"curCode":"  public void testLetWithNumericVariables() throws Exception {\n    String cexpr = \"let(echo=true, a=1.88888, b=8888888888.98)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    assertEquals(tuple.getDouble(\"a\").doubleValue(), 1.88888, 0.0);\n    assertEquals(tuple.getDouble(\"b\").doubleValue(), 8888888888.98, 0.0);\n  }\n","date":"2018-10-11 22:43:57","endLine":1761,"groupId":"19517","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLetWithNumericVariables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/45/633e3db4a5cf982088471831057ec49860a32c.src","preCode":"  public void testLetWithNumericVariables() throws Exception {\n    String cexpr = \"let(echo=true, a=1.88888, b=8888888888.98)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    assertEquals(tuple.getDouble(\"a\").doubleValue(), 1.88888, 0.0);\n    assertEquals(tuple.getDouble(\"b\").doubleValue(), 8888888888.98, 0.0);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1747,"status":"NB"},{"authorDate":"2018-10-16 03:09:40","commitOrder":2,"curCode":"  public void testLog10() throws Exception {\n    String cexpr = \"let(echo=true, a=array(10, 20, 30), b=log10(a), c=log10(30.5))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    List<Number> logs = (List<Number>)tuple.get(\"b\");\n    assertEquals(logs.size(), 3);\n    assertEquals(logs.get(0).doubleValue(), 1, 0.0);\n    assertEquals(logs.get(1).doubleValue(), 1.3010299956639813, 0.0);\n    assertEquals(logs.get(2).doubleValue(), 1.4771212547196624, 0.0);\n\n    Number log = (Number)tuple.get(\"c\");\n    assertEquals(log.doubleValue(), 1.4842998393467859, 0.0);\n  }\n","date":"2018-10-16 03:47:03","endLine":1784,"groupId":"9041","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLog10","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/78/fc2ce9f8020ecfbb8ce0981b05428ab4ef0743.src","preCode":"  public void testLog10() throws Exception {\n    String cexpr = \"let(echo=true, a=array(10, 20, 30), b=log10(a), c=log10(30.5))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    List<Number> logs = (List<Number>)tuple.get(\"b\");\n    assertEquals(logs.size(), 3);\n    assertEquals(logs.get(0).doubleValue(), 1, 0.0);\n    assertEquals(logs.get(1).doubleValue(), 1.3010299956639813, 0.0);\n    assertEquals(logs.get(2).doubleValue(), 1.4771212547196624, 0.0);\n\n    Number log = (Number)tuple.get(\"c\");\n    assertEquals(log.doubleValue(), 1.4842998393467859, 0.0);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1764,"status":"B"}],"commitId":"6c0fbe5a9d544060c42c4a1ec241a71c47d14bb8","commitMessage":"@@@SOLR-12862: Add log10 Stream Evaluator and allow the pow Stream Evaluator to accept a vector of exponents\n","date":"2018-10-16 03:47:03","modifiedFileCount":"3","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2020-06-17 01:27:53","codes":[{"authorDate":"2018-10-11 22:43:30","commitOrder":3,"curCode":"  public void testLetWithNumericVariables() throws Exception {\n    String cexpr = \"let(echo=true, a=1.88888, b=8888888888.98)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    assertEquals(tuple.getDouble(\"a\").doubleValue(), 1.88888, 0.0);\n    assertEquals(tuple.getDouble(\"b\").doubleValue(), 8888888888.98, 0.0);\n  }\n","date":"2018-10-11 22:43:57","endLine":1761,"groupId":"10912","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLetWithNumericVariables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/45/633e3db4a5cf982088471831057ec49860a32c.src","preCode":"  public void testLetWithNumericVariables() throws Exception {\n    String cexpr = \"let(echo=true, a=1.88888, b=8888888888.98)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    assertEquals(tuple.getDouble(\"a\").doubleValue(), 1.88888, 0.0);\n    assertEquals(tuple.getDouble(\"b\").doubleValue(), 8888888888.98, 0.0);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1747,"status":"N"},{"authorDate":"2020-06-17 01:27:53","commitOrder":3,"curCode":"  public void testLog10() throws Exception {\n    String cexpr = \"let(echo=true, a=array(10, 20, 30), b=log10(a), c=log10(30.5))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> logs = (List<Number>)tuple.get(\"b\");\n    assertEquals(logs.size(), 3);\n    assertEquals(logs.get(0).doubleValue(), 1, 0.0);\n    assertEquals(logs.get(1).doubleValue(), 1.3010299956639813, 0.0);\n    assertEquals(logs.get(2).doubleValue(), 1.4771212547196624, 0.0);\n\n    Number log = (Number)tuple.get(\"c\");\n    assertEquals(log.doubleValue(), 1.4842998393467859, 0.0);\n  }\n","date":"2020-06-17 01:27:53","endLine":2506,"groupId":"10912","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLog10","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/ef2698f7694ad2f1f3cbcb23f4710d6776b7d2.src","preCode":"  public void testLog10() throws Exception {\n    String cexpr = \"let(echo=true, a=array(10, 20, 30), b=log10(a), c=log10(30.5))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    Tuple tuple = tuples.get(0);\n    List<Number> logs = (List<Number>)tuple.get(\"b\");\n    assertEquals(logs.size(), 3);\n    assertEquals(logs.get(0).doubleValue(), 1, 0.0);\n    assertEquals(logs.get(1).doubleValue(), 1.3010299956639813, 0.0);\n    assertEquals(logs.get(2).doubleValue(), 1.4771212547196624, 0.0);\n\n    Number log = (Number)tuple.get(\"c\");\n    assertEquals(log.doubleValue(), 1.4842998393467859, 0.0);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2485,"status":"M"}],"commitId":"6357b3bdaaa0e2c2b1acfe838e55db3a83e38e73","commitMessage":"@@@SOLR-14573: Fix or suppress warnings in solrj/src/test\n","date":"2020-06-17 01:27:53","modifiedFileCount":"65","status":"M","submitter":"Erick Erickson"}]
