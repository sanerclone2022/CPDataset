[{"authorTime":"2018-06-09 21:40:55","codes":[{"authorDate":"2018-06-09 21:40:55","commitOrder":1,"curCode":"  default void writeIterator(IteratorWriter val) throws IOException {\n    writeArrayOpener(-1);\n    incLevel();\n    val.writeIter(new IteratorWriter.ItemWriter() {\n      boolean first = true;\n\n      @Override\n      public IteratorWriter.ItemWriter add(Object o) throws IOException {\n        if (!first) {\n          JsonTextWriter.this.indent();\n          JsonTextWriter.this.writeArraySeparator();\n        }\n        JsonTextWriter.this.writeVal(null, o);\n        first = false;\n        return this;\n      }\n    });\n    decLevel();\n    writeArrayCloser();\n  }\n","date":"2018-06-09 21:40:55","endLine":157,"groupId":"57119","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeIterator","params":"(IteratorWriterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/76bd16e9a17e872118f42d3c296d969c418f95.src","preCode":"  default void writeIterator(IteratorWriter val) throws IOException {\n    writeArrayOpener(-1);\n    incLevel();\n    val.writeIter(new IteratorWriter.ItemWriter() {\n      boolean first = true;\n\n      @Override\n      public IteratorWriter.ItemWriter add(Object o) throws IOException {\n        if (!first) {\n          JsonTextWriter.this.indent();\n          JsonTextWriter.this.writeArraySeparator();\n        }\n        JsonTextWriter.this.writeVal(null, o);\n        first = false;\n        return this;\n      }\n    });\n    decLevel();\n    writeArrayCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2018-06-09 21:40:55","commitOrder":1,"curCode":"  default void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new MapWriter.EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public MapWriter.EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JsonTextWriter.this.writeMapSeparator();\n        }\n        JsonTextWriter.this.indent();\n        JsonTextWriter.this.writeKey(k, true);\n        writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2018-06-09 21:40:55","endLine":182,"groupId":"57120","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMap","params":"(MapWriterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/76bd16e9a17e872118f42d3c296d969c418f95.src","preCode":"  default void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new MapWriter.EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public MapWriter.EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JsonTextWriter.this.writeMapSeparator();\n        }\n        JsonTextWriter.this.indent();\n        JsonTextWriter.this.writeKey(k, true);\n        writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"944b24fab8a4f53f2a60c7754a878c86267eaceb","commitMessage":"@@@SOLR-12455: Refactor JSON serialization code into SolrJ package\n","date":"2018-06-09 21:40:55","modifiedFileCount":"13","status":"B","submitter":"Noble Paul"},{"authorTime":"2018-10-22 08:14:41","codes":[{"authorDate":"2018-06-09 21:40:55","commitOrder":2,"curCode":"  default void writeIterator(IteratorWriter val) throws IOException {\n    writeArrayOpener(-1);\n    incLevel();\n    val.writeIter(new IteratorWriter.ItemWriter() {\n      boolean first = true;\n\n      @Override\n      public IteratorWriter.ItemWriter add(Object o) throws IOException {\n        if (!first) {\n          JsonTextWriter.this.indent();\n          JsonTextWriter.this.writeArraySeparator();\n        }\n        JsonTextWriter.this.writeVal(null, o);\n        first = false;\n        return this;\n      }\n    });\n    decLevel();\n    writeArrayCloser();\n  }\n","date":"2018-06-09 21:40:55","endLine":157,"groupId":"1248","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeIterator","params":"(IteratorWriterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/76bd16e9a17e872118f42d3c296d969c418f95.src","preCode":"  default void writeIterator(IteratorWriter val) throws IOException {\n    writeArrayOpener(-1);\n    incLevel();\n    val.writeIter(new IteratorWriter.ItemWriter() {\n      boolean first = true;\n\n      @Override\n      public IteratorWriter.ItemWriter add(Object o) throws IOException {\n        if (!first) {\n          JsonTextWriter.this.indent();\n          JsonTextWriter.this.writeArraySeparator();\n        }\n        JsonTextWriter.this.writeVal(null, o);\n        first = false;\n        return this;\n      }\n    });\n    decLevel();\n    writeArrayCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"N"},{"authorDate":"2018-10-22 08:14:41","commitOrder":2,"curCode":"  default void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new MapWriter.EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public MapWriter.EntryWriter put(CharSequence k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JsonTextWriter.this.writeMapSeparator();\n        }\n        JsonTextWriter.this.indent();\n        JsonTextWriter.this.writeKey(k.toString(), true);\n        writeVal(k.toString(), v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n","date":"2018-10-22 08:14:41","endLine":182,"groupId":"1248","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMap","params":"(MapWriterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/8c79776f022ccad14f63b09beb2b41d79a5cd2.src","preCode":"  default void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new MapWriter.EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public MapWriter.EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JsonTextWriter.this.writeMapSeparator();\n        }\n        JsonTextWriter.this.indent();\n        JsonTextWriter.this.writeKey(k, true);\n        writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"5de63322098e21438e734dc918040dc8d78122ac","commitMessage":"@@@SOLR-12892: MapWriter to use CharSequence instead of String\n","date":"2018-10-22 08:14:41","modifiedFileCount":"10","status":"M","submitter":"Noble Paul"}]
