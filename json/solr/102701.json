[{"authorTime":"2013-02-17 02:50:20","codes":[{"authorDate":"2013-02-26 23:59:05","commitOrder":2,"curCode":"  public void testDocValuesFacetingSimple() {\n    \r\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i, \"floatdv\", \"1\", \"intdv\", \"2\", \"doubledv\", \"3\", \"longdv\", \"4\", \"datedv\", \"1995-12-31T23:59:59.999Z\"));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        commit(); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","date":"2013-02-26 23:59:05","endLine":192,"groupId":"4687","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDocValuesFacetingSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/96a92ffee9491b3d52ce0cfe99017c395562a6.src","preCode":"  public void testDocValuesFacetingSimple() {\n    \r\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i, \"floatdv\", \"1\", \"intdv\", \"2\", \"doubledv\", \"3\", \"longdv\", \"4\", \"datedv\", \"1995-12-31T23:59:59.999Z\"));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        commit(); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DocValuesMultiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2013-02-17 02:50:20","commitOrder":2,"curCode":"  public void testDocValuesFaceting() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        commit(); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","date":"2013-02-17 02:50:20","endLine":169,"groupId":"4687","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDocValuesFaceting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/4abf903b5ff2aa7a9cc5a8d948cf92da60bc71.src","preCode":"  public void testDocValuesFaceting() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        commit(); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DocValuesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"NB"}],"commitId":"d09ba0c912a264f892203fe3f3a5e999e7424497","commitMessage":"@@@SOLR-4490: multi-valued dv support\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1450239 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-26 23:59:05","modifiedFileCount":"5","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-01-31 22:58:21","codes":[{"authorDate":"2014-01-31 22:58:21","commitOrder":3,"curCode":"  public void testDocValuesFacetingSimple() {\n    \r\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i, \"floatdv\", \"1\", \"intdv\", \"2\", \"doubledv\", \"3\", \"longdv\", \"4\", \"datedv\", \"1995-12-31T23:59:59.999Z\"));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        assertU(commit()); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","date":"2014-01-31 22:58:21","endLine":192,"groupId":"4687","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDocValuesFacetingSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/32/e655fa35690ca9e230d61979075e7da7ec38e0.src","preCode":"  public void testDocValuesFacetingSimple() {\n    \r\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i, \"floatdv\", \"1\", \"intdv\", \"2\", \"doubledv\", \"3\", \"longdv\", \"4\", \"datedv\", \"1995-12-31T23:59:59.999Z\"));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        commit(); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DocValuesMultiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2014-01-31 22:58:21","commitOrder":3,"curCode":"  public void testDocValuesFaceting() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        assertU(commit()); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","date":"2014-01-31 22:58:21","endLine":189,"groupId":"4687","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDocValuesFaceting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/d98e017d5eccfa8a549c1d75d0233ceebd8ec5.src","preCode":"  public void testDocValuesFaceting() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        commit(); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DocValuesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"db5964de025e7603e91f0d020b5ee5a25ca07739","commitMessage":"@@@SOLR-5685: tests: add assertU to commit calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1563142 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-31 22:58:21","modifiedFileCount":"7","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2016-06-12 08:38:19","codes":[{"authorDate":"2016-06-12 08:38:19","commitOrder":4,"curCode":"  public void testDocValuesFacetingSimple() {\n    \r\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i, \"floatdv\", \"1\", \"intdv\", \"2\", \"doubledv\", \"3\", \"longdv\", \"4\", \n          \"datedv\", \"1995-12-31T23:59:59.999Z\",\n          \"stringdv\", \"abc\", \"booldv\", \"true\"));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        assertU(commit()); \r\n      }\n      switch (i % 3) {\n        case 0:\n          assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \n              \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i, \"booldv\", \"true\", \"booldv\", \"true\"));\n          break;\n        case 1:\n          assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i,\n              \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i, \"booldv\", \"false\", \"booldv\", \"false\"));\n          break;\n        case 2:\n          assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i,\n              \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i, \"booldv\", \"true\", \"booldv\", \"false\"));\n          break;\n      }\n\n\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"stringdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='stringdv']/int[@name='abc'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"stringdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='stringdv']/int[@name='abc1'][.='1']\",\n        \"//lst[@name='stringdv']/int[@name='abc13'][.='1']\",\n        \"//lst[@name='stringdv']/int[@name='abc19'][.='1']\",\n        \"//lst[@name='stringdv']/int[@name='abc49'][.='1']\"\n        );\n    \n    \r\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"stringdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='stringdv']/int[@name='abc38'][.='1']\");\n\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"booldv\", \"facet.sort\", \"count\"),\n        \"//lst[@name='booldv']/int[@name='true'][.='83']\",\n        \"//lst[@name='booldv']/int[@name='false'][.='33']\");\n\n  }\n","date":"2016-06-12 08:38:19","endLine":342,"groupId":"102701","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDocValuesFacetingSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/90/c8b7363ff05802a4c3f1874bd1050db454a2e7.src","preCode":"  public void testDocValuesFacetingSimple() {\n    \r\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i, \"floatdv\", \"1\", \"intdv\", \"2\", \"doubledv\", \"3\", \"longdv\", \"4\", \"datedv\", \"1995-12-31T23:59:59.999Z\"));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        assertU(commit()); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DocValuesMultiTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"},{"authorDate":"2016-06-12 08:38:19","commitOrder":4,"curCode":"  public void testDocValuesFaceting() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        assertU(commit()); \r\n      }\n      switch (i % 3) {\n        case 0:\n          assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i,\n              \"datedv\", (1900 + i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i, \"booldv\", \"false\"));\n          break;\n        case 1:\n          assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i,\n              \"datedv\", (1900 + i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i, \"booldv\", \"true\"));\n          break;\n        case 2:\n          assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i,\n              \"datedv\", (1900 + i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n          break;\n      }\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n\n    assertQ(req(\"q\", \"booldv:true\"),\n        \"//*[@numFound='83']\");\n\n    assertQ(req(\"q\", \"booldv:false\"),\n        \"//*[@numFound='17']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"booldv\", \"facet.sort\", \"index\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='booldv']/int[@name='false'][.='17']\",\n        \"//lst[@name='booldv']/int[@name='true'][.='83']\");\n\n  }\n","date":"2016-06-12 08:38:19","endLine":281,"groupId":"102701","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDocValuesFaceting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/9d3267843d01bcff25c09c7c9d27da2a348e4a.src","preCode":"  public void testDocValuesFaceting() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n    for (int i = 0; i < 50; ++i) {\n      if (rarely()) {\n        assertU(commit()); \r\n      }\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i, \"intdv\", \"\" + i, \"doubledv\", \"\" + i, \"longdv\", \"\" + i, \"datedv\", (1900+i) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i));\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='4'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"longdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='longdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='1.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"floatdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='floatdv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='3.0'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='0.0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"doubledv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='doubledv']/int[@name='33.0'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='2'][.='51']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='0'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"intdv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='intdv']/int[@name='33'][.='1']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.limit\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1995-12-31T23:59:59.999Z'][.='50']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"count\", \"facet.offset\", \"1\", \"facet.limit\", \"-1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1900-12-31T23:59:59.999Z'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"0\", \"facet.field\", \"datedv\", \"facet.sort\", \"index\", \"facet.offset\", \"33\", \"facet.limit\", \"1\", \"facet.mincount\", \"1\"),\n        \"//lst[@name='datedv']/int[@name='1933-12-31T23:59:59.999Z'][.='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DocValuesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"}],"commitId":"844ca4a348e282b5f857aa7ce4de6f9781766ef9","commitMessage":"@@@SOLR-9187: Support dates and booleans in /export handler.  support boolean DocValues fields\n","date":"2016-06-12 08:38:19","modifiedFileCount":"9","status":"M","submitter":"Erick Erickson"}]
