[{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2012-01-26 03:49:26","commitOrder":2,"curCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","date":"2012-01-26 03:49:26","endLine":667,"groupId":"33885","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getVer","params":"(SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/26/13bc062c23d91fdea05ba0fed985348d6bff9e.src","preCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":645,"status":"NB"},{"authorDate":"2013-06-27 04:18:33","commitOrder":2,"curCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","date":"2013-06-27 04:18:33","endLine":1174,"groupId":"33885","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getVer","params":"(SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a7/86702222f9ed799ef808f1237c408e8402db44.src","preCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1152,"status":"B"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2019-05-03 05:20:05","codes":[{"authorDate":"2019-05-03 05:20:05","commitOrder":3,"curCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) Utils.fromJSONString(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","date":"2019-05-03 05:20:05","endLine":1722,"groupId":"33885","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getVer","params":"(SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/aa/7a3001d9a77894649b78a7cfcabdf3e162b01a.src","preCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1700,"status":"M"},{"authorDate":"2019-05-03 05:20:05","commitOrder":3,"curCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) Utils.fromJSONString(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","date":"2019-05-03 05:20:05","endLine":1027,"groupId":"33885","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getVer","params":"(SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/9895e9e53fad7425a57c1ea82a216685ead278.src","preCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1005,"status":"M"}],"commitId":"8908205b428f2ae68bcef0f22a944a62cfcd93d5","commitMessage":"@@@SOLR-13441: Refactor code to minimize direct use of noggit\n","date":"2019-05-03 05:20:05","modifiedFileCount":"58","status":"M","submitter":"noble"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    @SuppressWarnings({\"rawtypes\"})\n    Map rsp = (Map) Utils.fromJSONString(response);\n    @SuppressWarnings({\"rawtypes\"})\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      @SuppressWarnings({\"rawtypes\"})\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map responseMap = (Map)rsp.get(\"response\");\n      @SuppressWarnings({\"rawtypes\"})\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","date":"2020-06-18 05:51:41","endLine":1709,"groupId":"103129","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getVer","params":"(SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/7e12ec0afc77bdf59319a6ca336f9323d198a9.src","preCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) Utils.fromJSONString(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1682,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    @SuppressWarnings({\"rawtypes\"})\n    Map rsp = (Map) Utils.fromJSONString(response);\n    @SuppressWarnings({\"rawtypes\"})\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      @SuppressWarnings({\"rawtypes\"})\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map responseMap = (Map)rsp.get(\"response\");\n      @SuppressWarnings({\"rawtypes\"})\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","date":"2020-06-18 05:51:41","endLine":1029,"groupId":"103129","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getVer","params":"(SolrQueryRequestreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/86aca94d7fecee1bbb0f1a8c649ae609ce3028.src","preCode":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) Utils.fromJSONString(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1002,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"}]
