[{"authorTime":"2017-08-26 17:07:19","codes":[{"authorDate":"2017-08-26 17:07:19","commitOrder":1,"curCode":"    public void integerSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2,4,1,3,5,8,7));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(1L,2L,3L,4L,5L,7L,8L), (List<Object>)result);\n    }\n","date":"2017-08-26 17:07:19","endLine":57,"groupId":"12157","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"integerSortTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/d44931619001c94accc1a5a3f617c87d476184.src","preCode":"    public void integerSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2,4,1,3,5,8,7));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(1L,2L,3L,4L,5L,7L,8L), (List<Object>)result);\n    }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2017-08-26 17:07:19","commitOrder":1,"curCode":"    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n","date":"2017-08-26 17:07:19","endLine":83,"groupId":"35674","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doubleWithIntegersSortTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/d44931619001c94accc1a5a3f617c87d476184.src","preCode":"    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"ddcb98e9c3e0d5f6acf59f872e8324e7ad144506","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-08-26 17:07:19","modifiedFileCount":"90","status":"B","submitter":"Karl Wright"},{"authorTime":"2019-10-11 09:18:45","codes":[{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"    public void integerSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2,4,1,3,5,8,7));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(1D,2D,3D,4D,5D,7D,8D), (List<Object>)result);\n    }\n","date":"2019-10-11 09:19:25","endLine":57,"groupId":"10848","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"integerSortTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/80/29712a4b1fffdfe4dce7a36ca5414812f292a1.src","preCode":"    public void integerSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2,4,1,3,5,8,7));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(1L,2L,3L,4L,5L,7L,8L), (List<Object>)result);\n    }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2D, 2.1, 2.3, 2.5, 2.6, 2.7, 3D), (List<Object>)result);\n    }\n","date":"2019-10-11 09:19:25","endLine":83,"groupId":"10848","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doubleWithIntegersSortTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/80/29712a4b1fffdfe4dce7a36ca5414812f292a1.src","preCode":"    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"ad1c24e1903a74c611ec610aaf350d50d709519e","commitMessage":"@@@SOLR-13829: RecursiveEvaluator casts Continuous numbers to Discrete Numbers.  causing mismatch\n","date":"2019-10-11 09:19:25","modifiedFileCount":"17","status":"M","submitter":"Joel Bernstein"}]
