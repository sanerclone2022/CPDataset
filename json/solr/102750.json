[{"authorTime":"2019-06-28 01:28:06","codes":[{"authorDate":"2019-06-28 01:28:06","commitOrder":1,"curCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableShardsWhitelist();\n  }\n","date":"2019-06-28 01:28:06","endLine":116,"groupId":"6301","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"destroyThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/dd4be8e655f5ccdae7bc0384e98a49c216a460.src","preCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableShardsWhitelist();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2019-06-28 01:28:06","commitOrder":1,"curCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableShardsWhitelist();\n  }\n","date":"2019-06-28 01:28:06","endLine":115,"groupId":"6301","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"destroyThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/8d463f841a76ec73210b82234c0e99219e6de7.src","preCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableShardsWhitelist();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"7e57d3a9d93e8acb77ce299f8c79d92df563b864","commitMessage":"@@@SOLR-13574: Fix many test and test-framework classes to not fail on After/AfterClass cleanup if assumptions fail in Before/BeforeClass setup\n","date":"2019-06-28 01:28:06","modifiedFileCount":"93","status":"B","submitter":"Chris Hostetter"},{"authorTime":"2021-03-24 22:34:08","codes":[{"authorDate":"2021-03-24 22:34:08","commitOrder":2,"curCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableUrlAllowList();\n  }\n","date":"2021-04-26 21:44:20","endLine":116,"groupId":"102750","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"destroyThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/9b77401a7db8ee0e2801f97ce5b2ba9f4990bc.src","preCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableShardsWhitelist();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestTolerantSearch.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-03-24 22:34:08","commitOrder":2,"curCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableUrlAllowList();\n  }\n","date":"2021-04-26 21:44:20","endLine":115,"groupId":"102750","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"destroyThings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/46/df2ed8bc14aa09a8b63e31f13f960d41c0f14e.src","preCode":"  public static void destroyThings() throws Exception {\n    if (null != collection1) {\n      collection1.close();\n      collection1 = null;\n    }\n    if (null != collection2) {\n      collection2.close();\n      collection2 = null;\n    }\n    if (null != jetty) {\n      jetty.stop();\n      jetty=null;\n    }\n    resetExceptionIgnores();\n    systemClearPropertySolrDisableShardsWhitelist();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/DistributedDebugComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"c7abf3f32ca439b73fbe0ed5a3a6d70ecc411cbb","commitMessage":"@@@SOLR-15217: Rename shardsWhitelist and extract AllowListUrlChecker.\n","date":"2021-04-26 21:44:20","modifiedFileCount":"27","status":"M","submitter":"Bruno Roustant"}]
