[{"authorTime":"2015-06-21 00:24:08","codes":[{"authorDate":"2015-06-21 00:24:08","commitOrder":1,"curCode":"  public void copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"srcnotexist\";\n    String destFieldName1 = \"destNotExist1\", destFieldName2 = \"destNotExist2\";\n\n    SchemaRequest.AddCopyField addCopyFieldRequest =\n        new SchemaRequest.AddCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse addCopyFieldResponse = addCopyFieldRequest.process(getSolrClient());\n    assertNotNull(addCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n","date":"2015-06-21 00:24:08","endLine":824,"groupId":"24704","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2e/a061104d9ed0da0132e9d9ab82a76985f889fd.src","preCode":"  public void copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"srcnotexist\";\n    String destFieldName1 = \"destNotExist1\", destFieldName2 = \"destNotExist2\";\n\n    SchemaRequest.AddCopyField addCopyFieldRequest =\n        new SchemaRequest.AddCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse addCopyFieldResponse = addCopyFieldRequest.process(getSolrClient());\n    assertNotNull(addCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":815,"status":"B"},{"authorDate":"2015-06-21 00:24:08","commitOrder":1,"curCode":"  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse deleteCopyFieldResponse = deleteCopyFieldsRequest.process(getSolrClient());\n    assertNotNull(deleteCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n","date":"2015-06-21 00:24:08","endLine":859,"groupId":"24704","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2e/a061104d9ed0da0132e9d9ab82a76985f889fd.src","preCode":"  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse deleteCopyFieldResponse = deleteCopyFieldsRequest.process(getSolrClient());\n    assertNotNull(deleteCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":851,"status":"B"}],"commitId":"fdeffbb536dc91712ad8572b386c8c9c1b2b7c8d","commitMessage":"@@@SOLR-7182: Make the Schema-API a first class citizen of SolrJ\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1686650 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-06-21 00:24:08","modifiedFileCount":"0","status":"B","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2018-01-23 20:35:14","codes":[{"authorDate":"2018-01-23 20:35:14","commitOrder":2,"curCode":"  public void copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"srcnotexist\";\n    String destFieldName1 = \"destNotExist1\", destFieldName2 = \"destNotExist2\";\n\n    SchemaRequest.AddCopyField addCopyFieldRequest \n        = new SchemaRequest.AddCopyField(srcFieldName, Arrays.asList(destFieldName1, destFieldName2));\n    assertFailedSchemaResponse(() -> addCopyFieldRequest.process(getSolrClient()),\n        \"copyField source :'\" + srcFieldName + \"' is not a glob and doesn't match any explicit field or dynamicField.\");\n  }\n","date":"2018-01-23 20:35:14","endLine":819,"groupId":"101116","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/75/301df31e935a0a9e02fea54e968044dee6f1cb.src","preCode":"  public void copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"srcnotexist\";\n    String destFieldName1 = \"destNotExist1\", destFieldName2 = \"destNotExist2\";\n\n    SchemaRequest.AddCopyField addCopyFieldRequest =\n        new SchemaRequest.AddCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse addCopyFieldResponse = addCopyFieldRequest.process(getSolrClient());\n    assertNotNull(addCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":811,"status":"M"},{"authorDate":"2018-01-23 20:35:14","commitOrder":2,"curCode":"  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    assertFailedSchemaResponse(() -> deleteCopyFieldsRequest.process(getSolrClient()),\n        \"Copy field directive not found: '\" + srcFieldName + \"' -> '\" + destFieldName1 + \"'\");\n  }\n","date":"2018-01-23 20:35:14","endLine":854,"groupId":"101116","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/75/301df31e935a0a9e02fea54e968044dee6f1cb.src","preCode":"  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse deleteCopyFieldResponse = deleteCopyFieldsRequest.process(getSolrClient());\n    assertNotNull(deleteCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":846,"status":"M"}],"commitId":"653935bbdfd70fa9490f8c363ffcf9832d3141a5","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-01-23 20:35:14","modifiedFileCount":"279","status":"M","submitter":"Karl Wright"}]
