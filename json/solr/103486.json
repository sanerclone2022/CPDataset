[{"authorTime":"2011-08-11 10:00:11","codes":[{"authorDate":"2011-07-24 23:19:49","commitOrder":3,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2011-07-24 23:19:49","endLine":534,"groupId":"17833","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8d/63ca33b46d074565bcb81f490524861665e72c.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"NB"},{"authorDate":"2011-08-11 10:00:11","commitOrder":3,"curCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits, getCommits(masterClient));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2011-08-11 10:00:11","endLine":660,"groupId":"28711","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/095b175601937549008f3d7b48fcf1e9a4887a.src","preCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits, getCommits(masterClient));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":586,"status":"MB"}],"commitId":"9d3eb8755bc03226a4cf8b300b2438eb15d56482","commitMessage":"@@@SOLR-2705: Add extra test check suggested by Yury\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1156441 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-08-11 10:00:11","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2011-08-11 20:37:02","codes":[{"authorDate":"2011-07-24 23:19:49","commitOrder":4,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2011-07-24 23:19:49","endLine":534,"groupId":"17833","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8d/63ca33b46d074565bcb81f490524861665e72c.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"N"},{"authorDate":"2011-08-11 20:37:02","commitOrder":4,"curCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2011-08-11 20:37:02","endLine":660,"groupId":"28711","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7a/de3138819af715b18dd873cb6288a26dc980a3.src","preCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits, getCommits(masterClient));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":586,"status":"M"}],"commitId":"baf2b785af3ce4ba21d09d8415c74b14671b9499","commitMessage":"@@@tests: don't compare response header\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1156597 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-08-11 20:37:02","modifiedFileCount":"1","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-03-05 21:34:40","codes":[{"authorDate":"2012-03-05 21:34:40","commitOrder":5,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-03-05 21:34:40","endLine":620,"groupId":"24836","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b7/66ab9288aa9f7389fc8edf9e73b661ffe57ef5.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":566,"status":"M"},{"authorDate":"2012-03-05 21:34:40","commitOrder":5,"curCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-03-05 21:34:40","endLine":696,"groupId":"28545","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b7/66ab9288aa9f7389fc8edf9e73b661ffe57ef5.src","preCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":622,"status":"M"}],"commitId":"989530e17e09a4b023164be6694b60a609d6c01c","commitMessage":"@@@LUCENE-3850: Fix rawtypes warnings for Java 7 compiler\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1297048 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-03-05 21:34:40","modifiedFileCount":"114","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2012-10-27 02:38:59","codes":[{"authorDate":"2012-10-27 02:38:59","commitOrder":6,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-10-27 02:38:59","endLine":656,"groupId":"20264","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/613ee5616414731325a0cca5906997af872914.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"M"},{"authorDate":"2012-10-27 02:38:59","commitOrder":6,"curCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-10-27 02:38:59","endLine":733,"groupId":"28545","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/613ee5616414731325a0cca5906997af872914.src","preCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":658,"status":"M"}],"commitId":"42f27adc1a916565180b3d7fec98bbc46bb64ef4","commitMessage":"@@@SOLR-3911: Make Directory and DirectoryFactory first class so that the majority of Solr's features work with any custom implementations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1402613 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-10-27 02:38:59","modifiedFileCount":"72","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2012-11-28 06:05:18","codes":[{"authorDate":"2012-10-27 02:38:59","commitOrder":7,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-10-27 02:38:59","endLine":656,"groupId":"20264","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/613ee5616414731325a0cca5906997af872914.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"N"},{"authorDate":"2012-11-28 06:05:18","commitOrder":7,"curCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-11-28 06:05:18","endLine":735,"groupId":"20264","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/63/0730c0ed3ed7d53e98d108c0db636c4705da32.src","preCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < 10; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(10, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(10, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(10, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(10, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", 110, \"name\", \"name = 1\");\n    index(masterClient, \"id\", 120, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(12, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(12, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(12, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(12, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":658,"status":"M"}],"commitId":"862335a77233a6119d413fc31bfb5b0de25574c2","commitMessage":"@@@SOLR-4032: Files larger than an internal buffer size fail to replicate.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1414428 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-28 06:05:18","modifiedFileCount":"2","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-02-23 06:16:04","codes":[{"authorDate":"2012-10-27 02:38:59","commitOrder":8,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-10-27 02:38:59","endLine":656,"groupId":"20264","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/613ee5616414731325a0cca5906997af872914.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"N"},{"authorDate":"2013-02-23 06:16:04","commitOrder":8,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2013-02-23 06:16:04","endLine":891,"groupId":"20264","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/33d15f55981778f343c12daad565640a8313fc.src","preCode":"  private void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"M"}],"commitId":"c21914aa7dff3bf8c2dc44f25c78fcde74cd6d8d","commitMessage":"@@@SOLR-4471: Improve and clean up TestReplicationHandler.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1449240 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-23 06:16:04","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-02-23 06:16:04","codes":[{"authorDate":"2013-02-23 08:32:12","commitOrder":9,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2013-02-23 08:32:12","endLine":743,"groupId":"20264","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/4c5187b45e1ffba85d25e8ba760eca8e9df3a7.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":683,"status":"M"},{"authorDate":"2013-02-23 06:16:04","commitOrder":9,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2013-02-23 06:16:04","endLine":891,"groupId":"20264","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/33d15f55981778f343c12daad565640a8313fc.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"N"}],"commitId":"3adabbd43aa83d27e317d81f98a690e3b43a49b1","commitMessage":"@@@SOLR-4471: Fix up test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1449258 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-23 08:32:12","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-02-24 23:34:42","codes":[{"authorDate":"2013-02-24 23:34:42","commitOrder":10,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2013-02-24 23:34:42","endLine":725,"groupId":"20264","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/1d47bcd5ce72ad922e3be6fd6cfc0b7ccabe33.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"M"},{"authorDate":"2013-02-24 23:34:42","commitOrder":10,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2013-02-24 23:34:42","endLine":855,"groupId":"20264","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/1d47bcd5ce72ad922e3be6fd6cfc0b7ccabe33.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"M"}],"commitId":"382e279c1b6503c9ee81ab12823769478d50bd94","commitMessage":"@@@fix up test\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1449496 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-24 23:34:42","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-03-20 02:25:00","codes":[{"authorDate":"2014-03-20 02:25:00","commitOrder":11,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2014-03-20 02:25:00","endLine":1083,"groupId":"20264","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6c/87ee3e44a0f557256577de6c981d4d7c268f2f.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1035,"status":"M"},{"authorDate":"2014-03-20 02:25:00","commitOrder":11,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2014-03-20 02:25:00","endLine":1217,"groupId":"20264","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6c/87ee3e44a0f557256577de6c981d4d7c268f2f.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1151,"status":"M"}],"commitId":"1109c1275b84a5e490556d6fb687b1216870f358","commitMessage":"@@@SOLR-5883: Many tests do not shutdown SolrServer. \n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1579336 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-20 02:25:00","modifiedFileCount":"22","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":12,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2014-12-31 22:05:48","endLine":1057,"groupId":"20264","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/4548bf9552827b374d38a1fc1ab9d0a199fb07.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":12,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2014-12-31 22:05:48","endLine":1191,"groupId":"20264","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/4548bf9552827b374d38a1fc1ab9d0a199fb07.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1125,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-28 19:55:57","codes":[{"authorDate":"2015-01-28 19:55:57","commitOrder":13,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2015-01-28 19:55:57","endLine":1030,"groupId":"20264","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/a96c24f9851f774d5b1ff2f9f5a3e44fc4795b.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":982,"status":"M"},{"authorDate":"2015-01-28 19:55:57","commitOrder":13,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2015-01-28 19:55:57","endLine":1164,"groupId":"20264","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/a96c24f9851f774d5b1ff2f9f5a3e44fc4795b.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1098,"status":"M"}],"commitId":"3018576b67648f3f7f827103a881ef3477c70a18","commitMessage":"@@@SOLR-6954: SolrClient implements Closeable\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1655263 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-28 19:55:57","modifiedFileCount":"94","status":"M","submitter":"Alan Woodward"},{"authorTime":"2018-04-20 15:30:33","codes":[{"authorDate":"2015-01-28 19:55:57","commitOrder":14,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2015-01-28 19:55:57","endLine":1030,"groupId":"20264","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/a96c24f9851f774d5b1ff2f9f5a3e44fc4795b.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":982,"status":"N"},{"authorDate":"2018-04-20 15:30:33","commitOrder":14,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2018-04-20 15:30:33","endLine":1305,"groupId":"20264","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/2f4f737a526e55b793f058cfb4b266996cef9c.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 0;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    NamedList<Object> commits = getCommits(masterClient);\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    assertEquals(commits.get(\"commits\"), getCommits(masterClient).get(\"commits\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1241,"status":"M"}],"commitId":"48e071f350c76cd8783839199ef2b1c372919ec8","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-04-20 15:30:33","modifiedFileCount":"3","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":15,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2018-11-30 01:58:51","endLine":1177,"groupId":"20264","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/d2c04d5f155c6adda1b8d55086b5dd7a6a6a8f.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":15,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2018-11-30 01:58:51","endLine":1309,"groupId":"20264","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/d2c04d5f155c6adda1b8d55086b5dd7a6a6a8f.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1245,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":16,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2020-06-18 05:51:41","endLine":1245,"groupId":"33283","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/4df5d26ed870cbadfa1bb5a3f2b1ba8b3df8dc.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1195,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":16,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","date":"2020-06-18 05:51:41","endLine":1382,"groupId":"33283","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/4df5d26ed870cbadfa1bb5a3f2b1ba8b3df8dc.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1315,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2020-08-06 05:52:48","commitOrder":17,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2020-08-06 05:52:48","endLine":1290,"groupId":"33283","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1240,"status":"M"},{"authorDate":"2020-08-06 05:52:48","commitOrder":17,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    followerJetty.stop();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader3.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n\n    leaderClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(docs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(docs, leaderQueryResult.getNumFound());\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(docs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs, followerQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(leaderClient).get(\"indexversion\");\n    \n    reloadCore(leaderClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(leaderClient).get(\"indexversion\"));\n    \n    index(leaderClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(leaderClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    leaderClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList resp =  rQuery(docs + 2, \"*:*\", leaderClient);\n    leaderQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, leaderQueryResult.getNumFound());\n    \n    \r\n    followerQueryRsp = rQuery(docs + 2, \"*:*\", followerClient);\n    followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs + 2, followerQueryResult.getNumFound());\n    \n  }\n","date":"2020-08-06 05:52:48","endLine":1427,"groupId":"33283","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    slaveJetty.stop();\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master3.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    masterClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(docs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(docs, masterQueryResult.getNumFound());\n    \n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n    \n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(docs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs, slaveQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(masterClient).get(\"indexversion\");\n    \n    reloadCore(masterClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(masterClient).get(\"indexversion\"));\n    \n    index(masterClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(masterClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    masterClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList resp =  rQuery(docs + 2, \"*:*\", masterClient);\n    masterQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, masterQueryResult.getNumFound());\n    \n    \r\n    slaveQueryRsp = rQuery(docs + 2, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(docs + 2, slaveQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1360,"status":"M"}],"commitId":"7110118ad4f1a68f39a1db1caab374594098243e","commitMessage":"@@@SOLR-14702: Remove oppressive language (part1) (#1711)\n\nReplace references to \"master\" and \"slave\" with \"leader\" and \"follower\"","date":"2020-08-06 05:52:48","modifiedFileCount":"28","status":"M","submitter":"Marcus"},{"authorTime":"2021-06-09 02:08:25","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":18,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2021-06-09 02:08:25","endLine":1297,"groupId":"14266","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/ca65f1975cefdc3075a1e1f76cbb5a0103bf23.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1249,"status":"M"},{"authorDate":"2021-06-09 02:08:25","commitOrder":18,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    followerJetty.stop();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader3.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n\n    leaderClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    NamedList<Object> leaderQueryRsp = rQuery(docs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(docs, leaderQueryResult.getNumFound());\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    \r\n    NamedList<Object> followerQueryRsp = rQuery(docs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs, followerQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(leaderClient).get(\"indexversion\");\n    \n    reloadCore(leaderClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(leaderClient).get(\"indexversion\"));\n    \n    index(leaderClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(leaderClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    leaderClient.commit();\n    \n    NamedList<Object> resp = rQuery(docs + 2, \"*:*\", leaderClient);\n    leaderQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, leaderQueryResult.getNumFound());\n    \n    \r\n    followerQueryRsp = rQuery(docs + 2, \"*:*\", followerClient);\n    followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs + 2, followerQueryResult.getNumFound());\n    \n  }\n","date":"2021-06-09 02:08:25","endLine":1429,"groupId":"14266","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/ca65f1975cefdc3075a1e1f76cbb5a0103bf23.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    followerJetty.stop();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader3.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n\n    leaderClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(docs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(docs, leaderQueryResult.getNumFound());\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(docs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs, followerQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(leaderClient).get(\"indexversion\");\n    \n    reloadCore(leaderClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(leaderClient).get(\"indexversion\"));\n    \n    index(leaderClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(leaderClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    leaderClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList resp =  rQuery(docs + 2, \"*:*\", leaderClient);\n    leaderQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, leaderQueryResult.getNumFound());\n    \n    \r\n    followerQueryRsp = rQuery(docs + 2, \"*:*\", followerClient);\n    followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs + 2, followerQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1365,"status":"M"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-09-23 00:46:59","codes":[{"authorDate":"2021-09-23 00:46:59","commitOrder":19,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(buildUrl(leaderJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n\n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(buildUrl(followerJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2021-09-23 00:46:59","endLine":1194,"groupId":"103486","id":33,"instanceNumber":1,"isCurCommit":1,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1147,"status":"M"},{"authorDate":"2021-09-23 00:46:59","commitOrder":19,"curCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n\n    \r\n    followerJetty.stop();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader3.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(buildUrl(leaderJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    leaderClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    NamedList<Object> leaderQueryRsp = rQuery(docs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(docs, leaderQueryResult.getNumFound());\n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(buildUrl(followerJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(docs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    Object version = getIndexVersion(leaderClient).get(\"indexversion\");\n\n    reloadCore(leaderClient, \"collection1\");\n\n    assertEquals(version, getIndexVersion(leaderClient).get(\"indexversion\"));\n\n    index(leaderClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(leaderClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    leaderClient.commit();\n\n    NamedList<Object> resp = rQuery(docs + 2, \"*:*\", leaderClient);\n    leaderQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, leaderQueryResult.getNumFound());\n\n    \r\n    followerQueryRsp = rQuery(docs + 2, \"*:*\", followerClient);\n    followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs + 2, followerQueryResult.getNumFound());\n\n  }\n","date":"2021-09-23 00:46:59","endLine":1326,"groupId":"103486","id":34,"instanceNumber":2,"isCurCommit":1,"methodName":"doTestReplicateAfterCoreReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void doTestReplicateAfterCoreReload() throws Exception {\n    int docs = TEST_NIGHTLY ? 200000 : 10;\n    \n    \r\n    followerJetty.stop();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader3.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n\n    leaderClient.deleteByQuery(\"*:*\");\n    for (int i = 0; i < docs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    NamedList<Object> leaderQueryRsp = rQuery(docs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(docs, leaderQueryResult.getNumFound());\n    \n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n    \n    \r\n    NamedList<Object> followerQueryRsp = rQuery(docs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs, followerQueryResult.getNumFound());\n    \n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n    \n    Object version = getIndexVersion(leaderClient).get(\"indexversion\");\n    \n    reloadCore(leaderClient, \"collection1\");\n    \n    assertEquals(version, getIndexVersion(leaderClient).get(\"indexversion\"));\n    \n    index(leaderClient, \"id\", docs + 10, \"name\", \"name = 1\");\n    index(leaderClient, \"id\", docs + 20, \"name\", \"name = 2\");\n\n    leaderClient.commit();\n    \n    NamedList<Object> resp = rQuery(docs + 2, \"*:*\", leaderClient);\n    leaderQueryResult = (SolrDocumentList) resp.get(\"response\");\n    assertEquals(docs + 2, leaderQueryResult.getNumFound());\n    \n    \r\n    followerQueryRsp = rQuery(docs + 2, \"*:*\", followerClient);\n    followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(docs + 2, followerQueryResult.getNumFound());\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1262,"status":"M"}],"commitId":"3cd71244d23704a7addf34eeac9f728862518f48","commitMessage":"@@@SOLR-15286: A brand new follower in the legacy mode should wait to replicate index before reporting healthy (#238)\n\n* https://issues.apache.org/jira/browse/SOLR-15286\n\nAdded log to the HealthCheckHandler for legacy mode to report followers healthy based on the index generation diff\n\nCo-authored-by: Pushkar Raste <praste@apple.com>","date":"2021-09-23 00:46:59","modifiedFileCount":"8","status":"M","submitter":"Pushkar Raste"}]
