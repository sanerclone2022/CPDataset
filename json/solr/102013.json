[{"authorTime":"2019-10-24 05:55:11","codes":[{"authorDate":"2019-10-24 05:55:11","commitOrder":1,"curCode":"    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n","date":"2019-10-24 05:55:11","endLine":220,"groupId":"50295","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"refresh","params":"(SolrQueryRequestreq@SolrQueryResponsersp@PayloadObj<String>payload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/02503a87e4909aee05766f1ef151a908d34e3c.src","preCode":"    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"B"},{"authorDate":"2019-10-24 05:55:11","commitOrder":1,"curCode":"  void notifyAllNodesToSync(int expected) {\n    for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n      Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n          coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&expectedVersion\" + expected,\n          Utils.JAVABINCONSUMER);\n    }\n  }\n","date":"2019-10-24 05:55:11","endLine":376,"groupId":"34479","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"notifyAllNodesToSync","params":"(intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/02503a87e4909aee05766f1ef151a908d34e3c.src","preCode":"  void notifyAllNodesToSync(int expected) {\n    for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n      Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n          coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&expectedVersion\" + expected,\n          Utils.JAVABINCONSUMER);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"B"}],"commitId":"98f08d39aa723764a4bf39cfa5e358886e18a800","commitMessage":"@@@SOLR-13822: Isolated Classloading from packages (#957)\n\nSOLR-13822: A Package management system with the following features. A packages.json in ZK to store\n  the configuration.  APIs to read/edit them and isolated classloaders to load the classes from\n  those packages if the 'class' attribute is prefixed with `<package-name>:`","date":"2019-10-24 05:55:11","modifiedFileCount":"17","status":"B","submitter":"Noble Paul"},{"authorTime":"2019-10-24 05:55:11","codes":[{"authorDate":"2019-11-18 06:30:00","commitOrder":2,"curCode":"    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n      \r\n      packageLoader.notifyListeners(p);\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n","date":"2019-11-18 06:30:00","endLine":247,"groupId":"34479","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"refresh","params":"(SolrQueryRequestreq@SolrQueryResponsersp@PayloadObj<String>payload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/d7d8201fd16509c9c9e6602c5eb741ce0629e4.src","preCode":"    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2019-10-24 05:55:11","commitOrder":2,"curCode":"  void notifyAllNodesToSync(int expected) {\n    for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n      Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n          coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&expectedVersion\" + expected,\n          Utils.JAVABINCONSUMER);\n    }\n  }\n","date":"2019-10-24 05:55:11","endLine":376,"groupId":"34479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"notifyAllNodesToSync","params":"(intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/02503a87e4909aee05766f1ef151a908d34e3c.src","preCode":"  void notifyAllNodesToSync(int expected) {\n    for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n      Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n          coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&expectedVersion\" + expected,\n          Utils.JAVABINCONSUMER);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"N"}],"commitId":"0857bb60d3bb5bd6d8d851ce2e01edd9bde310ea","commitMessage":"@@@SOLR-13662.  SOLR-13822: Fixing bug with refresh API.  un-ignoring the test and new reference guide on Package Management\n","date":"2019-11-18 06:30:00","modifiedFileCount":"2","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2019-10-24 05:55:11","codes":[{"authorDate":"2020-06-25 14:12:54","commitOrder":3,"curCode":"    public void refresh(PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n      \r\n      packageLoader.notifyListeners(p);\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n    }\n","date":"2020-06-25 14:16:04","endLine":251,"groupId":"102013","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"refresh","params":"(PayloadObj<String>payload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/93/260be5c86243fe050c2cb2ba4d3b4b1fa46814.src","preCode":"    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n      \r\n      packageLoader.notifyListeners(p);\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2019-10-24 05:55:11","commitOrder":3,"curCode":"  void notifyAllNodesToSync(int expected) {\n    for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n      Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n          coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&expectedVersion\" + expected,\n          Utils.JAVABINCONSUMER);\n    }\n  }\n","date":"2019-10-24 05:55:11","endLine":376,"groupId":"102013","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"notifyAllNodesToSync","params":"(intexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/02503a87e4909aee05766f1ef151a908d34e3c.src","preCode":"  void notifyAllNodesToSync(int expected) {\n    for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n      Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n          coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&expectedVersion\" + expected,\n          Utils.JAVABINCONSUMER);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"N"}],"commitId":"73a5016ea70a6d2bffc96d2214f2ecb5de194efb","commitMessage":"@@@Use simplified API signatures. @EndPoint annotation can be attached to a method and it's posisble to have just a single parameter for an end point\n","date":"2020-06-25 14:16:04","modifiedFileCount":"2","status":"M","submitter":"noble"}]
