[{"authorTime":"2014-09-04 23:56:25","codes":[{"authorDate":"2021-02-16 02:16:18","commitOrder":5,"curCode":"  private static boolean matches(Exception e, String errString) {\n    for (Throwable t = e; t != null; t = t.getCause()) {\n      if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString))\n        return true;\n    }\n    return false;\n  }  \n","date":"2021-02-16 02:16:18","endLine":97,"groupId":"271","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"matches","params":"(Exceptione@StringerrString)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/be46871a2aaea229ab98e0816985163dbfc190.src","preCode":"  private static boolean matches(Exception e, String errString) {\n    for (Throwable t = e; t != null; t = t.getCause()) {\n      if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString))\n        return true;\n    }\n    return false;\n  }  \n","realPath":"solr/contrib/scripting/src/test/org/apache/solr/scripting/update/TestBadScriptingUpdateProcessorConfig.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2014-09-04 23:56:25","commitOrder":5,"curCode":"  public void testAddedFieldIndexableAndQueryable() throws Exception {\n    assertSchemaResource(collection, \"managed-schema\");\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    assertFalse(managedSchemaContents.contains(\"\\\"new_field\\\"\"));\n\n    clearIndex();\n\n    String errString = \"unknown field 'new_field'\";\n    ignoreException(Pattern.quote(errString));\n    try {\n      assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n      fail();\n    } catch (Exception e) {\n      for (Throwable t = e; t != null; t = t.getCause()) {\n        \r\n        if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString)) return;\n      }\n      \r\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    assertU(commit());\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='0']\");\n\n    Map<String,Object> options = new HashMap<>();\n    options.put(\"stored\", \"false\");\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldName = \"new_field\";\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n    assertU(commit());\n\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='1']\");\n  }\n","date":"2014-09-04 23:56:25","endLine":238,"groupId":"271","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddedFieldIndexableAndQueryable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/06/36606af4135f348c7607f636cf1289ce878f05.src","preCode":"  public void testAddedFieldIndexableAndQueryable() throws Exception {\n    assertSchemaResource(collection, \"managed-schema\");\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    assertFalse(managedSchemaContents.contains(\"\\\"new_field\\\"\"));\n\n    clearIndex();\n\n    String errString = \"unknown field 'new_field'\";\n    ignoreException(Pattern.quote(errString));\n    try {\n      assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n      fail();\n    } catch (Exception e) {\n      for (Throwable t = e; t != null; t = t.getCause()) {\n        \r\n        if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString)) return;\n      }\n      \r\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    assertU(commit());\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='0']\");\n\n    Map<String,Object> options = new HashMap<>();\n    options.put(\"stored\", \"false\");\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldName = \"new_field\";\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n    assertU(commit());\n\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"NB"}],"commitId":"e6d9eaaf000bb00e52a776e298b3c7e9f37a4cd5","commitMessage":"@@@SOLR-15121: Move XSLT (tr param) response writer and update  request handler to scripting contrib (#2306)\n\n* relocate xslt related classes into scripting contrib\n* relocating files to scripting and seperating out unit tests\n* relocate files under test-files/scripting/solr.  similar to how we do it in other contribs.  deals with some issues in finding files\n* Reformatting using the Google Java Format...\n* use actual param name.  not the variable to properly test api!\n* Clean up references to paths.  and deal with the mish mash of Xslt and XSLT in class names.\n* Move XSLT processing out of XMLLoader\n* Move TransformerProvider.Dedupe getTransformer logic.\n\n\nCo-authored-by: epugh@opensourceconnections.com <>\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-02-16 02:16:18","modifiedFileCount":"8","status":"M","submitter":"Eric Pugh"},{"authorTime":"2021-09-16 20:43:31","codes":[{"authorDate":"2021-02-16 02:16:18","commitOrder":6,"curCode":"  private static boolean matches(Exception e, String errString) {\n    for (Throwable t = e; t != null; t = t.getCause()) {\n      if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString))\n        return true;\n    }\n    return false;\n  }  \n","date":"2021-02-16 02:16:18","endLine":97,"groupId":"101174","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"matches","params":"(Exceptione@StringerrString)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/be46871a2aaea229ab98e0816985163dbfc190.src","preCode":"  private static boolean matches(Exception e, String errString) {\n    for (Throwable t = e; t != null; t = t.getCause()) {\n      if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString))\n        return true;\n    }\n    return false;\n  }  \n","realPath":"solr/contrib/scripting/src/test/org/apache/solr/scripting/update/TestBadScriptingUpdateProcessorConfig.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2021-09-16 20:43:31","commitOrder":6,"curCode":"  public void testAddedFieldIndexableAndQueryable() throws Exception {\n    assertSchemaResource(collection, \"managed-schema.xml\");\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema.xml\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    assertFalse(managedSchemaContents.contains(\"\\\"new_field\\\"\"));\n\n    clearIndex();\n\n    String errString = \"unknown field 'new_field'\";\n    ignoreException(Pattern.quote(errString));\n    try {\n      assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n      fail();\n    } catch (Exception e) {\n      for (Throwable t = e; t != null; t = t.getCause()) {\n        \r\n        if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString)) return;\n      }\n      \r\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    assertU(commit());\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='0']\");\n\n    Map<String,Object> options = new HashMap<>();\n    options.put(\"stored\", \"false\");\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldName = \"new_field\";\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n    assertU(commit());\n\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='1']\");\n  }\n","date":"2021-09-16 20:43:31","endLine":257,"groupId":"101174","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddedFieldIndexableAndQueryable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/a5a79a321defc265288209deb339419792b44d.src","preCode":"  public void testAddedFieldIndexableAndQueryable() throws Exception {\n    assertSchemaResource(collection, \"managed-schema\");\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); \r\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    assertFalse(managedSchemaContents.contains(\"\\\"new_field\\\"\"));\n\n    clearIndex();\n\n    String errString = \"unknown field 'new_field'\";\n    ignoreException(Pattern.quote(errString));\n    try {\n      assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n      fail();\n    } catch (Exception e) {\n      for (Throwable t = e; t != null; t = t.getCause()) {\n        \r\n        if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString)) return;\n      }\n      \r\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    assertU(commit());\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='0']\");\n\n    Map<String,Object> options = new HashMap<>();\n    options.put(\"stored\", \"false\");\n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n    String fieldName = \"new_field\";\n    String fieldType = \"text\";\n    SchemaField newField = oldSchema.newField(fieldName, fieldType, options);\n    IndexSchema newSchema = oldSchema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(adoc(\"new_field\", \"thing1 thing2\", \"str\", \"X\"));\n    assertU(commit());\n\n    assertQ(req(\"new_field:thing1\"), \"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"}],"commitId":"df903cbdc1de7fb2c3469b9773d6f9d23d591a5d","commitMessage":"@@@ SOLR-10887: Append .xml to managed-schema file VERSION 2 (#279)\n\nManaged schema file is now called \"managed-schema.xml\".  however there is a fallback to \"managed-schema\" since that is a common legacy name for the file.   Updated the name of the files used in running tests.","date":"2021-09-16 20:43:31","modifiedFileCount":"9","status":"M","submitter":"Eric Pugh"}]
