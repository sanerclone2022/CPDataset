[{"authorTime":"2014-09-16 23:29:54","codes":[{"authorDate":"2014-09-16 23:29:54","commitOrder":1,"curCode":"  public void maxTest() throws Exception { \n    \r\n    Integer intResult = (Integer)getStatResult(\"mar\", \"int_id\", VAL_TYPE.INTEGER);\n    Integer intTest = (Integer)calculateStat(intTestStart, \"max\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Long longResult = (Long)getStatResult(\"mar\", \"long_ld\", VAL_TYPE.LONG);\n    Long longTest = (Long)calculateStat(longTestStart, \"max\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Float floatResult = (Float)getStatResult(\"mar\", \"float_fd\", VAL_TYPE.FLOAT);\n    Float floatTest = (Float)calculateStat(floatTestStart, \"max\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mar\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"max\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n\n    \r\n    String dateResult = (String)getStatResult(\"mar\", \"date_dtd\", VAL_TYPE.DATE);\n    String dateTest = (String)calculateStat(dateTestStart, \"max\");\n    assertEquals(getRawResponse(), dateResult,dateTest);\n\n    \r\n    String stringResult = (String)getStatResult(\"mar\", \"string_sd\", VAL_TYPE.STRING);\n    String stringTest = (String)calculateStat(stringTestStart, \"max\");\n    assertEquals(getRawResponse(), stringResult,stringTest);\n  }\n","date":"2014-09-16 23:29:54","endLine":385,"groupId":"2421","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"maxTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/17150c22bffb034da01300dec37534def80287.src","preCode":"  public void maxTest() throws Exception { \n    \r\n    Integer intResult = (Integer)getStatResult(\"mar\", \"int_id\", VAL_TYPE.INTEGER);\n    Integer intTest = (Integer)calculateStat(intTestStart, \"max\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Long longResult = (Long)getStatResult(\"mar\", \"long_ld\", VAL_TYPE.LONG);\n    Long longTest = (Long)calculateStat(longTestStart, \"max\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Float floatResult = (Float)getStatResult(\"mar\", \"float_fd\", VAL_TYPE.FLOAT);\n    Float floatTest = (Float)calculateStat(floatTestStart, \"max\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mar\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"max\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n\n    \r\n    String dateResult = (String)getStatResult(\"mar\", \"date_dtd\", VAL_TYPE.DATE);\n    String dateTest = (String)calculateStat(dateTestStart, \"max\");\n    assertEquals(getRawResponse(), dateResult,dateTest);\n\n    \r\n    String stringResult = (String)getStatResult(\"mar\", \"string_sd\", VAL_TYPE.STRING);\n    String stringTest = (String)calculateStat(stringTestStart, \"max\");\n    assertEquals(getRawResponse(), stringResult,stringTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"B"},{"authorDate":"2014-09-16 23:29:54","commitOrder":1,"curCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","date":"2014-09-16 23:29:54","endLine":253,"groupId":"51404","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/17150c22bffb034da01300dec37534def80287.src","preCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"B"}],"commitId":"21bb022d6251a18cce8a88abfb4c78d5f5ae0d37","commitMessage":"@@@SOLR-5302: move analytics component to contrib\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1625331 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-16 23:29:54","modifiedFileCount":"2","status":"B","submitter":"Yonik Seeley"},{"authorTime":"2014-09-16 23:29:54","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  public void maxTest() throws Exception { \n    \r\n    Integer intResult = ((Integer)getStatResult(\"mar\", \"int_id\", VAL_TYPE.INTEGER));\n    Integer intTest = (Integer)calculateStat(intTestStart, \"max\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Long longResult = ((Long)getStatResult(\"mar\", \"long_ld\", VAL_TYPE.LONG));\n    Long longTest = (Long)calculateStat(longTestStart, \"max\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Float floatResult = ((Float)getStatResult(\"mar\", \"float_fd\", VAL_TYPE.FLOAT));\n    Float floatTest = (Float)calculateStat(floatTestStart, \"max\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mar\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"max\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n\n    \r\n    String dateResult = (String)getStatResult(\"mar\", \"date_dtd\", VAL_TYPE.DATE);\n    String dateTest = (String)calculateStat(dateTestStart, \"max\");\n    assertEquals(getRawResponse(), dateResult,dateTest);\n\n    \r\n    String stringResult = (String)getStatResult(\"mar\", \"string_sd\", VAL_TYPE.STRING);\n    String stringTest = (String)calculateStat(stringTestStart, \"max\");\n    assertEquals(getRawResponse(), stringResult,stringTest);\n  }\n","date":"2017-06-29 17:00:17","endLine":355,"groupId":"25284","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"maxTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cf/d1176c03ecca479fd9a73e1a996635057b4669.src","preCode":"  public void maxTest() throws Exception { \n    \r\n    Integer intResult = (Integer)getStatResult(\"mar\", \"int_id\", VAL_TYPE.INTEGER);\n    Integer intTest = (Integer)calculateStat(intTestStart, \"max\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Long longResult = (Long)getStatResult(\"mar\", \"long_ld\", VAL_TYPE.LONG);\n    Long longTest = (Long)calculateStat(longTestStart, \"max\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Float floatResult = (Float)getStatResult(\"mar\", \"float_fd\", VAL_TYPE.FLOAT);\n    Float floatTest = (Float)calculateStat(floatTestStart, \"max\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mar\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"max\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n\n    \r\n    String dateResult = (String)getStatResult(\"mar\", \"date_dtd\", VAL_TYPE.DATE);\n    String dateTest = (String)calculateStat(dateTestStart, \"max\");\n    assertEquals(getRawResponse(), dateResult,dateTest);\n\n    \r\n    String stringResult = (String)getStatResult(\"mar\", \"string_sd\", VAL_TYPE.STRING);\n    String stringTest = (String)calculateStat(stringTestStart, \"max\");\n    assertEquals(getRawResponse(), stringResult,stringTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"},{"authorDate":"2014-09-16 23:29:54","commitOrder":2,"curCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","date":"2014-09-16 23:29:54","endLine":253,"groupId":"51404","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/17150c22bffb034da01300dec37534def80287.src","preCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"N"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":3,"curCode":"  public void maxTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"int\", new ETP(\"max(int_i)\", 6));\n    expressions.put(\"longs\", new ETP(\"max(long_lm)\", 11L));\n    expressions.put(\"float\", new ETP(\"max(float_f)\", 5.0F));\n    expressions.put(\"doubles\", new ETP(\"max(double_dm)\", 14.0));\n    expressions.put(\"dates\", new ETP(\"max(date_dt)\", \"1802-12-31T23:59:59Z\"));\n    expressions.put(\"strings\", new ETP(\"max(string_sm)\", \"str3_second\"));\n\n    testExpressions(expressions);\n  }\n","date":"2017-10-18 01:52:02","endLine":155,"groupId":"101843","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"maxTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/5f8c572a4aa52af98500fbcc27a783a35f2c0f.src","preCode":"  public void maxTest() throws Exception { \n    \r\n    Integer intResult = ((Integer)getStatResult(\"mar\", \"int_id\", VAL_TYPE.INTEGER));\n    Integer intTest = (Integer)calculateStat(intTestStart, \"max\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Long longResult = ((Long)getStatResult(\"mar\", \"long_ld\", VAL_TYPE.LONG));\n    Long longTest = (Long)calculateStat(longTestStart, \"max\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Float floatResult = ((Float)getStatResult(\"mar\", \"float_fd\", VAL_TYPE.FLOAT));\n    Float floatTest = (Float)calculateStat(floatTestStart, \"max\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mar\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"max\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n\n    \r\n    String dateResult = (String)getStatResult(\"mar\", \"date_dtd\", VAL_TYPE.DATE);\n    String dateTest = (String)calculateStat(dateTestStart, \"max\");\n    assertEquals(getRawResponse(), dateResult,dateTest);\n\n    \r\n    String stringResult = (String)getStatResult(\"mar\", \"string_sd\", VAL_TYPE.STRING);\n    String stringTest = (String)calculateStat(stringTestStart, \"max\");\n    assertEquals(getRawResponse(), stringResult,stringTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2017-08-01 23:01:17","commitOrder":3,"curCode":"  public void medianTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"int\", new ETP(\"median(int_i)\", 3.0));\n    expressions.put(\"longs\", new ETP(\"median(long_lm)\", 6.0));\n    expressions.put(\"float\", new ETP(\"median(float_f)\", 3.0));\n    expressions.put(\"doubles\", new ETP(\"median(double_dm)\", 7.5));\n    expressions.put(\"dates\", new ETP(\"median(date_dt)\", \"1801-12-31T23:59:59Z\"));\n\n    testExpressions(expressions);\n  }\n","date":"2017-10-18 01:52:02","endLine":221,"groupId":"101843","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/5f8c572a4aa52af98500fbcc27a783a35f2c0f.src","preCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"M","submitter":"Houston Putman"}]
