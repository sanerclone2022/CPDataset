[{"authorTime":"2018-04-05 23:21:49","codes":[{"authorDate":"2018-04-05 23:21:49","commitOrder":1,"curCode":"  public void testTimeDifferencingDefinedLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 8);\n    assertEquals(out.get(0).doubleValue(), -94.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),-64.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-82.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),144.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-90.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),-239.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),-37.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-16.0, 0.01);\n  }\n","date":"2018-04-06 02:00:07","endLine":2563,"groupId":"3759","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeDifferencingDefinedLag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testTimeDifferencingDefinedLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 8);\n    assertEquals(out.get(0).doubleValue(), -94.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),-64.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-82.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),144.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-90.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),-239.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),-37.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-16.0, 0.01);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2542,"status":"B"},{"authorDate":"2018-04-05 23:21:49","commitOrder":1,"curCode":"  public void testNestedDoubleTimeDifference() throws Exception {\n    String cexpr = \"diff(diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0)), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 7);\n    assertEquals(out.get(0).doubleValue(), 30.0, 0.01);\n    assertEquals(out.get(1).doubleValue(), -18.0, 0.01);\n    assertEquals(out.get(2).doubleValue(), 226.0, 0.01);\n    assertEquals(out.get(3).doubleValue(), -234.0, 0.01);\n    assertEquals(out.get(4).doubleValue(), -149.0, 0.01);\n    assertEquals(out.get(5).doubleValue(), 202.0, 0.01);\n    assertEquals(out.get(6).doubleValue(), 21.0, 0.01);\n  }\n","date":"2018-04-06 02:00:07","endLine":2586,"groupId":"43767","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedDoubleTimeDifference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testNestedDoubleTimeDifference() throws Exception {\n    String cexpr = \"diff(diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0)), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 7);\n    assertEquals(out.get(0).doubleValue(), 30.0, 0.01);\n    assertEquals(out.get(1).doubleValue(), -18.0, 0.01);\n    assertEquals(out.get(2).doubleValue(), 226.0, 0.01);\n    assertEquals(out.get(3).doubleValue(), -234.0, 0.01);\n    assertEquals(out.get(4).doubleValue(), -149.0, 0.01);\n    assertEquals(out.get(5).doubleValue(), 202.0, 0.01);\n    assertEquals(out.get(6).doubleValue(), 21.0, 0.01);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2566,"status":"B"}],"commitId":"80375acb7f696df7fb3cf0424d5e82777e3f5c87","commitMessage":"@@@SOLR-12183: Refactor Streaming Expression test cases\n","date":"2018-04-06 02:00:07","modifiedFileCount":"1","status":"B","submitter":"Joel Bernstein"},{"authorTime":"2020-06-17 01:27:53","codes":[{"authorDate":"2020-06-17 01:27:53","commitOrder":2,"curCode":"  public void testTimeDifferencingDefinedLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 8);\n    assertEquals(out.get(0).doubleValue(), -94.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),-64.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-82.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),144.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-90.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),-239.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),-37.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-16.0, 0.01);\n  }\n","date":"2020-06-17 01:27:53","endLine":4269,"groupId":"10925","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeDifferencingDefinedLag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/ef2698f7694ad2f1f3cbcb23f4710d6776b7d2.src","preCode":"  public void testTimeDifferencingDefinedLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 8);\n    assertEquals(out.get(0).doubleValue(), -94.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),-64.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-82.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),144.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-90.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),-239.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),-37.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-16.0, 0.01);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":4247,"status":"M"},{"authorDate":"2020-06-17 01:27:53","commitOrder":2,"curCode":"  public void testNestedDoubleTimeDifference() throws Exception {\n    String cexpr = \"diff(diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0)), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 7);\n    assertEquals(out.get(0).doubleValue(), 30.0, 0.01);\n    assertEquals(out.get(1).doubleValue(), -18.0, 0.01);\n    assertEquals(out.get(2).doubleValue(), 226.0, 0.01);\n    assertEquals(out.get(3).doubleValue(), -234.0, 0.01);\n    assertEquals(out.get(4).doubleValue(), -149.0, 0.01);\n    assertEquals(out.get(5).doubleValue(), 202.0, 0.01);\n    assertEquals(out.get(6).doubleValue(), 21.0, 0.01);\n  }\n","date":"2020-06-17 01:27:53","endLine":4293,"groupId":"10925","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedDoubleTimeDifference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/ef2698f7694ad2f1f3cbcb23f4710d6776b7d2.src","preCode":"  public void testNestedDoubleTimeDifference() throws Exception {\n    String cexpr = \"diff(diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0)), 12)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 7);\n    assertEquals(out.get(0).doubleValue(), 30.0, 0.01);\n    assertEquals(out.get(1).doubleValue(), -18.0, 0.01);\n    assertEquals(out.get(2).doubleValue(), 226.0, 0.01);\n    assertEquals(out.get(3).doubleValue(), -234.0, 0.01);\n    assertEquals(out.get(4).doubleValue(), -149.0, 0.01);\n    assertEquals(out.get(5).doubleValue(), 202.0, 0.01);\n    assertEquals(out.get(6).doubleValue(), 21.0, 0.01);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":4272,"status":"M"}],"commitId":"6357b3bdaaa0e2c2b1acfe838e55db3a83e38e73","commitMessage":"@@@SOLR-14573: Fix or suppress warnings in solrj/src/test\n","date":"2020-06-17 01:27:53","modifiedFileCount":"65","status":"M","submitter":"Erick Erickson"}]
