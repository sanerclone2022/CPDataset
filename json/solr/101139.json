[{"authorTime":"2013-11-29 05:00:28","codes":[{"authorDate":"2013-11-28 08:31:03","commitOrder":2,"curCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","date":"2013-11-28 08:31:03","endLine":277,"groupId":"63048","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cf/ea5f348d64d3e176294f6614bc31413688d7e8.src","preCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CollationField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"NB"},{"authorDate":"2013-11-29 05:00:28","commitOrder":2,"curCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","date":"2013-11-29 05:00:28","endLine":66,"groupId":"15887","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1f/a86d6eb3600842204cf141b38ff06f4021f84c.src","preCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"}],"commitId":"921bd4791957746f137f5f9e21cb1b7d0d50a270","commitMessage":"@@@SOLR-5354: Distributed sort is broken with CUSTOM FieldType\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1546457 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-29 05:00:28","modifiedFileCount":"13","status":"M","submitter":"Steven Rowe"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","date":"2014-03-12 22:39:17","endLine":277,"groupId":"63048","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/13/f35a8c069c9ca081bd3db504a1dc86eef831de.src","preCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CollationField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","date":"2014-03-12 22:39:17","endLine":63,"groupId":"15887","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/423abca5910b87894d0db40ce66590c6ec63fa.src","preCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2016-01-18 03:54:50","codes":[{"authorDate":"2016-01-18 03:54:50","commitOrder":4,"curCode":"  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","date":"2016-01-18 03:54:50","endLine":273,"groupId":"63048","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/9900363190058050621fb0181017e96e240e9d.src","preCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CollationField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"},{"authorDate":"2016-01-18 03:54:50","commitOrder":4,"curCode":"  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      IndexableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","date":"2016-01-18 03:54:50","endLine":62,"groupId":"15887","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2c/4913b36340106edc6a6c0d8166deb73e1809df.src","preCode":"  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"24c46305bd8f335c3d0e501a33dd3da82732c49e","commitMessage":"@@@LUCENE-6971: remove StorableField.  StoredDocument\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1725117 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-18 03:54:50","modifiedFileCount":"167","status":"M","submitter":"Michael McCandless"},{"authorTime":"2017-03-03 02:18:16","codes":[{"authorDate":"2017-03-03 02:18:16","commitOrder":5,"curCode":"  public List<IndexableField> createFields(SchemaField field, Object value) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      fields.add(createField(field, value));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value));\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":271,"groupId":"101139","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a4/98c0163f0cec14ec16be63d99ad7897cc85bc3.src","preCode":"  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      fields.add(createField(field, value, boost));\n      final BytesRef bytes = getCollationKey(field.getName(), value.toString());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CollationField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2017-03-03 02:18:16","commitOrder":5,"curCode":"  public List<IndexableField> createFields(SchemaField field, Object value) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      IndexableField storedField = createField(field, value);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value));\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":60,"groupId":"101139","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldfield@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b8/ed296537c2eae1e6d54cc3126e742ea02286e0.src","preCode":"  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      IndexableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"8ed2b764ed4d4d5203b5df1e16fdc1ffd640322c","commitMessage":"@@@LUCENE-6819: Remove index-time boosts.\n","date":"2017-03-03 02:18:16","modifiedFileCount":"113","status":"M","submitter":"Adrien Grand"}]
