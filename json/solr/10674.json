[{"authorTime":"2016-08-03 23:12:57","codes":[{"authorDate":"2016-08-03 23:12:57","commitOrder":1,"curCode":"  public void testFeaturesSelectionStream() throws Exception {\n    String expr = \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4, positiveLabel=2)\";\n    FeaturesSelectionStream stream = new FeaturesSelectionStream(StreamExpressionParser.parse(expr), factory);\n    String expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"featureSet=first\"));\n    assertTrue(expressionString.contains(\"field=tv_text\"));\n    assertTrue(expressionString.contains(\"outcome=out_i\"));\n    assertTrue(expressionString.contains(\"numTerms=4\"));\n    assertTrue(expressionString.contains(\"positiveLabel=2\"));\n  }\n","date":"2016-08-03 23:43:00","endLine":358,"groupId":"40749","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFeaturesSelectionStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4d/df4ce8dce80768547cf4ad2d6643c5ef22ab66.src","preCode":"  public void testFeaturesSelectionStream() throws Exception {\n    String expr = \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4, positiveLabel=2)\";\n    FeaturesSelectionStream stream = new FeaturesSelectionStream(StreamExpressionParser.parse(expr), factory);\n    String expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"featureSet=first\"));\n    assertTrue(expressionString.contains(\"field=tv_text\"));\n    assertTrue(expressionString.contains(\"outcome=out_i\"));\n    assertTrue(expressionString.contains(\"numTerms=4\"));\n    assertTrue(expressionString.contains(\"positiveLabel=2\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"},{"authorDate":"2016-08-03 23:12:57","commitOrder":1,"curCode":"  public void testTextLogitStreamWithFeaturesSelection() throws Exception {\n    String expr = \"tlogit(\" +\n        \"collection1, \" +\n        \"q=\\\"*:*\\\", \" +\n        \"name=\\\"model\\\", \" +\n        \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4), \" +\n        \"field=\\\"tv_text\\\", \" +\n        \"outcome=\\\"out_i\\\", \" +\n        \"maxIterations=100)\";\n    TextLogitStream logitStream = new TextLogitStream(StreamExpressionParser.parse(expr), factory);\n    String expressionString = logitStream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"name=model\"));\n    assertFalse(expressionString.contains(\"terms=\"));\n    assertTrue(expressionString.contains(\"featuresSelection(\"));\n    assertTrue(expressionString.contains(\"field=tv_text\"));\n    assertTrue(expressionString.contains(\"outcome=out_i\"));\n    assertTrue(expressionString.contains(\"maxIterations=100\"));\n  }\n","date":"2016-08-03 23:43:00","endLine":379,"groupId":"44851","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTextLogitStreamWithFeaturesSelection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4d/df4ce8dce80768547cf4ad2d6643c5ef22ab66.src","preCode":"  public void testTextLogitStreamWithFeaturesSelection() throws Exception {\n    String expr = \"tlogit(\" +\n        \"collection1, \" +\n        \"q=\\\"*:*\\\", \" +\n        \"name=\\\"model\\\", \" +\n        \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4), \" +\n        \"field=\\\"tv_text\\\", \" +\n        \"outcome=\\\"out_i\\\", \" +\n        \"maxIterations=100)\";\n    TextLogitStream logitStream = new TextLogitStream(StreamExpressionParser.parse(expr), factory);\n    String expressionString = logitStream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"name=model\"));\n    assertFalse(expressionString.contains(\"terms=\"));\n    assertTrue(expressionString.contains(\"featuresSelection(\"));\n    assertTrue(expressionString.contains(\"field=tv_text\"));\n    assertTrue(expressionString.contains(\"outcome=out_i\"));\n    assertTrue(expressionString.contains(\"maxIterations=100\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"B"}],"commitId":"87938e00e9f1006801fbf0e8c0d7b2a84b5eda48","commitMessage":"@@@SOLR-9252: Feature selection and logistic regression on text\n","date":"2016-08-03 23:43:00","modifiedFileCount":"7","status":"B","submitter":"jbernste"},{"authorTime":"2018-02-26 14:13:26","codes":[{"authorDate":"2018-02-26 14:13:26","commitOrder":2,"curCode":"  public void testFeaturesSelectionStream() throws Exception {\n    String expr = \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4, positiveLabel=2)\";\n    try (FeaturesSelectionStream stream = new FeaturesSelectionStream(StreamExpressionParser.parse(expr), factory)) {\n      String expressionString = stream.toExpression(factory).toString();\n      assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n      assertTrue(expressionString.contains(\"featureSet=first\"));\n      assertTrue(expressionString.contains(\"field=tv_text\"));\n      assertTrue(expressionString.contains(\"outcome=out_i\"));\n      assertTrue(expressionString.contains(\"numTerms=4\"));\n      assertTrue(expressionString.contains(\"positiveLabel=2\"));\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":355,"groupId":"10674","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFeaturesSelectionStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/93/27ee98f997891ff1e0d706573957f6966cbe05.src","preCode":"  public void testFeaturesSelectionStream() throws Exception {\n    String expr = \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4, positiveLabel=2)\";\n    FeaturesSelectionStream stream = new FeaturesSelectionStream(StreamExpressionParser.parse(expr), factory);\n    String expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"featureSet=first\"));\n    assertTrue(expressionString.contains(\"field=tv_text\"));\n    assertTrue(expressionString.contains(\"outcome=out_i\"));\n    assertTrue(expressionString.contains(\"numTerms=4\"));\n    assertTrue(expressionString.contains(\"positiveLabel=2\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"},{"authorDate":"2018-02-26 14:13:26","commitOrder":2,"curCode":"  public void testTextLogitStreamWithFeaturesSelection() throws Exception {\n    String expr = \"tlogit(\" +\n        \"collection1, \" +\n        \"q=\\\"*:*\\\", \" +\n        \"name=\\\"model\\\", \" +\n        \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4), \" +\n        \"field=\\\"tv_text\\\", \" +\n        \"outcome=\\\"out_i\\\", \" +\n        \"maxIterations=100)\";\n    try (TextLogitStream logitStream = new TextLogitStream(StreamExpressionParser.parse(expr), factory)) {\n      String expressionString = logitStream.toExpression(factory).toString();\n      assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n      assertTrue(expressionString.contains(\"name=model\"));\n      assertFalse(expressionString.contains(\"terms=\"));\n      assertTrue(expressionString.contains(\"featuresSelection(\"));\n      assertTrue(expressionString.contains(\"field=tv_text\"));\n      assertTrue(expressionString.contains(\"outcome=out_i\"));\n      assertTrue(expressionString.contains(\"maxIterations=100\"));\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":377,"groupId":"10674","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTextLogitStreamWithFeaturesSelection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/93/27ee98f997891ff1e0d706573957f6966cbe05.src","preCode":"  public void testTextLogitStreamWithFeaturesSelection() throws Exception {\n    String expr = \"tlogit(\" +\n        \"collection1, \" +\n        \"q=\\\"*:*\\\", \" +\n        \"name=\\\"model\\\", \" +\n        \"featuresSelection(collection1, q=\\\"*:*\\\", featureSet=\\\"first\\\", field=\\\"tv_text\\\", outcome=\\\"out_i\\\", numTerms=4), \" +\n        \"field=\\\"tv_text\\\", \" +\n        \"outcome=\\\"out_i\\\", \" +\n        \"maxIterations=100)\";\n    TextLogitStream logitStream = new TextLogitStream(StreamExpressionParser.parse(expr), factory);\n    String expressionString = logitStream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"name=model\"));\n    assertFalse(expressionString.contains(\"terms=\"));\n    assertTrue(expressionString.contains(\"featuresSelection(\"));\n    assertTrue(expressionString.contains(\"field=tv_text\"));\n    assertTrue(expressionString.contains(\"outcome=out_i\"));\n    assertTrue(expressionString.contains(\"maxIterations=100\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"}],"commitId":"6164643882f6f2bf371e53376cc9f0a2a184b150","commitMessage":"@@@SOLR-10809: Get precommit lint warnings out of Solr core\n","date":"2018-02-26 14:13:47","modifiedFileCount":"52","status":"M","submitter":"Erick Erickson"}]
