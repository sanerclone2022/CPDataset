[{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":2,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    LogCodec codec = new LogCodec(resolver);\n    Map header = (Map)codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<String, Integer>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2013-06-27 04:18:33","endLine":279,"groupId":"32084","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/f1a342c93396a1566d8759d7b85e82a66fa715.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    LogCodec codec = new LogCodec(resolver);\n    Map header = (Map)codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<String, Integer>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"MB"},{"authorDate":"2013-06-27 04:18:33","commitOrder":2,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      LogCodec codec = new LogCodec(resolver);\n      header = (Map) codec.unmarshal(fis);\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<String, Integer>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2013-06-27 04:18:33","endLine":199,"groupId":"14619","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/93/5774d766a5c5ddd5f1ed912cc6a70a37946212.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      LogCodec codec = new LogCodec(resolver);\n      header = (Map) codec.unmarshal(fis);\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<String, Integer>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    LogCodec codec = new LogCodec(resolver);\n    Map header = (Map)codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2014-03-12 22:39:17","endLine":279,"groupId":"37900","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/08/ba6c4691339ce40d7a8a22d5b72b6d988da957.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    LogCodec codec = new LogCodec(resolver);\n    Map header = (Map)codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<String, Integer>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      LogCodec codec = new LogCodec(resolver);\n      header = (Map) codec.unmarshal(fis);\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2014-03-12 22:39:17","endLine":199,"groupId":"14619","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/0a7cecef3ba3d9f2369ba6787d9c8a3e6eff31.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      LogCodec codec = new LogCodec(resolver);\n      header = (Map) codec.unmarshal(fis);\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<String, Integer>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2018-02-26 14:13:26","codes":[{"authorDate":"2018-02-26 14:13:26","commitOrder":4,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    Map header = (Map)codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":289,"groupId":"37900","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/35/d722b734f37b20a949cb10777954b41238b47a.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    LogCodec codec = new LogCodec(resolver);\n    Map header = (Map)codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2018-02-26 14:13:26","commitOrder":4,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":210,"groupId":"19629","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/89016a1073413861054a33d9007bf0587856a5.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      LogCodec codec = new LogCodec(resolver);\n      header = (Map) codec.unmarshal(fis);\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"6164643882f6f2bf371e53376cc9f0a2a184b150","commitMessage":"@@@SOLR-10809: Get precommit lint warnings out of Solr core\n","date":"2018-02-26 14:13:47","modifiedFileCount":"52","status":"M","submitter":"Erick Erickson"},{"authorTime":"2018-02-26 14:13:26","codes":[{"authorDate":"2020-06-09 07:03:34","commitOrder":5,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    @SuppressWarnings({\"rawtypes\"})\n    Map header = (Map) codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>) header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i = 0; i < globalStringList.size(); i++) {\n        globalStringMap.put(globalStringList.get(i), i + 1);\n      }\n    }\n  }\n","date":"2020-06-09 07:03:34","endLine":288,"groupId":"37900","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/55/5f0eafd0b8479f4f8429f4995dc71aef5d005b.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    Map header = (Map) codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>) header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i = 0; i < globalStringList.size(); i++) {\n        globalStringMap.put(globalStringList.get(i), i + 1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"},{"authorDate":"2018-02-26 14:13:26","commitOrder":5,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2018-02-26 14:13:47","endLine":210,"groupId":"19629","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/89016a1073413861054a33d9007bf0587856a5.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"}],"commitId":"4dcdd750f2dc892c88a98cc350941e7b8869d67f","commitMessage":"@@@SOLR-14545: Fix or suppress warnings in apache/solr/update\n","date":"2020-06-09 07:03:34","modifiedFileCount":"56","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-07-08 04:15:36","codes":[{"authorDate":"2020-06-09 07:03:34","commitOrder":6,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    @SuppressWarnings({\"rawtypes\"})\n    Map header = (Map) codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>) header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i = 0; i < globalStringList.size(); i++) {\n        globalStringMap.put(globalStringList.get(i), i + 1);\n      }\n    }\n  }\n","date":"2020-06-09 07:03:34","endLine":288,"groupId":"37900","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/55/5f0eafd0b8479f4f8429f4995dc71aef5d005b.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    @SuppressWarnings({\"rawtypes\"})\n    Map header = (Map) codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>) header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i = 0; i < globalStringList.size(); i++) {\n        globalStringMap.put(globalStringList.get(i), i + 1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"N"},{"authorDate":"2021-07-08 04:15:36","commitOrder":6,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map<?,?> header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map<?,?>) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2021-07-08 04:15:36","endLine":196,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/89/82b6fe3239afaadd6294fe099708414d4f83fc.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"201d56b350fa1b4e5f8361618f898a2155240c72","commitMessage":"@@@SOLR-15385 RawTypes Part V (#196)\n\n","date":"2021-07-08 04:15:36","modifiedFileCount":"88","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-07-08 04:15:36","codes":[{"authorDate":"2021-07-13 23:49:56","commitOrder":7,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    Map<?, ?> header = (Map<?, ?>) codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>) header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i = 0; i < globalStringList.size(); i++) {\n        globalStringMap.put(globalStringList.get(i), i + 1);\n      }\n    }\n  }\n","date":"2021-07-13 23:49:56","endLine":287,"groupId":"102035","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/1a0fb04829fe423d5f94f172ac1e0806d16a40.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);\n    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);\n    @SuppressWarnings({\"rawtypes\"})\n    Map header = (Map) codec.unmarshal(fis);\n\n    fis.readInt(); \r\n\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>) header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i = 0; i < globalStringList.size(); i++) {\n        globalStringMap.put(globalStringList.get(i), i + 1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"},{"authorDate":"2021-07-08 04:15:36","commitOrder":7,"curCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map<?,?> header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map<?,?>) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","date":"2021-07-08 04:15:36","endLine":196,"groupId":"102035","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"readHeader","params":"(FastInputStreamfis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/89/82b6fe3239afaadd6294fe099708414d4f83fc.src","preCode":"  private void readHeader(FastInputStream fis) throws IOException {\n    \r\n    boolean closeFis = false;\n    if (fis == null) closeFis = true;\n    fis = fis != null ? fis : new FSDataFastInputStream(fs.open(tlogFile), 0);\n    Map<?,?> header = null;\n    try {\n      try (LogCodec codec = new LogCodec(resolver)) {\n        header = (Map<?,?>) codec.unmarshal(fis);\n      }\n      \n      fis.readInt(); \r\n    } finally {\n      if (fis != null && closeFis) {\n        fis.close();\n      }\n    }\n    \r\n\n    synchronized (this) {\n      globalStringList = (List<String>)header.get(\"strings\");\n      globalStringMap = new HashMap<>(globalStringList.size());\n      for (int i=0; i<globalStringList.size(); i++) {\n        globalStringMap.put( globalStringList.get(i), i+1);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"N"}],"commitId":"09986130545fabfb2cc76ced85a0da6ba536acf0","commitMessage":"@@@SOLR-15385 RawTypes Part VI (#207)\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-07-13 23:49:56","modifiedFileCount":"185","status":"M","submitter":"Mike Drob"}]
