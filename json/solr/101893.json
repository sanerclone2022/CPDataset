[{"authorTime":"2016-10-06 03:48:11","codes":[{"authorDate":"2019-01-23 20:03:01","commitOrder":5,"curCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","date":"2019-01-23 20:03:01","endLine":199,"groupId":"11336","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount@StringauthHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/7be0b9fd97d1b4b8436d203262a2792a8cc609.src","preCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"},{"authorDate":"2016-10-06 03:48:11","commitOrder":5,"curCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","date":"2016-10-06 03:49:14","endLine":111,"groupId":"20160","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/4b52eb86790496e8f700d603d2551c5654b719.src","preCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/TestAuthorizationFramework.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"}],"commitId":"ea2c8ba38e32a9f1e7d11cf3687c5469bfd6414c","commitMessage":"@@@SOLR-12121: JWT Token authentication plugin with OpenID Connect implicit flow login through Admin UI\n","date":"2019-01-23 20:03:01","modifiedFileCount":"5","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2016-10-06 03:48:11","codes":[{"authorDate":"2020-06-11 06:05:50","commitOrder":6,"curCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","date":"2020-06-11 06:05:50","endLine":226,"groupId":"10754","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount@StringauthHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/23857e4a796945bb7b3a35e2f1dc28940636a5.src","preCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"},{"authorDate":"2016-10-06 03:48:11","commitOrder":6,"curCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","date":"2016-10-06 03:49:14","endLine":111,"groupId":"20160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/4b52eb86790496e8f700d603d2551c5654b719.src","preCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/TestAuthorizationFramework.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"07a203628ea46308612f4bb60686c313a6e4d75e","commitMessage":"@@@SOLR-14455: Fix or suppress warnings in solr/test-framework\n","date":"2020-06-11 06:05:50","modifiedFileCount":"12","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-11 06:05:50","commitOrder":7,"curCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","date":"2020-06-11 06:05:50","endLine":226,"groupId":"10754","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount@StringauthHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/23857e4a796945bb7b3a35e2f1dc28940636a5.src","preCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2020-06-18 05:51:41","commitOrder":7,"curCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","date":"2020-06-18 05:51:41","endLine":119,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/c07e39a69284a02c96e4db8273f9072e12e411.src","preCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/TestAuthorizationFramework.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-07-08 04:15:36","codes":[{"authorDate":"2020-06-11 06:05:50","commitOrder":8,"curCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","date":"2020-06-11 06:05:50","endLine":226,"groupId":"101893","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount@StringauthHeader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/23857e4a796945bb7b3a35e2f1dc28940636a5.src","preCode":"  private static void verifySecurityStatus(HttpClient cl, String url, String objPath,\n                                            Object expected, int count, String authHeader) throws IOException, InterruptedException {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      if (authHeader != null) setAuthorizationHeader(get, authHeader);\n      HttpResponse rsp = cl.execute(get);\n      s = EntityUtils.toString(rsp.getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = null;\n      try {\n        m = (Map) Utils.fromJSONString(s);\n      } catch (Exception e) {\n        fail(\"Invalid json \" + s);\n      }\n      Utils.consumeFully(rsp.getEntity());\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(actual == null ? null : String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2021-07-08 04:15:36","commitOrder":8,"curCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      Map<?, ?> m = (Map<?, ?>) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings(\"unchecked\")\n        Predicate<Object> predicate = (Predicate<Object>) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","date":"2021-07-08 04:15:36","endLine":117,"groupId":"101893","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"verifySecurityStatus","params":"(HttpClientcl@Stringurl@StringobjPath@Objectexpected@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/e0f4527eba09c1704edaad2e1ab1d2f7ce4504.src","preCode":"  public static void verifySecurityStatus(HttpClient cl, String url, String objPath, Object expected, int count) throws Exception {\n    boolean success = false;\n    String s = null;\n    List<String> hierarchy = StrUtils.splitSmart(objPath, '/');\n    for (int i = 0; i < count; i++) {\n      HttpGet get = new HttpGet(url);\n      s = EntityUtils.toString(cl.execute(get, HttpClientUtil.createNewHttpClientRequestContext()).getEntity());\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = (Map) Utils.fromJSONString(s);\n\n      Object actual = Utils.getObjectByPath(m, true, hierarchy);\n      if (expected instanceof Predicate) {\n        @SuppressWarnings({\"rawtypes\"})\n        Predicate predicate = (Predicate) expected;\n        if (predicate.test(actual)) {\n          success = true;\n          break;\n        }\n      } else if (Objects.equals(String.valueOf(actual), expected)) {\n        success = true;\n        break;\n      }\n      Thread.sleep(50);\n    }\n    assertTrue(\"No match for \" + objPath + \" = \" + expected + \", full response = \" + s, success);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/TestAuthorizationFramework.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"201d56b350fa1b4e5f8361618f898a2155240c72","commitMessage":"@@@SOLR-15385 RawTypes Part V (#196)\n\n","date":"2021-07-08 04:15:36","modifiedFileCount":"88","status":"M","submitter":"Mike Drob"}]
