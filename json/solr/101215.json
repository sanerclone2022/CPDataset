[{"authorTime":"2016-11-02 01:50:14","codes":[{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  private void createWeights(IndexSearcher searcher, boolean needsScores, float boost,\n      List<Feature.FeatureWeight > featureWeights, Collection<Feature> features) throws IOException {\n    final SolrQueryRequest req = getRequest();\n    \r\n    for (final Feature f : features) {\n      try{\n        Feature.FeatureWeight fw = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        featureWeights.add(fw);\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      }\n    }\n  }\n","date":"2016-11-02 01:50:14","endLine":244,"groupId":"32757","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createWeights","params":"(IndexSearchersearcher@booleanneedsScores@floatboost@List<Feature.FeatureWeight>featureWeights@Collection<Feature>features)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/1c1edf58f6bff1739bac28847d51ce1b85bfbf.src","preCode":"  private void createWeights(IndexSearcher searcher, boolean needsScores, float boost,\n      List<Feature.FeatureWeight > featureWeights, Collection<Feature> features) throws IOException {\n    final SolrQueryRequest req = getRequest();\n    \r\n    for (final Feature f : features) {\n      try{\n        Feature.FeatureWeight fw = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        featureWeights.add(fw);\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      }\n    }\n  }\n","realPath":"solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"B"},{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"    public Feature.FeatureWeight call() throws Exception{\n      try {\n        Feature.FeatureWeight fw  = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        return fw;\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      } finally {\n        querySemaphore.release();\n        ltrThreadMgr.releaseLTRSemaphore();\n      }\n    }\n","date":"2016-11-02 01:50:14","endLine":271,"groupId":"43413","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/1c1edf58f6bff1739bac28847d51ce1b85bfbf.src","preCode":"    public Feature.FeatureWeight call() throws Exception{\n      try {\n        Feature.FeatureWeight fw  = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        return fw;\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      } finally {\n        querySemaphore.release();\n        ltrThreadMgr.releaseLTRSemaphore();\n      }\n    }\n","realPath":"solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"B"}],"commitId":"5a66b3bc089e4b3e73b1c41c4cdcd89b183b85e7","commitMessage":"@@@SOLR-8542: Adds Solr Learning to Rank (LTR) plugin for reranking results with machine learning models. (Michael Nilsson.  Diego Ceccarelli.  Joshua Pantony.  Jon Dorando.  Naveen Santhapuri.  Alessandro Benedetti.  David Grohmann.  Christine Poerschke)\n","date":"2016-11-02 01:50:14","modifiedFileCount":"0","status":"B","submitter":"Christine Poerschke"},{"authorTime":"2016-11-02 01:50:14","codes":[{"authorDate":"2016-12-08 04:43:49","commitOrder":2,"curCode":"  private void createWeights(IndexSearcher searcher, boolean needsScores,\n      List<Feature.FeatureWeight > featureWeights, Collection<Feature> features) throws IOException {\n    final SolrQueryRequest req = getRequest();\n    \r\n    for (final Feature f : features) {\n      try{\n        Feature.FeatureWeight fw = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        featureWeights.add(fw);\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      }\n    }\n  }\n","date":"2016-12-08 04:46:42","endLine":244,"groupId":"101215","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createWeights","params":"(IndexSearchersearcher@booleanneedsScores@List<Feature.FeatureWeight>featureWeights@Collection<Feature>features)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d6/0ebf55bb0b1d76e32655d0d8442b3f08d05fd7.src","preCode":"  private void createWeights(IndexSearcher searcher, boolean needsScores, float boost,\n      List<Feature.FeatureWeight > featureWeights, Collection<Feature> features) throws IOException {\n    final SolrQueryRequest req = getRequest();\n    \r\n    for (final Feature f : features) {\n      try{\n        Feature.FeatureWeight fw = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        featureWeights.add(fw);\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      }\n    }\n  }\n","realPath":"solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2016-11-02 01:50:14","commitOrder":2,"curCode":"    public Feature.FeatureWeight call() throws Exception{\n      try {\n        Feature.FeatureWeight fw  = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        return fw;\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      } finally {\n        querySemaphore.release();\n        ltrThreadMgr.releaseLTRSemaphore();\n      }\n    }\n","date":"2016-11-02 01:50:14","endLine":271,"groupId":"101215","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/1c1edf58f6bff1739bac28847d51ce1b85bfbf.src","preCode":"    public Feature.FeatureWeight call() throws Exception{\n      try {\n        Feature.FeatureWeight fw  = f.createWeight(searcher, needsScores, req, originalQuery, efi);\n        return fw;\n      } catch (final Exception e) {\n        throw new RuntimeException(\"Exception from createWeight for \" + f.toString() + \" \"\n            + e.getMessage(), e);\n      } finally {\n        querySemaphore.release();\n        ltrThreadMgr.releaseLTRSemaphore();\n      }\n    }\n","realPath":"solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"N"}],"commitId":"bfc3690d5203cee20550450bac3771e5c2b85cbf","commitMessage":"@@@SOLR-8542: couple of tweaks (Michael Nilsson.  Diego Ceccarelli.  Christine Poerschke)\n\n* removed code triplication in ManagedModelStore\n* LTRScoringQuery.java tweaks\n* FeatureLogger.makeFeatureVector(...) can now safely be called repeatedly (though that doesn't happen at present)\n* make Feature.FeatureWeight.extractTerms a no-op; (OriginalScore|SolrFeature)Weight now implement extractTerms\n\n* LTRThreadModule javadocs and README.md tweaks\n\n* add TestFieldValueFeature.testBooleanValue test; replace \"T\"/\"F\" magic string use in FieldValueFeature\n* add TestOriginalScoreScorer test; add OriginalScoreScorer.freq() method\n* in TestMultipleAdditiveTreesModel revive dead explain test\n","date":"2016-12-08 04:46:42","modifiedFileCount":"12","status":"M","submitter":"Christine Poerschke"}]
