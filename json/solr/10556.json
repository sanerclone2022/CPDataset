[{"authorTime":"2013-10-20 02:04:25","codes":[{"authorDate":"2013-10-20 02:04:25","commitOrder":1,"curCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrServer server = getSolrServer();\n    server.deleteByQuery(\"*:*\");\r\n    server.commit();\n    QueryResponse rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(server);\n    \n    rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    server.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","date":"2013-10-20 02:04:25","endLine":119,"groupId":"31578","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitWithinOnAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/947d4add0e638be68e7dac5d8d4b2b81276bb9.src","preCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrServer server = getSolrServer();\n    server.deleteByQuery(\"*:*\");\r\n    server.commit();\n    QueryResponse rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(server);\n    \n    rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    server.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2013-10-20 02:04:25","commitOrder":1,"curCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrServer server = getSolrServer();\n    server.deleteByQuery(\"*:*\");\r\n    server.commit();\n    QueryResponse rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    server.add(doc3);\n    server.commit();\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(server);\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    long timeout = System.currentTimeMillis() + 30000;\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (System.currentTimeMillis() < timeout);\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","date":"2013-10-20 02:04:25","endLine":164,"groupId":"62991","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCommitWithinOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/947d4add0e638be68e7dac5d8d4b2b81276bb9.src","preCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrServer server = getSolrServer();\n    server.deleteByQuery(\"*:*\");\r\n    server.commit();\n    QueryResponse rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    server.add(doc3);\n    server.commit();\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(server);\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    long timeout = System.currentTimeMillis() + 30000;\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (System.currentTimeMillis() < timeout);\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"}],"commitId":"b01114939ace036512b91f9fb2d8c878323a9205","commitMessage":"@@@SOLR-5361: Hit Schemaless example with some tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1533801 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-10-20 02:04:25","modifiedFileCount":"3","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":2,"curCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","date":"2014-12-31 22:05:48","endLine":118,"groupId":"31578","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitWithinOnAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0e/e63d18f082752fe954986845053be9bd169d43.src","preCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrServer server = getSolrServer();\n    server.deleteByQuery(\"*:*\");\r\n    server.commit();\n    QueryResponse rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(server);\n    \n    rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    server.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":2,"curCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    long timeout = System.currentTimeMillis() + 30000;\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (System.currentTimeMillis() < timeout);\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","date":"2014-12-31 22:05:48","endLine":163,"groupId":"19307","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCommitWithinOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0e/e63d18f082752fe954986845053be9bd169d43.src","preCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrServer server = getSolrServer();\n    server.deleteByQuery(\"*:*\");\r\n    server.commit();\n    QueryResponse rsp = server.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    server.add(doc3);\n    server.commit();\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(server);\n    \n    \r\n    rsp = server.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    long timeout = System.currentTimeMillis() + 30000;\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = server.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (System.currentTimeMillis() < timeout);\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-08-08 21:39:58","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":3,"curCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","date":"2014-12-31 22:05:48","endLine":118,"groupId":"31578","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitWithinOnAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0e/e63d18f082752fe954986845053be9bd169d43.src","preCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2015-08-08 21:39:58","commitOrder":3,"curCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (! timeout.hasTimedOut());\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","date":"2015-08-08 21:39:58","endLine":165,"groupId":"19307","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCommitWithinOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fd/ada6eb866f2ef9d4a1b4ae7a42fc269921b95c.src","preCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    long timeout = System.currentTimeMillis() + 30000;\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (System.currentTimeMillis() < timeout);\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"b4aafbb6060a5b865281f8403b1f87b05061db33","commitMessage":"@@@SOLR-7859: Clamp down on use of System.currentTimeMillis\n\n - Use RTimer where currentTimeMillis is used for timing\n - Abstract out a new class TimeOut for when currentTimeMillis/nanoTime\n   is used to timeout operations.\n - Used `new Date()` in some cases where that is the logical intent.\n - Deprecated a couple of APIs which were publicly exposing epoch time. \n   in favour of Date objects to make the intent clearer.\n - A couple of cases had currentTimeMillis in dead code.\n - In some cases where currentTimeMillis was used to just generate a name. \n   used nanoTime instead (really it should be some sequence/random number\n   in such a case).\n - In some other cases where stamps were used for SQL queries.  HTTP headers. \n   comparing against data in external files.  ZK etc..  used SuppressForbidden.\n - Also currently allow the use of currentTimeMillis in commit data. \n   this is then used in replication -- this is concerning since absolute\n   times are being compared.  but that can be dealt with separately.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1694798 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-08 21:39:58","modifiedFileCount":"89","status":"M","submitter":"Ramkumar Aiyengar"},{"authorTime":"2017-03-03 02:18:16","codes":[{"authorDate":"2017-03-03 02:18:16","commitOrder":4,"curCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\");\n    doc3.addField(\"name\", \"doc3\");\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\");\n    doc4.addField(\"name\", \"doc4\");\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","date":"2017-03-03 02:18:16","endLine":115,"groupId":"31578","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitWithinOnAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/a996140f573d1d76e753389feccc22250ef444.src","preCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\", 1.0f);\n    doc4.addField(\"name\", \"doc4\", 1.0f);\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2017-03-03 02:18:16","commitOrder":4,"curCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\");\n    doc3.addField(\"name\", \"doc3\");\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (! timeout.hasTimedOut());\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","date":"2017-03-03 02:18:16","endLine":160,"groupId":"19307","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCommitWithinOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/a996140f573d1d76e753389feccc22250ef444.src","preCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\", 1.0f);\n    doc3.addField(\"name\", \"doc3\", 1.0f);\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (! timeout.hasTimedOut());\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"8ed2b764ed4d4d5203b5df1e16fdc1ffd640322c","commitMessage":"@@@LUCENE-6819: Remove index-time boosts.\n","date":"2017-03-03 02:18:16","modifiedFileCount":"113","status":"M","submitter":"Adrien Grand"},{"authorTime":"2017-12-14 19:13:05","codes":[{"authorDate":"2017-03-03 02:18:16","commitOrder":5,"curCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\");\n    doc3.addField(\"name\", \"doc3\");\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\");\n    doc4.addField(\"name\", \"doc4\");\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","date":"2017-03-03 02:18:16","endLine":115,"groupId":"10556","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitWithinOnAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/a996140f573d1d76e753389feccc22250ef444.src","preCode":"  public void testCommitWithinOnAdd() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\");\n    doc3.addField(\"name\", \"doc3\");\n    doc3.addField(\"price\", 10);\n    UpdateRequest up = new UpdateRequest();\n    up.add(doc3);\n    up.setCommitWithin(500); \r\n                             \r\n    up.process(client);\n    \n    rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    \r\n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    \n    int cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc4 = new SolrInputDocument();\n    doc4.addField(\"id\", \"id4\");\n    doc4.addField(\"name\", \"doc4\");\n    doc4.addField(\"price\", 10);\n    client.add(doc4, 500);\n    \n    Thread.sleep(1000); \r\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id4\"));\n    \n    cnt = 0;\n    while (rsp.getResults().getNumFound() == 0) {\n      \r\n      \r\n      \n      if (cnt++ == 10) {\n        break;\n      }\n      \n      Thread.sleep(2000); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n    }\n    \n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2017-12-14 19:13:05","commitOrder":5,"curCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\");\n    doc3.addField(\"name\", \"doc3\");\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (! timeout.hasTimedOut());\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","date":"2017-12-14 19:56:23","endLine":161,"groupId":"10556","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCommitWithinOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/c14de506f45fba3c617caddde9c5edab908ac2.src","preCode":"  public void testCommitWithinOnDelete() throws Exception {\n    \r\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");\r\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    Assert.assertEquals(0, rsp.getResults().getNumFound());\n    \n    \r\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField(\"id\", \"id3\");\n    doc3.addField(\"name\", \"doc3\");\n    doc3.addField(\"price\", 10);\n    client.add(doc3);\n    client.commit();\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    UpdateRequest up = new UpdateRequest();\n    up.setCommitWithin(1000);\n    up.deleteById(\"id3\");\n    up.process(client);\n    \n    \r\n    rsp = client.query(new SolrQuery(\"id:id3\"));\n    Assert.assertEquals(1, rsp.getResults().getNumFound());\n    \n    \r\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    do {\n      Thread.sleep(250); \r\n      \n      rsp = client.query(new SolrQuery(\"id:id3\"));\n      if (rsp.getResults().getNumFound() == 0) {\n        return;\n      }\n    } while (! timeout.hasTimedOut());\n    \n    Assert.fail(\"commitWithin failed to commit\");\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"d6d2e3b2e30b600b9f550abf9414743d628cbcf0","commitMessage":"@@@SOLR-11285: Simulation framework for autoscaling.\n","date":"2017-12-14 19:56:23","modifiedFileCount":"100","status":"M","submitter":"Andrzej Bialecki"}]
