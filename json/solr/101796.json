[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void constantBooleanTest() {\n    ConstantBooleanValue val = new ConstantBooleanValue(true);\n    \n    assertTrue(val.exists());\n    assertEquals(true, val.getBoolean());\n    assertEquals(\"true\", val.getString());\n    assertEquals(new Boolean(true), val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(true, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"true\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(new Boolean(true), value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    \n\n    val = new ConstantBooleanValue(false);\n    \n    assertTrue(val.exists());\n    assertEquals(false, val.getBoolean());\n    assertEquals(\"false\", val.getString());\n    assertEquals(new Boolean(false), val.getObject());\n    \n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(false, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"false\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(new Boolean(false), value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","date":"2017-10-18 01:52:02","endLine":151,"groupId":"46691","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"constantBooleanTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/df7da50292170a6b45341095e115101df2152c.src","preCode":"  public void constantBooleanTest() {\n    ConstantBooleanValue val = new ConstantBooleanValue(true);\n    \n    assertTrue(val.exists());\n    assertEquals(true, val.getBoolean());\n    assertEquals(\"true\", val.getString());\n    assertEquals(new Boolean(true), val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(true, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"true\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(new Boolean(true), value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    \n\n    val = new ConstantBooleanValue(false);\n    \n    assertTrue(val.exists());\n    assertEquals(false, val.getBoolean());\n    assertEquals(\"false\", val.getString());\n    assertEquals(new Boolean(false), val.getObject());\n    \n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(false, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"false\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(new Boolean(false), value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/ConstantValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void constantStringTest() {\n    ConstantStringValue val = new ConstantStringValue(\"abcdef\");\n    \n    assertTrue(val.exists());\n    assertEquals(\"abcdef\", val.getString());\n    assertEquals(\"abcdef\", val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","date":"2017-10-18 01:52:02","endLine":367,"groupId":"43722","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"constantStringTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/df7da50292170a6b45341095e115101df2152c.src","preCode":"  public void constantStringTest() {\n    ConstantStringValue val = new ConstantStringValue(\"abcdef\");\n    \n    assertTrue(val.exists());\n    assertEquals(\"abcdef\", val.getString());\n    assertEquals(\"abcdef\", val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/ConstantValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public void constantBooleanTest() {\n    ConstantBooleanValue val = new ConstantBooleanValue(true);\n    \n    assertTrue(val.exists());\n    assertEquals(true, val.getBoolean());\n    assertEquals(\"true\", val.getString());\n    assertEquals(Boolean.TRUE, val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(true, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"true\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(Boolean.TRUE, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    \n\n    val = new ConstantBooleanValue(false);\n    \n    assertTrue(val.exists());\n    assertEquals(false, val.getBoolean());\n    assertEquals(\"false\", val.getString());\n    assertEquals(Boolean.FALSE, val.getObject());\n    \n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(false, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"false\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(Boolean.FALSE, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","date":"2018-07-16 18:24:45","endLine":151,"groupId":"101796","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"constantBooleanTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/ccd1fe3f30709ee1850e8daf9fea056fa6ce40.src","preCode":"  public void constantBooleanTest() {\n    ConstantBooleanValue val = new ConstantBooleanValue(true);\n    \n    assertTrue(val.exists());\n    assertEquals(true, val.getBoolean());\n    assertEquals(\"true\", val.getString());\n    assertEquals(new Boolean(true), val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(true, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"true\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(new Boolean(true), value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    \n\n    val = new ConstantBooleanValue(false);\n    \n    assertTrue(val.exists());\n    assertEquals(false, val.getBoolean());\n    assertEquals(\"false\", val.getString());\n    assertEquals(new Boolean(false), val.getObject());\n    \n    counter.setValue(0);\n    val.streamBooleans( value -> {\n      assertEquals(false, value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"false\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(new Boolean(false), value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/ConstantValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2017-08-01 23:01:17","commitOrder":2,"curCode":"  public void constantStringTest() {\n    ConstantStringValue val = new ConstantStringValue(\"abcdef\");\n    \n    assertTrue(val.exists());\n    assertEquals(\"abcdef\", val.getString());\n    assertEquals(\"abcdef\", val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","date":"2017-10-18 01:52:02","endLine":367,"groupId":"101796","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"constantStringTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/df7da50292170a6b45341095e115101df2152c.src","preCode":"  public void constantStringTest() {\n    ConstantStringValue val = new ConstantStringValue(\"abcdef\");\n    \n    assertTrue(val.exists());\n    assertEquals(\"abcdef\", val.getString());\n    assertEquals(\"abcdef\", val.getObject());\n    \n    TestIntValue counter = new TestIntValue();\n    counter.setValue(0);\n    val.streamStrings( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n    counter.setValue(0);\n    val.streamObjects( value -> {\n      assertEquals(\"abcdef\", value);\n      assertEquals(0, counter.getInt());\n      counter.setValue(1);\n    });\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/ConstantValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"N"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"}]
