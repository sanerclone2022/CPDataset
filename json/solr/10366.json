[{"authorTime":"2017-04-26 22:57:52","codes":[{"authorDate":"2015-11-11 09:45:04","commitOrder":3,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getLeftFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2015-11-11 09:45:04","endLine":208,"groupId":"54035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/62efbcf395d50fbcdd85874ade8c56611bdbac.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getLeftFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"NB"},{"authorDate":"2017-04-26 22:57:52","commitOrder":3,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2017-04-26 23:17:43","endLine":333,"groupId":"53068","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f5/48a46c5b1c92b107a90f0d4c42f4a88132ce72.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"B"}],"commitId":"0e963f7a8aeac0b8a831cd44fd48cd0c6bda11d2","commitMessage":"@@@SOLR-10566: Add timeseries Streaming Expression\n","date":"2017-04-26 23:17:43","modifiedFileCount":"2","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2017-04-26 22:57:52","codes":[{"authorDate":"2018-11-07 00:22:51","commitOrder":4,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\"+method+\"\\\"\");\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\"+fsort+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      if(level == _buckets.length || fsort.equals(facetKey) ) {\n        String identifier = metric.getIdentifier();\n        if (!identifier.startsWith(\"count(\")) {\n          if (metricCount > 0) {\n            buf.append(\",\");\n          }\n          buf.append(\"\\\"\"+ facetKey + \"\\\":\\\"\" + identifier + \"\\\"\");\n          ++metricCount;\n        }\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2018-11-07 00:23:40","endLine":679,"groupId":"53337","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/23a3b2e18cb10b80210bb84480689933eac513.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getLeftFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":624,"status":"M"},{"authorDate":"2017-04-26 22:57:52","commitOrder":4,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2017-04-26 23:17:43","endLine":333,"groupId":"53068","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f5/48a46c5b1c92b107a90f0d4c42f4a88132ce72.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"N"}],"commitId":"3d942131104a38a470b21020bfeb4a12c2dcd99b","commitMessage":"@@@SOLR-12795: Introduce 'rows' and 'offset' parameter in FacetStream\n","date":"2018-11-07 00:23:40","modifiedFileCount":"3","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2019-06-11 00:07:43","codes":[{"authorDate":"2019-06-11 00:07:43","commitOrder":5,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      if(level == _buckets.length || fsort.equals(facetKey) ) {\n        String identifier = metric.getIdentifier();\n        if (!identifier.startsWith(\"count(\")) {\n          if (metricCount > 0) {\n            buf.append(\",\");\n          }\n          buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          ++metricCount;\n        }\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2019-06-11 00:07:43","endLine":689,"groupId":"7269","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/92/57df3435e1ed8fdb9cc1dd02be49f4b3c4adcb.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\"+method+\"\\\"\");\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\"+fsort+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      if(level == _buckets.length || fsort.equals(facetKey) ) {\n        String identifier = metric.getIdentifier();\n        if (!identifier.startsWith(\"count(\")) {\n          if (metricCount > 0) {\n            buf.append(\",\");\n          }\n          buf.append(\"\\\"\"+ facetKey + \"\\\":\\\"\" + identifier + \"\\\"\");\n          ++metricCount;\n        }\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":634,"status":"M"},{"authorDate":"2019-06-11 00:07:43","commitOrder":5,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2019-06-11 00:07:43","endLine":365,"groupId":"48328","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/c886aec5c02a60a7672b2426291ae42a5ea2b3.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"}],"commitId":"67104dd615c82de64839de60418110211438f574","commitMessage":"@@@LUCENE-8847: Code Cleanup: Rewrite StringBuilder.append with concatted strings (#707)\n\nThis specific commit affects all points in the casebase where the argument of a StringBuilder.append() call is itself a regular String concatenation.\nThis defeats the purpose of using StringBuilder and also introduces an extra alloction.\nThese changes should avoid that.\n\nant tests have run.  succeeded on local machine.\n\nRemoving test files from the changes.\n\nAnother suggested rework.","date":"2019-06-11 00:07:43","modifiedFileCount":"70","status":"M","submitter":"Koen De Groote"},{"authorTime":"2020-05-19 04:22:56","codes":[{"authorDate":"2020-05-19 04:22:56","commitOrder":6,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2020-05-19 21:10:23","endLine":748,"groupId":"22851","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6e/96cfd9485230855f24714769fcbc96d3df216a.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      if(level == _buckets.length || fsort.equals(facetKey) ) {\n        String identifier = metric.getIdentifier();\n        if (!identifier.startsWith(\"count(\")) {\n          if (metricCount > 0) {\n            buf.append(\",\");\n          }\n          buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          ++metricCount;\n        }\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":684,"status":"M"},{"authorDate":"2020-05-19 04:22:56","commitOrder":6,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2020-05-19 21:10:23","endLine":380,"groupId":"48328","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ee/4570d95d7037a313c550a083c21513e148b064.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"M"}],"commitId":"16aad55369d285fec96425f996984a9f4afe28e4","commitMessage":"@@@SOLR-14476: Add percentiles and standard deviation aggregations to stats.  facet and timeseries Streaming Expressions\n","date":"2020-05-19 21:10:23","modifiedFileCount":"8","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2021-04-01 23:34:41","codes":[{"authorDate":"2021-04-01 23:34:41","commitOrder":7,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-01 23:38:54","endLine":784,"groupId":"22851","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/20/a24bba9f1feb883dd913f3db3f3e71d16c364c.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":718,"status":"M"},{"authorDate":"2021-04-01 23:34:41","commitOrder":7,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        }  else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-01 23:38:54","endLine":378,"groupId":"48328","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/0c34624a0855abb0f9d65ea421991d0c4a3637.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"}],"commitId":"00bc7101f274dcd8a49aeea159a476f79e89ceb9","commitMessage":"@@@SOLR-15208: Add the countDist aggregation to the stats.  facet and timeseries Streaming Expressions\n","date":"2021-04-01 23:38:54","modifiedFileCount":"6","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2021-04-07 21:54:39","codes":[{"authorDate":"2021-04-01 23:34:41","commitOrder":8,"curCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-01 23:38:54","endLine":784,"groupId":"10366","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Bucket[]_buckets@Metric[]_metrics@FieldComparator[]_sorts@int_limit@Stringmethod@booleanrefine@intlevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/20/a24bba9f1feb883dd913f3db3f3e71d16c364c.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(_buckets[level].toString()).append('\"');\n    buf.append(\",\\\"limit\\\":\").append(_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\").append(method).append('\"');\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\").append(fsort).append(\"\\\":\\\"\").append(_sorts[level].getOrder()).append(\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    boolean comma = false;\n    for(Metric metric : _metrics) {\n      \r\n      String facetKey = \"facet_\"+metricCount;\n      String identifier = metric.getIdentifier();\n      if (!identifier.startsWith(\"count(\")) {\n        if (comma) {\n          buf.append(\",\");\n        }\n\n        if(level == _buckets.length || fsort.equals(facetKey) ) {\n          comma = true;\n          if (identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if (identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          } else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append('\"').append(facetKey).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n        }\n        ++metricCount;\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":718,"status":"N"},{"authorDate":"2021-04-07 21:54:39","commitOrder":8,"curCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n\n\n    \r\n    if(split != null) {\n      buf.append('\"');\n      buf.append(\"split\");\n      buf.append('\"');\n      buf.append(\":{\");\n      buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n      buf.append(\",\\\"field\\\":\\\"\").append(split.toString()).append('\"');\n      buf.append(\",\\\"limit\\\":\").append(limit);\n      buf.append(\",\\\"overrequest\\\":100\");\n      if(_metrics[0].getIdentifier().startsWith(\"count(\")) {\n        buf.append(\",\\\"sort\\\":\\\"\").append(\"count\").append(\" desc\\\"\");\n      } else {\n        buf.append(\",\\\"sort\\\":\\\"\").append(\"facet_0\").append(\" desc\\\"\");\n      }\n      buf.append(\",\\\"facet\\\":{\");\n      \r\n      int metricCount = 0;\n      for(Metric metric : _metrics) {\n        String identifier = metric.getIdentifier();\n        if(!identifier.startsWith(\"count(\")) {\n          if(metricCount>0) {\n            buf.append(\",\");\n          }\n          if(identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if(identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          }  else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n          ++metricCount;\n        }\n      }\n      buf.append(\"}}\");\n    } else {\n      \r\n      int metricCount = 0;\n      for(Metric metric : _metrics) {\n        String identifier = metric.getIdentifier();\n        if(!identifier.startsWith(\"count(\")) {\n          if(metricCount>0) {\n            buf.append(\",\");\n          }\n          if(identifier.startsWith(\"per(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n          } else if(identifier.startsWith(\"std(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n          }  else if (identifier.startsWith(\"countDist(\")) {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n          } else {\n            buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n          }\n          ++metricCount;\n        }\n      }\n    }\n    buf.append(\"}}\");\n  }\n","date":"2021-04-07 21:54:50","endLine":445,"groupId":"10366","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"appendJson","params":"(StringBuilderbuf@Metric[]_metrics@Stringfield@Stringstart@Stringend@Stringgap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/aea17ea5bd3e25281eb439d37df5b0b4be5c41.src","preCode":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        }  else if (identifier.startsWith(\"countDist(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"countDist\", \"unique\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"M"}],"commitId":"440d4baab12885c962de75e46e150d2723e20215","commitMessage":"@@@SOLR-14916: Add split parameter to timeseries Streaming Expression\n","date":"2021-04-07 21:54:50","modifiedFileCount":"2","status":"M","submitter":"Joel Bernstein"}]
