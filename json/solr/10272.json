[{"authorTime":"2016-08-03 23:12:57","codes":[{"authorDate":"2016-08-03 23:12:57","commitOrder":1,"curCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"TextLogitSolrStream\"));\n  }\n","date":"2016-08-03 23:43:00","endLine":327,"groupId":"37594","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"open","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/9168f560b4478e7be797b226e99a41b49318f3.src","preCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"TextLogitSolrStream\"));\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"},{"authorDate":"2016-08-03 23:12:57","commitOrder":1,"curCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"FeaturesSelectionStream\"));\n  }\n","date":"2016-08-03 23:43:00","endLine":246,"groupId":"37594","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"open","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/7e3d8a88c66000857f0b893f9e10c45a42b29f.src","preCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"FeaturesSelectionStream\"));\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"87938e00e9f1006801fbf0e8c0d7b2a84b5eda48","commitMessage":"@@@SOLR-9252: Feature selection and logistic regression on text\n","date":"2016-08-03 23:43:00","modifiedFileCount":"7","status":"B","submitter":"jbernste"},{"authorTime":"2020-04-13 10:46:35","codes":[{"authorDate":"2020-04-13 10:46:35","commitOrder":2,"curCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory(\"TextLogitSolrStream\"));\n  }\n","date":"2020-04-13 10:46:35","endLine":332,"groupId":"10272","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"open","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/9d3ae447fd5fe0e557ab13ff8e8e2fc8afc557.src","preCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"TextLogitSolrStream\"));\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2020-04-13 10:46:35","commitOrder":2,"curCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory(\"FeaturesSelectionStream\"));\n  }\n","date":"2020-04-13 10:46:35","endLine":252,"groupId":"10272","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"open","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/963d06a3815c8ae6006118a0584931ce200d45.src","preCode":"  public void open() throws IOException {\n    if (cache == null) {\n      isCloseCache = true;\n      cache = new SolrClientCache();\n    } else {\n      isCloseCache = false;\n    }\n\n    this.cloudSolrClient = this.cache.getCloudSolrClient(zkHost);\n    this.executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"FeaturesSelectionStream\"));\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"}],"commitId":"13f19f65559290a860df84fa1b5ac2db903b27ec","commitMessage":"@@@SOLR-9906: SolrjNamedThreadFactory is deprecated in favor of SolrNamedThreadFactory. DefaultSolrThreadFactory is removed from solr-core in favor of SolrNamedThreadFactory in solrj package and all solr-core classes now use SolrNamedThreadFactory\n","date":"2020-04-13 10:46:35","modifiedFileCount":"83","status":"M","submitter":"Shalin Shekhar Mangar"}]
