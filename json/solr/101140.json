[{"authorTime":"2015-11-03 08:43:17","codes":[{"authorDate":"2017-12-16 00:24:18","commitOrder":5,"curCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2017-12-16 00:24:18","endLine":250,"groupId":"37683","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/0df2bcba1bbb9e9fe080ca40b2f84ee6c32ebf.src","preCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"B"},{"authorDate":"2015-11-03 08:43:17","commitOrder":5,"curCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2015-11-03 08:43:17","endLine":220,"groupId":"37683","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/29/0cf9dee4976ce406836737ce84a0006eac79af.src","preCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"NB"}],"commitId":"3e2f9e62d772218bf1fcae6d58542fad3ec43742","commitMessage":"@@@LUCENE-2899: Add OpenNLP Analysis capabilities as a module\n","date":"2017-12-16 00:24:18","modifiedFileCount":"3","status":"M","submitter":"Steve Rowe"},{"authorTime":"2020-06-09 07:03:34","codes":[{"authorDate":"2017-12-16 00:24:18","commitOrder":6,"curCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2017-12-16 00:24:18","endLine":250,"groupId":"37683","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/0df2bcba1bbb9e9fe080ca40b2f84ee6c32ebf.src","preCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"N"},{"authorDate":"2020-06-09 07:03:34","commitOrder":6,"curCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2020-06-09 07:03:34","endLine":223,"groupId":"37683","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(@SuppressWarnings({\"rawtypes\"})NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ba/00caddc0669a3e797dc44b08ef9796552d9eb3.src","preCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"4dcdd750f2dc892c88a98cc350941e7b8869d67f","commitMessage":"@@@SOLR-14545: Fix or suppress warnings in apache/solr/update\n","date":"2020-06-09 07:03:34","modifiedFileCount":"56","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-06-09 07:03:34","codes":[{"authorDate":"2020-06-12 22:56:22","commitOrder":7,"curCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2020-06-12 22:56:22","endLine":256,"groupId":"37683","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(@SuppressWarnings({\"rawtypes\"})NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2f/dbd013c50f4f9e84dce8642d10a89491cff930.src","preCode":"  public void init(NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2020-06-09 07:03:34","commitOrder":7,"curCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2020-06-09 07:03:34","endLine":223,"groupId":"37683","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(@SuppressWarnings({\"rawtypes\"})NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ba/00caddc0669a3e797dc44b08ef9796552d9eb3.src","preCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"N"}],"commitId":"8cbfb192ab151312efe7d0de42478329604cba90","commitMessage":"@@@SOLR-14563: Fix or suppress warnings in solr/contrib\n","date":"2020-06-12 22:56:22","modifiedFileCount":"23","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-09 02:08:25","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":8,"curCode":"  public void init(NamedList<?> args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2021-06-09 02:08:25","endLine":255,"groupId":"101140","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"init","params":"(NamedList<?>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/35/1edc3f513422aa1e0ea9e8f92e7d8c7e4f914a.src","preCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n          DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n          PATTERN_PARAM + \"' init params are mandatory\");\n    }\n\n    Object modelParam = args.remove(MODEL_PARAM);\n    if (null == modelParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + MODEL_PARAM + \"'\");\n    }\n    if ( ! (modelParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + MODEL_PARAM + \"' must be a <str>\");\n    }\n    modelFile = modelParam.toString();\n\n    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);\n    if (null == analyzerFieldTypeParam) {\n      throw new SolrException(SERVER_ERROR, \"Missing required init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"'\");\n    }\n    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {\n      throw new SolrException(SERVER_ERROR, \"Init param '\" + ANALYZER_FIELD_TYPE_PARAM + \"' must be a <str>\");\n    }\n    analyzerFieldType = analyzerFieldTypeParam.toString();\n\n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR, \"Unexpected init param(s): '\" + args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"},{"authorDate":"2021-06-09 02:08:25","commitOrder":8,"curCode":"  public void init(NamedList<?> args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","date":"2021-06-09 02:08:25","endLine":222,"groupId":"101140","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"init","params":"(NamedList<?>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1f/36aa8d35346c5555aca63d0b65b2c18e632eb5.src","preCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n\n    \r\n    \r\n    \r\n    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {\n      initSourceSelectorSyntax(args);\n    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {\n      initSimpleRegexReplacement(args);\n    } else {\n      throw new SolrException(SERVER_ERROR, \"A combination of either '\" + SOURCE_PARAM + \"' + '\"+\n                              DEST_PARAM + \"', or '\" + REPLACEMENT_PARAM + \"' + '\" +\n                              PATTERN_PARAM + \"' init params are mandatory\");\n    }\n    \n    if (0 < args.size()) {\n      throw new SolrException(SERVER_ERROR,\n          \"Unexpected init param(s): '\" +\n              args.getName(0) + \"'\");\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"}]
