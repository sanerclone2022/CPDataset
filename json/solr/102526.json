[{"authorTime":"2018-06-27 02:35:34","codes":[{"authorDate":"2017-07-30 22:50:20","commitOrder":2,"curCode":"  public static boolean injectWrongIndexFingerprint() {\n    if (wrongIndexFingerprint != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(wrongIndexFingerprint);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        return true;\n      }\n    }\n    return false;\n  }\n","date":"2017-07-30 22:50:20","endLine":180,"groupId":"60585","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"injectWrongIndexFingerprint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/2de73bb19813ee33ed3a0f80b3e23bbc409cd2.src","preCode":"  public static boolean injectWrongIndexFingerprint() {\n    if (wrongIndexFingerprint != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(wrongIndexFingerprint);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        return true;\n      }\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"NB"},{"authorDate":"2018-06-27 02:35:34","commitOrder":2,"curCode":"  private static boolean injectSplitFailure(String probability, String label) {\n    if (probability != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(probability);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure: \" + label);\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error: \" + label);\n      }\n    }\n    return true;\n  }\n","date":"2018-06-27 02:35:34","endLine":406,"groupId":"60585","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"injectSplitFailure","params":"(Stringprobability@Stringlabel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/34/915fb698852fda564c55996864b3016241250b.src","preCode":"  private static boolean injectSplitFailure(String probability, String label) {\n    if (probability != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(probability);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure: \" + label);\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error: \" + label);\n      }\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"B"}],"commitId":"1023b839aeda4f4688103995051b727d7ca4fdce","commitMessage":"@@@SOLR-11665: Improve error handling of shard splitting. Fix splitting of mixed replica types.\n","date":"2018-06-27 02:35:34","modifiedFileCount":"5","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2020-04-19 07:08:15","codes":[{"authorDate":"2017-07-30 22:50:20","commitOrder":3,"curCode":"  public static boolean injectWrongIndexFingerprint() {\n    if (wrongIndexFingerprint != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(wrongIndexFingerprint);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        return true;\n      }\n    }\n    return false;\n  }\n","date":"2017-07-30 22:50:20","endLine":180,"groupId":"102526","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"injectWrongIndexFingerprint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/2de73bb19813ee33ed3a0f80b3e23bbc409cd2.src","preCode":"  public static boolean injectWrongIndexFingerprint() {\n    if (wrongIndexFingerprint != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(wrongIndexFingerprint);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        return true;\n      }\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"N"},{"authorDate":"2020-04-19 07:08:15","commitOrder":3,"curCode":"  private static boolean injectSplitFailure(String probability, String label) {\n    if (probability != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(probability);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure: {}\", label);\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error: \" + label);\n      }\n    }\n    return true;\n  }\n","date":"2020-04-19 07:08:15","endLine":444,"groupId":"102526","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"injectSplitFailure","params":"(Stringprobability@Stringlabel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/32/98628ff9406ce79852eaf02d50a7956fbf06d7.src","preCode":"  private static boolean injectSplitFailure(String probability, String label) {\n    if (probability != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(probability);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure: \" + label);\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error: \" + label);\n      }\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/TestInjection.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"M"}],"commitId":"1f1cdbffdf607db961049d1417b18dc6cbf53d7a","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-19 07:08:15","modifiedFileCount":"56","status":"M","submitter":"Erick Erickson"}]
