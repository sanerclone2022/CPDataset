[{"authorTime":"2020-06-09 07:03:34","codes":[{"authorDate":"2020-06-09 07:03:34","commitOrder":10,"curCode":"  public Long getMaxVersionFromIndex(IndexSearcher searcher) throws IOException {\n\n    final String versionFieldName = versionField.getName();\n\n    log.debug(\"Refreshing highest value of {} for {} version buckets from index\", versionFieldName, buckets.length);\n    \r\n    if (versionField.indexed()) {\n      if (versionField.getType().isPointField()) {\n        return getMaxVersionFromIndexedPoints(searcher);\n      } else {\n        return getMaxVersionFromIndexedTerms(searcher);\n      }\n    }\n    \r\n    \n    long maxVersionInIndex = 0L;\n    ValueSource vs = versionField.getType().getValueSource(versionField, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map funcContext = ValueSource.newContext(searcher);\n    vs.createWeight(funcContext, searcher);\n    \r\n    for (LeafReaderContext ctx : searcher.getTopReaderContext().leaves()) {\n      int maxDoc = ctx.reader().maxDoc();\n      FunctionValues fv = vs.getValues(funcContext, ctx);\n      for (int doc = 0; doc < maxDoc; doc++) {\n        long v = fv.longVal(doc);\n        maxVersionInIndex = Math.max(v, maxVersionInIndex);\n      }\n    }\n    return maxVersionInIndex;\n  }\n","date":"2020-06-09 07:03:34","endLine":271,"groupId":"5749","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMaxVersionFromIndex","params":"(IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6e/6814ea510cb23dbdd8c79c2f607241baa678a4.src","preCode":"  public Long getMaxVersionFromIndex(IndexSearcher searcher) throws IOException {\n\n    final String versionFieldName = versionField.getName();\n\n    log.debug(\"Refreshing highest value of {} for {} version buckets from index\", versionFieldName, buckets.length);\n    \r\n    if (versionField.indexed()) {\n      if (versionField.getType().isPointField()) {\n        return getMaxVersionFromIndexedPoints(searcher);\n      } else {\n        return getMaxVersionFromIndexedTerms(searcher);\n      }\n    }\n    \r\n    \n    long maxVersionInIndex = 0L;\n    ValueSource vs = versionField.getType().getValueSource(versionField, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map funcContext = ValueSource.newContext(searcher);\n    vs.createWeight(funcContext, searcher);\n    \r\n    for (LeafReaderContext ctx : searcher.getTopReaderContext().leaves()) {\n      int maxDoc = ctx.reader().maxDoc();\n      FunctionValues fv = vs.getValues(funcContext, ctx);\n      for (int doc = 0; doc < maxDoc; doc++) {\n        long v = fv.longVal(doc);\n        maxVersionInIndex = Math.max(v, maxVersionInIndex);\n      }\n    }\n    return maxVersionInIndex;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/VersionInfo.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"MB"},{"authorDate":"2020-06-09 07:03:34","commitOrder":10,"curCode":"  private static FunctionValues getFunctionValues(LeafReaderContext segmentContext,\n                                          SchemaField field,\n                                          SolrIndexSearcher searcher) throws IOException {\n    ValueSource vs = field.getType().getValueSource(field, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map context = ValueSource.newContext(searcher);\n    vs.createWeight(context, searcher);\n    return vs.getValues(context, segmentContext);\n  }\n","date":"2020-06-09 07:03:34","endLine":364,"groupId":"5749","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFunctionValues","params":"(LeafReaderContextsegmentContext@SchemaFieldfield@SolrIndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2b/66b13cf9e8eb9997bf684ccad047ecd41f02a8.src","preCode":"  private static FunctionValues getFunctionValues(LeafReaderContext segmentContext,\n                                          SchemaField field,\n                                          SolrIndexSearcher searcher) throws IOException {\n    ValueSource vs = field.getType().getValueSource(field, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map context = ValueSource.newContext(searcher);\n    vs.createWeight(context, searcher);\n    return vs.getValues(context, segmentContext);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"B"}],"commitId":"4dcdd750f2dc892c88a98cc350941e7b8869d67f","commitMessage":"@@@SOLR-14545: Fix or suppress warnings in apache/solr/update\n","date":"2020-06-09 07:03:34","modifiedFileCount":"56","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-06-09 07:03:34","codes":[{"authorDate":"2021-07-08 04:15:36","commitOrder":11,"curCode":"  public Long getMaxVersionFromIndex(IndexSearcher searcher) throws IOException {\n\n    final String versionFieldName = versionField.getName();\n\n    log.debug(\"Refreshing highest value of {} for {} version buckets from index\", versionFieldName, buckets.length);\n    \r\n    if (versionField.indexed()) {\n      if (versionField.getType().isPointField()) {\n        return getMaxVersionFromIndexedPoints(searcher);\n      } else {\n        return getMaxVersionFromIndexedTerms(searcher);\n      }\n    }\n    \r\n    \n    long maxVersionInIndex = 0L;\n    ValueSource vs = versionField.getType().getValueSource(versionField, null);\n    Map<Object, Object> funcContext = ValueSource.newContext(searcher);\n    vs.createWeight(funcContext, searcher);\n    \r\n    for (LeafReaderContext ctx : searcher.getTopReaderContext().leaves()) {\n      int maxDoc = ctx.reader().maxDoc();\n      FunctionValues fv = vs.getValues(funcContext, ctx);\n      for (int doc = 0; doc < maxDoc; doc++) {\n        long v = fv.longVal(doc);\n        maxVersionInIndex = Math.max(v, maxVersionInIndex);\n      }\n    }\n    return maxVersionInIndex;\n  }\n","date":"2021-07-08 04:15:36","endLine":271,"groupId":"102032","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getMaxVersionFromIndex","params":"(IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/db/1006aa5081f582bccd0a3ea8f99d71e7fd7a58.src","preCode":"  public Long getMaxVersionFromIndex(IndexSearcher searcher) throws IOException {\n\n    final String versionFieldName = versionField.getName();\n\n    log.debug(\"Refreshing highest value of {} for {} version buckets from index\", versionFieldName, buckets.length);\n    \r\n    if (versionField.indexed()) {\n      if (versionField.getType().isPointField()) {\n        return getMaxVersionFromIndexedPoints(searcher);\n      } else {\n        return getMaxVersionFromIndexedTerms(searcher);\n      }\n    }\n    \r\n    \n    long maxVersionInIndex = 0L;\n    ValueSource vs = versionField.getType().getValueSource(versionField, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map funcContext = ValueSource.newContext(searcher);\n    vs.createWeight(funcContext, searcher);\n    \r\n    for (LeafReaderContext ctx : searcher.getTopReaderContext().leaves()) {\n      int maxDoc = ctx.reader().maxDoc();\n      FunctionValues fv = vs.getValues(funcContext, ctx);\n      for (int doc = 0; doc < maxDoc; doc++) {\n        long v = fv.longVal(doc);\n        maxVersionInIndex = Math.max(v, maxVersionInIndex);\n      }\n    }\n    return maxVersionInIndex;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/VersionInfo.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"},{"authorDate":"2020-06-09 07:03:34","commitOrder":11,"curCode":"  private static FunctionValues getFunctionValues(LeafReaderContext segmentContext,\n                                          SchemaField field,\n                                          SolrIndexSearcher searcher) throws IOException {\n    ValueSource vs = field.getType().getValueSource(field, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map context = ValueSource.newContext(searcher);\n    vs.createWeight(context, searcher);\n    return vs.getValues(context, segmentContext);\n  }\n","date":"2020-06-09 07:03:34","endLine":364,"groupId":"102032","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFunctionValues","params":"(LeafReaderContextsegmentContext@SchemaFieldfield@SolrIndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2b/66b13cf9e8eb9997bf684ccad047ecd41f02a8.src","preCode":"  private static FunctionValues getFunctionValues(LeafReaderContext segmentContext,\n                                          SchemaField field,\n                                          SolrIndexSearcher searcher) throws IOException {\n    ValueSource vs = field.getType().getValueSource(field, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map context = ValueSource.newContext(searcher);\n    vs.createWeight(context, searcher);\n    return vs.getValues(context, segmentContext);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"N"}],"commitId":"201d56b350fa1b4e5f8361618f898a2155240c72","commitMessage":"@@@SOLR-15385 RawTypes Part V (#196)\n\n","date":"2021-07-08 04:15:36","modifiedFileCount":"88","status":"M","submitter":"Mike Drob"}]
